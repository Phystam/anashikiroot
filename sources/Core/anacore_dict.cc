//
// File generated by rootcint at Tue Jun 27 23:04:21 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME anacore_dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "anacore_dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TArtMath TArtMath;
      #else
      class TArtMath  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TArtMath() throw() {};
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void TArtRawDataObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtRawDataObject(void *p = 0);
   static void *newArray_TArtRawDataObject(Long_t size, void *p);
   static void delete_TArtRawDataObject(void *p);
   static void deleteArray_TArtRawDataObject(void *p);
   static void destruct_TArtRawDataObject(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtRawDataObject*)
   {
      ::TArtRawDataObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtRawDataObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtRawDataObject", ::TArtRawDataObject::Class_Version(), "./include/TArtRawDataObject.hh", 7,
                  typeid(::TArtRawDataObject), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtRawDataObject::Dictionary, isa_proxy, 4,
                  sizeof(::TArtRawDataObject) );
      instance.SetNew(&new_TArtRawDataObject);
      instance.SetNewArray(&newArray_TArtRawDataObject);
      instance.SetDelete(&delete_TArtRawDataObject);
      instance.SetDeleteArray(&deleteArray_TArtRawDataObject);
      instance.SetDestructor(&destruct_TArtRawDataObject);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtRawDataObject*)
   {
      return GenerateInitInstanceLocal((::TArtRawDataObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtRawDataObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCore_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCore(void *p = 0);
   static void *newArray_TArtCore(Long_t size, void *p);
   static void delete_TArtCore(void *p);
   static void deleteArray_TArtCore(void *p);
   static void destruct_TArtCore(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCore*)
   {
      ::TArtCore *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCore >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCore", ::TArtCore::Class_Version(), "./include/TArtCore.hh", 18,
                  typeid(::TArtCore), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCore::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCore) );
      instance.SetNew(&new_TArtCore);
      instance.SetNewArray(&newArray_TArtCore);
      instance.SetDelete(&delete_TArtCore);
      instance.SetDeleteArray(&deleteArray_TArtCore);
      instance.SetDestructor(&destruct_TArtCore);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCore*)
   {
      return GenerateInitInstanceLocal((::TArtCore*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCore*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtRawFADCDataObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtRawFADCDataObject(void *p = 0);
   static void *newArray_TArtRawFADCDataObject(Long_t size, void *p);
   static void delete_TArtRawFADCDataObject(void *p);
   static void deleteArray_TArtRawFADCDataObject(void *p);
   static void destruct_TArtRawFADCDataObject(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtRawFADCDataObject*)
   {
      ::TArtRawFADCDataObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtRawFADCDataObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtRawFADCDataObject", ::TArtRawFADCDataObject::Class_Version(), "./include/TArtRawFADCDataObject.hh", 8,
                  typeid(::TArtRawFADCDataObject), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtRawFADCDataObject::Dictionary, isa_proxy, 4,
                  sizeof(::TArtRawFADCDataObject) );
      instance.SetNew(&new_TArtRawFADCDataObject);
      instance.SetNewArray(&newArray_TArtRawFADCDataObject);
      instance.SetDelete(&delete_TArtRawFADCDataObject);
      instance.SetDeleteArray(&deleteArray_TArtRawFADCDataObject);
      instance.SetDestructor(&destruct_TArtRawFADCDataObject);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtRawFADCDataObject*)
   {
      return GenerateInitInstanceLocal((::TArtRawFADCDataObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtRawFADCDataObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtRawTacquilaDataObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtRawTacquilaDataObject(void *p = 0);
   static void *newArray_TArtRawTacquilaDataObject(Long_t size, void *p);
   static void delete_TArtRawTacquilaDataObject(void *p);
   static void deleteArray_TArtRawTacquilaDataObject(void *p);
   static void destruct_TArtRawTacquilaDataObject(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtRawTacquilaDataObject*)
   {
      ::TArtRawTacquilaDataObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtRawTacquilaDataObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtRawTacquilaDataObject", ::TArtRawTacquilaDataObject::Class_Version(), "./include/TArtRawTacquilaDataObject.hh", 8,
                  typeid(::TArtRawTacquilaDataObject), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtRawTacquilaDataObject::Dictionary, isa_proxy, 4,
                  sizeof(::TArtRawTacquilaDataObject) );
      instance.SetNew(&new_TArtRawTacquilaDataObject);
      instance.SetNewArray(&newArray_TArtRawTacquilaDataObject);
      instance.SetDelete(&delete_TArtRawTacquilaDataObject);
      instance.SetDeleteArray(&deleteArray_TArtRawTacquilaDataObject);
      instance.SetDestructor(&destruct_TArtRawTacquilaDataObject);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtRawTacquilaDataObject*)
   {
      return GenerateInitInstanceLocal((::TArtRawTacquilaDataObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtRawTacquilaDataObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtRawSegmentObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtRawSegmentObject(void *p = 0);
   static void *newArray_TArtRawSegmentObject(Long_t size, void *p);
   static void delete_TArtRawSegmentObject(void *p);
   static void deleteArray_TArtRawSegmentObject(void *p);
   static void destruct_TArtRawSegmentObject(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtRawSegmentObject*)
   {
      ::TArtRawSegmentObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtRawSegmentObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtRawSegmentObject", ::TArtRawSegmentObject::Class_Version(), "./include/TArtRawSegmentObject.hh", 17,
                  typeid(::TArtRawSegmentObject), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtRawSegmentObject::Dictionary, isa_proxy, 4,
                  sizeof(::TArtRawSegmentObject) );
      instance.SetNew(&new_TArtRawSegmentObject);
      instance.SetNewArray(&newArray_TArtRawSegmentObject);
      instance.SetDelete(&delete_TArtRawSegmentObject);
      instance.SetDeleteArray(&deleteArray_TArtRawSegmentObject);
      instance.SetDestructor(&destruct_TArtRawSegmentObject);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtRawSegmentObject*)
   {
      return GenerateInitInstanceLocal((::TArtRawSegmentObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtRawSegmentObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoder_Dictionary();
   static void delete_TArtDecoder(void *p);
   static void deleteArray_TArtDecoder(void *p);
   static void destruct_TArtDecoder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoder*)
   {
      ::TArtDecoder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoder),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoder", "./include/TArtDecoder.hh", 18,
                  typeid(::TArtDecoder), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoder_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoder) );
      instance.SetDelete(&delete_TArtDecoder);
      instance.SetDeleteArray(&deleteArray_TArtDecoder);
      instance.SetDestructor(&destruct_TArtDecoder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoder*)
   {
      return GenerateInitInstanceLocal((::TArtDecoder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoder*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoder_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoder*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderFactory_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderFactory_Dictionary();
   static void delete_TArtDecoderFactory(void *p);
   static void deleteArray_TArtDecoderFactory(void *p);
   static void destruct_TArtDecoderFactory(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderFactory*)
   {
      ::TArtDecoderFactory *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderFactory),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderFactory", "./include/TArtDecoderFactory.hh", 14,
                  typeid(::TArtDecoderFactory), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderFactory_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderFactory) );
      instance.SetDelete(&delete_TArtDecoderFactory);
      instance.SetDeleteArray(&deleteArray_TArtDecoderFactory);
      instance.SetDestructor(&destruct_TArtDecoderFactory);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderFactory*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderFactory*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderFactory*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderFactory_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderFactory*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderBigEndianV7XX_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderBigEndianV7XX_Dictionary();
   static void delete_TArtDecoderBigEndianV7XX(void *p);
   static void deleteArray_TArtDecoderBigEndianV7XX(void *p);
   static void destruct_TArtDecoderBigEndianV7XX(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderBigEndianV7XX*)
   {
      ::TArtDecoderBigEndianV7XX *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderBigEndianV7XX),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderBigEndianV7XX", "./include/TArtDecoderBigEndianV7XX.hh", 7,
                  typeid(::TArtDecoderBigEndianV7XX), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderBigEndianV7XX_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderBigEndianV7XX) );
      instance.SetDelete(&delete_TArtDecoderBigEndianV7XX);
      instance.SetDeleteArray(&deleteArray_TArtDecoderBigEndianV7XX);
      instance.SetDestructor(&destruct_TArtDecoderBigEndianV7XX);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderBigEndianV7XX*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderBigEndianV7XX*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderBigEndianV7XX*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderBigEndianV7XX_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderBigEndianV7XX*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderFixed16_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderFixed16_Dictionary();
   static void delete_TArtDecoderFixed16(void *p);
   static void deleteArray_TArtDecoderFixed16(void *p);
   static void destruct_TArtDecoderFixed16(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderFixed16*)
   {
      ::TArtDecoderFixed16 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderFixed16),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderFixed16", "./include/TArtDecoderFixed16.hh", 14,
                  typeid(::TArtDecoderFixed16), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderFixed16_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderFixed16) );
      instance.SetDelete(&delete_TArtDecoderFixed16);
      instance.SetDeleteArray(&deleteArray_TArtDecoderFixed16);
      instance.SetDestructor(&destruct_TArtDecoderFixed16);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderFixed16*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderFixed16*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderFixed16*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderFixed16_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderFixed16*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderLUPO_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderLUPO_Dictionary();
   static void delete_TArtDecoderLUPO(void *p);
   static void deleteArray_TArtDecoderLUPO(void *p);
   static void destruct_TArtDecoderLUPO(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderLUPO*)
   {
      ::TArtDecoderLUPO *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderLUPO),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderLUPO", "./include/TArtDecoderLUPO.hh", 9,
                  typeid(::TArtDecoderLUPO), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderLUPO_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderLUPO) );
      instance.SetDelete(&delete_TArtDecoderLUPO);
      instance.SetDeleteArray(&deleteArray_TArtDecoderLUPO);
      instance.SetDestructor(&destruct_TArtDecoderLUPO);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderLUPO*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderLUPO*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderLUPO*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderLUPO_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderLUPO*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderP716X_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderP716X_Dictionary();
   static void delete_TArtDecoderP716X(void *p);
   static void deleteArray_TArtDecoderP716X(void *p);
   static void destruct_TArtDecoderP716X(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderP716X*)
   {
      ::TArtDecoderP716X *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderP716X),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderP716X", "./include/TArtDecoderP716X.hh", 14,
                  typeid(::TArtDecoderP716X), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderP716X_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderP716X) );
      instance.SetDelete(&delete_TArtDecoderP716X);
      instance.SetDeleteArray(&deleteArray_TArtDecoderP716X);
      instance.SetDestructor(&destruct_TArtDecoderP716X);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderP716X*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderP716X*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderP716X*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderP716X_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderP716X*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderMADC32_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderMADC32_Dictionary();
   static void delete_TArtDecoderMADC32(void *p);
   static void deleteArray_TArtDecoderMADC32(void *p);
   static void destruct_TArtDecoderMADC32(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderMADC32*)
   {
      ::TArtDecoderMADC32 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderMADC32),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderMADC32", "./include/TArtDecoderMADC32.hh", 14,
                  typeid(::TArtDecoderMADC32), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderMADC32_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderMADC32) );
      instance.SetDelete(&delete_TArtDecoderMADC32);
      instance.SetDeleteArray(&deleteArray_TArtDecoderMADC32);
      instance.SetDestructor(&destruct_TArtDecoderMADC32);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderMADC32*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderMADC32*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderMADC32*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderMADC32_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderMADC32*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderV1740_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderV1740_Dictionary();
   static void delete_TArtDecoderV1740(void *p);
   static void deleteArray_TArtDecoderV1740(void *p);
   static void destruct_TArtDecoderV1740(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderV1740*)
   {
      ::TArtDecoderV1740 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderV1740),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderV1740", "./include/TArtDecoderV1740.hh", 7,
                  typeid(::TArtDecoderV1740), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderV1740_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderV1740) );
      instance.SetDelete(&delete_TArtDecoderV1740);
      instance.SetDeleteArray(&deleteArray_TArtDecoderV1740);
      instance.SetDestructor(&destruct_TArtDecoderV1740);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderV1740*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderV1740*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderV1740*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderV1740_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderV1740*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtSemaphore_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtSemaphore_Dictionary();
   static void delete_TArtSemaphore(void *p);
   static void deleteArray_TArtSemaphore(void *p);
   static void destruct_TArtSemaphore(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtSemaphore*)
   {
      ::TArtSemaphore *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtSemaphore),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtSemaphore", "./include/TArtSemaphore.hh", 29,
                  typeid(::TArtSemaphore), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtSemaphore_Dictionary, isa_proxy, 3,
                  sizeof(::TArtSemaphore) );
      instance.SetDelete(&delete_TArtSemaphore);
      instance.SetDeleteArray(&deleteArray_TArtSemaphore);
      instance.SetDestructor(&destruct_TArtSemaphore);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtSemaphore*)
   {
      return GenerateInitInstanceLocal((::TArtSemaphore*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtSemaphore*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtSemaphore_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtSemaphore*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderV1190_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderV1190_Dictionary();
   static void delete_TArtDecoderV1190(void *p);
   static void deleteArray_TArtDecoderV1190(void *p);
   static void destruct_TArtDecoderV1190(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderV1190*)
   {
      ::TArtDecoderV1190 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderV1190),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderV1190", "./include/TArtDecoderV1190.hh", 14,
                  typeid(::TArtDecoderV1190), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderV1190_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderV1190) );
      instance.SetDelete(&delete_TArtDecoderV1190);
      instance.SetDeleteArray(&deleteArray_TArtDecoderV1190);
      instance.SetDestructor(&destruct_TArtDecoderV1190);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderV1190*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderV1190*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderV1190*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderV1190_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderV1190*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderV7XX_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderV7XX_Dictionary();
   static void delete_TArtDecoderV7XX(void *p);
   static void deleteArray_TArtDecoderV7XX(void *p);
   static void destruct_TArtDecoderV7XX(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderV7XX*)
   {
      ::TArtDecoderV7XX *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderV7XX),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderV7XX", "./include/TArtDecoderV7XX.hh", 14,
                  typeid(::TArtDecoderV7XX), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderV7XX_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderV7XX) );
      instance.SetDelete(&delete_TArtDecoderV7XX);
      instance.SetDeleteArray(&deleteArray_TArtDecoderV7XX);
      instance.SetDestructor(&destruct_TArtDecoderV7XX);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderV7XX*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderV7XX*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderV7XX*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderV7XX_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderV7XX*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderCTM405_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderCTM405_Dictionary();
   static void delete_TArtDecoderCTM405(void *p);
   static void deleteArray_TArtDecoderCTM405(void *p);
   static void destruct_TArtDecoderCTM405(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderCTM405*)
   {
      ::TArtDecoderCTM405 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderCTM405),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderCTM405", "./include/TArtDecoderCTM405.hh", 14,
                  typeid(::TArtDecoderCTM405), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderCTM405_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderCTM405) );
      instance.SetDelete(&delete_TArtDecoderCTM405);
      instance.SetDeleteArray(&deleteArray_TArtDecoderCTM405);
      instance.SetDestructor(&destruct_TArtDecoderCTM405);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderCTM405*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderCTM405*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderCTM405*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderCTM405_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderCTM405*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderV767_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderV767_Dictionary();
   static void delete_TArtDecoderV767(void *p);
   static void deleteArray_TArtDecoderV767(void *p);
   static void destruct_TArtDecoderV767(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderV767*)
   {
      ::TArtDecoderV767 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderV767),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderV767", "./include/TArtDecoderV767.hh", 14,
                  typeid(::TArtDecoderV767), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderV767_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderV767) );
      instance.SetDelete(&delete_TArtDecoderV767);
      instance.SetDeleteArray(&deleteArray_TArtDecoderV767);
      instance.SetDestructor(&destruct_TArtDecoderV767);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderV767*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderV767*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderV767*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderV767_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderV767*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderAMTTDC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderAMTTDC_Dictionary();
   static void delete_TArtDecoderAMTTDC(void *p);
   static void deleteArray_TArtDecoderAMTTDC(void *p);
   static void destruct_TArtDecoderAMTTDC(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderAMTTDC*)
   {
      ::TArtDecoderAMTTDC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderAMTTDC),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderAMTTDC", "./include/TArtDecoderAMTTDC.hh", 5,
                  typeid(::TArtDecoderAMTTDC), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderAMTTDC_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderAMTTDC) );
      instance.SetDelete(&delete_TArtDecoderAMTTDC);
      instance.SetDeleteArray(&deleteArray_TArtDecoderAMTTDC);
      instance.SetDestructor(&destruct_TArtDecoderAMTTDC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderAMTTDC*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderAMTTDC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderAMTTDC*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderAMTTDC_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderAMTTDC*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtMath_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtMath_Dictionary();
   static void *new_TArtMath(void *p = 0);
   static void *newArray_TArtMath(Long_t size, void *p);
   static void delete_TArtMath(void *p);
   static void deleteArray_TArtMath(void *p);
   static void destruct_TArtMath(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtMath*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TArtMath) == sizeof( ::ROOTShadow::Shadow::TArtMath));
      ::TArtMath *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtMath),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtMath", "./include/TArtMath.hh", 10,
                  typeid(::TArtMath), ::ROOT::DefineBehavior(ptr, ptr),
                  &TArtMath_ShowMembers, &TArtMath_Dictionary, isa_proxy, 4,
                  sizeof(::TArtMath) );
      instance.SetNew(&new_TArtMath);
      instance.SetNewArray(&newArray_TArtMath);
      instance.SetDelete(&delete_TArtMath);
      instance.SetDeleteArray(&deleteArray_TArtMath);
      instance.SetDestructor(&destruct_TArtMath);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtMath*)
   {
      return GenerateInitInstanceLocal((::TArtMath*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtMath*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtMath_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtMath*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderFixed32_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderFixed32_Dictionary();
   static void delete_TArtDecoderFixed32(void *p);
   static void deleteArray_TArtDecoderFixed32(void *p);
   static void destruct_TArtDecoderFixed32(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderFixed32*)
   {
      ::TArtDecoderFixed32 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderFixed32),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderFixed32", "./include/TArtDecoderFixed32.hh", 9,
                  typeid(::TArtDecoderFixed32), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderFixed32_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderFixed32) );
      instance.SetDelete(&delete_TArtDecoderFixed32);
      instance.SetDeleteArray(&deleteArray_TArtDecoderFixed32);
      instance.SetDestructor(&destruct_TArtDecoderFixed32);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderFixed32*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderFixed32*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderFixed32*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderFixed32_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderFixed32*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDataSource_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDataSource_Dictionary();
   static void delete_TArtDataSource(void *p);
   static void deleteArray_TArtDataSource(void *p);
   static void destruct_TArtDataSource(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDataSource*)
   {
      ::TArtDataSource *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDataSource),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDataSource", "./include/TArtDataSource.hh", 53,
                  typeid(::TArtDataSource), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDataSource_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDataSource) );
      instance.SetDelete(&delete_TArtDataSource);
      instance.SetDeleteArray(&deleteArray_TArtDataSource);
      instance.SetDestructor(&destruct_TArtDataSource);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDataSource*)
   {
      return GenerateInitInstanceLocal((::TArtDataSource*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDataSource*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDataSource_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDataSource*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtRawScalerObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtRawScalerObject(void *p = 0);
   static void *newArray_TArtRawScalerObject(Long_t size, void *p);
   static void delete_TArtRawScalerObject(void *p);
   static void deleteArray_TArtRawScalerObject(void *p);
   static void destruct_TArtRawScalerObject(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtRawScalerObject*)
   {
      ::TArtRawScalerObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtRawScalerObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtRawScalerObject", ::TArtRawScalerObject::Class_Version(), "./include/TArtRawScalerObject.hh", 10,
                  typeid(::TArtRawScalerObject), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtRawScalerObject::Dictionary, isa_proxy, 4,
                  sizeof(::TArtRawScalerObject) );
      instance.SetNew(&new_TArtRawScalerObject);
      instance.SetNewArray(&newArray_TArtRawScalerObject);
      instance.SetDelete(&delete_TArtRawScalerObject);
      instance.SetDeleteArray(&deleteArray_TArtRawScalerObject);
      instance.SetDestructor(&destruct_TArtRawScalerObject);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtRawScalerObject*)
   {
      return GenerateInitInstanceLocal((::TArtRawScalerObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtRawScalerObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtRawEventObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtRawEventObject(void *p = 0);
   static void *newArray_TArtRawEventObject(Long_t size, void *p);
   static void delete_TArtRawEventObject(void *p);
   static void deleteArray_TArtRawEventObject(void *p);
   static void destruct_TArtRawEventObject(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtRawEventObject*)
   {
      ::TArtRawEventObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtRawEventObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtRawEventObject", ::TArtRawEventObject::Class_Version(), "./include/TArtRawEventObject.hh", 10,
                  typeid(::TArtRawEventObject), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtRawEventObject::Dictionary, isa_proxy, 4,
                  sizeof(::TArtRawEventObject) );
      instance.SetNew(&new_TArtRawEventObject);
      instance.SetNewArray(&newArray_TArtRawEventObject);
      instance.SetDelete(&delete_TArtRawEventObject);
      instance.SetDeleteArray(&deleteArray_TArtRawEventObject);
      instance.SetDestructor(&destruct_TArtRawEventObject);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtRawEventObject*)
   {
      return GenerateInitInstanceLocal((::TArtRawEventObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtRawEventObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtParser_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TArtParser(void *p);
   static void deleteArray_TArtParser(void *p);
   static void destruct_TArtParser(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtParser*)
   {
      ::TArtParser *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtParser >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtParser", ::TArtParser::Class_Version(), "./include/TArtParser.hh", 16,
                  typeid(::TArtParser), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtParser::Dictionary, isa_proxy, 4,
                  sizeof(::TArtParser) );
      instance.SetDelete(&delete_TArtParser);
      instance.SetDeleteArray(&deleteArray_TArtParser);
      instance.SetDestructor(&destruct_TArtParser);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtParser*)
   {
      return GenerateInitInstanceLocal((::TArtParser*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtParser*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtParserFactory_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtParserFactory_Dictionary();
   static void delete_TArtParserFactory(void *p);
   static void deleteArray_TArtParserFactory(void *p);
   static void destruct_TArtParserFactory(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtParserFactory*)
   {
      ::TArtParserFactory *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtParserFactory),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtParserFactory", "./include/TArtParserFactory.hh", 16,
                  typeid(::TArtParserFactory), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtParserFactory_Dictionary, isa_proxy, 3,
                  sizeof(::TArtParserFactory) );
      instance.SetDelete(&delete_TArtParserFactory);
      instance.SetDeleteArray(&deleteArray_TArtParserFactory);
      instance.SetDestructor(&destruct_TArtParserFactory);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtParserFactory*)
   {
      return GenerateInitInstanceLocal((::TArtParserFactory*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtParserFactory*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtParserFactory_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtParserFactory*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtSharedMemory_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtSharedMemory_Dictionary();
   static void delete_TArtSharedMemory(void *p);
   static void deleteArray_TArtSharedMemory(void *p);
   static void destruct_TArtSharedMemory(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtSharedMemory*)
   {
      ::TArtSharedMemory *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtSharedMemory),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtSharedMemory", "./include/TArtSharedMemory.hh", 14,
                  typeid(::TArtSharedMemory), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtSharedMemory_Dictionary, isa_proxy, 3,
                  sizeof(::TArtSharedMemory) );
      instance.SetDelete(&delete_TArtSharedMemory);
      instance.SetDeleteArray(&deleteArray_TArtSharedMemory);
      instance.SetDestructor(&destruct_TArtSharedMemory);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtSharedMemory*)
   {
      return GenerateInitInstanceLocal((::TArtSharedMemory*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtSharedMemory*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtSharedMemory_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtSharedMemory*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderA3100_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderA3100_Dictionary();
   static void delete_TArtDecoderA3100(void *p);
   static void deleteArray_TArtDecoderA3100(void *p);
   static void destruct_TArtDecoderA3100(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderA3100*)
   {
      ::TArtDecoderA3100 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderA3100),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderA3100", "./include/TArtDecoderA3100.hh", 14,
                  typeid(::TArtDecoderA3100), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderA3100_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderA3100) );
      instance.SetDelete(&delete_TArtDecoderA3100);
      instance.SetDeleteArray(&deleteArray_TArtDecoderA3100);
      instance.SetDestructor(&destruct_TArtDecoderA3100);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderA3100*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderA3100*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderA3100*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderA3100_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderA3100*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtRunInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtRunInfo(void *p = 0);
   static void *newArray_TArtRunInfo(Long_t size, void *p);
   static void delete_TArtRunInfo(void *p);
   static void deleteArray_TArtRunInfo(void *p);
   static void destruct_TArtRunInfo(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtRunInfo*)
   {
      ::TArtRunInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtRunInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtRunInfo", ::TArtRunInfo::Class_Version(), "./include/TArtRunInfo.hh", 7,
                  typeid(::TArtRunInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtRunInfo::Dictionary, isa_proxy, 4,
                  sizeof(::TArtRunInfo) );
      instance.SetNew(&new_TArtRunInfo);
      instance.SetNewArray(&newArray_TArtRunInfo);
      instance.SetDelete(&delete_TArtRunInfo);
      instance.SetDeleteArray(&deleteArray_TArtRunInfo);
      instance.SetDestructor(&destruct_TArtRunInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtRunInfo*)
   {
      return GenerateInitInstanceLocal((::TArtRunInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtRunInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtStoreManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TArtStoreManager(void *p);
   static void deleteArray_TArtStoreManager(void *p);
   static void destruct_TArtStoreManager(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtStoreManager*)
   {
      ::TArtStoreManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtStoreManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtStoreManager", ::TArtStoreManager::Class_Version(), "./include/TArtStoreManager.hh", 11,
                  typeid(::TArtStoreManager), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtStoreManager::Dictionary, isa_proxy, 4,
                  sizeof(::TArtStoreManager) );
      instance.SetDelete(&delete_TArtStoreManager);
      instance.SetDeleteArray(&deleteArray_TArtStoreManager);
      instance.SetDestructor(&destruct_TArtStoreManager);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtStoreManager*)
   {
      return GenerateInitInstanceLocal((::TArtStoreManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtStoreManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtEventStore_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtEventStore(void *p = 0);
   static void *newArray_TArtEventStore(Long_t size, void *p);
   static void delete_TArtEventStore(void *p);
   static void deleteArray_TArtEventStore(void *p);
   static void destruct_TArtEventStore(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtEventStore*)
   {
      ::TArtEventStore *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtEventStore >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtEventStore", ::TArtEventStore::Class_Version(), "./include/TArtEventStore.hh", 33,
                  typeid(::TArtEventStore), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtEventStore::Dictionary, isa_proxy, 4,
                  sizeof(::TArtEventStore) );
      instance.SetNew(&new_TArtEventStore);
      instance.SetNewArray(&newArray_TArtEventStore);
      instance.SetDelete(&delete_TArtEventStore);
      instance.SetDeleteArray(&deleteArray_TArtEventStore);
      instance.SetDestructor(&destruct_TArtEventStore);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtEventStore*)
   {
      return GenerateInitInstanceLocal((::TArtEventStore*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtEventStore*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtSharedMemoryDataSource_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtSharedMemoryDataSource_Dictionary();
   static void *new_TArtSharedMemoryDataSource(void *p = 0);
   static void *newArray_TArtSharedMemoryDataSource(Long_t size, void *p);
   static void delete_TArtSharedMemoryDataSource(void *p);
   static void deleteArray_TArtSharedMemoryDataSource(void *p);
   static void destruct_TArtSharedMemoryDataSource(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtSharedMemoryDataSource*)
   {
      ::TArtSharedMemoryDataSource *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtSharedMemoryDataSource),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtSharedMemoryDataSource", "./include/TArtSharedMemoryDataSource.hh", 30,
                  typeid(::TArtSharedMemoryDataSource), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtSharedMemoryDataSource_Dictionary, isa_proxy, 3,
                  sizeof(::TArtSharedMemoryDataSource) );
      instance.SetNew(&new_TArtSharedMemoryDataSource);
      instance.SetNewArray(&newArray_TArtSharedMemoryDataSource);
      instance.SetDelete(&delete_TArtSharedMemoryDataSource);
      instance.SetDeleteArray(&deleteArray_TArtSharedMemoryDataSource);
      instance.SetDestructor(&destruct_TArtSharedMemoryDataSource);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtSharedMemoryDataSource*)
   {
      return GenerateInitInstanceLocal((::TArtSharedMemoryDataSource*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtSharedMemoryDataSource*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtSharedMemoryDataSource_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtSharedMemoryDataSource*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderV1290_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderV1290_Dictionary();
   static void delete_TArtDecoderV1290(void *p);
   static void deleteArray_TArtDecoderV1290(void *p);
   static void destruct_TArtDecoderV1290(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderV1290*)
   {
      ::TArtDecoderV1290 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderV1290),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderV1290", "./include/TArtDecoderV1290.hh", 14,
                  typeid(::TArtDecoderV1290), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderV1290_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderV1290) );
      instance.SetDelete(&delete_TArtDecoderV1290);
      instance.SetDeleteArray(&deleteArray_TArtDecoderV1290);
      instance.SetDestructor(&destruct_TArtDecoderV1290);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderV1290*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderV1290*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderV1290*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderV1290_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderV1290*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDataObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtDataObject(void *p = 0);
   static void *newArray_TArtDataObject(Long_t size, void *p);
   static void delete_TArtDataObject(void *p);
   static void deleteArray_TArtDataObject(void *p);
   static void destruct_TArtDataObject(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDataObject*)
   {
      ::TArtDataObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtDataObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDataObject", ::TArtDataObject::Class_Version(), "./include/TArtDataObject.hh", 7,
                  typeid(::TArtDataObject), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtDataObject::Dictionary, isa_proxy, 4,
                  sizeof(::TArtDataObject) );
      instance.SetNew(&new_TArtDataObject);
      instance.SetNewArray(&newArray_TArtDataObject);
      instance.SetDelete(&delete_TArtDataObject);
      instance.SetDeleteArray(&deleteArray_TArtDataObject);
      instance.SetDestructor(&destruct_TArtDataObject);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDataObject*)
   {
      return GenerateInitInstanceLocal((::TArtDataObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDataObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderP716XZ_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderP716XZ_Dictionary();
   static void delete_TArtDecoderP716XZ(void *p);
   static void deleteArray_TArtDecoderP716XZ(void *p);
   static void destruct_TArtDecoderP716XZ(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderP716XZ*)
   {
      ::TArtDecoderP716XZ *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderP716XZ),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderP716XZ", "./include/TArtDecoderP716XZ.hh", 14,
                  typeid(::TArtDecoderP716XZ), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderP716XZ_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderP716XZ) );
      instance.SetDelete(&delete_TArtDecoderP716XZ);
      instance.SetDeleteArray(&deleteArray_TArtDecoderP716XZ);
      instance.SetDestructor(&destruct_TArtDecoderP716XZ);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderP716XZ*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderP716XZ*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderP716XZ*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderP716XZ_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderP716XZ*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderMQDC32_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderMQDC32_Dictionary();
   static void delete_TArtDecoderMQDC32(void *p);
   static void deleteArray_TArtDecoderMQDC32(void *p);
   static void destruct_TArtDecoderMQDC32(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderMQDC32*)
   {
      ::TArtDecoderMQDC32 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderMQDC32),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderMQDC32", "./include/TArtDecoderMQDC32.hh", 4,
                  typeid(::TArtDecoderMQDC32), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderMQDC32_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderMQDC32) );
      instance.SetDelete(&delete_TArtDecoderMQDC32);
      instance.SetDeleteArray(&deleteArray_TArtDecoderMQDC32);
      instance.SetDestructor(&destruct_TArtDecoderMQDC32);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderMQDC32*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderMQDC32*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderMQDC32*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderMQDC32_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderMQDC32*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtEventInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtEventInfo(void *p = 0);
   static void *newArray_TArtEventInfo(Long_t size, void *p);
   static void delete_TArtEventInfo(void *p);
   static void deleteArray_TArtEventInfo(void *p);
   static void destruct_TArtEventInfo(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtEventInfo*)
   {
      ::TArtEventInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtEventInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtEventInfo", ::TArtEventInfo::Class_Version(), "./include/TArtEventInfo.hh", 6,
                  typeid(::TArtEventInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtEventInfo::Dictionary, isa_proxy, 4,
                  sizeof(::TArtEventInfo) );
      instance.SetNew(&new_TArtEventInfo);
      instance.SetNewArray(&newArray_TArtEventInfo);
      instance.SetDelete(&delete_TArtEventInfo);
      instance.SetDeleteArray(&deleteArray_TArtEventInfo);
      instance.SetDestructor(&destruct_TArtEventInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtEventInfo*)
   {
      return GenerateInitInstanceLocal((::TArtEventInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtEventInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtParserRDF_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtParserRDF(void *p = 0);
   static void *newArray_TArtParserRDF(Long_t size, void *p);
   static void delete_TArtParserRDF(void *p);
   static void deleteArray_TArtParserRDF(void *p);
   static void destruct_TArtParserRDF(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtParserRDF*)
   {
      ::TArtParserRDF *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtParserRDF >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtParserRDF", ::TArtParserRDF::Class_Version(), "./include/TArtParserRDF.hh", 17,
                  typeid(::TArtParserRDF), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtParserRDF::Dictionary, isa_proxy, 4,
                  sizeof(::TArtParserRDF) );
      instance.SetNew(&new_TArtParserRDF);
      instance.SetNewArray(&newArray_TArtParserRDF);
      instance.SetDelete(&delete_TArtParserRDF);
      instance.SetDeleteArray(&deleteArray_TArtParserRDF);
      instance.SetDestructor(&destruct_TArtParserRDF);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtParserRDF*)
   {
      return GenerateInitInstanceLocal((::TArtParserRDF*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtParserRDF*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderV550_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderV550_Dictionary();
   static void delete_TArtDecoderV550(void *p);
   static void deleteArray_TArtDecoderV550(void *p);
   static void destruct_TArtDecoderV550(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderV550*)
   {
      ::TArtDecoderV550 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderV550),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderV550", "./include/TArtDecoderV550.hh", 14,
                  typeid(::TArtDecoderV550), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderV550_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderV550) );
      instance.SetDelete(&delete_TArtDecoderV550);
      instance.SetDeleteArray(&deleteArray_TArtDecoderV550);
      instance.SetDestructor(&destruct_TArtDecoderV550);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderV550*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderV550*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderV550*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderV550_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderV550*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderMTDC32_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderMTDC32_Dictionary();
   static void delete_TArtDecoderMTDC32(void *p);
   static void deleteArray_TArtDecoderMTDC32(void *p);
   static void destruct_TArtDecoderMTDC32(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderMTDC32*)
   {
      ::TArtDecoderMTDC32 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderMTDC32),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderMTDC32", "./include/TArtDecoderMTDC32.hh", 4,
                  typeid(::TArtDecoderMTDC32), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderMTDC32_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderMTDC32) );
      instance.SetDelete(&delete_TArtDecoderMTDC32);
      instance.SetDeleteArray(&deleteArray_TArtDecoderMTDC32);
      instance.SetDestructor(&destruct_TArtDecoderMTDC32);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderMTDC32*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderMTDC32*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderMTDC32*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderMTDC32_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderMTDC32*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderDSP_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderDSP_Dictionary();
   static void delete_TArtDecoderDSP(void *p);
   static void deleteArray_TArtDecoderDSP(void *p);
   static void destruct_TArtDecoderDSP(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderDSP*)
   {
      ::TArtDecoderDSP *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderDSP),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderDSP", "./include/TArtDecoderDSP.hh", 9,
                  typeid(::TArtDecoderDSP), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderDSP_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderDSP) );
      instance.SetDelete(&delete_TArtDecoderDSP);
      instance.SetDeleteArray(&deleteArray_TArtDecoderDSP);
      instance.SetDestructor(&destruct_TArtDecoderDSP);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderDSP*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderDSP*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderDSP*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderDSP_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderDSP*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtFileDataSource_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtFileDataSource_Dictionary();
   static void *new_TArtFileDataSource(void *p = 0);
   static void *newArray_TArtFileDataSource(Long_t size, void *p);
   static void delete_TArtFileDataSource(void *p);
   static void deleteArray_TArtFileDataSource(void *p);
   static void destruct_TArtFileDataSource(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtFileDataSource*)
   {
      ::TArtFileDataSource *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtFileDataSource),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtFileDataSource", "./include/TArtFileDataSource.hh", 19,
                  typeid(::TArtFileDataSource), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtFileDataSource_Dictionary, isa_proxy, 3,
                  sizeof(::TArtFileDataSource) );
      instance.SetNew(&new_TArtFileDataSource);
      instance.SetNewArray(&newArray_TArtFileDataSource);
      instance.SetDelete(&delete_TArtFileDataSource);
      instance.SetDeleteArray(&deleteArray_TArtFileDataSource);
      instance.SetDestructor(&destruct_TArtFileDataSource);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtFileDataSource*)
   {
      return GenerateInitInstanceLocal((::TArtFileDataSource*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtFileDataSource*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtFileDataSource_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtFileDataSource*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtRIDFMap_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtRIDFMap(void *p = 0);
   static void *newArray_TArtRIDFMap(Long_t size, void *p);
   static void delete_TArtRIDFMap(void *p);
   static void deleteArray_TArtRIDFMap(void *p);
   static void destruct_TArtRIDFMap(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtRIDFMap*)
   {
      ::TArtRIDFMap *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtRIDFMap >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtRIDFMap", ::TArtRIDFMap::Class_Version(), "./include/TArtMap.hh", 7,
                  typeid(::TArtRIDFMap), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtRIDFMap::Dictionary, isa_proxy, 4,
                  sizeof(::TArtRIDFMap) );
      instance.SetNew(&new_TArtRIDFMap);
      instance.SetNewArray(&newArray_TArtRIDFMap);
      instance.SetDelete(&delete_TArtRIDFMap);
      instance.SetDeleteArray(&deleteArray_TArtRIDFMap);
      instance.SetDestructor(&destruct_TArtRIDFMap);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtRIDFMap*)
   {
      return GenerateInitInstanceLocal((::TArtRIDFMap*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtRIDFMap*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderTacquila_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderTacquila_Dictionary();
   static void delete_TArtDecoderTacquila(void *p);
   static void deleteArray_TArtDecoderTacquila(void *p);
   static void destruct_TArtDecoderTacquila(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderTacquila*)
   {
      ::TArtDecoderTacquila *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderTacquila),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderTacquila", "./include/TArtDecoderTacquila.hh", 7,
                  typeid(::TArtDecoderTacquila), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderTacquila_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderTacquila) );
      instance.SetDelete(&delete_TArtDecoderTacquila);
      instance.SetDeleteArray(&deleteArray_TArtDecoderTacquila);
      instance.SetDestructor(&destruct_TArtDecoderTacquila);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderTacquila*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderTacquila*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderTacquila*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderTacquila_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderTacquila*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderAD413A_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderAD413A_Dictionary();
   static void delete_TArtDecoderAD413A(void *p);
   static void deleteArray_TArtDecoderAD413A(void *p);
   static void destruct_TArtDecoderAD413A(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderAD413A*)
   {
      ::TArtDecoderAD413A *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderAD413A),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderAD413A", "./include/TArtDecoderAD413A.hh", 14,
                  typeid(::TArtDecoderAD413A), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderAD413A_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderAD413A) );
      instance.SetDelete(&delete_TArtDecoderAD413A);
      instance.SetDeleteArray(&deleteArray_TArtDecoderAD413A);
      instance.SetDestructor(&destruct_TArtDecoderAD413A);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderAD413A*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderAD413A*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderAD413A*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderAD413A_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderAD413A*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderFixed24_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderFixed24_Dictionary();
   static void delete_TArtDecoderFixed24(void *p);
   static void deleteArray_TArtDecoderFixed24(void *p);
   static void destruct_TArtDecoderFixed24(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderFixed24*)
   {
      ::TArtDecoderFixed24 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderFixed24),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderFixed24", "./include/TArtDecoderFixed24.hh", 14,
                  typeid(::TArtDecoderFixed24), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderFixed24_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderFixed24) );
      instance.SetDelete(&delete_TArtDecoderFixed24);
      instance.SetDeleteArray(&deleteArray_TArtDecoderFixed24);
      instance.SetDestructor(&destruct_TArtDecoderFixed24);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderFixed24*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderFixed24*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderFixed24*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderFixed24_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderFixed24*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderVmeEasyroc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderVmeEasyroc_Dictionary();
   static void delete_TArtDecoderVmeEasyroc(void *p);
   static void deleteArray_TArtDecoderVmeEasyroc(void *p);
   static void destruct_TArtDecoderVmeEasyroc(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderVmeEasyroc*)
   {
      ::TArtDecoderVmeEasyroc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderVmeEasyroc),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderVmeEasyroc", "./include/TArtDecoderVmeEasyroc.hh", 7,
                  typeid(::TArtDecoderVmeEasyroc), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderVmeEasyroc_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderVmeEasyroc) );
      instance.SetDelete(&delete_TArtDecoderVmeEasyroc);
      instance.SetDeleteArray(&deleteArray_TArtDecoderVmeEasyroc);
      instance.SetDestructor(&destruct_TArtDecoderVmeEasyroc);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderVmeEasyroc*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderVmeEasyroc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderVmeEasyroc*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderVmeEasyroc_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderVmeEasyroc*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderNeulandTS_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderNeulandTS_Dictionary();
   static void delete_TArtDecoderNeulandTS(void *p);
   static void deleteArray_TArtDecoderNeulandTS(void *p);
   static void destruct_TArtDecoderNeulandTS(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderNeulandTS*)
   {
      ::TArtDecoderNeulandTS *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderNeulandTS),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderNeulandTS", "./include/TArtDecoderNeulandTS.hh", 9,
                  typeid(::TArtDecoderNeulandTS), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderNeulandTS_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderNeulandTS) );
      instance.SetDelete(&delete_TArtDecoderNeulandTS);
      instance.SetDeleteArray(&deleteArray_TArtDecoderNeulandTS);
      instance.SetDestructor(&destruct_TArtDecoderNeulandTS);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderNeulandTS*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderNeulandTS*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderNeulandTS*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderNeulandTS_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderNeulandTS*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtReconstruction_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TArtReconstruction(void *p);
   static void deleteArray_TArtReconstruction(void *p);
   static void destruct_TArtReconstruction(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtReconstruction*)
   {
      ::TArtReconstruction *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtReconstruction >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtReconstruction", ::TArtReconstruction::Class_Version(), "./include/TArtReconstruction.hh", 11,
                  typeid(::TArtReconstruction), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtReconstruction::Dictionary, isa_proxy, 4,
                  sizeof(::TArtReconstruction) );
      instance.SetDelete(&delete_TArtReconstruction);
      instance.SetDeleteArray(&deleteArray_TArtReconstruction);
      instance.SetDestructor(&destruct_TArtReconstruction);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtReconstruction*)
   {
      return GenerateInitInstanceLocal((::TArtReconstruction*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtReconstruction*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtParserRIDF_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtParserRIDF(void *p = 0);
   static void *newArray_TArtParserRIDF(Long_t size, void *p);
   static void delete_TArtParserRIDF(void *p);
   static void deleteArray_TArtParserRIDF(void *p);
   static void destruct_TArtParserRIDF(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtParserRIDF*)
   {
      ::TArtParserRIDF *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtParserRIDF >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtParserRIDF", ::TArtParserRIDF::Class_Version(), "./include/TArtParserRIDF.hh", 18,
                  typeid(::TArtParserRIDF), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtParserRIDF::Dictionary, isa_proxy, 4,
                  sizeof(::TArtParserRIDF) );
      instance.SetNew(&new_TArtParserRIDF);
      instance.SetNewArray(&newArray_TArtParserRIDF);
      instance.SetDelete(&delete_TArtParserRIDF);
      instance.SetDeleteArray(&deleteArray_TArtParserRIDF);
      instance.SetDestructor(&destruct_TArtParserRIDF);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtParserRIDF*)
   {
      return GenerateInitInstanceLocal((::TArtParserRIDF*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtParserRIDF*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderL3377d_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderL3377d_Dictionary();
   static void delete_TArtDecoderL3377d(void *p);
   static void deleteArray_TArtDecoderL3377d(void *p);
   static void destruct_TArtDecoderL3377d(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderL3377d*)
   {
      ::TArtDecoderL3377d *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderL3377d),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderL3377d", "./include/TArtDecoderL3377d.hh", 14,
                  typeid(::TArtDecoderL3377d), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderL3377d_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderL3377d) );
      instance.SetDelete(&delete_TArtDecoderL3377d);
      instance.SetDeleteArray(&deleteArray_TArtDecoderL3377d);
      instance.SetDestructor(&destruct_TArtDecoderL3377d);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderL3377d*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderL3377d*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderL3377d*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderL3377d_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderL3377d*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDecoderV1190C_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtDecoderV1190C_Dictionary();
   static void delete_TArtDecoderV1190C(void *p);
   static void deleteArray_TArtDecoderV1190C(void *p);
   static void destruct_TArtDecoderV1190C(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDecoderV1190C*)
   {
      ::TArtDecoderV1190C *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtDecoderV1190C),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDecoderV1190C", "./include/TArtDecoderV1190C.hh", 14,
                  typeid(::TArtDecoderV1190C), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtDecoderV1190C_Dictionary, isa_proxy, 3,
                  sizeof(::TArtDecoderV1190C) );
      instance.SetDelete(&delete_TArtDecoderV1190C);
      instance.SetDeleteArray(&deleteArray_TArtDecoderV1190C);
      instance.SetDestructor(&destruct_TArtDecoderV1190C);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDecoderV1190C*)
   {
      return GenerateInitInstanceLocal((::TArtDecoderV1190C*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDecoderV1190C*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtDecoderV1190C_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDecoderV1190C*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtStreamingDataSource_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtStreamingDataSource(void *p = 0);
   static void *newArray_TArtStreamingDataSource(Long_t size, void *p);
   static void delete_TArtStreamingDataSource(void *p);
   static void deleteArray_TArtStreamingDataSource(void *p);
   static void destruct_TArtStreamingDataSource(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtStreamingDataSource*)
   {
      ::TArtStreamingDataSource *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtStreamingDataSource >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtStreamingDataSource", ::TArtStreamingDataSource::Class_Version(), "./include/TArtStreamingDataSource.hh", 14,
                  typeid(::TArtStreamingDataSource), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtStreamingDataSource::Dictionary, isa_proxy, 4,
                  sizeof(::TArtStreamingDataSource) );
      instance.SetNew(&new_TArtStreamingDataSource);
      instance.SetNewArray(&newArray_TArtStreamingDataSource);
      instance.SetDelete(&delete_TArtStreamingDataSource);
      instance.SetDeleteArray(&deleteArray_TArtStreamingDataSource);
      instance.SetDestructor(&destruct_TArtStreamingDataSource);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtStreamingDataSource*)
   {
      return GenerateInitInstanceLocal((::TArtStreamingDataSource*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtStreamingDataSource*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtUtil_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TArtUtil_Dictionary();
   static void *new_TArtUtil(void *p = 0);
   static void *newArray_TArtUtil(Long_t size, void *p);
   static void delete_TArtUtil(void *p);
   static void deleteArray_TArtUtil(void *p);
   static void destruct_TArtUtil(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtUtil*)
   {
      ::TArtUtil *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TArtUtil),0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtUtil", "./include/TArtUtil.hh", 10,
                  typeid(::TArtUtil), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TArtUtil_Dictionary, isa_proxy, 0,
                  sizeof(::TArtUtil) );
      instance.SetNew(&new_TArtUtil);
      instance.SetNewArray(&newArray_TArtUtil);
      instance.SetDelete(&delete_TArtUtil);
      instance.SetDeleteArray(&deleteArray_TArtUtil);
      instance.SetDestructor(&destruct_TArtUtil);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtUtil*)
   {
      return GenerateInitInstanceLocal((::TArtUtil*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtUtil*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TArtUtil_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TArtUtil*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr TArtRawDataObject::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtRawDataObject::Class_Name()
{
   return "TArtRawDataObject";
}

//______________________________________________________________________________
const char *TArtRawDataObject::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawDataObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtRawDataObject::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawDataObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtRawDataObject::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawDataObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtRawDataObject::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawDataObject*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCore::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCore::Class_Name()
{
   return "TArtCore";
}

//______________________________________________________________________________
const char *TArtCore::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCore*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCore::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCore*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCore::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCore*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCore::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCore*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtRawFADCDataObject::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtRawFADCDataObject::Class_Name()
{
   return "TArtRawFADCDataObject";
}

//______________________________________________________________________________
const char *TArtRawFADCDataObject::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawFADCDataObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtRawFADCDataObject::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawFADCDataObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtRawFADCDataObject::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawFADCDataObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtRawFADCDataObject::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawFADCDataObject*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtRawTacquilaDataObject::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtRawTacquilaDataObject::Class_Name()
{
   return "TArtRawTacquilaDataObject";
}

//______________________________________________________________________________
const char *TArtRawTacquilaDataObject::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawTacquilaDataObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtRawTacquilaDataObject::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawTacquilaDataObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtRawTacquilaDataObject::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawTacquilaDataObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtRawTacquilaDataObject::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawTacquilaDataObject*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtRawSegmentObject::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtRawSegmentObject::Class_Name()
{
   return "TArtRawSegmentObject";
}

//______________________________________________________________________________
const char *TArtRawSegmentObject::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawSegmentObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtRawSegmentObject::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawSegmentObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtRawSegmentObject::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawSegmentObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtRawSegmentObject::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawSegmentObject*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtRawScalerObject::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtRawScalerObject::Class_Name()
{
   return "TArtRawScalerObject";
}

//______________________________________________________________________________
const char *TArtRawScalerObject::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawScalerObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtRawScalerObject::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawScalerObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtRawScalerObject::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawScalerObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtRawScalerObject::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawScalerObject*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtRawEventObject::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtRawEventObject::Class_Name()
{
   return "TArtRawEventObject";
}

//______________________________________________________________________________
const char *TArtRawEventObject::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawEventObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtRawEventObject::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawEventObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtRawEventObject::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawEventObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtRawEventObject::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRawEventObject*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtParser::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtParser::Class_Name()
{
   return "TArtParser";
}

//______________________________________________________________________________
const char *TArtParser::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtParser*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtParser::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtParser*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtParser::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtParser*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtParser::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtParser*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtRunInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtRunInfo::Class_Name()
{
   return "TArtRunInfo";
}

//______________________________________________________________________________
const char *TArtRunInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRunInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtRunInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRunInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtRunInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRunInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtRunInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRunInfo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtStoreManager::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtStoreManager::Class_Name()
{
   return "TArtStoreManager";
}

//______________________________________________________________________________
const char *TArtStoreManager::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtStoreManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtStoreManager::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtStoreManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtStoreManager::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtStoreManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtStoreManager::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtStoreManager*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtEventStore::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtEventStore::Class_Name()
{
   return "TArtEventStore";
}

//______________________________________________________________________________
const char *TArtEventStore::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtEventStore*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtEventStore::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtEventStore*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtEventStore::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtEventStore*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtEventStore::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtEventStore*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtDataObject::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtDataObject::Class_Name()
{
   return "TArtDataObject";
}

//______________________________________________________________________________
const char *TArtDataObject::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDataObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtDataObject::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDataObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtDataObject::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDataObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtDataObject::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDataObject*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtEventInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtEventInfo::Class_Name()
{
   return "TArtEventInfo";
}

//______________________________________________________________________________
const char *TArtEventInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtEventInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtEventInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtEventInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtEventInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtEventInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtEventInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtEventInfo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtParserRDF::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtParserRDF::Class_Name()
{
   return "TArtParserRDF";
}

//______________________________________________________________________________
const char *TArtParserRDF::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtParserRDF*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtParserRDF::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtParserRDF*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtParserRDF::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtParserRDF*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtParserRDF::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtParserRDF*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtRIDFMap::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtRIDFMap::Class_Name()
{
   return "TArtRIDFMap";
}

//______________________________________________________________________________
const char *TArtRIDFMap::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRIDFMap*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtRIDFMap::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRIDFMap*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtRIDFMap::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRIDFMap*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtRIDFMap::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRIDFMap*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtReconstruction::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtReconstruction::Class_Name()
{
   return "TArtReconstruction";
}

//______________________________________________________________________________
const char *TArtReconstruction::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtReconstruction*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtReconstruction::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtReconstruction*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtReconstruction::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtReconstruction*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtReconstruction::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtReconstruction*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtParserRIDF::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtParserRIDF::Class_Name()
{
   return "TArtParserRIDF";
}

//______________________________________________________________________________
const char *TArtParserRIDF::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtParserRIDF*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtParserRIDF::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtParserRIDF*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtParserRIDF::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtParserRIDF*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtParserRIDF::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtParserRIDF*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtStreamingDataSource::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtStreamingDataSource::Class_Name()
{
   return "TArtStreamingDataSource";
}

//______________________________________________________________________________
const char *TArtStreamingDataSource::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtStreamingDataSource*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtStreamingDataSource::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtStreamingDataSource*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtStreamingDataSource::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtStreamingDataSource*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtStreamingDataSource::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtStreamingDataSource*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TArtCore::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCore.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCore::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCore::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCore::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCore.
      TClass *R__cl = ::TArtCore::IsA();
      if (R__cl || R__insp.IsA()) { }
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCore(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCore : new ::TArtCore;
   }
   static void *newArray_TArtCore(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCore[nElements] : new ::TArtCore[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCore(void *p) {
      delete ((::TArtCore*)p);
   }
   static void deleteArray_TArtCore(void *p) {
      delete [] ((::TArtCore*)p);
   }
   static void destruct_TArtCore(void *p) {
      typedef ::TArtCore current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCore

//______________________________________________________________________________
namespace ROOTDict {
   void TArtMath_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TArtMath.
      typedef ::ROOTShadow::Shadow::TArtMath ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtMath*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtMath(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtMath : new ::TArtMath;
   }
   static void *newArray_TArtMath(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtMath[nElements] : new ::TArtMath[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtMath(void *p) {
      delete ((::TArtMath*)p);
   }
   static void deleteArray_TArtMath(void *p) {
      delete [] ((::TArtMath*)p);
   }
   static void destruct_TArtMath(void *p) {
      typedef ::TArtMath current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtMath

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtUtil(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtUtil : new ::TArtUtil;
   }
   static void *newArray_TArtUtil(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtUtil[nElements] : new ::TArtUtil[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtUtil(void *p) {
      delete ((::TArtUtil*)p);
   }
   static void deleteArray_TArtUtil(void *p) {
      delete [] ((::TArtUtil*)p);
   }
   static void destruct_TArtUtil(void *p) {
      typedef ::TArtUtil current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtUtil

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDataSource(void *p) {
      delete ((::TArtDataSource*)p);
   }
   static void deleteArray_TArtDataSource(void *p) {
      delete [] ((::TArtDataSource*)p);
   }
   static void destruct_TArtDataSource(void *p) {
      typedef ::TArtDataSource current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDataSource

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderLUPO(void *p) {
      delete ((::TArtDecoderLUPO*)p);
   }
   static void deleteArray_TArtDecoderLUPO(void *p) {
      delete [] ((::TArtDecoderLUPO*)p);
   }
   static void destruct_TArtDecoderLUPO(void *p) {
      typedef ::TArtDecoderLUPO current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderLUPO

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderDSP(void *p) {
      delete ((::TArtDecoderDSP*)p);
   }
   static void deleteArray_TArtDecoderDSP(void *p) {
      delete [] ((::TArtDecoderDSP*)p);
   }
   static void destruct_TArtDecoderDSP(void *p) {
      typedef ::TArtDecoderDSP current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderDSP

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderA3100(void *p) {
      delete ((::TArtDecoderA3100*)p);
   }
   static void deleteArray_TArtDecoderA3100(void *p) {
      delete [] ((::TArtDecoderA3100*)p);
   }
   static void destruct_TArtDecoderA3100(void *p) {
      typedef ::TArtDecoderA3100 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderA3100

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderAD413A(void *p) {
      delete ((::TArtDecoderAD413A*)p);
   }
   static void deleteArray_TArtDecoderAD413A(void *p) {
      delete [] ((::TArtDecoderAD413A*)p);
   }
   static void destruct_TArtDecoderAD413A(void *p) {
      typedef ::TArtDecoderAD413A current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderAD413A

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderCTM405(void *p) {
      delete ((::TArtDecoderCTM405*)p);
   }
   static void deleteArray_TArtDecoderCTM405(void *p) {
      delete [] ((::TArtDecoderCTM405*)p);
   }
   static void destruct_TArtDecoderCTM405(void *p) {
      typedef ::TArtDecoderCTM405 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderCTM405

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderFactory(void *p) {
      delete ((::TArtDecoderFactory*)p);
   }
   static void deleteArray_TArtDecoderFactory(void *p) {
      delete [] ((::TArtDecoderFactory*)p);
   }
   static void destruct_TArtDecoderFactory(void *p) {
      typedef ::TArtDecoderFactory current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderFactory

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderFixed16(void *p) {
      delete ((::TArtDecoderFixed16*)p);
   }
   static void deleteArray_TArtDecoderFixed16(void *p) {
      delete [] ((::TArtDecoderFixed16*)p);
   }
   static void destruct_TArtDecoderFixed16(void *p) {
      typedef ::TArtDecoderFixed16 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderFixed16

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderFixed24(void *p) {
      delete ((::TArtDecoderFixed24*)p);
   }
   static void deleteArray_TArtDecoderFixed24(void *p) {
      delete [] ((::TArtDecoderFixed24*)p);
   }
   static void destruct_TArtDecoderFixed24(void *p) {
      typedef ::TArtDecoderFixed24 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderFixed24

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderFixed32(void *p) {
      delete ((::TArtDecoderFixed32*)p);
   }
   static void deleteArray_TArtDecoderFixed32(void *p) {
      delete [] ((::TArtDecoderFixed32*)p);
   }
   static void destruct_TArtDecoderFixed32(void *p) {
      typedef ::TArtDecoderFixed32 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderFixed32

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoder(void *p) {
      delete ((::TArtDecoder*)p);
   }
   static void deleteArray_TArtDecoder(void *p) {
      delete [] ((::TArtDecoder*)p);
   }
   static void destruct_TArtDecoder(void *p) {
      typedef ::TArtDecoder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoder

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderL3377d(void *p) {
      delete ((::TArtDecoderL3377d*)p);
   }
   static void deleteArray_TArtDecoderL3377d(void *p) {
      delete [] ((::TArtDecoderL3377d*)p);
   }
   static void destruct_TArtDecoderL3377d(void *p) {
      typedef ::TArtDecoderL3377d current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderL3377d

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderAMTTDC(void *p) {
      delete ((::TArtDecoderAMTTDC*)p);
   }
   static void deleteArray_TArtDecoderAMTTDC(void *p) {
      delete [] ((::TArtDecoderAMTTDC*)p);
   }
   static void destruct_TArtDecoderAMTTDC(void *p) {
      typedef ::TArtDecoderAMTTDC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderAMTTDC

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderMADC32(void *p) {
      delete ((::TArtDecoderMADC32*)p);
   }
   static void deleteArray_TArtDecoderMADC32(void *p) {
      delete [] ((::TArtDecoderMADC32*)p);
   }
   static void destruct_TArtDecoderMADC32(void *p) {
      typedef ::TArtDecoderMADC32 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderMADC32

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderMQDC32(void *p) {
      delete ((::TArtDecoderMQDC32*)p);
   }
   static void deleteArray_TArtDecoderMQDC32(void *p) {
      delete [] ((::TArtDecoderMQDC32*)p);
   }
   static void destruct_TArtDecoderMQDC32(void *p) {
      typedef ::TArtDecoderMQDC32 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderMQDC32

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderMTDC32(void *p) {
      delete ((::TArtDecoderMTDC32*)p);
   }
   static void deleteArray_TArtDecoderMTDC32(void *p) {
      delete [] ((::TArtDecoderMTDC32*)p);
   }
   static void destruct_TArtDecoderMTDC32(void *p) {
      typedef ::TArtDecoderMTDC32 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderMTDC32

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderP716X(void *p) {
      delete ((::TArtDecoderP716X*)p);
   }
   static void deleteArray_TArtDecoderP716X(void *p) {
      delete [] ((::TArtDecoderP716X*)p);
   }
   static void destruct_TArtDecoderP716X(void *p) {
      typedef ::TArtDecoderP716X current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderP716X

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderP716XZ(void *p) {
      delete ((::TArtDecoderP716XZ*)p);
   }
   static void deleteArray_TArtDecoderP716XZ(void *p) {
      delete [] ((::TArtDecoderP716XZ*)p);
   }
   static void destruct_TArtDecoderP716XZ(void *p) {
      typedef ::TArtDecoderP716XZ current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderP716XZ

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderV1190(void *p) {
      delete ((::TArtDecoderV1190*)p);
   }
   static void deleteArray_TArtDecoderV1190(void *p) {
      delete [] ((::TArtDecoderV1190*)p);
   }
   static void destruct_TArtDecoderV1190(void *p) {
      typedef ::TArtDecoderV1190 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderV1190

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderV1190C(void *p) {
      delete ((::TArtDecoderV1190C*)p);
   }
   static void deleteArray_TArtDecoderV1190C(void *p) {
      delete [] ((::TArtDecoderV1190C*)p);
   }
   static void destruct_TArtDecoderV1190C(void *p) {
      typedef ::TArtDecoderV1190C current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderV1190C

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderV1290(void *p) {
      delete ((::TArtDecoderV1290*)p);
   }
   static void deleteArray_TArtDecoderV1290(void *p) {
      delete [] ((::TArtDecoderV1290*)p);
   }
   static void destruct_TArtDecoderV1290(void *p) {
      typedef ::TArtDecoderV1290 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderV1290

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderV1740(void *p) {
      delete ((::TArtDecoderV1740*)p);
   }
   static void deleteArray_TArtDecoderV1740(void *p) {
      delete [] ((::TArtDecoderV1740*)p);
   }
   static void destruct_TArtDecoderV1740(void *p) {
      typedef ::TArtDecoderV1740 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderV1740

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderV550(void *p) {
      delete ((::TArtDecoderV550*)p);
   }
   static void deleteArray_TArtDecoderV550(void *p) {
      delete [] ((::TArtDecoderV550*)p);
   }
   static void destruct_TArtDecoderV550(void *p) {
      typedef ::TArtDecoderV550 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderV550

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderV767(void *p) {
      delete ((::TArtDecoderV767*)p);
   }
   static void deleteArray_TArtDecoderV767(void *p) {
      delete [] ((::TArtDecoderV767*)p);
   }
   static void destruct_TArtDecoderV767(void *p) {
      typedef ::TArtDecoderV767 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderV767

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderV7XX(void *p) {
      delete ((::TArtDecoderV7XX*)p);
   }
   static void deleteArray_TArtDecoderV7XX(void *p) {
      delete [] ((::TArtDecoderV7XX*)p);
   }
   static void destruct_TArtDecoderV7XX(void *p) {
      typedef ::TArtDecoderV7XX current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderV7XX

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderVmeEasyroc(void *p) {
      delete ((::TArtDecoderVmeEasyroc*)p);
   }
   static void deleteArray_TArtDecoderVmeEasyroc(void *p) {
      delete [] ((::TArtDecoderVmeEasyroc*)p);
   }
   static void destruct_TArtDecoderVmeEasyroc(void *p) {
      typedef ::TArtDecoderVmeEasyroc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderVmeEasyroc

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderBigEndianV7XX(void *p) {
      delete ((::TArtDecoderBigEndianV7XX*)p);
   }
   static void deleteArray_TArtDecoderBigEndianV7XX(void *p) {
      delete [] ((::TArtDecoderBigEndianV7XX*)p);
   }
   static void destruct_TArtDecoderBigEndianV7XX(void *p) {
      typedef ::TArtDecoderBigEndianV7XX current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderBigEndianV7XX

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderNeulandTS(void *p) {
      delete ((::TArtDecoderNeulandTS*)p);
   }
   static void deleteArray_TArtDecoderNeulandTS(void *p) {
      delete [] ((::TArtDecoderNeulandTS*)p);
   }
   static void destruct_TArtDecoderNeulandTS(void *p) {
      typedef ::TArtDecoderNeulandTS current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderNeulandTS

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtDecoderTacquila(void *p) {
      delete ((::TArtDecoderTacquila*)p);
   }
   static void deleteArray_TArtDecoderTacquila(void *p) {
      delete [] ((::TArtDecoderTacquila*)p);
   }
   static void destruct_TArtDecoderTacquila(void *p) {
      typedef ::TArtDecoderTacquila current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDecoderTacquila

//______________________________________________________________________________
void TArtEventStore::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtEventStore.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtEventStore::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtEventStore::Class(),this);
   }
}

//______________________________________________________________________________
void TArtEventStore::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtEventStore.
      TClass *R__cl = ::TArtEventStore::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDataSource", &fDataSource);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParser", &fParser);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*info_array", &info_array);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*runinfo_array", &runinfo_array);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rawevent", &rawevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pInterrupt", &pInterrupt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMapFileName", &fMapFileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sman", &sman);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtEventStore(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtEventStore : new ::TArtEventStore;
   }
   static void *newArray_TArtEventStore(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtEventStore[nElements] : new ::TArtEventStore[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtEventStore(void *p) {
      delete ((::TArtEventStore*)p);
   }
   static void deleteArray_TArtEventStore(void *p) {
      delete [] ((::TArtEventStore*)p);
   }
   static void destruct_TArtEventStore(void *p) {
      typedef ::TArtEventStore current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtEventStore

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtFileDataSource(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtFileDataSource : new ::TArtFileDataSource;
   }
   static void *newArray_TArtFileDataSource(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtFileDataSource[nElements] : new ::TArtFileDataSource[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtFileDataSource(void *p) {
      delete ((::TArtFileDataSource*)p);
   }
   static void deleteArray_TArtFileDataSource(void *p) {
      delete [] ((::TArtFileDataSource*)p);
   }
   static void destruct_TArtFileDataSource(void *p) {
      typedef ::TArtFileDataSource current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtFileDataSource

//______________________________________________________________________________
void TArtRIDFMap::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtRIDFMap.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtRIDFMap::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtRIDFMap::Class(),this);
   }
}

//______________________________________________________________________________
void TArtRIDFMap::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtRIDFMap.
      TClass *R__cl = ::TArtRIDFMap::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "device", &device);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fpl", &fpl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detid", &detid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "geo", &geo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ch", &ch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mapinfo[64]", mapinfo);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtRIDFMap(void *p) {
      return  p ? new(p) ::TArtRIDFMap : new ::TArtRIDFMap;
   }
   static void *newArray_TArtRIDFMap(Long_t nElements, void *p) {
      return p ? new(p) ::TArtRIDFMap[nElements] : new ::TArtRIDFMap[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtRIDFMap(void *p) {
      delete ((::TArtRIDFMap*)p);
   }
   static void deleteArray_TArtRIDFMap(void *p) {
      delete [] ((::TArtRIDFMap*)p);
   }
   static void destruct_TArtRIDFMap(void *p) {
      typedef ::TArtRIDFMap current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtRIDFMap

//______________________________________________________________________________
void TArtReconstruction::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtReconstruction.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtReconstruction::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtReconstruction::Class(),this);
   }
}

//______________________________________________________________________________
void TArtReconstruction::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtReconstruction.
      TClass *R__cl = ::TArtReconstruction::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outdataname", &outdataname);
      R__insp.InspectMember(outdataname, "outdataname.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataLoaded", &fDataLoaded);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fReconstructed", &fReconstructed);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtReconstruction(void *p) {
      delete ((::TArtReconstruction*)p);
   }
   static void deleteArray_TArtReconstruction(void *p) {
      delete [] ((::TArtReconstruction*)p);
   }
   static void destruct_TArtReconstruction(void *p) {
      typedef ::TArtReconstruction current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtReconstruction

//______________________________________________________________________________
void TArtStoreManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtStoreManager.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtStoreManager::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtStoreManager::Class(),this);
   }
}

//______________________________________________________________________________
void TArtStoreManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtStoreManager.
      TClass *R__cl = ::TArtStoreManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*listOfParameters", &listOfParameters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*listOfDataContainers", &listOfDataContainers);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtStoreManager(void *p) {
      delete ((::TArtStoreManager*)p);
   }
   static void deleteArray_TArtStoreManager(void *p) {
      delete [] ((::TArtStoreManager*)p);
   }
   static void destruct_TArtStoreManager(void *p) {
      typedef ::TArtStoreManager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtStoreManager

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtParserFactory(void *p) {
      delete ((::TArtParserFactory*)p);
   }
   static void deleteArray_TArtParserFactory(void *p) {
      delete [] ((::TArtParserFactory*)p);
   }
   static void destruct_TArtParserFactory(void *p) {
      typedef ::TArtParserFactory current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtParserFactory

//______________________________________________________________________________
void TArtParser::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtParser.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtParser::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtParser::Class(),this);
   }
}

//______________________________________________________________________________
void TArtParser::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtParser.
      TClass *R__cl = ::TArtParser::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBlockBuffer", &fBlockBuffer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOffset", &fOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNext", &fNext);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPrev", &fPrev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBlockSize", &fBlockSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEOB", &fEOB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isSkip", &isSkip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventStatus", &fEventStatus);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtParser(void *p) {
      delete ((::TArtParser*)p);
   }
   static void deleteArray_TArtParser(void *p) {
      delete [] ((::TArtParser*)p);
   }
   static void destruct_TArtParser(void *p) {
      typedef ::TArtParser current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtParser

//______________________________________________________________________________
void TArtParserRDF::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtParserRDF.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtParserRDF::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtParserRDF::Class(),this);
   }
}

//______________________________________________________________________________
void TArtParserRDF::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtParserRDF.
      TClass *R__cl = ::TArtParserRDF::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mapper", &mapper);
      TArtParser::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtParserRDF(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtParserRDF : new ::TArtParserRDF;
   }
   static void *newArray_TArtParserRDF(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtParserRDF[nElements] : new ::TArtParserRDF[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtParserRDF(void *p) {
      delete ((::TArtParserRDF*)p);
   }
   static void deleteArray_TArtParserRDF(void *p) {
      delete [] ((::TArtParserRDF*)p);
   }
   static void destruct_TArtParserRDF(void *p) {
      typedef ::TArtParserRDF current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtParserRDF

//______________________________________________________________________________
void TArtParserRIDF::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtParserRIDF.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtParserRIDF::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtParserRIDF::Class(),this);
   }
}

//______________________________________________________________________________
void TArtParserRIDF::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtParserRIDF.
      TClass *R__cl = ::TArtParserRIDF::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHeader", (void*)&fHeader);
      R__insp.InspectMember("TArtParserRIDF::ArtHeader_t", (void*)&fHeader, "fHeader.", false);
      TArtParser::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtParserRIDF(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtParserRIDF : new ::TArtParserRIDF;
   }
   static void *newArray_TArtParserRIDF(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtParserRIDF[nElements] : new ::TArtParserRIDF[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtParserRIDF(void *p) {
      delete ((::TArtParserRIDF*)p);
   }
   static void deleteArray_TArtParserRIDF(void *p) {
      delete [] ((::TArtParserRIDF*)p);
   }
   static void destruct_TArtParserRIDF(void *p) {
      typedef ::TArtParserRIDF current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtParserRIDF

//______________________________________________________________________________
void TArtDataObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtDataObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtDataObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtDataObject::Class(),this);
   }
}

//______________________________________________________________________________
void TArtDataObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtDataObject.
      TClass *R__cl = ::TArtDataObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fpl", &fpl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "name", &name);
      R__insp.InspectMember(name, "name.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataState", &fDataState);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtDataObject(void *p) {
      return  p ? new(p) ::TArtDataObject : new ::TArtDataObject;
   }
   static void *newArray_TArtDataObject(Long_t nElements, void *p) {
      return p ? new(p) ::TArtDataObject[nElements] : new ::TArtDataObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtDataObject(void *p) {
      delete ((::TArtDataObject*)p);
   }
   static void deleteArray_TArtDataObject(void *p) {
      delete [] ((::TArtDataObject*)p);
   }
   static void destruct_TArtDataObject(void *p) {
      typedef ::TArtDataObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDataObject

//______________________________________________________________________________
void TArtRawFADCDataObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtRawFADCDataObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtRawFADCDataObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtRawFADCDataObject::Class(),this);
   }
}

//______________________________________________________________________________
void TArtRawFADCDataObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtRawFADCDataObject.
      TClass *R__cl = ::TArtRawFADCDataObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channel", &channel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timebacket", (void*)&timebacket);
      R__insp.InspectMember("vector<int>", (void*)&timebacket, "timebacket.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "value", (void*)&value);
      R__insp.InspectMember("vector<int>", (void*)&value, "value.", false);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtRawFADCDataObject(void *p) {
      return  p ? new(p) ::TArtRawFADCDataObject : new ::TArtRawFADCDataObject;
   }
   static void *newArray_TArtRawFADCDataObject(Long_t nElements, void *p) {
      return p ? new(p) ::TArtRawFADCDataObject[nElements] : new ::TArtRawFADCDataObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtRawFADCDataObject(void *p) {
      delete ((::TArtRawFADCDataObject*)p);
   }
   static void deleteArray_TArtRawFADCDataObject(void *p) {
      delete [] ((::TArtRawFADCDataObject*)p);
   }
   static void destruct_TArtRawFADCDataObject(void *p) {
      typedef ::TArtRawFADCDataObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtRawFADCDataObject

//______________________________________________________________________________
void TArtRawTacquilaDataObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtRawTacquilaDataObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtRawTacquilaDataObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtRawTacquilaDataObject::Class(),this);
   }
}

//______________________________________________________________________________
void TArtRawTacquilaDataObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtRawTacquilaDataObject.
      TClass *R__cl = ::TArtRawTacquilaDataObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sam", &sam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gtb", &gtb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channel", &channel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc", &adc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cycle", &cycle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tac", &tac);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtRawTacquilaDataObject(void *p) {
      return  p ? new(p) ::TArtRawTacquilaDataObject : new ::TArtRawTacquilaDataObject;
   }
   static void *newArray_TArtRawTacquilaDataObject(Long_t nElements, void *p) {
      return p ? new(p) ::TArtRawTacquilaDataObject[nElements] : new ::TArtRawTacquilaDataObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtRawTacquilaDataObject(void *p) {
      delete ((::TArtRawTacquilaDataObject*)p);
   }
   static void deleteArray_TArtRawTacquilaDataObject(void *p) {
      delete [] ((::TArtRawTacquilaDataObject*)p);
   }
   static void destruct_TArtRawTacquilaDataObject(void *p) {
      typedef ::TArtRawTacquilaDataObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtRawTacquilaDataObject

//______________________________________________________________________________
void TArtRawDataObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtRawDataObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtRawDataObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtRawDataObject::Class(),this);
   }
}

//______________________________________________________________________________
void TArtRawDataObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtRawDataObject.
      TClass *R__cl = ::TArtRawDataObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "geo", &geo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channel", &channel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "value", &value);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "edge", &edge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "categoryid", &categoryid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detectorid", &detectorid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "datatype", &datatype);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtRawDataObject(void *p) {
      return  p ? new(p) ::TArtRawDataObject : new ::TArtRawDataObject;
   }
   static void *newArray_TArtRawDataObject(Long_t nElements, void *p) {
      return p ? new(p) ::TArtRawDataObject[nElements] : new ::TArtRawDataObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtRawDataObject(void *p) {
      delete ((::TArtRawDataObject*)p);
   }
   static void deleteArray_TArtRawDataObject(void *p) {
      delete [] ((::TArtRawDataObject*)p);
   }
   static void destruct_TArtRawDataObject(void *p) {
      typedef ::TArtRawDataObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtRawDataObject

//______________________________________________________________________________
void TArtRawSegmentObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtRawSegmentObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtRawSegmentObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtRawSegmentObject::Class(),this);
   }
}

//______________________________________________________________________________
void TArtRawSegmentObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtRawSegmentObject.
      TClass *R__cl = ::TArtRawSegmentObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "device", &device);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fp", &fp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detector", &detector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "address", &address);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nmodule", &nmodule);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ngoodmodule", &ngoodmodule);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "size", &size);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "data_array", (void*)&data_array);
      R__insp.InspectMember("vector<TArtRawDataObject*>", (void*)&data_array, "data_array.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fadcdata_array", (void*)&fadcdata_array);
      R__insp.InspectMember("vector<TArtRawFADCDataObject*>", (void*)&fadcdata_array, "fadcdata_array.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tacquila_data_array", (void*)&tacquila_data_array);
      R__insp.InspectMember("vector<TArtRawTacquilaDataObject*>", (void*)&tacquila_data_array, "tacquila_data_array.", false);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtRawSegmentObject(void *p) {
      return  p ? new(p) ::TArtRawSegmentObject : new ::TArtRawSegmentObject;
   }
   static void *newArray_TArtRawSegmentObject(Long_t nElements, void *p) {
      return p ? new(p) ::TArtRawSegmentObject[nElements] : new ::TArtRawSegmentObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtRawSegmentObject(void *p) {
      delete ((::TArtRawSegmentObject*)p);
   }
   static void deleteArray_TArtRawSegmentObject(void *p) {
      delete [] ((::TArtRawSegmentObject*)p);
   }
   static void destruct_TArtRawSegmentObject(void *p) {
      typedef ::TArtRawSegmentObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtRawSegmentObject

//______________________________________________________________________________
void TArtRawScalerObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtRawScalerObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtRawScalerObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtRawScalerObject::Class(),this);
   }
}

//______________________________________________________________________________
void TArtRawScalerObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtRawScalerObject.
      TClass *R__cl = ::TArtRawScalerObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "num_channel", &num_channel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scaler_id", &scaler_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scaler_date", &scaler_date);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scaler[48]", scaler);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtRawScalerObject(void *p) {
      return  p ? new(p) ::TArtRawScalerObject : new ::TArtRawScalerObject;
   }
   static void *newArray_TArtRawScalerObject(Long_t nElements, void *p) {
      return p ? new(p) ::TArtRawScalerObject[nElements] : new ::TArtRawScalerObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtRawScalerObject(void *p) {
      delete ((::TArtRawScalerObject*)p);
   }
   static void deleteArray_TArtRawScalerObject(void *p) {
      delete [] ((::TArtRawScalerObject*)p);
   }
   static void destruct_TArtRawScalerObject(void *p) {
      typedef ::TArtRawScalerObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtRawScalerObject

//______________________________________________________________________________
void TArtRawEventObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtRawEventObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtRawEventObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtRawEventObject::Class(),this);
   }
}

//______________________________________________________________________________
void TArtRawEventObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtRawEventObject.
      TClass *R__cl = ::TArtRawEventObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run_number", &run_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event_number", &event_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time_stamp", &time_stamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "segment_array", (void*)&segment_array);
      R__insp.InspectMember("vector<TArtRawSegmentObject*>", (void*)&segment_array, "segment_array.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scaler_array", (void*)&scaler_array);
      R__insp.InspectMember("vector<TArtRawScalerObject*>", (void*)&scaler_array, "scaler_array.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nblock", &nblock);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "status_data", &status_data);
      R__insp.InspectMember(status_data, "status_data.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtRawEventObject(void *p) {
      return  p ? new(p) ::TArtRawEventObject : new ::TArtRawEventObject;
   }
   static void *newArray_TArtRawEventObject(Long_t nElements, void *p) {
      return p ? new(p) ::TArtRawEventObject[nElements] : new ::TArtRawEventObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtRawEventObject(void *p) {
      delete ((::TArtRawEventObject*)p);
   }
   static void deleteArray_TArtRawEventObject(void *p) {
      delete [] ((::TArtRawEventObject*)p);
   }
   static void destruct_TArtRawEventObject(void *p) {
      typedef ::TArtRawEventObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtRawEventObject

//______________________________________________________________________________
void TArtRunInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtRunInfo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtRunInfo::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtRunInfo::Class(),this);
   }
}

//______________________________________________________________________________
void TArtRunInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtRunInfo.
      TClass *R__cl = ::TArtRunInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runname", &runname);
      R__insp.InspectMember(runname, "runname.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runnumber", &runnumber);
      R__insp.InspectMember(runnumber, "runnumber.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "starttime", &starttime);
      R__insp.InspectMember(starttime, "starttime.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stoptime", &stoptime);
      R__insp.InspectMember(stoptime, "stoptime.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "date", &date);
      R__insp.InspectMember(date, "date.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rev", &rev);
      R__insp.InspectMember(rev, "rev.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "header", &header);
      R__insp.InspectMember(header, "header.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ender", &ender);
      R__insp.InspectMember(ender, "ender.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtRunInfo(void *p) {
      return  p ? new(p) ::TArtRunInfo : new ::TArtRunInfo;
   }
   static void *newArray_TArtRunInfo(Long_t nElements, void *p) {
      return p ? new(p) ::TArtRunInfo[nElements] : new ::TArtRunInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtRunInfo(void *p) {
      delete ((::TArtRunInfo*)p);
   }
   static void deleteArray_TArtRunInfo(void *p) {
      delete [] ((::TArtRunInfo*)p);
   }
   static void destruct_TArtRunInfo(void *p) {
      typedef ::TArtRunInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtRunInfo

//______________________________________________________________________________
void TArtEventInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtEventInfo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtEventInfo::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtEventInfo::Class(),this);
   }
}

//______________________________________________________________________________
void TArtEventInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtEventInfo.
      TClass *R__cl = ::TArtEventInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runnumber", &runnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventnumber", &eventnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "subsysname", &subsysname);
      R__insp.InspectMember(subsysname, "subsysname.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timestamp", &timestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "comp_val", &comp_val);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBit", &fBit);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtEventInfo(void *p) {
      return  p ? new(p) ::TArtEventInfo : new ::TArtEventInfo;
   }
   static void *newArray_TArtEventInfo(Long_t nElements, void *p) {
      return p ? new(p) ::TArtEventInfo[nElements] : new ::TArtEventInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtEventInfo(void *p) {
      delete ((::TArtEventInfo*)p);
   }
   static void deleteArray_TArtEventInfo(void *p) {
      delete [] ((::TArtEventInfo*)p);
   }
   static void destruct_TArtEventInfo(void *p) {
      typedef ::TArtEventInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtEventInfo

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtSharedMemory(void *p) {
      delete ((::TArtSharedMemory*)p);
   }
   static void deleteArray_TArtSharedMemory(void *p) {
      delete [] ((::TArtSharedMemory*)p);
   }
   static void destruct_TArtSharedMemory(void *p) {
      typedef ::TArtSharedMemory current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtSharedMemory

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtSharedMemoryDataSource(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtSharedMemoryDataSource : new ::TArtSharedMemoryDataSource;
   }
   static void *newArray_TArtSharedMemoryDataSource(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtSharedMemoryDataSource[nElements] : new ::TArtSharedMemoryDataSource[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtSharedMemoryDataSource(void *p) {
      delete ((::TArtSharedMemoryDataSource*)p);
   }
   static void deleteArray_TArtSharedMemoryDataSource(void *p) {
      delete [] ((::TArtSharedMemoryDataSource*)p);
   }
   static void destruct_TArtSharedMemoryDataSource(void *p) {
      typedef ::TArtSharedMemoryDataSource current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtSharedMemoryDataSource

//______________________________________________________________________________
void TArtStreamingDataSource::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtStreamingDataSource.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtStreamingDataSource::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtStreamingDataSource::Class(),this);
   }
}

//______________________________________________________________________________
void TArtStreamingDataSource::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtStreamingDataSource.
      TClass *R__cl = ::TArtStreamingDataSource::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sock", &sock);
      R__insp.GenericShowMembers("TArtDataSource", ( ::TArtDataSource *) (this ), false);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtStreamingDataSource(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtStreamingDataSource : new ::TArtStreamingDataSource;
   }
   static void *newArray_TArtStreamingDataSource(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtStreamingDataSource[nElements] : new ::TArtStreamingDataSource[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtStreamingDataSource(void *p) {
      delete ((::TArtStreamingDataSource*)p);
   }
   static void deleteArray_TArtStreamingDataSource(void *p) {
      delete [] ((::TArtStreamingDataSource*)p);
   }
   static void destruct_TArtStreamingDataSource(void *p) {
      typedef ::TArtStreamingDataSource current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtStreamingDataSource

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtSemaphore(void *p) {
      delete ((::TArtSemaphore*)p);
   }
   static void deleteArray_TArtSemaphore(void *p) {
      delete [] ((::TArtSemaphore*)p);
   }
   static void destruct_TArtSemaphore(void *p) {
      typedef ::TArtSemaphore current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtSemaphore

namespace ROOTDict {
   void vectorlETArtRawDataObjectmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETArtRawDataObjectmUgR_Dictionary();
   static void *new_vectorlETArtRawDataObjectmUgR(void *p = 0);
   static void *newArray_vectorlETArtRawDataObjectmUgR(Long_t size, void *p);
   static void delete_vectorlETArtRawDataObjectmUgR(void *p);
   static void deleteArray_vectorlETArtRawDataObjectmUgR(void *p);
   static void destruct_vectorlETArtRawDataObjectmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TArtRawDataObject*>*)
   {
      vector<TArtRawDataObject*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TArtRawDataObject*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TArtRawDataObject*>", -2, "/usr/local/lib64/root_v5.34.30/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TArtRawDataObject*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETArtRawDataObjectmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TArtRawDataObject*>) );
      instance.SetNew(&new_vectorlETArtRawDataObjectmUgR);
      instance.SetNewArray(&newArray_vectorlETArtRawDataObjectmUgR);
      instance.SetDelete(&delete_vectorlETArtRawDataObjectmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETArtRawDataObjectmUgR);
      instance.SetDestructor(&destruct_vectorlETArtRawDataObjectmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TArtRawDataObject*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TArtRawDataObject*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETArtRawDataObjectmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TArtRawDataObject*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETArtRawDataObjectmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtRawDataObject*> : new vector<TArtRawDataObject*>;
   }
   static void *newArray_vectorlETArtRawDataObjectmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtRawDataObject*>[nElements] : new vector<TArtRawDataObject*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETArtRawDataObjectmUgR(void *p) {
      delete ((vector<TArtRawDataObject*>*)p);
   }
   static void deleteArray_vectorlETArtRawDataObjectmUgR(void *p) {
      delete [] ((vector<TArtRawDataObject*>*)p);
   }
   static void destruct_vectorlETArtRawDataObjectmUgR(void *p) {
      typedef vector<TArtRawDataObject*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TArtRawDataObject*>

namespace ROOTDict {
   void vectorlETArtRawFADCDataObjectmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETArtRawFADCDataObjectmUgR_Dictionary();
   static void *new_vectorlETArtRawFADCDataObjectmUgR(void *p = 0);
   static void *newArray_vectorlETArtRawFADCDataObjectmUgR(Long_t size, void *p);
   static void delete_vectorlETArtRawFADCDataObjectmUgR(void *p);
   static void deleteArray_vectorlETArtRawFADCDataObjectmUgR(void *p);
   static void destruct_vectorlETArtRawFADCDataObjectmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TArtRawFADCDataObject*>*)
   {
      vector<TArtRawFADCDataObject*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TArtRawFADCDataObject*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TArtRawFADCDataObject*>", -2, "/usr/local/lib64/root_v5.34.30/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TArtRawFADCDataObject*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETArtRawFADCDataObjectmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TArtRawFADCDataObject*>) );
      instance.SetNew(&new_vectorlETArtRawFADCDataObjectmUgR);
      instance.SetNewArray(&newArray_vectorlETArtRawFADCDataObjectmUgR);
      instance.SetDelete(&delete_vectorlETArtRawFADCDataObjectmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETArtRawFADCDataObjectmUgR);
      instance.SetDestructor(&destruct_vectorlETArtRawFADCDataObjectmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TArtRawFADCDataObject*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TArtRawFADCDataObject*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETArtRawFADCDataObjectmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TArtRawFADCDataObject*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETArtRawFADCDataObjectmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtRawFADCDataObject*> : new vector<TArtRawFADCDataObject*>;
   }
   static void *newArray_vectorlETArtRawFADCDataObjectmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtRawFADCDataObject*>[nElements] : new vector<TArtRawFADCDataObject*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETArtRawFADCDataObjectmUgR(void *p) {
      delete ((vector<TArtRawFADCDataObject*>*)p);
   }
   static void deleteArray_vectorlETArtRawFADCDataObjectmUgR(void *p) {
      delete [] ((vector<TArtRawFADCDataObject*>*)p);
   }
   static void destruct_vectorlETArtRawFADCDataObjectmUgR(void *p) {
      typedef vector<TArtRawFADCDataObject*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TArtRawFADCDataObject*>

namespace ROOTDict {
   void vectorlETArtRawScalerObjectmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETArtRawScalerObjectmUgR_Dictionary();
   static void *new_vectorlETArtRawScalerObjectmUgR(void *p = 0);
   static void *newArray_vectorlETArtRawScalerObjectmUgR(Long_t size, void *p);
   static void delete_vectorlETArtRawScalerObjectmUgR(void *p);
   static void deleteArray_vectorlETArtRawScalerObjectmUgR(void *p);
   static void destruct_vectorlETArtRawScalerObjectmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TArtRawScalerObject*>*)
   {
      vector<TArtRawScalerObject*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TArtRawScalerObject*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TArtRawScalerObject*>", -2, "/usr/local/lib64/root_v5.34.30/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TArtRawScalerObject*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETArtRawScalerObjectmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TArtRawScalerObject*>) );
      instance.SetNew(&new_vectorlETArtRawScalerObjectmUgR);
      instance.SetNewArray(&newArray_vectorlETArtRawScalerObjectmUgR);
      instance.SetDelete(&delete_vectorlETArtRawScalerObjectmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETArtRawScalerObjectmUgR);
      instance.SetDestructor(&destruct_vectorlETArtRawScalerObjectmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TArtRawScalerObject*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TArtRawScalerObject*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETArtRawScalerObjectmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TArtRawScalerObject*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETArtRawScalerObjectmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtRawScalerObject*> : new vector<TArtRawScalerObject*>;
   }
   static void *newArray_vectorlETArtRawScalerObjectmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtRawScalerObject*>[nElements] : new vector<TArtRawScalerObject*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETArtRawScalerObjectmUgR(void *p) {
      delete ((vector<TArtRawScalerObject*>*)p);
   }
   static void deleteArray_vectorlETArtRawScalerObjectmUgR(void *p) {
      delete [] ((vector<TArtRawScalerObject*>*)p);
   }
   static void destruct_vectorlETArtRawScalerObjectmUgR(void *p) {
      typedef vector<TArtRawScalerObject*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TArtRawScalerObject*>

namespace ROOTDict {
   void vectorlETArtRawSegmentObjectmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETArtRawSegmentObjectmUgR_Dictionary();
   static void *new_vectorlETArtRawSegmentObjectmUgR(void *p = 0);
   static void *newArray_vectorlETArtRawSegmentObjectmUgR(Long_t size, void *p);
   static void delete_vectorlETArtRawSegmentObjectmUgR(void *p);
   static void deleteArray_vectorlETArtRawSegmentObjectmUgR(void *p);
   static void destruct_vectorlETArtRawSegmentObjectmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TArtRawSegmentObject*>*)
   {
      vector<TArtRawSegmentObject*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TArtRawSegmentObject*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TArtRawSegmentObject*>", -2, "/usr/local/lib64/root_v5.34.30/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TArtRawSegmentObject*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETArtRawSegmentObjectmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TArtRawSegmentObject*>) );
      instance.SetNew(&new_vectorlETArtRawSegmentObjectmUgR);
      instance.SetNewArray(&newArray_vectorlETArtRawSegmentObjectmUgR);
      instance.SetDelete(&delete_vectorlETArtRawSegmentObjectmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETArtRawSegmentObjectmUgR);
      instance.SetDestructor(&destruct_vectorlETArtRawSegmentObjectmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TArtRawSegmentObject*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TArtRawSegmentObject*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETArtRawSegmentObjectmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TArtRawSegmentObject*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETArtRawSegmentObjectmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtRawSegmentObject*> : new vector<TArtRawSegmentObject*>;
   }
   static void *newArray_vectorlETArtRawSegmentObjectmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtRawSegmentObject*>[nElements] : new vector<TArtRawSegmentObject*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETArtRawSegmentObjectmUgR(void *p) {
      delete ((vector<TArtRawSegmentObject*>*)p);
   }
   static void deleteArray_vectorlETArtRawSegmentObjectmUgR(void *p) {
      delete [] ((vector<TArtRawSegmentObject*>*)p);
   }
   static void destruct_vectorlETArtRawSegmentObjectmUgR(void *p) {
      typedef vector<TArtRawSegmentObject*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TArtRawSegmentObject*>

namespace ROOTDict {
   void vectorlETArtRawTacquilaDataObjectmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETArtRawTacquilaDataObjectmUgR_Dictionary();
   static void *new_vectorlETArtRawTacquilaDataObjectmUgR(void *p = 0);
   static void *newArray_vectorlETArtRawTacquilaDataObjectmUgR(Long_t size, void *p);
   static void delete_vectorlETArtRawTacquilaDataObjectmUgR(void *p);
   static void deleteArray_vectorlETArtRawTacquilaDataObjectmUgR(void *p);
   static void destruct_vectorlETArtRawTacquilaDataObjectmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TArtRawTacquilaDataObject*>*)
   {
      vector<TArtRawTacquilaDataObject*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TArtRawTacquilaDataObject*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TArtRawTacquilaDataObject*>", -2, "/usr/local/lib64/root_v5.34.30/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TArtRawTacquilaDataObject*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETArtRawTacquilaDataObjectmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TArtRawTacquilaDataObject*>) );
      instance.SetNew(&new_vectorlETArtRawTacquilaDataObjectmUgR);
      instance.SetNewArray(&newArray_vectorlETArtRawTacquilaDataObjectmUgR);
      instance.SetDelete(&delete_vectorlETArtRawTacquilaDataObjectmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETArtRawTacquilaDataObjectmUgR);
      instance.SetDestructor(&destruct_vectorlETArtRawTacquilaDataObjectmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TArtRawTacquilaDataObject*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TArtRawTacquilaDataObject*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETArtRawTacquilaDataObjectmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TArtRawTacquilaDataObject*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETArtRawTacquilaDataObjectmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtRawTacquilaDataObject*> : new vector<TArtRawTacquilaDataObject*>;
   }
   static void *newArray_vectorlETArtRawTacquilaDataObjectmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtRawTacquilaDataObject*>[nElements] : new vector<TArtRawTacquilaDataObject*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETArtRawTacquilaDataObjectmUgR(void *p) {
      delete ((vector<TArtRawTacquilaDataObject*>*)p);
   }
   static void deleteArray_vectorlETArtRawTacquilaDataObjectmUgR(void *p) {
      delete [] ((vector<TArtRawTacquilaDataObject*>*)p);
   }
   static void destruct_vectorlETArtRawTacquilaDataObjectmUgR(void *p) {
      typedef vector<TArtRawTacquilaDataObject*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TArtRawTacquilaDataObject*>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/usr/local/lib64/root_v5.34.30/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

/********************************************************
* anacore_dict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableanacore_dict();

extern "C" void G__set_cpp_environmentanacore_dict() {
  G__cpp_reset_tagtableanacore_dict();
}
#include <new>
extern "C" int G__cpp_dllrevanacore_dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TArtRawDataObject */
static int G__anacore_dict_184_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRawDataObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRawDataObject[n];
     } else {
       p = new((void*) gvp) TArtRawDataObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRawDataObject;
     } else {
       p = new((void*) gvp) TArtRawDataObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtRawDataObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRawDataObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtRawDataObject(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TArtRawDataObject(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtRawDataObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawDataObject*) G__getstructoffset())->SetGeo((const int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawDataObject*) G__getstructoffset())->SetCh((const int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawDataObject*) G__getstructoffset())->SetVal((const unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawDataObject*) G__getstructoffset())->SetEdge((const int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawDataObject*) G__getstructoffset())->GetGeo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawDataObject*) G__getstructoffset())->GetCh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TArtRawDataObject*) G__getstructoffset())->GetVal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawDataObject*) G__getstructoffset())->GetEdge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawDataObject*) G__getstructoffset())->SetCategoryID((const int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawDataObject*) G__getstructoffset())->SetDetectorID((const int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawDataObject*) G__getstructoffset())->SetDatatypeID((const int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawDataObject*) G__getstructoffset())->GetCategoryID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawDataObject*) G__getstructoffset())->GetDetectorID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawDataObject*) G__getstructoffset())->GetDatatypeID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawDataObject*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtRawDataObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRawDataObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtRawDataObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtRawDataObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawDataObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRawDataObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRawDataObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRawDataObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_184_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRawDataObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anacore_dict_184_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtRawDataObject* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtRawDataObject(*(TArtRawDataObject*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtRawDataObject));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtRawDataObject G__TTArtRawDataObject;
static int G__anacore_dict_184_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtRawDataObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtRawDataObject*) (soff+(sizeof(TArtRawDataObject)*i)))->~G__TTArtRawDataObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtRawDataObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtRawDataObject*) (soff))->~G__TTArtRawDataObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_184_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRawDataObject* dest = (TArtRawDataObject*) G__getstructoffset();
   *dest = *(TArtRawDataObject*) libp->para[0].ref;
   const TArtRawDataObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCore */
static int G__anacore_dict_185_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCore* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCore[n];
     } else {
       p = new((void*) gvp) TArtCore[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCore;
     } else {
       p = new((void*) gvp) TArtCore;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtCore));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_185_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   const int imax = 6, dmax = 8, umax = 50;
   int objsize, type, i, icnt = 0, dcnt = 0, ucnt = 0;
   G__value *pval;
   G__int64 lval[imax] = {0};
   double dval[dmax] = {0};
   union { G__int64 lval; double dval; } u[umax] = {{0}};
   for (i = 0; i < libp->paran; i++) {
      type = G__value_get_type(&libp->para[i]);
      pval = &libp->para[i];
      if (isupper(type))
         objsize = G__LONGALLOC;
      else
         objsize = G__sizeof(pval);
      switch (type) {
         case 'c': case 'b': case 's': case 'r': objsize = sizeof(int); break;
         case 'f': objsize = sizeof(double); break;
      }
#ifdef G__VAARG_PASS_BY_REFERENCE
      if (objsize > G__VAARG_PASS_BY_REFERENCE) {
         if (pval->ref > 0x1000) {
            if (icnt < imax) {
               lval[icnt] = pval->ref; icnt++;
            } else {
               u[ucnt].lval = pval->ref; ucnt++;
            }
         } else {
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            }
         }
         type = 'z';
      }
#endif
      switch (type) {
         case 'n': case 'm':
            if (icnt < imax) {
               lval[icnt] = (G__int64)G__Longlong(*pval); icnt++;
            } else {
               u[ucnt].lval = (G__int64)G__Longlong(*pval); ucnt++;
            } break;
         case 'f': case 'd':
            if (dcnt < dmax) {
               dval[dcnt] = G__double(*pval); dcnt++;
            } else {
               u[ucnt].dval = G__double(*pval); ucnt++;
            } break;
         case 'z': break;
         case 'u':
            if (objsize >= 16) {
               memcpy(&u[ucnt].lval, (void*)pval->obj.i, objsize);
               ucnt += objsize/8;
               break;
            }
            // objsize < 16 -> fall through
         case 'g': case 'c': case 'b': case 'r': case 's': case 'h': case 'i':
         case 'k': case 'l':
         default:
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            } break;
      }
      if (ucnt >= 50) printf("Debug: more than 56 var args\n");
   }
      TArtCore::Debug((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]), dval[0], dval[1], dval[2], dval[3], dval[4], dval[5], dval[6], dval[7], lval[2], lval[3], lval[4], lval[5], u[0].lval, u[1].lval, u[2].lval, u[3].lval, u[4].lval, u[5].lval, u[6].lval, u[7].lval, u[8].lval, u[9].lval, u[10].lval, u[11].lval, u[12].lval, u[13].lval, u[14].lval, u[15].lval, u[16].lval, u[17].lval, u[18].lval, u[19].lval, u[20].lval, u[21].lval, u[22].lval, u[23].lval, u[24].lval, u[25].lval, u[26].lval, u[27].lval, u[28].lval, u[29].lval, u[30].lval, u[31].lval, u[32].lval, u[33].lval, u[34].lval, u[35].lval, u[36].lval, u[37].lval, u[38].lval, u[39].lval, u[40].lval, u[41].lval, u[42].lval, u[43].lval, u[44].lval, u[45].lval, u[46].lval, u[47].lval, u[48].lval, u[49].lval);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_185_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   const int imax = 6, dmax = 8, umax = 50;
   int objsize, type, i, icnt = 0, dcnt = 0, ucnt = 0;
   G__value *pval;
   G__int64 lval[imax] = {0};
   double dval[dmax] = {0};
   union { G__int64 lval; double dval; } u[umax] = {{0}};
   for (i = 0; i < libp->paran; i++) {
      type = G__value_get_type(&libp->para[i]);
      pval = &libp->para[i];
      if (isupper(type))
         objsize = G__LONGALLOC;
      else
         objsize = G__sizeof(pval);
      switch (type) {
         case 'c': case 'b': case 's': case 'r': objsize = sizeof(int); break;
         case 'f': objsize = sizeof(double); break;
      }
#ifdef G__VAARG_PASS_BY_REFERENCE
      if (objsize > G__VAARG_PASS_BY_REFERENCE) {
         if (pval->ref > 0x1000) {
            if (icnt < imax) {
               lval[icnt] = pval->ref; icnt++;
            } else {
               u[ucnt].lval = pval->ref; ucnt++;
            }
         } else {
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            }
         }
         type = 'z';
      }
#endif
      switch (type) {
         case 'n': case 'm':
            if (icnt < imax) {
               lval[icnt] = (G__int64)G__Longlong(*pval); icnt++;
            } else {
               u[ucnt].lval = (G__int64)G__Longlong(*pval); ucnt++;
            } break;
         case 'f': case 'd':
            if (dcnt < dmax) {
               dval[dcnt] = G__double(*pval); dcnt++;
            } else {
               u[ucnt].dval = G__double(*pval); ucnt++;
            } break;
         case 'z': break;
         case 'u':
            if (objsize >= 16) {
               memcpy(&u[ucnt].lval, (void*)pval->obj.i, objsize);
               ucnt += objsize/8;
               break;
            }
            // objsize < 16 -> fall through
         case 'g': case 'c': case 'b': case 'r': case 's': case 'h': case 'i':
         case 'k': case 'l':
         default:
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            } break;
      }
      if (ucnt >= 50) printf("Info: more than 56 var args\n");
   }
      TArtCore::Info((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]), dval[0], dval[1], dval[2], dval[3], dval[4], dval[5], dval[6], dval[7], lval[2], lval[3], lval[4], lval[5], u[0].lval, u[1].lval, u[2].lval, u[3].lval, u[4].lval, u[5].lval, u[6].lval, u[7].lval, u[8].lval, u[9].lval, u[10].lval, u[11].lval, u[12].lval, u[13].lval, u[14].lval, u[15].lval, u[16].lval, u[17].lval, u[18].lval, u[19].lval, u[20].lval, u[21].lval, u[22].lval, u[23].lval, u[24].lval, u[25].lval, u[26].lval, u[27].lval, u[28].lval, u[29].lval, u[30].lval, u[31].lval, u[32].lval, u[33].lval, u[34].lval, u[35].lval, u[36].lval, u[37].lval, u[38].lval, u[39].lval, u[40].lval, u[41].lval, u[42].lval, u[43].lval, u[44].lval, u[45].lval, u[46].lval, u[47].lval, u[48].lval, u[49].lval);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_185_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   const int imax = 6, dmax = 8, umax = 50;
   int objsize, type, i, icnt = 0, dcnt = 0, ucnt = 0;
   G__value *pval;
   G__int64 lval[imax] = {0};
   double dval[dmax] = {0};
   union { G__int64 lval; double dval; } u[umax] = {{0}};
   for (i = 0; i < libp->paran; i++) {
      type = G__value_get_type(&libp->para[i]);
      pval = &libp->para[i];
      if (isupper(type))
         objsize = G__LONGALLOC;
      else
         objsize = G__sizeof(pval);
      switch (type) {
         case 'c': case 'b': case 's': case 'r': objsize = sizeof(int); break;
         case 'f': objsize = sizeof(double); break;
      }
#ifdef G__VAARG_PASS_BY_REFERENCE
      if (objsize > G__VAARG_PASS_BY_REFERENCE) {
         if (pval->ref > 0x1000) {
            if (icnt < imax) {
               lval[icnt] = pval->ref; icnt++;
            } else {
               u[ucnt].lval = pval->ref; ucnt++;
            }
         } else {
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            }
         }
         type = 'z';
      }
#endif
      switch (type) {
         case 'n': case 'm':
            if (icnt < imax) {
               lval[icnt] = (G__int64)G__Longlong(*pval); icnt++;
            } else {
               u[ucnt].lval = (G__int64)G__Longlong(*pval); ucnt++;
            } break;
         case 'f': case 'd':
            if (dcnt < dmax) {
               dval[dcnt] = G__double(*pval); dcnt++;
            } else {
               u[ucnt].dval = G__double(*pval); ucnt++;
            } break;
         case 'z': break;
         case 'u':
            if (objsize >= 16) {
               memcpy(&u[ucnt].lval, (void*)pval->obj.i, objsize);
               ucnt += objsize/8;
               break;
            }
            // objsize < 16 -> fall through
         case 'g': case 'c': case 'b': case 'r': case 's': case 'h': case 'i':
         case 'k': case 'l':
         default:
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            } break;
      }
      if (ucnt >= 50) printf("Error: more than 56 var args\n");
   }
      TArtCore::Error((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]), dval[0], dval[1], dval[2], dval[3], dval[4], dval[5], dval[6], dval[7], lval[2], lval[3], lval[4], lval[5], u[0].lval, u[1].lval, u[2].lval, u[3].lval, u[4].lval, u[5].lval, u[6].lval, u[7].lval, u[8].lval, u[9].lval, u[10].lval, u[11].lval, u[12].lval, u[13].lval, u[14].lval, u[15].lval, u[16].lval, u[17].lval, u[18].lval, u[19].lval, u[20].lval, u[21].lval, u[22].lval, u[23].lval, u[24].lval, u[25].lval, u[26].lval, u[27].lval, u[28].lval, u[29].lval, u[30].lval, u[31].lval, u[32].lval, u[33].lval, u[34].lval, u[35].lval, u[36].lval, u[37].lval, u[38].lval, u[39].lval, u[40].lval, u[41].lval, u[42].lval, u[43].lval, u[44].lval, u[45].lval, u[46].lval, u[47].lval, u[48].lval, u[49].lval);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_185_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   const int imax = 6, dmax = 8, umax = 50;
   int objsize, type, i, icnt = 0, dcnt = 0, ucnt = 0;
   G__value *pval;
   G__int64 lval[imax] = {0};
   double dval[dmax] = {0};
   union { G__int64 lval; double dval; } u[umax] = {{0}};
   for (i = 0; i < libp->paran; i++) {
      type = G__value_get_type(&libp->para[i]);
      pval = &libp->para[i];
      if (isupper(type))
         objsize = G__LONGALLOC;
      else
         objsize = G__sizeof(pval);
      switch (type) {
         case 'c': case 'b': case 's': case 'r': objsize = sizeof(int); break;
         case 'f': objsize = sizeof(double); break;
      }
#ifdef G__VAARG_PASS_BY_REFERENCE
      if (objsize > G__VAARG_PASS_BY_REFERENCE) {
         if (pval->ref > 0x1000) {
            if (icnt < imax) {
               lval[icnt] = pval->ref; icnt++;
            } else {
               u[ucnt].lval = pval->ref; ucnt++;
            }
         } else {
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            }
         }
         type = 'z';
      }
#endif
      switch (type) {
         case 'n': case 'm':
            if (icnt < imax) {
               lval[icnt] = (G__int64)G__Longlong(*pval); icnt++;
            } else {
               u[ucnt].lval = (G__int64)G__Longlong(*pval); ucnt++;
            } break;
         case 'f': case 'd':
            if (dcnt < dmax) {
               dval[dcnt] = G__double(*pval); dcnt++;
            } else {
               u[ucnt].dval = G__double(*pval); ucnt++;
            } break;
         case 'z': break;
         case 'u':
            if (objsize >= 16) {
               memcpy(&u[ucnt].lval, (void*)pval->obj.i, objsize);
               ucnt += objsize/8;
               break;
            }
            // objsize < 16 -> fall through
         case 'g': case 'c': case 'b': case 'r': case 's': case 'h': case 'i':
         case 'k': case 'l':
         default:
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            } break;
      }
      if (ucnt >= 50) printf("Warning: more than 56 var args\n");
   }
      TArtCore::Warning((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]), dval[0], dval[1], dval[2], dval[3], dval[4], dval[5], dval[6], dval[7], lval[2], lval[3], lval[4], lval[5], u[0].lval, u[1].lval, u[2].lval, u[3].lval, u[4].lval, u[5].lval, u[6].lval, u[7].lval, u[8].lval, u[9].lval, u[10].lval, u[11].lval, u[12].lval, u[13].lval, u[14].lval, u[15].lval, u[16].lval, u[17].lval, u[18].lval, u[19].lval, u[20].lval, u[21].lval, u[22].lval, u[23].lval, u[24].lval, u[25].lval, u[26].lval, u[27].lval, u[28].lval, u[29].lval, u[30].lval, u[31].lval, u[32].lval, u[33].lval, u[34].lval, u[35].lval, u[36].lval, u[37].lval, u[38].lval, u[39].lval, u[40].lval, u[41].lval, u[42].lval, u[43].lval, u[44].lval, u[45].lval, u[46].lval, u[47].lval, u[48].lval, u[49].lval);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_185_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCore::WarnList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_185_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCore::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_185_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCore::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_185_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCore::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_185_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCore::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_185_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCore*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_185_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCore*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_185_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCore*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_185_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCore*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_185_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCore::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_185_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCore::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_185_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCore::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_185_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCore::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anacore_dict_185_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCore* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCore(*(TArtCore*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtCore));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCore G__TTArtCore;
static int G__anacore_dict_185_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCore*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCore*) (soff+(sizeof(TArtCore)*i)))->~G__TTArtCore();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCore*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCore*) (soff))->~G__TTArtCore();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_185_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCore* dest = (TArtCore*) G__getstructoffset();
   *dest = *(TArtCore*) libp->para[0].ref;
   const TArtCore& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtRawFADCDataObject */
static int G__anacore_dict_187_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRawFADCDataObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRawFADCDataObject[n];
     } else {
       p = new((void*) gvp) TArtRawFADCDataObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRawFADCDataObject;
     } else {
       p = new((void*) gvp) TArtRawFADCDataObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtRawFADCDataObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_187_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRawFADCDataObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtRawFADCDataObject((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TArtRawFADCDataObject((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtRawFADCDataObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_187_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawFADCDataObject*) G__getstructoffset())->SetCh((const int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_187_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawFADCDataObject*) G__getstructoffset())->AddVal((const int) G__int(libp->para[0]), (const int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_187_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawFADCDataObject*) G__getstructoffset())->GetCh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_187_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawFADCDataObject*) G__getstructoffset())->GetNData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_187_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawFADCDataObject*) G__getstructoffset())->GetTimeBacket((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_187_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawFADCDataObject*) G__getstructoffset())->GetVal((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_187_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawFADCDataObject*) G__getstructoffset())->DumpVal();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_187_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtRawFADCDataObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_187_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRawFADCDataObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_187_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtRawFADCDataObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_187_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtRawFADCDataObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_187_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawFADCDataObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_187_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRawFADCDataObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_187_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRawFADCDataObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_187_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRawFADCDataObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_187_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRawFADCDataObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anacore_dict_187_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtRawFADCDataObject* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtRawFADCDataObject(*(TArtRawFADCDataObject*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtRawFADCDataObject));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtRawFADCDataObject G__TTArtRawFADCDataObject;
static int G__anacore_dict_187_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtRawFADCDataObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtRawFADCDataObject*) (soff+(sizeof(TArtRawFADCDataObject)*i)))->~G__TTArtRawFADCDataObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtRawFADCDataObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtRawFADCDataObject*) (soff))->~G__TTArtRawFADCDataObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_187_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRawFADCDataObject* dest = (TArtRawFADCDataObject*) G__getstructoffset();
   *dest = *(TArtRawFADCDataObject*) libp->para[0].ref;
   const TArtRawFADCDataObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtRawTacquilaDataObject */
static int G__anacore_dict_192_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRawTacquilaDataObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRawTacquilaDataObject[n];
     } else {
       p = new((void*) gvp) TArtRawTacquilaDataObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRawTacquilaDataObject;
     } else {
       p = new((void*) gvp) TArtRawTacquilaDataObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtRawTacquilaDataObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRawTacquilaDataObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtRawTacquilaDataObject(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]));
   } else {
     p = new((void*) gvp) TArtRawTacquilaDataObject(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtRawTacquilaDataObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawTacquilaDataObject*) G__getstructoffset())->SetSam((const int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawTacquilaDataObject*) G__getstructoffset())->SetGtb((const int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawTacquilaDataObject*) G__getstructoffset())->SetModule((const int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawTacquilaDataObject*) G__getstructoffset())->SetChannel((const int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawTacquilaDataObject*) G__getstructoffset())->SetAdc((const int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawTacquilaDataObject*) G__getstructoffset())->SetCycle((const int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawTacquilaDataObject*) G__getstructoffset())->SetTac((const int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawTacquilaDataObject*) G__getstructoffset())->GetSam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawTacquilaDataObject*) G__getstructoffset())->GetGtb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawTacquilaDataObject*) G__getstructoffset())->GetModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawTacquilaDataObject*) G__getstructoffset())->GetChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawTacquilaDataObject*) G__getstructoffset())->GetAdc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawTacquilaDataObject*) G__getstructoffset())->GetCycle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawTacquilaDataObject*) G__getstructoffset())->GetTac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawTacquilaDataObject*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawTacquilaDataObject*) G__getstructoffset())->DumpVal();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtRawTacquilaDataObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRawTacquilaDataObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtRawTacquilaDataObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtRawTacquilaDataObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawTacquilaDataObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRawTacquilaDataObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRawTacquilaDataObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRawTacquilaDataObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_192_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRawTacquilaDataObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anacore_dict_192_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtRawTacquilaDataObject* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtRawTacquilaDataObject(*(TArtRawTacquilaDataObject*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtRawTacquilaDataObject));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtRawTacquilaDataObject G__TTArtRawTacquilaDataObject;
static int G__anacore_dict_192_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtRawTacquilaDataObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtRawTacquilaDataObject*) (soff+(sizeof(TArtRawTacquilaDataObject)*i)))->~G__TTArtRawTacquilaDataObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtRawTacquilaDataObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtRawTacquilaDataObject*) (soff))->~G__TTArtRawTacquilaDataObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_192_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRawTacquilaDataObject* dest = (TArtRawTacquilaDataObject*) G__getstructoffset();
   *dest = *(TArtRawTacquilaDataObject*) libp->para[0].ref;
   const TArtRawTacquilaDataObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtRawSegmentObject */
static int G__anacore_dict_193_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRawSegmentObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtRawSegmentObject(
(const unsigned int) G__int(libp->para[0]), (const unsigned int) G__int(libp->para[1])
, (const unsigned int) G__int(libp->para[2]), (const unsigned int) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) TArtRawSegmentObject(
(const unsigned int) G__int(libp->para[0]), (const unsigned int) G__int(libp->para[1])
, (const unsigned int) G__int(libp->para[2]), (const unsigned int) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtRawSegmentObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRawSegmentObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRawSegmentObject[n];
     } else {
       p = new((void*) gvp) TArtRawSegmentObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRawSegmentObject;
     } else {
       p = new((void*) gvp) TArtRawSegmentObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtRawSegmentObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawSegmentObject*) G__getstructoffset())->SetSegmentID((const unsigned int) G__int(libp->para[0]), (const unsigned int) G__int(libp->para[1])
, (const unsigned int) G__int(libp->para[2]), (const unsigned int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawSegmentObject*) G__getstructoffset())->GetDevice());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawSegmentObject*) G__getstructoffset())->GetFP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawSegmentObject*) G__getstructoffset())->GetDetector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawSegmentObject*) G__getstructoffset())->GetModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawSegmentObject*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawSegmentObject*) G__getstructoffset())->GetAddress());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawSegmentObject*) G__getstructoffset())->SetAddress((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawSegmentObject*) G__getstructoffset())->GetDataSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawSegmentObject*) G__getstructoffset())->SetDataSize((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawSegmentObject*) G__getstructoffset())->GetNumModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawSegmentObject*) G__getstructoffset())->SetNumModule((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawSegmentObject*) G__getstructoffset())->GetNumGoodModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawSegmentObject*) G__getstructoffset())->SetNumGoodModule((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawSegmentObject*) G__getstructoffset())->PutData((TArtRawDataObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRawSegmentObject*) G__getstructoffset())->GetData((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawSegmentObject*) G__getstructoffset())->GetNumData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawSegmentObject*) G__getstructoffset())->PutFADCData((TArtRawFADCDataObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRawSegmentObject*) G__getstructoffset())->GetFADCData((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawSegmentObject*) G__getstructoffset())->GetNumFADCData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawSegmentObject*) G__getstructoffset())->PutTacquilaData((TArtRawTacquilaDataObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRawSegmentObject*) G__getstructoffset())->GetTacquilaData((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawSegmentObject*) G__getstructoffset())->GetNumTacquilaData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtRawSegmentObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRawSegmentObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtRawSegmentObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtRawSegmentObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawSegmentObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRawSegmentObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRawSegmentObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRawSegmentObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_193_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRawSegmentObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anacore_dict_193_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtRawSegmentObject* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtRawSegmentObject(*(TArtRawSegmentObject*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtRawSegmentObject));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtRawSegmentObject G__TTArtRawSegmentObject;
static int G__anacore_dict_193_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtRawSegmentObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtRawSegmentObject*) (soff+(sizeof(TArtRawSegmentObject)*i)))->~G__TTArtRawSegmentObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtRawSegmentObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtRawSegmentObject*) (soff))->~G__TTArtRawSegmentObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_193_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRawSegmentObject* dest = (TArtRawSegmentObject*) G__getstructoffset();
   *dest = *(TArtRawSegmentObject*) libp->para[0].ref;
   const TArtRawSegmentObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoder */
static int G__anacore_dict_206_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDecoder*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_206_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDecoder*) G__getstructoffset())->Decode(libp->para[0].ref ? *(unsigned char**) libp->para[0].ref : *(unsigned char**) (void*) (&G__Mlong(libp->para[0])), *(unsigned int*) G__UIntref(&libp->para[1])
, (TArtRawSegmentObject*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_206_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TArtDecoder*) G__getstructoffset())->GetMaskedData32((unsigned int) G__int(libp->para[0]), *((TArtDecoder::mask_t*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoder G__TTArtDecoder;
static int G__anacore_dict_206_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoder*) (soff+(sizeof(TArtDecoder)*i)))->~G__TTArtDecoder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoder*) (soff))->~G__TTArtDecoder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_206_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoder* dest = (TArtDecoder*) G__getstructoffset();
   *dest = *(TArtDecoder*) libp->para[0].ref;
   const TArtDecoder& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderFactory */
static int G__anacore_dict_208_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderFactory::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_208_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtDecoderFactory*) G__getstructoffset())->GetDecoder(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_208_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDecoderFactory*) G__getstructoffset())->Register();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_208_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDecoderFactory*) G__getstructoffset())->Register((TArtDecoder*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderFactory G__TTArtDecoderFactory;
static int G__anacore_dict_208_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderFactory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderFactory*) (soff+(sizeof(TArtDecoderFactory)*i)))->~G__TTArtDecoderFactory();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderFactory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderFactory*) (soff))->~G__TTArtDecoderFactory();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_208_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderFactory* dest = (TArtDecoderFactory*) G__getstructoffset();
   *dest = *(TArtDecoderFactory*) libp->para[0].ref;
   const TArtDecoderFactory& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderBigEndianV7XX */
static int G__anacore_dict_209_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderBigEndianV7XX::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderBigEndianV7XX G__TTArtDecoderBigEndianV7XX;
static int G__anacore_dict_209_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderBigEndianV7XX*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderBigEndianV7XX*) (soff+(sizeof(TArtDecoderBigEndianV7XX)*i)))->~G__TTArtDecoderBigEndianV7XX();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderBigEndianV7XX*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderBigEndianV7XX*) (soff))->~G__TTArtDecoderBigEndianV7XX();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_209_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderBigEndianV7XX* dest = (TArtDecoderBigEndianV7XX*) G__getstructoffset();
   *dest = *(TArtDecoderBigEndianV7XX*) libp->para[0].ref;
   const TArtDecoderBigEndianV7XX& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderFixed16 */
static int G__anacore_dict_210_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderFixed16::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderFixed16 G__TTArtDecoderFixed16;
static int G__anacore_dict_210_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderFixed16*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderFixed16*) (soff+(sizeof(TArtDecoderFixed16)*i)))->~G__TTArtDecoderFixed16();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderFixed16*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderFixed16*) (soff))->~G__TTArtDecoderFixed16();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_210_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderFixed16* dest = (TArtDecoderFixed16*) G__getstructoffset();
   *dest = *(TArtDecoderFixed16*) libp->para[0].ref;
   const TArtDecoderFixed16& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderLUPO */
static int G__anacore_dict_211_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderLUPO::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderLUPO G__TTArtDecoderLUPO;
static int G__anacore_dict_211_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderLUPO*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderLUPO*) (soff+(sizeof(TArtDecoderLUPO)*i)))->~G__TTArtDecoderLUPO();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderLUPO*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderLUPO*) (soff))->~G__TTArtDecoderLUPO();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_211_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderLUPO* dest = (TArtDecoderLUPO*) G__getstructoffset();
   *dest = *(TArtDecoderLUPO*) libp->para[0].ref;
   const TArtDecoderLUPO& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderP716X */
static int G__anacore_dict_212_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderP716X::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderP716X G__TTArtDecoderP716X;
static int G__anacore_dict_212_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderP716X*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderP716X*) (soff+(sizeof(TArtDecoderP716X)*i)))->~G__TTArtDecoderP716X();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderP716X*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderP716X*) (soff))->~G__TTArtDecoderP716X();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_212_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderP716X* dest = (TArtDecoderP716X*) G__getstructoffset();
   *dest = *(TArtDecoderP716X*) libp->para[0].ref;
   const TArtDecoderP716X& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderMADC32 */
static int G__anacore_dict_213_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderMADC32::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderMADC32 G__TTArtDecoderMADC32;
static int G__anacore_dict_213_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderMADC32*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderMADC32*) (soff+(sizeof(TArtDecoderMADC32)*i)))->~G__TTArtDecoderMADC32();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderMADC32*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderMADC32*) (soff))->~G__TTArtDecoderMADC32();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_213_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderMADC32* dest = (TArtDecoderMADC32*) G__getstructoffset();
   *dest = *(TArtDecoderMADC32*) libp->para[0].ref;
   const TArtDecoderMADC32& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderV1740 */
static int G__anacore_dict_214_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderV1740::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderV1740 G__TTArtDecoderV1740;
static int G__anacore_dict_214_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderV1740*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderV1740*) (soff+(sizeof(TArtDecoderV1740)*i)))->~G__TTArtDecoderV1740();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderV1740*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderV1740*) (soff))->~G__TTArtDecoderV1740();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_214_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderV1740* dest = (TArtDecoderV1740*) G__getstructoffset();
   *dest = *(TArtDecoderV1740*) libp->para[0].ref;
   const TArtDecoderV1740& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtSemaphore */
static int G__anacore_dict_215_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtSemaphore* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtSemaphore((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TArtSemaphore((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtSemaphore));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_215_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSemaphore*) G__getstructoffset())->Lock();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_215_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSemaphore*) G__getstructoffset())->Unlock();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_215_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtSemaphore*) G__getstructoffset())->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anacore_dict_215_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtSemaphore* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtSemaphore(*(TArtSemaphore*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtSemaphore));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtSemaphore G__TTArtSemaphore;
static int G__anacore_dict_215_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtSemaphore*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtSemaphore*) (soff+(sizeof(TArtSemaphore)*i)))->~G__TTArtSemaphore();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtSemaphore*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtSemaphore*) (soff))->~G__TTArtSemaphore();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_215_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtSemaphore* dest = (TArtSemaphore*) G__getstructoffset();
   *dest = *(TArtSemaphore*) libp->para[0].ref;
   const TArtSemaphore& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderV1190 */
static int G__anacore_dict_217_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderV1190::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderV1190 G__TTArtDecoderV1190;
static int G__anacore_dict_217_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderV1190*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderV1190*) (soff+(sizeof(TArtDecoderV1190)*i)))->~G__TTArtDecoderV1190();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderV1190*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderV1190*) (soff))->~G__TTArtDecoderV1190();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_217_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderV1190* dest = (TArtDecoderV1190*) G__getstructoffset();
   *dest = *(TArtDecoderV1190*) libp->para[0].ref;
   const TArtDecoderV1190& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderV7XX */
static int G__anacore_dict_218_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderV7XX::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderV7XX G__TTArtDecoderV7XX;
static int G__anacore_dict_218_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderV7XX*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderV7XX*) (soff+(sizeof(TArtDecoderV7XX)*i)))->~G__TTArtDecoderV7XX();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderV7XX*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderV7XX*) (soff))->~G__TTArtDecoderV7XX();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_218_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderV7XX* dest = (TArtDecoderV7XX*) G__getstructoffset();
   *dest = *(TArtDecoderV7XX*) libp->para[0].ref;
   const TArtDecoderV7XX& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderCTM405 */
static int G__anacore_dict_219_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderCTM405::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderCTM405 G__TTArtDecoderCTM405;
static int G__anacore_dict_219_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderCTM405*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderCTM405*) (soff+(sizeof(TArtDecoderCTM405)*i)))->~G__TTArtDecoderCTM405();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderCTM405*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderCTM405*) (soff))->~G__TTArtDecoderCTM405();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_219_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderCTM405* dest = (TArtDecoderCTM405*) G__getstructoffset();
   *dest = *(TArtDecoderCTM405*) libp->para[0].ref;
   const TArtDecoderCTM405& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderV767 */
static int G__anacore_dict_220_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderV767::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderV767 G__TTArtDecoderV767;
static int G__anacore_dict_220_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderV767*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderV767*) (soff+(sizeof(TArtDecoderV767)*i)))->~G__TTArtDecoderV767();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderV767*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderV767*) (soff))->~G__TTArtDecoderV767();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_220_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderV767* dest = (TArtDecoderV767*) G__getstructoffset();
   *dest = *(TArtDecoderV767*) libp->para[0].ref;
   const TArtDecoderV767& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderAMTTDC */
static int G__anacore_dict_221_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderAMTTDC::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderAMTTDC G__TTArtDecoderAMTTDC;
static int G__anacore_dict_221_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderAMTTDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderAMTTDC*) (soff+(sizeof(TArtDecoderAMTTDC)*i)))->~G__TTArtDecoderAMTTDC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderAMTTDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderAMTTDC*) (soff))->~G__TTArtDecoderAMTTDC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_221_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderAMTTDC* dest = (TArtDecoderAMTTDC*) G__getstructoffset();
   *dest = *(TArtDecoderAMTTDC*) libp->para[0].ref;
   const TArtDecoderAMTTDC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtMath */
static int G__anacore_dict_254_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtMath* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtMath[n];
     } else {
       p = new((void*) gvp) TArtMath[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtMath;
     } else {
       p = new((void*) gvp) TArtMath;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtMath));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_254_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TArtMath::InvalidNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_254_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TArtMath::IsValidNum((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anacore_dict_254_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtMath* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtMath(*(TArtMath*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtMath));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtMath G__TTArtMath;
static int G__anacore_dict_254_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtMath*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtMath*) (soff+(sizeof(TArtMath)*i)))->~G__TTArtMath();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtMath*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtMath*) (soff))->~G__TTArtMath();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_254_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtMath* dest = (TArtMath*) G__getstructoffset();
   *dest = *(TArtMath*) libp->para[0].ref;
   const TArtMath& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderFixed32 */
static int G__anacore_dict_255_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderFixed32::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderFixed32 G__TTArtDecoderFixed32;
static int G__anacore_dict_255_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderFixed32*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderFixed32*) (soff+(sizeof(TArtDecoderFixed32)*i)))->~G__TTArtDecoderFixed32();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderFixed32*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderFixed32*) (soff))->~G__TTArtDecoderFixed32();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_255_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderFixed32* dest = (TArtDecoderFixed32*) G__getstructoffset();
   *dest = *(TArtDecoderFixed32*) libp->para[0].ref;
   const TArtDecoderFixed32& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDataSource */
static int G__anacore_dict_260_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((TArtDataSource*) G__getstructoffset())->SMOpen((const int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((TArtDataSource*) G__getstructoffset())->SMOpen());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_260_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((TArtDataSource*) G__getstructoffset())->FileOpen((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((TArtDataSource*) G__getstructoffset())->FileOpen());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_260_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((TArtDataSource*) G__getstructoffset())->SocketOpen((const char*) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, (const bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((TArtDataSource*) G__getstructoffset())->SocketOpen((const char*) G__int(libp->para[0]), (const int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((TArtDataSource*) G__getstructoffset())->SocketOpen((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((TArtDataSource*) G__getstructoffset())->SocketOpen());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_260_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDataSource*) G__getstructoffset())->GetRunNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_260_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDataSource*) G__getstructoffset())->Close();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_260_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((TArtDataSource*) G__getstructoffset())->Read((char*) G__int(libp->para[0]), *(int*) G__Intref(&libp->para[1])
, *(int*) G__Intref(&libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TArtDataSource*) G__getstructoffset())->Read((char*) G__int(libp->para[0]), *(int*) G__Intref(&libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_260_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDataSource*) G__getstructoffset())->Seek((long) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_260_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDataSource*) G__getstructoffset())->IsPrepared());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_260_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDataSource*) G__getstructoffset())->Wait());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_260_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDataSource*) G__getstructoffset())->SetBlockStatus((ArtBlockStat_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_260_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDataSource*) G__getstructoffset())->SetFileStatus((ArtFileStat_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_260_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDataSource*) G__getstructoffset())->GetBlockStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_260_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDataSource*) G__getstructoffset())->GetFileStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_260_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDataSource*) G__getstructoffset())->GetDataSourceType());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDataSource G__TTArtDataSource;
static int G__anacore_dict_260_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDataSource*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDataSource*) (soff+(sizeof(TArtDataSource)*i)))->~G__TTArtDataSource();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDataSource*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDataSource*) (soff))->~G__TTArtDataSource();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_260_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDataSource* dest = (TArtDataSource*) G__getstructoffset();
   *dest = *(TArtDataSource*) libp->para[0].ref;
   const TArtDataSource& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtRawScalerObject */
static int G__anacore_dict_261_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRawScalerObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtRawScalerObject(
(const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, (const int) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TArtRawScalerObject(
(const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, (const int) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtRawScalerObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_261_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRawScalerObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRawScalerObject[n];
     } else {
       p = new((void*) gvp) TArtRawScalerObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRawScalerObject;
     } else {
       p = new((void*) gvp) TArtRawScalerObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtRawScalerObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_261_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawScalerObject*) G__getstructoffset())->SetScalerDate((const int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_261_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawScalerObject*) G__getstructoffset())->SetScalerID((const int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_261_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawScalerObject*) G__getstructoffset())->SetNumChannel((const int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_261_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawScalerObject*) G__getstructoffset())->GetNumChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_261_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawScalerObject*) G__getstructoffset())->GetScalerID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_261_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawScalerObject*) G__getstructoffset())->GetScalerDate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_261_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawScalerObject*) G__getstructoffset())->SetScaler((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_261_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((TArtRawScalerObject*) G__getstructoffset())->GetScaler());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_261_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawScalerObject*) G__getstructoffset())->GetScaler((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_261_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawScalerObject*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_261_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtRawScalerObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_261_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRawScalerObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_261_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtRawScalerObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_261_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtRawScalerObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_261_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawScalerObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_261_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRawScalerObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_261_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRawScalerObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_261_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRawScalerObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_261_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRawScalerObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anacore_dict_261_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtRawScalerObject* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtRawScalerObject(*(TArtRawScalerObject*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtRawScalerObject));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtRawScalerObject G__TTArtRawScalerObject;
static int G__anacore_dict_261_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtRawScalerObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtRawScalerObject*) (soff+(sizeof(TArtRawScalerObject)*i)))->~G__TTArtRawScalerObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtRawScalerObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtRawScalerObject*) (soff))->~G__TTArtRawScalerObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_261_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRawScalerObject* dest = (TArtRawScalerObject*) G__getstructoffset();
   *dest = *(TArtRawScalerObject*) libp->para[0].ref;
   const TArtRawScalerObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtRawEventObject */
static int G__anacore_dict_262_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRawEventObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRawEventObject[n];
     } else {
       p = new((void*) gvp) TArtRawEventObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRawEventObject;
     } else {
       p = new((void*) gvp) TArtRawEventObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtRawEventObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawEventObject*) G__getstructoffset())->PutSegment((TArtRawSegmentObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawEventObject*) G__getstructoffset())->PutScaler((TArtRawScalerObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRawEventObject*) G__getstructoffset())->GetSegment((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRawEventObject*) G__getstructoffset())->GetScaler((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawEventObject*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawEventObject*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawEventObject*) G__getstructoffset())->GetNumSeg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawEventObject*) G__getstructoffset())->GetNumScaler());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawEventObject*) G__getstructoffset())->SetRunNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawEventObject*) G__getstructoffset())->GetRunNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawEventObject*) G__getstructoffset())->SetEventNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawEventObject*) G__getstructoffset())->GetEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawEventObject*) G__getstructoffset())->SetTimeStamp((unsigned long long) G__ULonglong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letULonglong(result7, 109, (G__uint64) ((TArtRawEventObject*) G__getstructoffset())->GetTimeStamp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawEventObject*) G__getstructoffset())->AddNumBlock();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRawEventObject*) G__getstructoffset())->GetNumBlock());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRawEventObject*) G__getstructoffset())->GetStatusData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawEventObject*) G__getstructoffset())->CopyStatusData((unsigned char*) G__int(libp->para[0]), (size_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtRawEventObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRawEventObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtRawEventObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtRawEventObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRawEventObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRawEventObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRawEventObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRawEventObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_262_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRawEventObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anacore_dict_262_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtRawEventObject* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtRawEventObject(*(TArtRawEventObject*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtRawEventObject));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtRawEventObject G__TTArtRawEventObject;
static int G__anacore_dict_262_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtRawEventObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtRawEventObject*) (soff+(sizeof(TArtRawEventObject)*i)))->~G__TTArtRawEventObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtRawEventObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtRawEventObject*) (soff))->~G__TTArtRawEventObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_262_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRawEventObject* dest = (TArtRawEventObject*) G__getstructoffset();
   *dest = *(TArtRawEventObject*) libp->para[0].ref;
   const TArtRawEventObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtParser */
static int G__anacore_dict_271_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtParser*) G__getstructoffset())->Parse((TArtDataSource*) G__int(libp->para[0]), (TArtRawEventObject*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_271_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtParser*) G__getstructoffset())->CopyPrevEvent((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_271_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtParser*) G__getstructoffset())->SetSkip((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_271_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtParser::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_271_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtParser::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_271_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtParser::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_271_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtParser::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_271_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtParser*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_271_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtParser*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_271_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtParser*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_271_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtParser*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_271_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtParser::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_271_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtParser::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_271_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtParser::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_271_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtParser::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtParser G__TTArtParser;
static int G__anacore_dict_271_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtParser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtParser*) (soff+(sizeof(TArtParser)*i)))->~G__TTArtParser();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtParser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtParser*) (soff))->~G__TTArtParser();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_271_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtParser* dest = (TArtParser*) G__getstructoffset();
   *dest = *(TArtParser*) libp->para[0].ref;
   const TArtParser& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtParserFactory */
static int G__anacore_dict_272_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtParserFactory::Create((TArtDataSource*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anacore_dict_272_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtParserFactory* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtParserFactory(*(TArtParserFactory*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtParserFactory));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtParserFactory G__TTArtParserFactory;
static int G__anacore_dict_272_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtParserFactory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtParserFactory*) (soff+(sizeof(TArtParserFactory)*i)))->~G__TTArtParserFactory();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtParserFactory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtParserFactory*) (soff))->~G__TTArtParserFactory();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_272_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtParserFactory* dest = (TArtParserFactory*) G__getstructoffset();
   const TArtParserFactory& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtSharedMemory */
static int G__anacore_dict_273_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtSharedMemory* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtSharedMemory((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TArtSharedMemory((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtSharedMemory));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_273_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtSharedMemory*) G__getstructoffset())->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_273_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((TArtSharedMemory*) G__getstructoffset())->Read((char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TArtSharedMemory*) G__getstructoffset())->Read((char*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_273_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtSharedMemory*) G__getstructoffset())->Delete());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_273_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtSharedMemory*) G__getstructoffset())->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anacore_dict_273_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtSharedMemory* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtSharedMemory(*(TArtSharedMemory*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtSharedMemory));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtSharedMemory G__TTArtSharedMemory;
static int G__anacore_dict_273_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtSharedMemory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtSharedMemory*) (soff+(sizeof(TArtSharedMemory)*i)))->~G__TTArtSharedMemory();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtSharedMemory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtSharedMemory*) (soff))->~G__TTArtSharedMemory();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_273_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtSharedMemory* dest = (TArtSharedMemory*) G__getstructoffset();
   *dest = *(TArtSharedMemory*) libp->para[0].ref;
   const TArtSharedMemory& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderA3100 */
static int G__anacore_dict_274_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderA3100::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderA3100 G__TTArtDecoderA3100;
static int G__anacore_dict_274_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderA3100*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderA3100*) (soff+(sizeof(TArtDecoderA3100)*i)))->~G__TTArtDecoderA3100();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderA3100*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderA3100*) (soff))->~G__TTArtDecoderA3100();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_274_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderA3100* dest = (TArtDecoderA3100*) G__getstructoffset();
   *dest = *(TArtDecoderA3100*) libp->para[0].ref;
   const TArtDecoderA3100& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtRunInfo */
static int G__anacore_dict_275_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRunInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRunInfo[n];
     } else {
       p = new((void*) gvp) TArtRunInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRunInfo;
     } else {
       p = new((void*) gvp) TArtRunInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtRunInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRunInfo*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRunInfo*) G__getstructoffset())->SetRunName((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRunInfo*) G__getstructoffset())->SetRunNumber((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRunInfo*) G__getstructoffset())->SetStartTime((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRunInfo*) G__getstructoffset())->SetStopTime((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRunInfo*) G__getstructoffset())->SetDate((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRunInfo*) G__getstructoffset())->SetHeader((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRunInfo*) G__getstructoffset())->SetEnder((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRunInfo*) G__getstructoffset())->GetRunName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRunInfo*) G__getstructoffset())->GetRunNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRunInfo*) G__getstructoffset())->GetStartTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRunInfo*) G__getstructoffset())->GetStopTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRunInfo*) G__getstructoffset())->GetDate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRunInfo*) G__getstructoffset())->GetHeader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRunInfo*) G__getstructoffset())->GetEnder());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtRunInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRunInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtRunInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtRunInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRunInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRunInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRunInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRunInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_275_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRunInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anacore_dict_275_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtRunInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtRunInfo(*(TArtRunInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtRunInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtRunInfo G__TTArtRunInfo;
static int G__anacore_dict_275_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtRunInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtRunInfo*) (soff+(sizeof(TArtRunInfo)*i)))->~G__TTArtRunInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtRunInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtRunInfo*) (soff))->~G__TTArtRunInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_275_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRunInfo* dest = (TArtRunInfo*) G__getstructoffset();
   *dest = *(TArtRunInfo*) libp->para[0].ref;
   const TArtRunInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtStoreManager */
static int G__anacore_dict_581_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtStoreManager::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_581_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtStoreManager*) G__getstructoffset())->AddParameters((TNamed*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_581_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtStoreManager*) G__getstructoffset())->AddDataContainer((TArtRawEventObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_581_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtStoreManager*) G__getstructoffset())->AddDataContainer((TClonesArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_581_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtStoreManager*) G__getstructoffset())->RegistDataToTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_581_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtStoreManager*) G__getstructoffset())->LoadDataFromTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_581_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtStoreManager*) G__getstructoffset())->FindParameters((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_581_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtStoreManager*) G__getstructoffset())->FindDataContainer((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_581_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtStoreManager*) G__getstructoffset())->RemoveDataContainer((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_581_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtStoreManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_581_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtStoreManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_581_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtStoreManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_581_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtStoreManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_581_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtStoreManager*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_581_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtStoreManager*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_581_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtStoreManager*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_581_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtStoreManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_581_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtStoreManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_581_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtStoreManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_581_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtStoreManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_581_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtStoreManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anacore_dict_581_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtStoreManager* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtStoreManager(*(TArtStoreManager*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtStoreManager));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtStoreManager G__TTArtStoreManager;
static int G__anacore_dict_581_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtStoreManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtStoreManager*) (soff+(sizeof(TArtStoreManager)*i)))->~G__TTArtStoreManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtStoreManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtStoreManager*) (soff))->~G__TTArtStoreManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_581_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtStoreManager* dest = (TArtStoreManager*) G__getstructoffset();
   *dest = *(TArtStoreManager*) libp->para[0].ref;
   const TArtStoreManager& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtEventStore */
static int G__anacore_dict_582_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtEventStore*) G__getstructoffset())->Open());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtEventStore*) G__getstructoffset())->Open((const int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtEventStore*) G__getstructoffset())->Open((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtEventStore*) G__getstructoffset())->Open((const char*) G__int(libp->para[0]), (const int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtEventStore*) G__getstructoffset())->ClearData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtEventStore*) G__getstructoffset())->SetInterrupt((bool*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtEventStore*) G__getstructoffset())->GetNextEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtEventStore*) G__getstructoffset())->SkipEvent((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtEventStore*) G__getstructoffset())->GetRawEventObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtEventStore*) G__getstructoffset())->GetEventInfoArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtEventStore*) G__getstructoffset())->GetRunInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtEventStore*) G__getstructoffset())->SetObjectPointer((TArtRawEventObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtEventStore* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtEventStore[n];
     } else {
       p = new((void*) gvp) TArtEventStore[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtEventStore;
     } else {
       p = new((void*) gvp) TArtEventStore;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtEventStore));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtEventStore::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtEventStore::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtEventStore::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtEventStore::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtEventStore*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtEventStore*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtEventStore*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtEventStore*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtEventStore::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtEventStore::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtEventStore::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_582_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtEventStore::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anacore_dict_582_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtEventStore* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtEventStore(*(TArtEventStore*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtEventStore));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtEventStore G__TTArtEventStore;
static int G__anacore_dict_582_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtEventStore*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtEventStore*) (soff+(sizeof(TArtEventStore)*i)))->~G__TTArtEventStore();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtEventStore*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtEventStore*) (soff))->~G__TTArtEventStore();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_582_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtEventStore* dest = (TArtEventStore*) G__getstructoffset();
   *dest = *(TArtEventStore*) libp->para[0].ref;
   const TArtEventStore& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtSharedMemoryDataSource */
static int G__anacore_dict_583_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtSharedMemoryDataSource* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtSharedMemoryDataSource[n];
     } else {
       p = new((void*) gvp) TArtSharedMemoryDataSource[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtSharedMemoryDataSource;
     } else {
       p = new((void*) gvp) TArtSharedMemoryDataSource;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtSharedMemoryDataSource));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anacore_dict_583_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtSharedMemoryDataSource* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtSharedMemoryDataSource(*(TArtSharedMemoryDataSource*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtSharedMemoryDataSource));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtSharedMemoryDataSource G__TTArtSharedMemoryDataSource;
static int G__anacore_dict_583_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtSharedMemoryDataSource*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtSharedMemoryDataSource*) (soff+(sizeof(TArtSharedMemoryDataSource)*i)))->~G__TTArtSharedMemoryDataSource();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtSharedMemoryDataSource*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtSharedMemoryDataSource*) (soff))->~G__TTArtSharedMemoryDataSource();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_583_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtSharedMemoryDataSource* dest = (TArtSharedMemoryDataSource*) G__getstructoffset();
   *dest = *(TArtSharedMemoryDataSource*) libp->para[0].ref;
   const TArtSharedMemoryDataSource& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderV1290 */
static int G__anacore_dict_584_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderV1290::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderV1290 G__TTArtDecoderV1290;
static int G__anacore_dict_584_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderV1290*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderV1290*) (soff+(sizeof(TArtDecoderV1290)*i)))->~G__TTArtDecoderV1290();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderV1290*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderV1290*) (soff))->~G__TTArtDecoderV1290();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_584_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderV1290* dest = (TArtDecoderV1290*) G__getstructoffset();
   *dest = *(TArtDecoderV1290*) libp->para[0].ref;
   const TArtDecoderV1290& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDataObject */
static int G__anacore_dict_585_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDataObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtDataObject[n];
     } else {
       p = new((void*) gvp) TArtDataObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtDataObject;
     } else {
       p = new((void*) gvp) TArtDataObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtDataObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_585_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDataObject*) G__getstructoffset())->SetID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_585_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDataObject*) G__getstructoffset())->SetFpl((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_585_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDataObject*) G__getstructoffset())->SetDetectorName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_585_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDataObject*) G__getstructoffset())->SetDataState((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_585_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDataObject*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_585_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDataObject*) G__getstructoffset())->GetFpl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_585_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtDataObject*) G__getstructoffset())->GetDetectorName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_585_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtDataObject*) G__getstructoffset())->GetDataState());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_585_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TArtDataObject*) G__getstructoffset())->IsDataValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_585_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDataObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_585_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtDataObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_585_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtDataObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_585_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtDataObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_585_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDataObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_585_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtDataObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_585_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtDataObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_585_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtDataObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_585_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtDataObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anacore_dict_585_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtDataObject* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtDataObject(*(TArtDataObject*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtDataObject));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDataObject G__TTArtDataObject;
static int G__anacore_dict_585_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDataObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDataObject*) (soff+(sizeof(TArtDataObject)*i)))->~G__TTArtDataObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDataObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDataObject*) (soff))->~G__TTArtDataObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_585_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDataObject* dest = (TArtDataObject*) G__getstructoffset();
   *dest = *(TArtDataObject*) libp->para[0].ref;
   const TArtDataObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderP716XZ */
static int G__anacore_dict_586_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderP716XZ::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderP716XZ G__TTArtDecoderP716XZ;
static int G__anacore_dict_586_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderP716XZ*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderP716XZ*) (soff+(sizeof(TArtDecoderP716XZ)*i)))->~G__TTArtDecoderP716XZ();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderP716XZ*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderP716XZ*) (soff))->~G__TTArtDecoderP716XZ();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_586_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderP716XZ* dest = (TArtDecoderP716XZ*) G__getstructoffset();
   *dest = *(TArtDecoderP716XZ*) libp->para[0].ref;
   const TArtDecoderP716XZ& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderMQDC32 */
static int G__anacore_dict_587_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderMQDC32::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderMQDC32 G__TTArtDecoderMQDC32;
static int G__anacore_dict_587_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderMQDC32*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderMQDC32*) (soff+(sizeof(TArtDecoderMQDC32)*i)))->~G__TTArtDecoderMQDC32();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderMQDC32*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderMQDC32*) (soff))->~G__TTArtDecoderMQDC32();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_587_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderMQDC32* dest = (TArtDecoderMQDC32*) G__getstructoffset();
   *dest = *(TArtDecoderMQDC32*) libp->para[0].ref;
   const TArtDecoderMQDC32& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtEventInfo */
static int G__anacore_dict_588_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtEventInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtEventInfo[n];
     } else {
       p = new((void*) gvp) TArtEventInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtEventInfo;
     } else {
       p = new((void*) gvp) TArtEventInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtEventInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_588_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtEventInfo*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_588_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtEventInfo*) G__getstructoffset())->SetRunNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_588_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtEventInfo*) G__getstructoffset())->SetEventNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_588_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtEventInfo*) G__getstructoffset())->SetSubsysName((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_588_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtEventInfo*) G__getstructoffset())->GetRunNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_588_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtEventInfo*) G__getstructoffset())->GetEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_588_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtEventInfo*) G__getstructoffset())->GetSubsysName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_588_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtEventInfo*) G__getstructoffset())->SetTimeStamp((unsigned long long) G__ULonglong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_588_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtEventInfo*) G__getstructoffset())->SetTSCheck((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_588_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letULonglong(result7, 109, (G__uint64) ((TArtEventInfo*) G__getstructoffset())->GetTimeStamp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_588_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtEventInfo*) G__getstructoffset())->GetTSCheck());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_588_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtEventInfo*) G__getstructoffset())->SetTriggerBit((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_588_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TArtEventInfo*) G__getstructoffset())->GetTriggerBit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_588_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtEventInfo*) G__getstructoffset())->isTriggerBit((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_588_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtEventInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_588_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtEventInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_588_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtEventInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_588_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtEventInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_588_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtEventInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_588_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtEventInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_588_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtEventInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_588_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtEventInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_588_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtEventInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anacore_dict_588_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtEventInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtEventInfo(*(TArtEventInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtEventInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtEventInfo G__TTArtEventInfo;
static int G__anacore_dict_588_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtEventInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtEventInfo*) (soff+(sizeof(TArtEventInfo)*i)))->~G__TTArtEventInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtEventInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtEventInfo*) (soff))->~G__TTArtEventInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_588_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtEventInfo* dest = (TArtEventInfo*) G__getstructoffset();
   *dest = *(TArtEventInfo*) libp->para[0].ref;
   const TArtEventInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtParserRDF */
static int G__anacore_dict_590_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtParserRDF* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtParserRDF[n];
     } else {
       p = new((void*) gvp) TArtParserRDF[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtParserRDF;
     } else {
       p = new((void*) gvp) TArtParserRDF;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtParserRDF));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_590_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtParserRDF::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_590_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtParserRDF::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_590_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtParserRDF::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_590_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtParserRDF::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_590_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtParserRDF*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_590_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtParserRDF::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_590_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtParserRDF::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_590_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtParserRDF::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_590_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtParserRDF::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anacore_dict_590_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtParserRDF* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtParserRDF(*(TArtParserRDF*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtParserRDF));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtParserRDF G__TTArtParserRDF;
static int G__anacore_dict_590_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtParserRDF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtParserRDF*) (soff+(sizeof(TArtParserRDF)*i)))->~G__TTArtParserRDF();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtParserRDF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtParserRDF*) (soff))->~G__TTArtParserRDF();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_590_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtParserRDF* dest = (TArtParserRDF*) G__getstructoffset();
   *dest = *(TArtParserRDF*) libp->para[0].ref;
   const TArtParserRDF& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderV550 */
static int G__anacore_dict_591_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderV550::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderV550 G__TTArtDecoderV550;
static int G__anacore_dict_591_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderV550*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderV550*) (soff+(sizeof(TArtDecoderV550)*i)))->~G__TTArtDecoderV550();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderV550*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderV550*) (soff))->~G__TTArtDecoderV550();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_591_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderV550* dest = (TArtDecoderV550*) G__getstructoffset();
   *dest = *(TArtDecoderV550*) libp->para[0].ref;
   const TArtDecoderV550& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderMTDC32 */
static int G__anacore_dict_592_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderMTDC32::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderMTDC32 G__TTArtDecoderMTDC32;
static int G__anacore_dict_592_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderMTDC32*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderMTDC32*) (soff+(sizeof(TArtDecoderMTDC32)*i)))->~G__TTArtDecoderMTDC32();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderMTDC32*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderMTDC32*) (soff))->~G__TTArtDecoderMTDC32();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_592_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderMTDC32* dest = (TArtDecoderMTDC32*) G__getstructoffset();
   *dest = *(TArtDecoderMTDC32*) libp->para[0].ref;
   const TArtDecoderMTDC32& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderDSP */
static int G__anacore_dict_593_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderDSP::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderDSP G__TTArtDecoderDSP;
static int G__anacore_dict_593_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderDSP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderDSP*) (soff+(sizeof(TArtDecoderDSP)*i)))->~G__TTArtDecoderDSP();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderDSP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderDSP*) (soff))->~G__TTArtDecoderDSP();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_593_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderDSP* dest = (TArtDecoderDSP*) G__getstructoffset();
   *dest = *(TArtDecoderDSP*) libp->para[0].ref;
   const TArtDecoderDSP& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtFileDataSource */
static int G__anacore_dict_602_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtFileDataSource* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtFileDataSource[n];
     } else {
       p = new((void*) gvp) TArtFileDataSource[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtFileDataSource;
     } else {
       p = new((void*) gvp) TArtFileDataSource;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtFileDataSource));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_602_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFileDataSource*) G__getstructoffset())->SetRunNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anacore_dict_602_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtFileDataSource* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtFileDataSource(*(TArtFileDataSource*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtFileDataSource));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtFileDataSource G__TTArtFileDataSource;
static int G__anacore_dict_602_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtFileDataSource*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtFileDataSource*) (soff+(sizeof(TArtFileDataSource)*i)))->~G__TTArtFileDataSource();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtFileDataSource*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtFileDataSource*) (soff))->~G__TTArtFileDataSource();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_602_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtFileDataSource* dest = (TArtFileDataSource*) G__getstructoffset();
   *dest = *(TArtFileDataSource*) libp->para[0].ref;
   const TArtFileDataSource& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtRIDFMap */
static int G__anacore_dict_603_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRIDFMap* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRIDFMap[n];
     } else {
       p = new((void*) gvp) TArtRIDFMap[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRIDFMap;
     } else {
       p = new((void*) gvp) TArtRIDFMap;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtRIDFMap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_603_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRIDFMap* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtRIDFMap(
(const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, (const int) G__int(libp->para[2]), (const int) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) TArtRIDFMap(
(const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, (const int) G__int(libp->para[2]), (const int) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtRIDFMap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_603_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRIDFMap*) G__getstructoffset())->SetMap((const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, (const int) G__int(libp->para[2]), (const int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_603_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRIDFMap*) G__getstructoffset())->GetDevice());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_603_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRIDFMap*) G__getstructoffset())->GetFpl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_603_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRIDFMap*) G__getstructoffset())->GetDetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_603_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRIDFMap*) G__getstructoffset())->GetGeo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_603_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRIDFMap*) G__getstructoffset())->GetCh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_603_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TArtRIDFMap*) G__getstructoffset())->operator<(*(TArtRIDFMap*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_603_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TArtRIDFMap*) G__getstructoffset())->operator==(*(TArtRIDFMap*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_603_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TArtRIDFMap*) G__getstructoffset())->GetMapInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_603_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtRIDFMap::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_603_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRIDFMap::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_603_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtRIDFMap::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_603_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtRIDFMap::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_603_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRIDFMap*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_603_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRIDFMap::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_603_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRIDFMap::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_603_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRIDFMap::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_603_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRIDFMap::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anacore_dict_603_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtRIDFMap* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtRIDFMap(*(TArtRIDFMap*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtRIDFMap));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtRIDFMap G__TTArtRIDFMap;
static int G__anacore_dict_603_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtRIDFMap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtRIDFMap*) (soff+(sizeof(TArtRIDFMap)*i)))->~G__TTArtRIDFMap();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtRIDFMap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtRIDFMap*) (soff))->~G__TTArtRIDFMap();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_603_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRIDFMap* dest = (TArtRIDFMap*) G__getstructoffset();
   *dest = *(TArtRIDFMap*) libp->para[0].ref;
   const TArtRIDFMap& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderTacquila */
static int G__anacore_dict_604_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderTacquila::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderTacquila G__TTArtDecoderTacquila;
static int G__anacore_dict_604_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderTacquila*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderTacquila*) (soff+(sizeof(TArtDecoderTacquila)*i)))->~G__TTArtDecoderTacquila();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderTacquila*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderTacquila*) (soff))->~G__TTArtDecoderTacquila();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_604_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderTacquila* dest = (TArtDecoderTacquila*) G__getstructoffset();
   *dest = *(TArtDecoderTacquila*) libp->para[0].ref;
   const TArtDecoderTacquila& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderAD413A */
static int G__anacore_dict_605_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderAD413A::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderAD413A G__TTArtDecoderAD413A;
static int G__anacore_dict_605_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderAD413A*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderAD413A*) (soff+(sizeof(TArtDecoderAD413A)*i)))->~G__TTArtDecoderAD413A();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderAD413A*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderAD413A*) (soff))->~G__TTArtDecoderAD413A();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_605_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderAD413A* dest = (TArtDecoderAD413A*) G__getstructoffset();
   *dest = *(TArtDecoderAD413A*) libp->para[0].ref;
   const TArtDecoderAD413A& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderFixed24 */
static int G__anacore_dict_606_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderFixed24::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderFixed24 G__TTArtDecoderFixed24;
static int G__anacore_dict_606_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderFixed24*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderFixed24*) (soff+(sizeof(TArtDecoderFixed24)*i)))->~G__TTArtDecoderFixed24();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderFixed24*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderFixed24*) (soff))->~G__TTArtDecoderFixed24();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_606_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderFixed24* dest = (TArtDecoderFixed24*) G__getstructoffset();
   *dest = *(TArtDecoderFixed24*) libp->para[0].ref;
   const TArtDecoderFixed24& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderVmeEasyroc */
static int G__anacore_dict_607_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderVmeEasyroc::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderVmeEasyroc G__TTArtDecoderVmeEasyroc;
static int G__anacore_dict_607_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderVmeEasyroc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderVmeEasyroc*) (soff+(sizeof(TArtDecoderVmeEasyroc)*i)))->~G__TTArtDecoderVmeEasyroc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderVmeEasyroc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderVmeEasyroc*) (soff))->~G__TTArtDecoderVmeEasyroc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_607_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderVmeEasyroc* dest = (TArtDecoderVmeEasyroc*) G__getstructoffset();
   *dest = *(TArtDecoderVmeEasyroc*) libp->para[0].ref;
   const TArtDecoderVmeEasyroc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderNeulandTS */
static int G__anacore_dict_608_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderNeulandTS::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderNeulandTS G__TTArtDecoderNeulandTS;
static int G__anacore_dict_608_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderNeulandTS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderNeulandTS*) (soff+(sizeof(TArtDecoderNeulandTS)*i)))->~G__TTArtDecoderNeulandTS();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderNeulandTS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderNeulandTS*) (soff))->~G__TTArtDecoderNeulandTS();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_608_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderNeulandTS* dest = (TArtDecoderNeulandTS*) G__getstructoffset();
   *dest = *(TArtDecoderNeulandTS*) libp->para[0].ref;
   const TArtDecoderNeulandTS& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtReconstruction */
static int G__anacore_dict_610_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtReconstruction*) G__getstructoffset())->ReconstructData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_610_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtReconstruction*) G__getstructoffset())->ClearData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_610_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtReconstruction*) G__getstructoffset())->GetOutDataName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_610_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtReconstruction*) G__getstructoffset())->IsDataLoaded());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_610_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtReconstruction*) G__getstructoffset())->IsReconstructed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_610_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtReconstruction::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_610_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtReconstruction::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_610_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtReconstruction::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_610_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtReconstruction::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_610_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtReconstruction*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_610_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtReconstruction*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_610_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtReconstruction*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_610_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtReconstruction*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_610_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtReconstruction::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_610_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtReconstruction::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_610_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtReconstruction::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_610_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtReconstruction::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtReconstruction G__TTArtReconstruction;
static int G__anacore_dict_610_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtReconstruction*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtReconstruction*) (soff+(sizeof(TArtReconstruction)*i)))->~G__TTArtReconstruction();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtReconstruction*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtReconstruction*) (soff))->~G__TTArtReconstruction();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_610_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtReconstruction* dest = (TArtReconstruction*) G__getstructoffset();
   *dest = *(TArtReconstruction*) libp->para[0].ref;
   const TArtReconstruction& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtParserRIDF */
static int G__anacore_dict_611_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtParserRIDF* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtParserRIDF[n];
     } else {
       p = new((void*) gvp) TArtParserRIDF[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtParserRIDF;
     } else {
       p = new((void*) gvp) TArtParserRIDF;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtParserRIDF));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_611_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtParserRIDF::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_611_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtParserRIDF::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_611_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtParserRIDF::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_611_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtParserRIDF::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_611_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtParserRIDF*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_611_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtParserRIDF::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_611_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtParserRIDF::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_611_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtParserRIDF::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_611_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtParserRIDF::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anacore_dict_611_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtParserRIDF* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtParserRIDF(*(TArtParserRIDF*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtParserRIDF));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtParserRIDF G__TTArtParserRIDF;
static int G__anacore_dict_611_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtParserRIDF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtParserRIDF*) (soff+(sizeof(TArtParserRIDF)*i)))->~G__TTArtParserRIDF();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtParserRIDF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtParserRIDF*) (soff))->~G__TTArtParserRIDF();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_611_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtParserRIDF* dest = (TArtParserRIDF*) G__getstructoffset();
   *dest = *(TArtParserRIDF*) libp->para[0].ref;
   const TArtParserRIDF& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderL3377d */
static int G__anacore_dict_616_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderL3377d::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderL3377d G__TTArtDecoderL3377d;
static int G__anacore_dict_616_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderL3377d*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderL3377d*) (soff+(sizeof(TArtDecoderL3377d)*i)))->~G__TTArtDecoderL3377d();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderL3377d*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderL3377d*) (soff))->~G__TTArtDecoderL3377d();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_616_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderL3377d* dest = (TArtDecoderL3377d*) G__getstructoffset();
   *dest = *(TArtDecoderL3377d*) libp->para[0].ref;
   const TArtDecoderL3377d& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDecoderV1190C */
static int G__anacore_dict_617_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDecoderV1190C::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDecoderV1190C G__TTArtDecoderV1190C;
static int G__anacore_dict_617_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDecoderV1190C*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDecoderV1190C*) (soff+(sizeof(TArtDecoderV1190C)*i)))->~G__TTArtDecoderV1190C();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDecoderV1190C*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDecoderV1190C*) (soff))->~G__TTArtDecoderV1190C();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_617_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDecoderV1190C* dest = (TArtDecoderV1190C*) G__getstructoffset();
   *dest = *(TArtDecoderV1190C*) libp->para[0].ref;
   const TArtDecoderV1190C& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtStreamingDataSource */
static int G__anacore_dict_619_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtStreamingDataSource* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtStreamingDataSource[n];
     } else {
       p = new((void*) gvp) TArtStreamingDataSource[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtStreamingDataSource;
     } else {
       p = new((void*) gvp) TArtStreamingDataSource;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtStreamingDataSource));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_619_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtStreamingDataSource::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_619_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtStreamingDataSource::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_619_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtStreamingDataSource::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_619_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtStreamingDataSource::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_619_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtStreamingDataSource*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_619_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtStreamingDataSource*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_619_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtStreamingDataSource*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_619_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtStreamingDataSource*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_619_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtStreamingDataSource::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_619_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtStreamingDataSource::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_619_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtStreamingDataSource::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_619_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtStreamingDataSource::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anacore_dict_619_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtStreamingDataSource* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtStreamingDataSource(*(TArtStreamingDataSource*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtStreamingDataSource));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtStreamingDataSource G__TTArtStreamingDataSource;
static int G__anacore_dict_619_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtStreamingDataSource*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtStreamingDataSource*) (soff+(sizeof(TArtStreamingDataSource)*i)))->~G__TTArtStreamingDataSource();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtStreamingDataSource*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtStreamingDataSource*) (soff))->~G__TTArtStreamingDataSource();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_619_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtStreamingDataSource* dest = (TArtStreamingDataSource*) G__getstructoffset();
   *dest = *(TArtStreamingDataSource*) libp->para[0].ref;
   const TArtStreamingDataSource& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtUtil */
static int G__anacore_dict_620_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtUtil* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtUtil[n];
     } else {
       p = new((void*) gvp) TArtUtil[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtUtil;
     } else {
       p = new((void*) gvp) TArtUtil;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtUtil));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_620_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtUtil::FindDataObject((TClonesArray*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_620_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtUtil::FindDataObject((TClonesArray*) G__int(libp->para[0]), (TString*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anacore_dict_620_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtUtil::FindDataObject((TClonesArray*) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anacore_dict_620_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtUtil* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtUtil(*(TArtUtil*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anacore_dictLN_TArtUtil));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtUtil G__TTArtUtil;
static int G__anacore_dict_620_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtUtil*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtUtil*) (soff+(sizeof(TArtUtil)*i)))->~G__TTArtUtil();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtUtil*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtUtil*) (soff))->~G__TTArtUtil();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anacore_dict_620_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtUtil* dest = (TArtUtil*) G__getstructoffset();
   const TArtUtil& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TArtRawDataObject */

/* TArtCore */

/* TArtRawFADCDataObject */

/* TArtRawTacquilaDataObject */

/* TArtRawSegmentObject */

/* TArtDecoder */

/* TArtDecoderFactory */

/* TArtDecoderBigEndianV7XX */

/* TArtDecoderFixed16 */

/* TArtDecoderLUPO */

/* TArtDecoderP716X */

/* TArtDecoderMADC32 */

/* TArtDecoderV1740 */

/* TArtSemaphore */

/* TArtDecoderV1190 */

/* TArtDecoderV7XX */

/* TArtDecoderCTM405 */

/* TArtDecoderV767 */

/* TArtDecoderAMTTDC */

/* TArtMath */

/* TArtDecoderFixed32 */

/* TArtDataSource */

/* TArtRawScalerObject */

/* TArtRawEventObject */

/* TArtParser */

/* TArtParserFactory */

/* TArtSharedMemory */

/* TArtDecoderA3100 */

/* TArtRunInfo */

/* TArtStoreManager */

/* TArtEventStore */

/* TArtSharedMemoryDataSource */

/* TArtDecoderV1290 */

/* TArtDataObject */

/* TArtDecoderP716XZ */

/* TArtDecoderMQDC32 */

/* TArtEventInfo */

/* TArtParserRDF */

/* TArtDecoderV550 */

/* TArtDecoderMTDC32 */

/* TArtDecoderDSP */

/* TArtFileDataSource */

/* TArtRIDFMap */

/* TArtDecoderTacquila */

/* TArtDecoderAD413A */

/* TArtDecoderFixed24 */

/* TArtDecoderVmeEasyroc */

/* TArtDecoderNeulandTS */

/* TArtReconstruction */

/* TArtParserRIDF */

/* TArtDecoderL3377d */

/* TArtDecoderV1190C */

/* TArtStreamingDataSource */

/* TArtUtil */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncanacore_dict {
 public:
  G__Sizep2memfuncanacore_dict(): p(&G__Sizep2memfuncanacore_dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncanacore_dict::*p)();
};

size_t G__get_sizep2memfuncanacore_dict()
{
  G__Sizep2memfuncanacore_dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceanacore_dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawDataObject))) {
     TArtRawDataObject *G__Lderived;
     G__Lderived=(TArtRawDataObject*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawDataObject),G__get_linked_tagnum(&G__anacore_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawDataObject),G__get_linked_tagnum(&G__anacore_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawFADCDataObject))) {
     TArtRawFADCDataObject *G__Lderived;
     G__Lderived=(TArtRawFADCDataObject*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawFADCDataObject),G__get_linked_tagnum(&G__anacore_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawFADCDataObject),G__get_linked_tagnum(&G__anacore_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawTacquilaDataObject))) {
     TArtRawTacquilaDataObject *G__Lderived;
     G__Lderived=(TArtRawTacquilaDataObject*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawTacquilaDataObject),G__get_linked_tagnum(&G__anacore_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawTacquilaDataObject),G__get_linked_tagnum(&G__anacore_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawSegmentObject))) {
     TArtRawSegmentObject *G__Lderived;
     G__Lderived=(TArtRawSegmentObject*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawSegmentObject),G__get_linked_tagnum(&G__anacore_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawSegmentObject),G__get_linked_tagnum(&G__anacore_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderBigEndianV7XX))) {
     TArtDecoderBigEndianV7XX *G__Lderived;
     G__Lderived=(TArtDecoderBigEndianV7XX*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderBigEndianV7XX),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFixed16))) {
     TArtDecoderFixed16 *G__Lderived;
     G__Lderived=(TArtDecoderFixed16*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFixed16),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderLUPO))) {
     TArtDecoderLUPO *G__Lderived;
     G__Lderived=(TArtDecoderLUPO*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderLUPO),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderP716X))) {
     TArtDecoderP716X *G__Lderived;
     G__Lderived=(TArtDecoderP716X*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderP716X),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderMADC32))) {
     TArtDecoderMADC32 *G__Lderived;
     G__Lderived=(TArtDecoderMADC32*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderMADC32),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1740))) {
     TArtDecoderV1740 *G__Lderived;
     G__Lderived=(TArtDecoderV1740*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1740),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1190))) {
     TArtDecoderV1190 *G__Lderived;
     G__Lderived=(TArtDecoderV1190*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1190),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV7XX))) {
     TArtDecoderV7XX *G__Lderived;
     G__Lderived=(TArtDecoderV7XX*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV7XX),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderCTM405))) {
     TArtDecoderCTM405 *G__Lderived;
     G__Lderived=(TArtDecoderCTM405*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderCTM405),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV767))) {
     TArtDecoderV767 *G__Lderived;
     G__Lderived=(TArtDecoderV767*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV767),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderAMTTDC))) {
     TArtDecoderAMTTDC *G__Lderived;
     G__Lderived=(TArtDecoderAMTTDC*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderAMTTDC),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFixed32))) {
     TArtDecoderFixed32 *G__Lderived;
     G__Lderived=(TArtDecoderFixed32*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFixed32),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawScalerObject))) {
     TArtRawScalerObject *G__Lderived;
     G__Lderived=(TArtRawScalerObject*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawScalerObject),G__get_linked_tagnum(&G__anacore_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawScalerObject),G__get_linked_tagnum(&G__anacore_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawEventObject))) {
     TArtRawEventObject *G__Lderived;
     G__Lderived=(TArtRawEventObject*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawEventObject),G__get_linked_tagnum(&G__anacore_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawEventObject),G__get_linked_tagnum(&G__anacore_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderA3100))) {
     TArtDecoderA3100 *G__Lderived;
     G__Lderived=(TArtDecoderA3100*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderA3100),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtRunInfo))) {
     TArtRunInfo *G__Lderived;
     G__Lderived=(TArtRunInfo*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRunInfo),G__get_linked_tagnum(&G__anacore_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRunInfo),G__get_linked_tagnum(&G__anacore_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtSharedMemoryDataSource))) {
     TArtSharedMemoryDataSource *G__Lderived;
     G__Lderived=(TArtSharedMemoryDataSource*)0x1000;
     {
       TArtDataSource *G__Lpbase=(TArtDataSource*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtSharedMemoryDataSource),G__get_linked_tagnum(&G__anacore_dictLN_TArtDataSource),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1290))) {
     TArtDecoderV1290 *G__Lderived;
     G__Lderived=(TArtDecoderV1290*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1290),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDataObject))) {
     TArtDataObject *G__Lderived;
     G__Lderived=(TArtDataObject*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDataObject),G__get_linked_tagnum(&G__anacore_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderP716XZ))) {
     TArtDecoderP716XZ *G__Lderived;
     G__Lderived=(TArtDecoderP716XZ*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderP716XZ),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderMQDC32))) {
     TArtDecoderMQDC32 *G__Lderived;
     G__Lderived=(TArtDecoderMQDC32*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderMQDC32),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtEventInfo))) {
     TArtEventInfo *G__Lderived;
     G__Lderived=(TArtEventInfo*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtEventInfo),G__get_linked_tagnum(&G__anacore_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtEventInfo),G__get_linked_tagnum(&G__anacore_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtParserRDF))) {
     TArtParserRDF *G__Lderived;
     G__Lderived=(TArtParserRDF*)0x1000;
     {
       TArtParser *G__Lpbase=(TArtParser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtParserRDF),G__get_linked_tagnum(&G__anacore_dictLN_TArtParser),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV550))) {
     TArtDecoderV550 *G__Lderived;
     G__Lderived=(TArtDecoderV550*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV550),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderMTDC32))) {
     TArtDecoderMTDC32 *G__Lderived;
     G__Lderived=(TArtDecoderMTDC32*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderMTDC32),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderDSP))) {
     TArtDecoderDSP *G__Lderived;
     G__Lderived=(TArtDecoderDSP*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderDSP),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtFileDataSource))) {
     TArtFileDataSource *G__Lderived;
     G__Lderived=(TArtFileDataSource*)0x1000;
     {
       TArtDataSource *G__Lpbase=(TArtDataSource*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtFileDataSource),G__get_linked_tagnum(&G__anacore_dictLN_TArtDataSource),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtRIDFMap))) {
     TArtRIDFMap *G__Lderived;
     G__Lderived=(TArtRIDFMap*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRIDFMap),G__get_linked_tagnum(&G__anacore_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRIDFMap),G__get_linked_tagnum(&G__anacore_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderTacquila))) {
     TArtDecoderTacquila *G__Lderived;
     G__Lderived=(TArtDecoderTacquila*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderTacquila),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderAD413A))) {
     TArtDecoderAD413A *G__Lderived;
     G__Lderived=(TArtDecoderAD413A*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderAD413A),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFixed24))) {
     TArtDecoderFixed24 *G__Lderived;
     G__Lderived=(TArtDecoderFixed24*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFixed24),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderVmeEasyroc))) {
     TArtDecoderVmeEasyroc *G__Lderived;
     G__Lderived=(TArtDecoderVmeEasyroc*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderVmeEasyroc),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderNeulandTS))) {
     TArtDecoderNeulandTS *G__Lderived;
     G__Lderived=(TArtDecoderNeulandTS*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderNeulandTS),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtParserRIDF))) {
     TArtParserRIDF *G__Lderived;
     G__Lderived=(TArtParserRIDF*)0x1000;
     {
       TArtParser *G__Lpbase=(TArtParser*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtParserRIDF),G__get_linked_tagnum(&G__anacore_dictLN_TArtParser),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderL3377d))) {
     TArtDecoderL3377d *G__Lderived;
     G__Lderived=(TArtDecoderL3377d*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderL3377d),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1190C))) {
     TArtDecoderV1190C *G__Lderived;
     G__Lderived=(TArtDecoderV1190C*)0x1000;
     {
       TArtDecoder *G__Lpbase=(TArtDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1190C),G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anacore_dictLN_TArtStreamingDataSource))) {
     TArtStreamingDataSource *G__Lderived;
     G__Lderived=(TArtStreamingDataSource*)0x1000;
     {
       TArtDataSource *G__Lpbase=(TArtDataSource*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtStreamingDataSource),G__get_linked_tagnum(&G__anacore_dictLN_TArtDataSource),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableanacore_dict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__anacore_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anacore_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anacore_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anacore_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anacore_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__anacore_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anacore_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anacore_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anacore_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anacore_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__anacore_dictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anacore_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anacore_dictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anacore_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anacore_dictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtRawDataObject*>",117,G__get_linked_tagnum(&G__anacore_dictLN_vectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anacore_dictLN_vectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anacore_dictLN_vectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtRawFADCDataObject*>",117,G__get_linked_tagnum(&G__anacore_dictLN_vectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anacore_dictLN_vectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anacore_dictLN_vectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtRawTacquilaDataObject*>",117,G__get_linked_tagnum(&G__anacore_dictLN_vectorlETArtRawTacquilaDataObjectmUcOallocatorlETArtRawTacquilaDataObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawTacquilaDataObjectmUcOallocatorlETArtRawTacquilaDataObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anacore_dictLN_vectorlETArtRawTacquilaDataObjectmUcOallocatorlETArtRawTacquilaDataObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawTacquilaDataObjectmUcOallocatorlETArtRawTacquilaDataObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anacore_dictLN_vectorlETArtRawTacquilaDataObjectmUcOallocatorlETArtRawTacquilaDataObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mask_t",117,G__get_linked_tagnum(&G__anacore_dictLN_TArtDecodercLcLmask_t),0,G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__anacore_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__anacore_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__anacore_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__anacore_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__anacore_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ArtBlockStat_t",117,G__get_linked_tagnum(&G__anacore_dictLN_ArtBlockStat_t),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ArtFileStat_t",117,G__get_linked_tagnum(&G__anacore_dictLN_ArtFileStat_t),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ArtDataSource_t",117,G__get_linked_tagnum(&G__anacore_dictLN_ArtDataSource_t),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtRawSegmentObject*>",117,G__get_linked_tagnum(&G__anacore_dictLN_vectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anacore_dictLN_vectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anacore_dictLN_vectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtRawScalerObject*>",117,G__get_linked_tagnum(&G__anacore_dictLN_vectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anacore_dictLN_vectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anacore_dictLN_vectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__anacore_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__anacore_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__anacore_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__anacore_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ArtHeader_t",117,G__get_linked_tagnum(&G__anacore_dictLN_TArtParserRIDFcLcLArtHeader_t),0,G__get_linked_tagnum(&G__anacore_dictLN_TArtParserRIDF));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ArtSegIDRIDF_t",117,G__get_linked_tagnum(&G__anacore_dictLN_TArtParserRIDFcLcLArtSegIDRIDF_t),0,G__get_linked_tagnum(&G__anacore_dictLN_TArtParserRIDF));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TArtRawDataObject */
static void G__setup_memvarTArtRawDataObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawDataObject));
   { TArtRawDataObject *p; p=(TArtRawDataObject*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"geo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"channel=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"value=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"edge=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"categoryid=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"detectorid=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"datatype=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCore */
static void G__setup_memvarTArtCore(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtCore));
   { TArtCore *p; p=(TArtCore*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TList),-1,-2,2,"warns=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtRawFADCDataObject */
static void G__setup_memvarTArtRawFADCDataObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawFADCDataObject));
   { TArtRawFADCDataObject *p; p=(TArtRawFADCDataObject*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"channel=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anacore_dictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"timebacket=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anacore_dictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"value=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtRawTacquilaDataObject */
static void G__setup_memvarTArtRawTacquilaDataObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawTacquilaDataObject));
   { TArtRawTacquilaDataObject *p; p=(TArtRawTacquilaDataObject*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"sam=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"gtb=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"module=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"channel=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"adc=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"cycle=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"tac=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtRawSegmentObject */
static void G__setup_memvarTArtRawSegmentObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawSegmentObject));
   { TArtRawSegmentObject *p; p=(TArtRawSegmentObject*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"device=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fp=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"detector=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"module=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"address=",0,"supposed to be same as EFN in DAQ");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"nmodule=",0,"number of modules");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"ngoodmodule=",0,"number of good modules");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"size=",0,"data size");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anacore_dictLN_vectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgR),G__defined_typename("vector<TArtRawDataObject*>"),-1,2,"data_array=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anacore_dictLN_vectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgR),G__defined_typename("vector<TArtRawFADCDataObject*>"),-1,2,"fadcdata_array=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anacore_dictLN_vectorlETArtRawTacquilaDataObjectmUcOallocatorlETArtRawTacquilaDataObjectmUgRsPgR),G__defined_typename("vector<TArtRawTacquilaDataObject*>"),-1,2,"tacquila_data_array=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoder */
static void G__setup_memvarTArtDecoder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder));
   { TArtDecoder *p; p=(TArtDecoder*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fID=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderFactory */
static void G__setup_memvarTArtDecoderFactory(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFactory));
   { TArtDecoderFactory *p; p=(TArtDecoderFactory*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder),-1,-1,4,"fDecoder[64]=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kNDecoder=%lldLL",(long long)TArtDecoderFactory::kNDecoder).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderBigEndianV7XX */
static void G__setup_memvarTArtDecoderBigEndianV7XX(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderBigEndianV7XX));
   { TArtDecoderBigEndianV7XX *p; p=(TArtDecoderBigEndianV7XX*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderBigEndianV7XX::kID).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderFixed16 */
static void G__setup_memvarTArtDecoderFixed16(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFixed16));
   { TArtDecoderFixed16 *p; p=(TArtDecoderFixed16*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderFixed16::kID).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderLUPO */
static void G__setup_memvarTArtDecoderLUPO(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderLUPO));
   { TArtDecoderLUPO *p; p=(TArtDecoderLUPO*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderLUPO::kID).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderP716X */
static void G__setup_memvarTArtDecoderP716X(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderP716X));
   { TArtDecoderP716X *p; p=(TArtDecoderP716X*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderP716X::kID).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderMADC32 */
static void G__setup_memvarTArtDecoderMADC32(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderMADC32));
   { TArtDecoderMADC32 *p; p=(TArtDecoderMADC32*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderMADC32::kID).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderV1740 */
static void G__setup_memvarTArtDecoderV1740(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1740));
   { TArtDecoderV1740 *p; p=(TArtDecoderV1740*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderV1740::kID).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtSemaphore */
static void G__setup_memvarTArtSemaphore(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtSemaphore));
   { TArtSemaphore *p; p=(TArtSemaphore*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fKey=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fID=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fIsValid=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TArtSemaphorecLcLsembuf),-1,-1,4,"fSemaphore=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderV1190 */
static void G__setup_memvarTArtDecoderV1190(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1190));
   { TArtDecoderV1190 *p; p=(TArtDecoderV1190*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderV1190::kID).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kHeaderMask=%lluULL",(unsigned long long)TArtDecoderV1190::kHeaderMask).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kGlobalHeader=%lluULL",(unsigned long long)TArtDecoderV1190::kGlobalHeader).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kTDCHeader=%lluULL",(unsigned long long)TArtDecoderV1190::kTDCHeader).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kTDCMeasurement=%lluULL",(unsigned long long)TArtDecoderV1190::kTDCMeasurement).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kTDCTrailer=%lluULL",(unsigned long long)TArtDecoderV1190::kTDCTrailer).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kTDCError=%lluULL",(unsigned long long)TArtDecoderV1190::kTDCError).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kGlobalTrailer=%lluULL",(unsigned long long)TArtDecoderV1190::kGlobalTrailer).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskGeometry=%lluULL",(unsigned long long)TArtDecoderV1190::kMaskGeometry).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskEventCounter=%lluULL",(unsigned long long)TArtDecoderV1190::kMaskEventCounter).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskBunchID=%lluULL",(unsigned long long)TArtDecoderV1190::kMaskBunchID).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskEventID=%lluULL",(unsigned long long)TArtDecoderV1190::kMaskEventID).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskChannel=%lluULL",(unsigned long long)TArtDecoderV1190::kMaskChannel).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskMeasure=%lluULL",(unsigned long long)TArtDecoderV1190::kMaskMeasure).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskEdgeType=%lluULL",(unsigned long long)TArtDecoderV1190::kMaskEdgeType).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftGeometry=%lldLL",(long long)TArtDecoderV1190::kShiftGeometry).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftEventCounter=%lldLL",(long long)TArtDecoderV1190::kShiftEventCounter).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftBunchID=%lldLL",(long long)TArtDecoderV1190::kShiftBunchID).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftEventID=%lldLL",(long long)TArtDecoderV1190::kShiftEventID).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftChannel=%lldLL",(long long)TArtDecoderV1190::kShiftChannel).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftMeasure=%lldLL",(long long)TArtDecoderV1190::kShiftMeasure).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftEdgeType=%lldLL",(long long)TArtDecoderV1190::kShiftEdgeType).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderV7XX */
static void G__setup_memvarTArtDecoderV7XX(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV7XX));
   { TArtDecoderV7XX *p; p=(TArtDecoderV7XX*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderV7XX::kID).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderCTM405 */
static void G__setup_memvarTArtDecoderCTM405(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderCTM405));
   { TArtDecoderCTM405 *p; p=(TArtDecoderCTM405*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderCTM405::kID).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderV767 */
static void G__setup_memvarTArtDecoderV767(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV767));
   { TArtDecoderV767 *p; p=(TArtDecoderV767*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderV767::kID).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kHeaderMask=%lluULL",(unsigned long long)TArtDecoderV767::kHeaderMask).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kHeader=%lluULL",(unsigned long long)TArtDecoderV767::kHeader).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kDatum=%lluULL",(unsigned long long)TArtDecoderV767::kDatum).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kEOB=%lluULL",(unsigned long long)TArtDecoderV767::kEOB).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kErroor=%lluULL",(unsigned long long)TArtDecoderV767::kErroor).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskGeometry=%lluULL",(unsigned long long)TArtDecoderV767::kMaskGeometry).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskEventNumber=%lluULL",(unsigned long long)TArtDecoderV767::kMaskEventNumber).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskChannel=%lluULL",(unsigned long long)TArtDecoderV767::kMaskChannel).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskDatum=%lluULL",(unsigned long long)TArtDecoderV767::kMaskDatum).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskEdgeType=%lluULL",(unsigned long long)TArtDecoderV767::kMaskEdgeType).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftGeometry=%lldLL",(long long)TArtDecoderV767::kShiftGeometry).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftEventNumber=%lldLL",(long long)TArtDecoderV767::kShiftEventNumber).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftChannel=%lldLL",(long long)TArtDecoderV767::kShiftChannel).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftDatum=%lldLL",(long long)TArtDecoderV767::kShiftDatum).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftEdgeType=%lldLL",(long long)TArtDecoderV767::kShiftEdgeType).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderAMTTDC */
static void G__setup_memvarTArtDecoderAMTTDC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderAMTTDC));
   { TArtDecoderAMTTDC *p; p=(TArtDecoderAMTTDC*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderAMTTDC::kID).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtMath */
static void G__setup_memvarTArtMath(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtMath));
   { TArtMath *p; p=(TArtMath*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderFixed32 */
static void G__setup_memvarTArtDecoderFixed32(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFixed32));
   { TArtDecoderFixed32 *p; p=(TArtDecoderFixed32*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderFixed32::kID).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDataSource */
static void G__setup_memvarTArtDataSource(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDataSource));
   { TArtDataSource *p; p=(TArtDataSource*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaxBufferSize=%lldLL",(long long)TArtDataSource::kMaxBufferSize).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__anacore_dictLN_ArtBlockStat_t),G__defined_typename("ArtBlockStat_t"),-1,2,"fBlockStatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__anacore_dictLN_ArtFileStat_t),G__defined_typename("ArtFileStat_t"),-1,2,"fFileStatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__anacore_dictLN_ArtDataSource_t),G__defined_typename("ArtDataSource_t"),-1,2,"fDataSourceType=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtRawScalerObject */
static void G__setup_memvarTArtRawScalerObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawScalerObject));
   { TArtRawScalerObject *p; p=(TArtRawScalerObject*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"num_channel=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"scaler_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"scaler_date=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"scaler[48]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtRawEventObject */
static void G__setup_memvarTArtRawEventObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawEventObject));
   { TArtRawEventObject *p; p=(TArtRawEventObject*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"run_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"event_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,2,"time_stamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anacore_dictLN_vectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgR),G__defined_typename("vector<TArtRawSegmentObject*>"),-1,2,"segment_array=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anacore_dictLN_vectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgR),G__defined_typename("vector<TArtRawScalerObject*>"),-1,2,"scaler_array=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"nblock=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TString),-1,-1,2,"status_data=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtParser */
static void G__setup_memvarTArtParser(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtParser));
   { TArtParser *p; p=(TArtParser*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaxBufLen=%lldLL",(long long)TArtParser::kMaxBufLen).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,66,0,0,-1,-1,-1,2,"fBlockBuffer=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fOffset=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fNext=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fPrev=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fBlockSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fEOB=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"isSkip=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__anacore_dictLN_ArtEventStat_t),G__defined_typename("ArtEventStat_t"),-1,2,"fEventStatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtParserFactory */
static void G__setup_memvarTArtParserFactory(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtParserFactory));
   { TArtParserFactory *p; p=(TArtParserFactory*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* TArtSharedMemory */
static void G__setup_memvarTArtSharedMemory(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtSharedMemory));
   { TArtSharedMemory *p; p=(TArtSharedMemory*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fKey=",0,"shared memmory key");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fSize=",0,"shared memory size");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fID=",0,"shared memory id");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fIsValid=",0,"flag for validity of shared memory");
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,4,"fSharedMemory=",0,"pointer to shared memory");
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderA3100 */
static void G__setup_memvarTArtDecoderA3100(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderA3100));
   { TArtDecoderA3100 *p; p=(TArtDecoderA3100*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,4,"kHeaderMask=1610612736ULL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderA3100::kID).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtRunInfo */
static void G__setup_memvarTArtRunInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRunInfo));
   { TArtRunInfo *p; p=(TArtRunInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TString),-1,-1,4,"runname=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TString),-1,-1,4,"runnumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TString),-1,-1,4,"starttime=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TString),-1,-1,4,"stoptime=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TString),-1,-1,4,"date=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TString),-1,-1,4,"rev=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TString),-1,-1,4,"header=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TString),-1,-1,4,"ender=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtStoreManager */
static void G__setup_memvarTArtStoreManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtStoreManager));
   { TArtStoreManager *p; p=(TArtStoreManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TList),-1,-1,2,"listOfParameters=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TList),-1,-1,2,"listOfDataContainers=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TArtStoreManager),-1,-2,2,"sStoreManager=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtEventStore */
static void G__setup_memvarTArtEventStore(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtEventStore));
   { TArtEventStore *p; p=(TArtEventStore*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TArtDataSource),-1,-1,4,"fDataSource=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TArtParser),-1,-1,4,"fParser=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TClonesArray),-1,-1,4,"info_array=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TClonesArray),-1,-1,4,"runinfo_array=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TArtRawEventObject),-1,-1,4,"rawevent=",0,(char*)NULL);
   G__memvar_setup((void*)0,71,0,0,-1,-1,-1,4,"pInterrupt=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,4,"fMapFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TArtStoreManager),-1,-1,4,"sman=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtSharedMemoryDataSource */
static void G__setup_memvarTArtSharedMemoryDataSource(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtSharedMemoryDataSource));
   { TArtSharedMemoryDataSource *p; p=(TArtSharedMemoryDataSource*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TArtSharedMemory),-1,-1,4,"fSharedMemory=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TArtSemaphore),-1,-1,4,"fSemaphore=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fNBlock=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fMemoryPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fRunNumber=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderV1290 */
static void G__setup_memvarTArtDecoderV1290(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1290));
   { TArtDecoderV1290 *p; p=(TArtDecoderV1290*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderV1290::kID).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kHeaderMask=%lluULL",(unsigned long long)TArtDecoderV1290::kHeaderMask).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kGlobalHeader=%lluULL",(unsigned long long)TArtDecoderV1290::kGlobalHeader).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kTDCHeader=%lluULL",(unsigned long long)TArtDecoderV1290::kTDCHeader).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kTDCMeasurement=%lluULL",(unsigned long long)TArtDecoderV1290::kTDCMeasurement).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kTDCTrailer=%lluULL",(unsigned long long)TArtDecoderV1290::kTDCTrailer).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kTDCError=%lluULL",(unsigned long long)TArtDecoderV1290::kTDCError).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kGlobalTrailer=%lluULL",(unsigned long long)TArtDecoderV1290::kGlobalTrailer).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskGeometry=%lluULL",(unsigned long long)TArtDecoderV1290::kMaskGeometry).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskEventCounter=%lluULL",(unsigned long long)TArtDecoderV1290::kMaskEventCounter).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskBunchID=%lluULL",(unsigned long long)TArtDecoderV1290::kMaskBunchID).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskEventID=%lluULL",(unsigned long long)TArtDecoderV1290::kMaskEventID).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskChannel=%lluULL",(unsigned long long)TArtDecoderV1290::kMaskChannel).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskMeasure=%lluULL",(unsigned long long)TArtDecoderV1290::kMaskMeasure).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskEdgeType=%lluULL",(unsigned long long)TArtDecoderV1290::kMaskEdgeType).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftGeometry=%lldLL",(long long)TArtDecoderV1290::kShiftGeometry).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftEventCounter=%lldLL",(long long)TArtDecoderV1290::kShiftEventCounter).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftBunchID=%lldLL",(long long)TArtDecoderV1290::kShiftBunchID).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftEventID=%lldLL",(long long)TArtDecoderV1290::kShiftEventID).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftChannel=%lldLL",(long long)TArtDecoderV1290::kShiftChannel).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftMeasure=%lldLL",(long long)TArtDecoderV1290::kShiftMeasure).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftEdgeType=%lldLL",(long long)TArtDecoderV1290::kShiftEdgeType).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDataObject */
static void G__setup_memvarTArtDataObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDataObject));
   { TArtDataObject *p; p=(TArtDataObject*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TString),-1,-1,4,"name=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fDataState=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderP716XZ */
static void G__setup_memvarTArtDecoderP716XZ(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderP716XZ));
   { TArtDecoderP716XZ *p; p=(TArtDecoderP716XZ*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderP716XZ::kID).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderMQDC32 */
static void G__setup_memvarTArtDecoderMQDC32(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderMQDC32));
   { TArtDecoderMQDC32 *p; p=(TArtDecoderMQDC32*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderMQDC32::kID).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtEventInfo */
static void G__setup_memvarTArtEventInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtEventInfo));
   { TArtEventInfo *p; p=(TArtEventInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"runnumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"eventnumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TString),-1,-1,4,"subsysname=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,-1,-1,4,"timestamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"comp_val=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fBit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtParserRDF */
static void G__setup_memvarTArtParserRDF(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtParserRDF));
   { TArtParserRDF *p; p=(TArtParserRDF*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TArtMapper),-1,-1,4,"mapper=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderV550 */
static void G__setup_memvarTArtDecoderV550(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV550));
   { TArtDecoderV550 *p; p=(TArtDecoderV550*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderV550::kID).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kDCNUnit=%lldLL",(long long)TArtDecoderV550::kDCNUnit).data(),0,(char*)NULL);
   G__memvar_setup((void*)(&TArtDecoderV550::kGeoMask),117,0,1,G__get_linked_tagnum(&G__anacore_dictLN_TArtDecodercLcLmask_t),G__defined_typename("mask_t"),-2,1,"kGeoMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&TArtDecoderV550::kNDataMask),117,0,1,G__get_linked_tagnum(&G__anacore_dictLN_TArtDecodercLcLmask_t),G__defined_typename("mask_t"),-2,1,"kNDataMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&TArtDecoderV550::kNChannelMask),117,0,1,G__get_linked_tagnum(&G__anacore_dictLN_TArtDecodercLcLmask_t),G__defined_typename("mask_t"),-2,1,"kNChannelMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&TArtDecoderV550::kValidityMask),117,0,1,G__get_linked_tagnum(&G__anacore_dictLN_TArtDecodercLcLmask_t),G__defined_typename("mask_t"),-2,1,"kValidityMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&TArtDecoderV550::kOverrangeMask),117,0,1,G__get_linked_tagnum(&G__anacore_dictLN_TArtDecodercLcLmask_t),G__defined_typename("mask_t"),-2,1,"kOverrangeMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&TArtDecoderV550::kFifoIdMask),117,0,1,G__get_linked_tagnum(&G__anacore_dictLN_TArtDecodercLcLmask_t),G__defined_typename("mask_t"),-2,1,"kFifoIdMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&TArtDecoderV550::kChannelMask),117,0,1,G__get_linked_tagnum(&G__anacore_dictLN_TArtDecodercLcLmask_t),G__defined_typename("mask_t"),-2,1,"kChannelMask=",0,(char*)NULL);
   G__memvar_setup((void*)(&TArtDecoderV550::kAdcMask),117,0,1,G__get_linked_tagnum(&G__anacore_dictLN_TArtDecodercLcLmask_t),G__defined_typename("mask_t"),-2,1,"kAdcMask=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderMTDC32 */
static void G__setup_memvarTArtDecoderMTDC32(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderMTDC32));
   { TArtDecoderMTDC32 *p; p=(TArtDecoderMTDC32*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderMTDC32::kID).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderDSP */
static void G__setup_memvarTArtDecoderDSP(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderDSP));
   { TArtDecoderDSP *p; p=(TArtDecoderDSP*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderDSP::kID).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtFileDataSource */
static void G__setup_memvarTArtFileDataSource(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtFileDataSource));
   { TArtFileDataSource *p; p=(TArtFileDataSource*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_gzFile_s),G__defined_typename("gzFile"),-1,4,"fFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anacore_dictLN_stat),-1,-1,4,"fFileStat=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fRunNumber=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtRIDFMap */
static void G__setup_memvarTArtRIDFMap(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRIDFMap));
   { TArtRIDFMap *p; p=(TArtRIDFMap*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"device=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"detid=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"geo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"ch=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"mapinfo[64]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderTacquila */
static void G__setup_memvarTArtDecoderTacquila(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderTacquila));
   { TArtDecoderTacquila *p; p=(TArtDecoderTacquila*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderTacquila::kID).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderAD413A */
static void G__setup_memvarTArtDecoderAD413A(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderAD413A));
   { TArtDecoderAD413A *p; p=(TArtDecoderAD413A*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderAD413A::kID).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderFixed24 */
static void G__setup_memvarTArtDecoderFixed24(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFixed24));
   { TArtDecoderFixed24 *p; p=(TArtDecoderFixed24*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderFixed24::kID).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderVmeEasyroc */
static void G__setup_memvarTArtDecoderVmeEasyroc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderVmeEasyroc));
   { TArtDecoderVmeEasyroc *p; p=(TArtDecoderVmeEasyroc*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderVmeEasyroc::kID).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderNeulandTS */
static void G__setup_memvarTArtDecoderNeulandTS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderNeulandTS));
   { TArtDecoderNeulandTS *p; p=(TArtDecoderNeulandTS*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderNeulandTS::kID).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtReconstruction */
static void G__setup_memvarTArtReconstruction(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtReconstruction));
   { TArtReconstruction *p; p=(TArtReconstruction*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TString),-1,-1,2,"outdataname=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fDataLoaded=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fReconstructed=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtParserRIDF */
static void G__setup_memvarTArtParserRIDF(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtParserRIDF));
   { TArtParserRIDF *p; p=(TArtParserRIDF*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TArtParserRIDFcLcLArtHeader_t),G__defined_typename("ArtHeader_t"),-1,4,"fHeader=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderL3377d */
static void G__setup_memvarTArtDecoderL3377d(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderL3377d));
   { TArtDecoderL3377d *p; p=(TArtDecoderL3377d*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderL3377d::kID).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDecoderV1190C */
static void G__setup_memvarTArtDecoderV1190C(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1190C));
   { TArtDecoderV1190C *p; p=(TArtDecoderV1190C*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kID=%lldLL",(long long)TArtDecoderV1190C::kID).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kHeaderMask=%lluULL",(unsigned long long)TArtDecoderV1190C::kHeaderMask).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kGlobalHeader=%lluULL",(unsigned long long)TArtDecoderV1190C::kGlobalHeader).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kTDCHeader=%lluULL",(unsigned long long)TArtDecoderV1190C::kTDCHeader).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kTDCMeasurement=%lluULL",(unsigned long long)TArtDecoderV1190C::kTDCMeasurement).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kTDCTrailer=%lluULL",(unsigned long long)TArtDecoderV1190C::kTDCTrailer).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kTDCError=%lluULL",(unsigned long long)TArtDecoderV1190C::kTDCError).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kGlobalTrailer=%lluULL",(unsigned long long)TArtDecoderV1190C::kGlobalTrailer).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskGeometry=%lluULL",(unsigned long long)TArtDecoderV1190C::kMaskGeometry).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskEventCounter=%lluULL",(unsigned long long)TArtDecoderV1190C::kMaskEventCounter).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskBunchID=%lluULL",(unsigned long long)TArtDecoderV1190C::kMaskBunchID).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskEventID=%lluULL",(unsigned long long)TArtDecoderV1190C::kMaskEventID).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskChannel=%lluULL",(unsigned long long)TArtDecoderV1190C::kMaskChannel).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskMeasure=%lluULL",(unsigned long long)TArtDecoderV1190C::kMaskMeasure).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kMaskEdgeType=%lluULL",(unsigned long long)TArtDecoderV1190C::kMaskEdgeType).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftGeometry=%lldLL",(long long)TArtDecoderV1190C::kShiftGeometry).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftEventCounter=%lldLL",(long long)TArtDecoderV1190C::kShiftEventCounter).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftBunchID=%lldLL",(long long)TArtDecoderV1190C::kShiftBunchID).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftEventID=%lldLL",(long long)TArtDecoderV1190C::kShiftEventID).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftChannel=%lldLL",(long long)TArtDecoderV1190C::kShiftChannel).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftMeasure=%lldLL",(long long)TArtDecoderV1190C::kShiftMeasure).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("kShiftEdgeType=%lldLL",(long long)TArtDecoderV1190C::kShiftEdgeType).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtStreamingDataSource */
static void G__setup_memvarTArtStreamingDataSource(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtStreamingDataSource));
   { TArtStreamingDataSource *p; p=(TArtStreamingDataSource*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TSocket),-1,-1,4,"sock=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anacore_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtUtil */
static void G__setup_memvarTArtUtil(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtUtil));
   { TArtUtil *p; p=(TArtUtil*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvaranacore_dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTArtRawDataObject(void) {
   /* TArtRawDataObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawDataObject));
   G__memfunc_setup("TArtRawDataObject",1654,G__anacore_dict_184_0_1, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtRawDataObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtRawDataObject",1654,G__anacore_dict_184_0_2, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtRawDataObject), -1, 0, 3, 1, 1, 0, 
"i - - 0 - ingeo i - - 0 - inch "
"h - - 0 - inval", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGeo",583,G__anacore_dict_184_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 10 - ingeo", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCh",471,G__anacore_dict_184_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 10 - inch", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetVal",591,G__anacore_dict_184_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 10 - inval", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEdge",673,G__anacore_dict_184_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 10 - inedge", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGeo",571,G__anacore_dict_184_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCh",459,G__anacore_dict_184_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetVal",579,G__anacore_dict_184_0_9, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEdge",661,G__anacore_dict_184_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCategoryID",1271,G__anacore_dict_184_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 10 - incat", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDetectorID",1267,G__anacore_dict_184_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 10 - indet", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDatatypeID",1269,G__anacore_dict_184_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 10 - inid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCategoryID",1259,G__anacore_dict_184_0_14, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDetectorID",1255,G__anacore_dict_184_0_15, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDatatypeID",1257,G__anacore_dict_184_0_16, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,G__anacore_dict_184_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anacore_dict_184_0_18, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtRawDataObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anacore_dict_184_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRawDataObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anacore_dict_184_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtRawDataObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anacore_dict_184_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtRawDataObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anacore_dict_184_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anacore_dict_184_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRawDataObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anacore_dict_184_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRawDataObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anacore_dict_184_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRawDataObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anacore_dict_184_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRawDataObject::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtRawDataObject", 1654, G__anacore_dict_184_0_30, (int) ('i'), G__get_linked_tagnum(&G__anacore_dictLN_TArtRawDataObject), -1, 0, 1, 1, 1, 0, "u 'TArtRawDataObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtRawDataObject", 1780, G__anacore_dict_184_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_184_0_32, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtRawDataObject), -1, 1, 1, 1, 1, 0, "u 'TArtRawDataObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCore(void) {
   /* TArtCore */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtCore));
   G__memfunc_setup("TArtCore",772,G__anacore_dict_185_0_1, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtCore), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Debug",487,G__anacore_dict_185_0_2, 121, -1, -1, 0, 2, 10, 1, 0, 
"C - - 10 - cname C - - 10 - fmt", (char*)NULL, (void*) G__func2void( (void (*)(const char*, const char*))(&TArtCore::Debug) ), 0);
   G__memfunc_setup("Info",396,G__anacore_dict_185_0_3, 121, -1, -1, 0, 2, 10, 1, 0, 
"C - - 10 - cname C - - 10 - fmt", (char*)NULL, (void*) G__func2void( (void (*)(const char*, const char*))(&TArtCore::Info) ), 0);
   G__memfunc_setup("Error",522,G__anacore_dict_185_0_4, 121, -1, -1, 0, 2, 10, 1, 0, 
"C - - 10 - cname C - - 10 - fmt", (char*)NULL, (void*) G__func2void( (void (*)(const char*, const char*))(&TArtCore::Error) ), 0);
   G__memfunc_setup("Warning",726,G__anacore_dict_185_0_5, 121, -1, -1, 0, 2, 10, 1, 0, 
"C - - 10 - cname C - - 10 - fmt", (char*)NULL, (void*) G__func2void( (void (*)(const char*, const char*))(&TArtCore::Warning) ), 0);
   G__memfunc_setup("WarnList",820,G__anacore_dict_185_0_6, 85, G__get_linked_tagnum(&G__anacore_dictLN_TList), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TList* (*)())(&TArtCore::WarnList) ), 0);
   G__memfunc_setup("Class",502,G__anacore_dict_185_0_7, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCore::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anacore_dict_185_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCore::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anacore_dict_185_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCore::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anacore_dict_185_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCore::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__anacore_dict_185_0_11, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__anacore_dict_185_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__anacore_dict_185_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anacore_dict_185_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anacore_dict_185_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCore::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anacore_dict_185_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCore::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anacore_dict_185_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCore::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anacore_dict_185_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCore::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCore", 772, G__anacore_dict_185_0_19, (int) ('i'), G__get_linked_tagnum(&G__anacore_dictLN_TArtCore), -1, 0, 1, 1, 1, 0, "u 'TArtCore' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCore", 898, G__anacore_dict_185_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_185_0_21, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtCore), -1, 1, 1, 1, 1, 0, "u 'TArtCore' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtRawFADCDataObject(void) {
   /* TArtRawFADCDataObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawFADCDataObject));
   G__memfunc_setup("TArtRawFADCDataObject",1924,G__anacore_dict_187_0_1, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtRawFADCDataObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtRawFADCDataObject",1924,G__anacore_dict_187_0_2, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtRawFADCDataObject), -1, 0, 1, 1, 1, 0, "i - - 0 - inch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh",471,G__anacore_dict_187_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 10 - inch", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddVal",556,G__anacore_dict_187_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 10 - tb i - - 10 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCh",459,G__anacore_dict_187_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNData",744,G__anacore_dict_187_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTimeBacket",1273,G__anacore_dict_187_0_7, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetVal",579,G__anacore_dict_187_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DumpVal",697,G__anacore_dict_187_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anacore_dict_187_0_10, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtRawFADCDataObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anacore_dict_187_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRawFADCDataObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anacore_dict_187_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtRawFADCDataObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anacore_dict_187_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtRawFADCDataObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anacore_dict_187_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anacore_dict_187_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRawFADCDataObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anacore_dict_187_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRawFADCDataObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anacore_dict_187_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRawFADCDataObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anacore_dict_187_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRawFADCDataObject::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtRawFADCDataObject", 1924, G__anacore_dict_187_0_22, (int) ('i'), 
G__get_linked_tagnum(&G__anacore_dictLN_TArtRawFADCDataObject), -1, 0, 1, 1, 1, 0, "u 'TArtRawFADCDataObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtRawFADCDataObject", 2050, G__anacore_dict_187_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_187_0_24, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtRawFADCDataObject), -1, 1, 1, 1, 1, 0, "u 'TArtRawFADCDataObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtRawTacquilaDataObject(void) {
   /* TArtRawTacquilaDataObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawTacquilaDataObject));
   G__memfunc_setup("TArtRawTacquilaDataObject",2474,G__anacore_dict_192_0_1, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtRawTacquilaDataObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtRawTacquilaDataObject",2474,G__anacore_dict_192_0_2, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtRawTacquilaDataObject), -1, 0, 7, 1, 1, 0, 
"i - - 0 - insam i - - 0 - ingtb "
"i - - 0 - inmod i - - 0 - inch "
"i - - 0 - inadc i - - 0 - incycle "
"i - - 0 - intac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSam",589,G__anacore_dict_192_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 10 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGtb",585,G__anacore_dict_192_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 10 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetModule",914,G__anacore_dict_192_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 10 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetChannel",997,G__anacore_dict_192_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 10 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAdc",564,G__anacore_dict_192_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 10 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCycle",796,G__anacore_dict_192_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 10 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTac",580,G__anacore_dict_192_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 10 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSam",577,G__anacore_dict_192_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGtb",573,G__anacore_dict_192_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModule",902,G__anacore_dict_192_0_12, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChannel",985,G__anacore_dict_192_0_13, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAdc",552,G__anacore_dict_192_0_14, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCycle",784,G__anacore_dict_192_0_15, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTac",568,G__anacore_dict_192_0_16, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,G__anacore_dict_192_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DumpVal",697,G__anacore_dict_192_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anacore_dict_192_0_19, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtRawTacquilaDataObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anacore_dict_192_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRawTacquilaDataObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anacore_dict_192_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtRawTacquilaDataObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anacore_dict_192_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtRawTacquilaDataObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anacore_dict_192_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anacore_dict_192_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRawTacquilaDataObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anacore_dict_192_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRawTacquilaDataObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anacore_dict_192_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRawTacquilaDataObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anacore_dict_192_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRawTacquilaDataObject::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtRawTacquilaDataObject", 2474, G__anacore_dict_192_0_31, (int) ('i'), 
G__get_linked_tagnum(&G__anacore_dictLN_TArtRawTacquilaDataObject), -1, 0, 1, 1, 1, 0, "u 'TArtRawTacquilaDataObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtRawTacquilaDataObject", 2600, G__anacore_dict_192_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_192_0_33, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtRawTacquilaDataObject), -1, 1, 1, 1, 1, 0, "u 'TArtRawTacquilaDataObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtRawSegmentObject(void) {
   /* TArtRawSegmentObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawSegmentObject));
   G__memfunc_setup("TArtRawSegmentObject",1999,G__anacore_dict_193_0_1, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtRawSegmentObject), -1, 0, 4, 1, 1, 0, 
"h - - 10 - indev h - - 10 - infp "
"h - - 10 - indet h - - 10 - inmod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtRawSegmentObject",1999,G__anacore_dict_193_0_2, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtRawSegmentObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSegmentID",1164,G__anacore_dict_193_0_3, 121, -1, -1, 0, 4, 1, 1, 0, 
"h - - 10 - indev h - - 10 - infp "
"h - - 10 - indet h - - 10 - inmod", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDevice",880,G__anacore_dict_193_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFP",438,G__anacore_dict_193_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDetector",1114,G__anacore_dict_193_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModule",902,G__anacore_dict_193_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,G__anacore_dict_193_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAddress",998,G__anacore_dict_193_0_9, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAddress",1010,G__anacore_dict_193_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataSize",1077,G__anacore_dict_193_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDataSize",1089,G__anacore_dict_193_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumModule",1206,G__anacore_dict_193_0_13, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNumModule",1218,G__anacore_dict_193_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumGoodModule",1599,G__anacore_dict_193_0_15, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNumGoodModule",1611,G__anacore_dict_193_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PutData",691,G__anacore_dict_193_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawDataObject' - 0 - indata", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetData",666,G__anacore_dict_193_0_18, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtRawDataObject), -1, 0, 1, 1, 1, 0, "i - - 0 - nn", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumData",970,G__anacore_dict_193_0_19, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PutFADCData",961,G__anacore_dict_193_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawFADCDataObject' - 0 - indata", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFADCData",936,G__anacore_dict_193_0_21, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtRawFADCDataObject), -1, 0, 1, 1, 1, 0, "i - - 0 - nn", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumFADCData",1240,G__anacore_dict_193_0_22, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PutTacquilaData",1511,G__anacore_dict_193_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawTacquilaDataObject' - 0 - indata", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTacquilaData",1486,G__anacore_dict_193_0_24, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtRawTacquilaDataObject), -1, 0, 1, 1, 1, 0, "i - - 0 - nn", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumTacquilaData",1790,G__anacore_dict_193_0_25, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anacore_dict_193_0_26, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtRawSegmentObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anacore_dict_193_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRawSegmentObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anacore_dict_193_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtRawSegmentObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anacore_dict_193_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtRawSegmentObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anacore_dict_193_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anacore_dict_193_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRawSegmentObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anacore_dict_193_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRawSegmentObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anacore_dict_193_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRawSegmentObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anacore_dict_193_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRawSegmentObject::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtRawSegmentObject", 1999, G__anacore_dict_193_0_38, (int) ('i'), G__get_linked_tagnum(&G__anacore_dictLN_TArtRawSegmentObject), -1, 0, 1, 1, 1, 0, "u 'TArtRawSegmentObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtRawSegmentObject", 2125, G__anacore_dict_193_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_193_0_40, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtRawSegmentObject), -1, 1, 1, 1, 1, 0, "u 'TArtRawSegmentObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoder(void) {
   /* TArtDecoder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder));
   G__memfunc_setup("GetID",429,G__anacore_dict_206_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Decode",580,G__anacore_dict_206_0_4, 105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buffer h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetMaskedData32",1364,G__anacore_dict_206_0_5, 104, -1, -1, 0, 2, 1, 1, 0, 
"h - - 0 - data u 'TArtDecoder::mask_t' 'TArtDecoder::mask_t' 0 - mask", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtDecoder", 1199, G__anacore_dict_206_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_206_0_7, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 1, 1, 1, 1, 0, "u 'TArtDecoder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderFactory(void) {
   /* TArtDecoderFactory */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFactory));
   G__memfunc_setup("Instance",821,G__anacore_dict_208_0_1, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFactory), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoderFactory* (*)())(&TArtDecoderFactory::Instance) ), 0);
   G__memfunc_setup("GetDecoder",982,G__anacore_dict_208_0_2, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 1, 1, 1, 0, "i - - 11 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Register",837,G__anacore_dict_208_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Register",837,G__anacore_dict_208_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtDecoder' - 0 - decoder", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderFactory",1801,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFactory), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderFactory",1801,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFactory), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderFactory' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderFactory", 1927, G__anacore_dict_208_0_7, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_208_0_8, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFactory), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderFactory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderBigEndianV7XX(void) {
   /* TArtDecoderBigEndianV7XX */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderBigEndianV7XX));
   G__memfunc_setup("TArtDecoderBigEndianV7XX",2255,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderBigEndianV7XX), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderBigEndianV7XX",2255,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderBigEndianV7XX), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderBigEndianV7XX' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_209_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderBigEndianV7XX::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderBigEndianV7XX", 2381, G__anacore_dict_209_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_209_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderBigEndianV7XX), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderBigEndianV7XX' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderFixed16(void) {
   /* TArtDecoderFixed16 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFixed16));
   G__memfunc_setup("TArtDecoderFixed16",1672,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFixed16), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderFixed16",1672,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFixed16), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderFixed16' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_210_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderFixed16::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderFixed16", 1798, G__anacore_dict_210_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_210_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFixed16), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderFixed16' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderLUPO(void) {
   /* TArtDecoderLUPO */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderLUPO));
   G__memfunc_setup("TArtDecoderLUPO",1393,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderLUPO), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderLUPO",1393,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderLUPO), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderLUPO' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_211_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderLUPO::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderLUPO", 1519, G__anacore_dict_211_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_211_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderLUPO), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderLUPO' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderP716X(void) {
   /* TArtDecoderP716X */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderP716X));
   G__memfunc_setup("TArtDecoderP716X",1399,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderP716X), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderP716X",1399,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderP716X), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderP716X' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_212_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderP716X::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderP716X", 1525, G__anacore_dict_212_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_212_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderP716X), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderP716X' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderMADC32(void) {
   /* TArtDecoderMADC32 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderMADC32));
   G__memfunc_setup("TArtDecoderMADC32",1451,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderMADC32), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderMADC32",1451,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderMADC32), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderMADC32' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_213_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderMADC32::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderMADC32", 1577, G__anacore_dict_213_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_213_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderMADC32), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderMADC32' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderV1740(void) {
   /* TArtDecoderV1740 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1740));
   G__memfunc_setup("TArtDecoderV1740",1363,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1740), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderV1740",1363,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1740), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderV1740' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_214_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderV1740::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PutData",691,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 4, 1, 4, 0, 
"I - - 0 - ich I - - 0 - tb "
"i - - 0 - val U 'TArtRawFADCDataObject' - 0 - rdata", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderV1740", 1489, G__anacore_dict_214_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_214_0_7, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1740), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderV1740' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtSemaphore(void) {
   /* TArtSemaphore */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtSemaphore));
   G__memfunc_setup("TArtSemaphore",1311,G__anacore_dict_215_0_1, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtSemaphore), -1, 0, 1, 1, 1, 0, "i - - 0 - semkey", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Lock",393,G__anacore_dict_215_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unlock",620,G__anacore_dict_215_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValid",684,G__anacore_dict_215_0_4, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TArtSemaphore", 1311, G__anacore_dict_215_0_5, (int) ('i'), G__get_linked_tagnum(&G__anacore_dictLN_TArtSemaphore), -1, 0, 1, 1, 1, 0, "u 'TArtSemaphore' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtSemaphore", 1437, G__anacore_dict_215_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_215_0_7, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtSemaphore), -1, 1, 1, 1, 1, 0, "u 'TArtSemaphore' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderV1190(void) {
   /* TArtDecoderV1190 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1190));
   G__memfunc_setup("TArtDecoderV1190",1362,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1190), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderV1190",1362,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1190), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderV1190' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_217_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderV1190::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderV1190", 1488, G__anacore_dict_217_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_217_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1190), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderV1190' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderV7XX(void) {
   /* TArtDecoderV7XX */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV7XX));
   G__memfunc_setup("TArtDecoderV7XX",1390,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV7XX), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderV7XX",1390,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV7XX), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderV7XX' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_218_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderV7XX::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderV7XX", 1516, G__anacore_dict_218_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_218_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV7XX), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderV7XX' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderCTM405(void) {
   /* TArtDecoderCTM405 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderCTM405));
   G__memfunc_setup("TArtDecoderCTM405",1454,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderCTM405), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderCTM405",1454,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderCTM405), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderCTM405' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_219_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderCTM405::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderCTM405", 1580, G__anacore_dict_219_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_219_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderCTM405), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderCTM405' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderV767(void) {
   /* TArtDecoderV767 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV767));
   G__memfunc_setup("TArtDecoderV767",1323,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV767), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderV767",1323,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV767), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderV767' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_220_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderV767::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderV767", 1449, G__anacore_dict_220_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_220_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV767), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderV767' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderAMTTDC(void) {
   /* TArtDecoderAMTTDC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderAMTTDC));
   G__memfunc_setup("TArtDecoderAMTTDC",1518,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderAMTTDC), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderAMTTDC",1518,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderAMTTDC), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderAMTTDC' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_221_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderAMTTDC::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderAMTTDC", 1644, G__anacore_dict_221_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_221_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderAMTTDC), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderAMTTDC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtMath(void) {
   /* TArtMath */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtMath));
   G__memfunc_setup("TArtMath",773,G__anacore_dict_254_0_1, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtMath), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvalidNum",1015,G__anacore_dict_254_0_2, 100, -1, -1, 0, 0, 3, 1, 0, "", "invalid number for REAL valiables.  ", (void*) G__func2void( (double (*)())(&TArtMath::InvalidNum) ), 0);
   G__memfunc_setup("IsValidNum",988,G__anacore_dict_254_0_3, 103, -1, -1, 0, 1, 3, 1, 0, "d - - 0 - x", "invalid number for REAL valiables.", (void*) G__func2void( (bool (*)(double))(&TArtMath::IsValidNum) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtMath", 773, G__anacore_dict_254_0_4, (int) ('i'), G__get_linked_tagnum(&G__anacore_dictLN_TArtMath), -1, 0, 1, 1, 1, 0, "u 'TArtMath' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtMath", 899, G__anacore_dict_254_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_254_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtMath), -1, 1, 1, 1, 1, 0, "u 'TArtMath' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderFixed32(void) {
   /* TArtDecoderFixed32 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFixed32));
   G__memfunc_setup("TArtDecoderFixed32",1670,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFixed32), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderFixed32",1670,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFixed32), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderFixed32' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_255_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderFixed32::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderFixed32", 1796, G__anacore_dict_255_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_255_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFixed32), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderFixed32' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDataSource(void) {
   /* TArtDataSource */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDataSource));
   G__memfunc_setup("SMOpen",562,G__anacore_dict_260_0_1, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 10 '0' sid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FileOpen",786,G__anacore_dict_260_0_2, 103, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '0' sourceName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SocketOpen",1019,G__anacore_dict_260_0_3, 103, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 '0' hostname i - - 10 '0' port "
"g - - 10 'false' fromlast", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRunNumber",1214,G__anacore_dict_260_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Close",502,G__anacore_dict_260_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Read",380,G__anacore_dict_260_0_6, 105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 0 - buf i - - 11 - size "
"i - - 11 '0' offset", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Seek",392,G__anacore_dict_260_0_7, 105, -1, -1, 0, 2, 1, 1, 0, 
"l - - 0 - offset i - - 0 - origin", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("IsPrepared",1007,G__anacore_dict_260_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Wait",405,G__anacore_dict_260_0_9, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBlockStatus",1435,G__anacore_dict_260_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'ArtBlockStat_t' 'ArtBlockStat_t' 0 - estat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFileStatus",1328,G__anacore_dict_260_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'ArtFileStat_t' 'ArtFileStat_t' 0 - estat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBlockStatus",1423,G__anacore_dict_260_0_12, 105, G__get_linked_tagnum(&G__anacore_dictLN_ArtBlockStat_t), G__defined_typename("ArtBlockStat_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileStatus",1316,G__anacore_dict_260_0_13, 105, G__get_linked_tagnum(&G__anacore_dictLN_ArtFileStat_t), G__defined_typename("ArtFileStat_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataSourceType",1709,G__anacore_dict_260_0_14, 105, G__get_linked_tagnum(&G__anacore_dictLN_ArtDataSource_t), G__defined_typename("ArtDataSource_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtDataSource", 1508, G__anacore_dict_260_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_260_0_17, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDataSource), -1, 1, 1, 1, 1, 0, "u 'TArtDataSource' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtRawScalerObject(void) {
   /* TArtRawScalerObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawScalerObject));
   G__memfunc_setup("TArtRawScalerObject",1878,G__anacore_dict_261_0_1, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtRawScalerObject), -1, 0, 3, 1, 1, 0, 
"i - - 10 - nch i - - 10 - sid "
"i - - 10 - dd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtRawScalerObject",1878,G__anacore_dict_261_0_2, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtRawScalerObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetScalerDate",1284,G__anacore_dict_261_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 10 - dd", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetScalerID",1043,G__anacore_dict_261_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 10 - sid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNumChannel",1301,G__anacore_dict_261_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 10 - nch", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumChannel",1289,G__anacore_dict_261_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetScalerID",1031,G__anacore_dict_261_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetScalerDate",1272,G__anacore_dict_261_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetScaler",902,G__anacore_dict_261_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - nn i - - 0 - ss", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetScaler",890,G__anacore_dict_261_0_10, 73, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetScaler",890,G__anacore_dict_261_0_11, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nn", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,G__anacore_dict_261_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anacore_dict_261_0_13, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtRawScalerObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anacore_dict_261_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRawScalerObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anacore_dict_261_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtRawScalerObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anacore_dict_261_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtRawScalerObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anacore_dict_261_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anacore_dict_261_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRawScalerObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anacore_dict_261_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRawScalerObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anacore_dict_261_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRawScalerObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anacore_dict_261_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRawScalerObject::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtRawScalerObject", 1878, G__anacore_dict_261_0_25, (int) ('i'), G__get_linked_tagnum(&G__anacore_dictLN_TArtRawScalerObject), -1, 0, 1, 1, 1, 0, "u 'TArtRawScalerObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtRawScalerObject", 2004, G__anacore_dict_261_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_261_0_27, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtRawScalerObject), -1, 1, 1, 1, 1, 0, "u 'TArtRawScalerObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtRawEventObject(void) {
   /* TArtRawEventObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRawEventObject));
   G__memfunc_setup("TArtRawEventObject",1790,G__anacore_dict_262_0_1, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtRawEventObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PutSegment",1036,G__anacore_dict_262_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - seg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PutScaler",915,G__anacore_dict_262_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawScalerObject' - 0 - scl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSegment",1011,G__anacore_dict_262_0_4, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtRawSegmentObject), -1, 0, 1, 1, 1, 0, "i - - 0 - nn", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetScaler",890,G__anacore_dict_262_0_5, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtRawScalerObject), -1, 0, 1, 1, 1, 0, "i - - 0 - nn", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,G__anacore_dict_262_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__anacore_dict_262_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumSeg",879,G__anacore_dict_262_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumScaler",1194,G__anacore_dict_262_0_9, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRunNumber",1226,G__anacore_dict_262_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - runnum", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRunNumber",1214,G__anacore_dict_262_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEventNumber",1431,G__anacore_dict_262_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - evenum", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEventNumber",1419,G__anacore_dict_262_0_13, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTimeStamp",1216,G__anacore_dict_262_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "m - - 0 - tstamp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTimeStamp",1204,G__anacore_dict_262_0_15, 109, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddNumBlock",1060,G__anacore_dict_262_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumBlock",1083,G__anacore_dict_262_0_17, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStatusData",1310,G__anacore_dict_262_0_18, 85, G__get_linked_tagnum(&G__anacore_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CopyStatusData",1433,G__anacore_dict_262_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"B - - 0 - org k - 'size_t' 0 - size", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anacore_dict_262_0_20, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtRawEventObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anacore_dict_262_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRawEventObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anacore_dict_262_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtRawEventObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anacore_dict_262_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtRawEventObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anacore_dict_262_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anacore_dict_262_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRawEventObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anacore_dict_262_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRawEventObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anacore_dict_262_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRawEventObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anacore_dict_262_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRawEventObject::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtRawEventObject", 1790, G__anacore_dict_262_0_32, (int) ('i'), G__get_linked_tagnum(&G__anacore_dictLN_TArtRawEventObject), -1, 0, 1, 1, 1, 0, "u 'TArtRawEventObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtRawEventObject", 1916, G__anacore_dict_262_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_262_0_34, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtRawEventObject), -1, 1, 1, 1, 1, 0, "u 'TArtRawEventObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtParser(void) {
   /* TArtParser */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtParser));
   G__memfunc_setup("Parse",507,G__anacore_dict_271_0_2, 103, -1, -1, 0, 2, 1, 1, 0, 
"U 'TArtDataSource' - 0 - source U 'TArtRawEventObject' - 0 - raweve", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CopyPrevEvent",1338,G__anacore_dict_271_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - dest", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetSkip",707,G__anacore_dict_271_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - flag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNextBlock",1194,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TArtDataSource' - 0 - source", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetNextEvent",1217,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 2, 0, "U 'TArtRawEventObject' - 0 - raweve", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__anacore_dict_271_0_7, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtParser::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anacore_dict_271_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtParser::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anacore_dict_271_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtParser::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anacore_dict_271_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtParser::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__anacore_dict_271_0_11, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__anacore_dict_271_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__anacore_dict_271_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anacore_dict_271_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anacore_dict_271_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtParser::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anacore_dict_271_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtParser::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anacore_dict_271_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtParser::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anacore_dict_271_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtParser::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TArtParser", 1126, G__anacore_dict_271_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_271_0_20, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtParser), -1, 1, 1, 1, 1, 0, "u 'TArtParser' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtParserFactory(void) {
   /* TArtParserFactory */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtParserFactory));
   G__memfunc_setup("Create",596,G__anacore_dict_272_0_1, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtParser), -1, 0, 1, 3, 1, 0, "U 'TArtDataSource' - 0 - source", (char*)NULL, (void*) G__func2void( (TArtParser* (*)(TArtDataSource*))(&TArtParserFactory::Create) ), 0);
   G__memfunc_setup("TArtParserFactory",1728,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtParserFactory), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TArtParserFactory", 1728, G__anacore_dict_272_0_3, (int) ('i'), G__get_linked_tagnum(&G__anacore_dictLN_TArtParserFactory), -1, 0, 1, 1, 1, 0, "u 'TArtParserFactory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtParserFactory", 1854, G__anacore_dict_272_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_272_0_5, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtParserFactory), -1, 1, 1, 1, 1, 0, "u 'TArtParserFactory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtSharedMemory(void) {
   /* TArtSharedMemory */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtSharedMemory));
   G__memfunc_setup("TArtSharedMemory",1611,G__anacore_dict_273_0_1, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtSharedMemory), -1, 0, 2, 1, 1, 0, 
"i - - 0 - shmkey i - - 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSize",699,G__anacore_dict_273_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Read",380,G__anacore_dict_273_0_3, 105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 0 - buf i - - 0 - size "
"i - - 0 '0' offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Delete",595,G__anacore_dict_273_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValid",684,G__anacore_dict_273_0_5, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TArtSharedMemory", 1611, G__anacore_dict_273_0_6, (int) ('i'), G__get_linked_tagnum(&G__anacore_dictLN_TArtSharedMemory), -1, 0, 1, 1, 1, 0, "u 'TArtSharedMemory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtSharedMemory", 1737, G__anacore_dict_273_0_7, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_273_0_8, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtSharedMemory), -1, 1, 1, 1, 1, 0, "u 'TArtSharedMemory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderA3100(void) {
   /* TArtDecoderA3100 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderA3100));
   G__memfunc_setup("TArtDecoderA3100",1334,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderA3100), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderA3100",1334,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderA3100), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderA3100' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_274_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderA3100::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderA3100", 1460, G__anacore_dict_274_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_274_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderA3100), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderA3100' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtRunInfo(void) {
   /* TArtRunInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRunInfo));
   G__memfunc_setup("TArtRunInfo",1084,G__anacore_dict_275_0_1, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtRunInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__anacore_dict_275_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRunName",994,G__anacore_dict_275_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRunNumber",1226,G__anacore_dict_275_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetStartTime",1225,G__anacore_dict_275_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetStopTime",1121,G__anacore_dict_275_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDate",682,G__anacore_dict_275_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHeader",885,G__anacore_dict_275_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEnder",794,G__anacore_dict_275_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRunName",982,G__anacore_dict_275_0_10, 85, G__get_linked_tagnum(&G__anacore_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRunNumber",1214,G__anacore_dict_275_0_11, 85, G__get_linked_tagnum(&G__anacore_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStartTime",1213,G__anacore_dict_275_0_12, 85, G__get_linked_tagnum(&G__anacore_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStopTime",1109,G__anacore_dict_275_0_13, 85, G__get_linked_tagnum(&G__anacore_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDate",670,G__anacore_dict_275_0_14, 85, G__get_linked_tagnum(&G__anacore_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHeader",873,G__anacore_dict_275_0_15, 85, G__get_linked_tagnum(&G__anacore_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnder",782,G__anacore_dict_275_0_16, 85, G__get_linked_tagnum(&G__anacore_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anacore_dict_275_0_17, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtRunInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anacore_dict_275_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRunInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anacore_dict_275_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtRunInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anacore_dict_275_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtRunInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anacore_dict_275_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anacore_dict_275_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRunInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anacore_dict_275_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRunInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anacore_dict_275_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRunInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anacore_dict_275_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRunInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtRunInfo", 1084, G__anacore_dict_275_0_29, (int) ('i'), G__get_linked_tagnum(&G__anacore_dictLN_TArtRunInfo), -1, 0, 1, 1, 1, 0, "u 'TArtRunInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtRunInfo", 1210, G__anacore_dict_275_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_275_0_31, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtRunInfo), -1, 1, 1, 1, 1, 0, "u 'TArtRunInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtStoreManager(void) {
   /* TArtStoreManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtStoreManager));
   G__memfunc_setup("TArtStoreManager",1603,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtStoreManager), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_581_0_2, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtStoreManager), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtStoreManager* (*)())(&TArtStoreManager::Instance) ), 0);
   G__memfunc_setup("AddParameters",1309,G__anacore_dict_581_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TNamed' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddDataContainer",1574,G__anacore_dict_581_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawEventObject' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddDataContainer",1574,G__anacore_dict_581_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TClonesArray' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RegistDataToTree",1595,G__anacore_dict_581_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadDataFromTree",1566,G__anacore_dict_581_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindParameters",1429,G__anacore_dict_581_0_8, 85, G__get_linked_tagnum(&G__anacore_dictLN_TNamed), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindDataContainer",1694,G__anacore_dict_581_0_9, 85, G__get_linked_tagnum(&G__anacore_dictLN_TNamed), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("RemoveDataContainer",1931,G__anacore_dict_581_0_10, 85, G__get_linked_tagnum(&G__anacore_dictLN_TNamed), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anacore_dict_581_0_11, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtStoreManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anacore_dict_581_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtStoreManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anacore_dict_581_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtStoreManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anacore_dict_581_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtStoreManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__anacore_dict_581_0_15, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__anacore_dict_581_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__anacore_dict_581_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anacore_dict_581_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anacore_dict_581_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtStoreManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anacore_dict_581_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtStoreManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anacore_dict_581_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtStoreManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anacore_dict_581_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtStoreManager::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtStoreManager", 1603, G__anacore_dict_581_0_23, (int) ('i'), G__get_linked_tagnum(&G__anacore_dictLN_TArtStoreManager), -1, 0, 1, 1, 1, 0, "u 'TArtStoreManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtStoreManager", 1729, G__anacore_dict_581_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_581_0_25, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtStoreManager), -1, 1, 1, 1, 1, 0, "u 'TArtStoreManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtEventStore(void) {
   /* TArtEventStore */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtEventStore));
   G__memfunc_setup("Open",402,G__anacore_dict_582_0_1, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Open",402,G__anacore_dict_582_0_2, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 10 - sid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Open",402,G__anacore_dict_582_0_3, 103, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Open",402,G__anacore_dict_582_0_4, 103, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - hostname i - - 10 - port", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearData",865,G__anacore_dict_582_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInterrupt",1273,G__anacore_dict_582_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "G - - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextEvent",1217,G__anacore_dict_582_0_7, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SkipEvent",921,G__anacore_dict_582_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - neve", "function to skip events", (void*) NULL, 0);
   G__memfunc_setup("GetRawEventObject",1699,G__anacore_dict_582_0_9, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtRawEventObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventInfoArray",1709,G__anacore_dict_582_0_10, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunInfo",993,G__anacore_dict_582_0_11, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtRunInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetObjectPointer",1636,G__anacore_dict_582_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawEventObject' - 0 - raweve", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtEventStore",1418,G__anacore_dict_582_0_13, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtEventStore), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anacore_dict_582_0_14, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtEventStore::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anacore_dict_582_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtEventStore::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anacore_dict_582_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtEventStore::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anacore_dict_582_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtEventStore::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__anacore_dict_582_0_18, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__anacore_dict_582_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__anacore_dict_582_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anacore_dict_582_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anacore_dict_582_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtEventStore::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anacore_dict_582_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtEventStore::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anacore_dict_582_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtEventStore::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anacore_dict_582_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtEventStore::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtEventStore", 1418, G__anacore_dict_582_0_26, (int) ('i'), G__get_linked_tagnum(&G__anacore_dictLN_TArtEventStore), -1, 0, 1, 1, 1, 0, "u 'TArtEventStore' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtEventStore", 1544, G__anacore_dict_582_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_582_0_28, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtEventStore), -1, 1, 1, 1, 1, 0, "u 'TArtEventStore' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtSharedMemoryDataSource(void) {
   /* TArtSharedMemoryDataSource */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtSharedMemoryDataSource));
   G__memfunc_setup("TArtSharedMemoryDataSource",2614,G__anacore_dict_583_0_1, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtSharedMemoryDataSource), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunNumber",1214,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SMOpen",562,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "i - - 10 '0' sid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Close",502,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Read",380,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 0 - buf i - - 11 - size "
"i - - 11 '0' offset", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Seek",392,(G__InterfaceMethod) NULL,105, -1, -1, 0, 2, 1, 1, 0, 
"l - - 0 - offset i - - 0 - origin", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsPrepared",1007,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Wait",405,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("TArtSharedMemoryDataSource", 2614, G__anacore_dict_583_0_9, (int) ('i'), 
G__get_linked_tagnum(&G__anacore_dictLN_TArtSharedMemoryDataSource), -1, 0, 1, 1, 1, 0, "u 'TArtSharedMemoryDataSource' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtSharedMemoryDataSource", 2740, G__anacore_dict_583_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_583_0_11, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtSharedMemoryDataSource), -1, 1, 1, 1, 1, 0, "u 'TArtSharedMemoryDataSource' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderV1290(void) {
   /* TArtDecoderV1290 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1290));
   G__memfunc_setup("TArtDecoderV1290",1363,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1290), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderV1290",1363,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1290), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderV1290' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_584_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderV1290::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderV1290", 1489, G__anacore_dict_584_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_584_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1290), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderV1290' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDataObject(void) {
   /* TArtDataObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDataObject));
   G__memfunc_setup("TArtDataObject",1356,G__anacore_dict_585_0_1, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDataObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetID",441,G__anacore_dict_585_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFpl",590,G__anacore_dict_585_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDetectorName",1511,G__anacore_dict_585_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDataState",1191,G__anacore_dict_585_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetID",429,G__anacore_dict_585_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFpl",578,G__anacore_dict_585_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDetectorName",1499,G__anacore_dict_585_0_8, 85, G__get_linked_tagnum(&G__anacore_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDataState",1179,G__anacore_dict_585_0_9, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsDataValid",1062,G__anacore_dict_585_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anacore_dict_585_0_11, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtDataObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anacore_dict_585_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtDataObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anacore_dict_585_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtDataObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anacore_dict_585_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtDataObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anacore_dict_585_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anacore_dict_585_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtDataObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anacore_dict_585_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtDataObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anacore_dict_585_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtDataObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anacore_dict_585_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtDataObject::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtDataObject", 1356, G__anacore_dict_585_0_23, (int) ('i'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDataObject), -1, 0, 1, 1, 1, 0, "u 'TArtDataObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtDataObject", 1482, G__anacore_dict_585_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_585_0_25, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDataObject), -1, 1, 1, 1, 1, 0, "u 'TArtDataObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderP716XZ(void) {
   /* TArtDecoderP716XZ */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderP716XZ));
   G__memfunc_setup("TArtDecoderP716XZ",1489,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderP716XZ), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderP716XZ",1489,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderP716XZ), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderP716XZ' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_586_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderP716XZ::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderP716XZ", 1615, G__anacore_dict_586_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_586_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderP716XZ), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderP716XZ' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderMQDC32(void) {
   /* TArtDecoderMQDC32 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderMQDC32));
   G__memfunc_setup("TArtDecoderMQDC32",1467,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderMQDC32), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderMQDC32",1467,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderMQDC32), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderMQDC32' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_587_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderMQDC32::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderMQDC32", 1593, G__anacore_dict_587_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_587_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderMQDC32), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderMQDC32' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtEventInfo(void) {
   /* TArtEventInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtEventInfo));
   G__memfunc_setup("TArtEventInfo",1289,G__anacore_dict_588_0_1, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtEventInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__anacore_dict_588_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRunNumber",1226,G__anacore_dict_588_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEventNumber",1431,G__anacore_dict_588_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSubsysName",1334,G__anacore_dict_588_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRunNumber",1214,G__anacore_dict_588_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEventNumber",1419,G__anacore_dict_588_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSubsysName",1322,G__anacore_dict_588_0_8, 85, G__get_linked_tagnum(&G__anacore_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTimeStamp",1216,G__anacore_dict_588_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "m - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTSCheck",945,G__anacore_dict_588_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTimeStamp",1204,G__anacore_dict_588_0_11, 109, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTSCheck",933,G__anacore_dict_588_0_12, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTriggerBit",1311,G__anacore_dict_588_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTriggerBit",1299,G__anacore_dict_588_0_14, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isTriggerBit",1231,G__anacore_dict_588_0_15, 103, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anacore_dict_588_0_16, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtEventInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anacore_dict_588_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtEventInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anacore_dict_588_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtEventInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anacore_dict_588_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtEventInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anacore_dict_588_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anacore_dict_588_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtEventInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anacore_dict_588_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtEventInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anacore_dict_588_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtEventInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anacore_dict_588_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtEventInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtEventInfo", 1289, G__anacore_dict_588_0_28, (int) ('i'), G__get_linked_tagnum(&G__anacore_dictLN_TArtEventInfo), -1, 0, 1, 1, 1, 0, "u 'TArtEventInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtEventInfo", 1415, G__anacore_dict_588_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_588_0_30, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtEventInfo), -1, 1, 1, 1, 1, 0, "u 'TArtEventInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtParserRDF(void) {
   /* TArtParserRDF */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtParserRDF));
   G__memfunc_setup("TArtParserRDF",1220,G__anacore_dict_590_0_1, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtParserRDF), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextBlock",1194,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtDataSource' - 0 - source", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNextEvent",1217,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawEventObject' - 0 - rawdata", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CopyPrevEvent",1338,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - dest", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anacore_dict_590_0_5, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtParserRDF::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anacore_dict_590_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtParserRDF::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anacore_dict_590_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtParserRDF::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anacore_dict_590_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtParserRDF::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anacore_dict_590_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anacore_dict_590_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtParserRDF::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anacore_dict_590_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtParserRDF::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anacore_dict_590_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtParserRDF::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anacore_dict_590_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtParserRDF::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtParserRDF", 1220, G__anacore_dict_590_0_17, (int) ('i'), G__get_linked_tagnum(&G__anacore_dictLN_TArtParserRDF), -1, 0, 1, 1, 1, 0, "u 'TArtParserRDF' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtParserRDF", 1346, G__anacore_dict_590_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_590_0_19, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtParserRDF), -1, 1, 1, 1, 1, 0, "u 'TArtParserRDF' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderV550(void) {
   /* TArtDecoderV550 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV550));
   G__memfunc_setup("TArtDecoderV550",1313,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV550), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderV550",1313,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV550), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderV550' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_591_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderV550::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderV550", 1439, G__anacore_dict_591_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_591_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV550), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderV550' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderMTDC32(void) {
   /* TArtDecoderMTDC32 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderMTDC32));
   G__memfunc_setup("TArtDecoderMTDC32",1470,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderMTDC32), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderMTDC32",1470,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderMTDC32), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderMTDC32' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_592_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderMTDC32::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderMTDC32", 1596, G__anacore_dict_592_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_592_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderMTDC32), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderMTDC32' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderDSP(void) {
   /* TArtDecoderDSP */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderDSP));
   G__memfunc_setup("TArtDecoderDSP",1304,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderDSP), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderDSP",1304,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderDSP), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderDSP' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_593_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderDSP::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderDSP", 1430, G__anacore_dict_593_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_593_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderDSP), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderDSP' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtFileDataSource(void) {
   /* TArtFileDataSource */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtFileDataSource));
   G__memfunc_setup("TArtFileDataSource",1766,G__anacore_dict_602_0_1, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtFileDataSource), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunNumber",1214,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRunNumber",1226,G__anacore_dict_602_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FileOpen",786,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '0' sourceName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Close",502,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Read",380,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 0 - buf i - - 11 - size "
"i - - 11 '0' offset", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Seek",392,(G__InterfaceMethod) NULL,105, -1, -1, 0, 2, 1, 1, 0, 
"l - - 0 - offset i - - 0 - origin", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("TArtFileDataSource", 1766, G__anacore_dict_602_0_8, (int) ('i'), G__get_linked_tagnum(&G__anacore_dictLN_TArtFileDataSource), -1, 0, 1, 1, 1, 0, "u 'TArtFileDataSource' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtFileDataSource", 1892, G__anacore_dict_602_0_9, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_602_0_10, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtFileDataSource), -1, 1, 1, 1, 1, 0, "u 'TArtFileDataSource' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtRIDFMap(void) {
   /* TArtRIDFMap */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtRIDFMap));
   G__memfunc_setup("TArtRIDFMap",958,G__anacore_dict_603_0_1, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtRIDFMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtRIDFMap",958,G__anacore_dict_603_0_2, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtRIDFMap), -1, 0, 4, 1, 1, 0, 
"i - - 10 - fp i - - 10 - did "
"i - - 10 - ingeo i - - 10 - inch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMap",586,G__anacore_dict_603_0_3, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 10 - fp i - - 10 - did "
"i - - 10 - ingeo i - - 10 - inch", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDevice",880,G__anacore_dict_603_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFpl",578,G__anacore_dict_603_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDetID",714,G__anacore_dict_603_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGeo",571,G__anacore_dict_603_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCh",459,G__anacore_dict_603_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator<",936,G__anacore_dict_603_0_9, 103, -1, -1, 0, 1, 1, 1, 8, "u 'TArtRIDFMap' - 11 - m", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator==",998,G__anacore_dict_603_0_10, 103, -1, -1, 0, 1, 1, 1, 8, "u 'TArtRIDFMap' - 11 - m", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMapInfo",970,G__anacore_dict_603_0_11, 67, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anacore_dict_603_0_12, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtRIDFMap::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anacore_dict_603_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRIDFMap::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anacore_dict_603_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtRIDFMap::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anacore_dict_603_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtRIDFMap::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anacore_dict_603_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anacore_dict_603_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRIDFMap::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anacore_dict_603_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRIDFMap::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anacore_dict_603_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRIDFMap::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anacore_dict_603_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRIDFMap::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtRIDFMap", 958, G__anacore_dict_603_0_24, (int) ('i'), G__get_linked_tagnum(&G__anacore_dictLN_TArtRIDFMap), -1, 0, 1, 1, 1, 0, "u 'TArtRIDFMap' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtRIDFMap", 1084, G__anacore_dict_603_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_603_0_26, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtRIDFMap), -1, 1, 1, 1, 1, 0, "u 'TArtRIDFMap' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderTacquila(void) {
   /* TArtDecoderTacquila */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderTacquila));
   G__memfunc_setup("TArtDecoderTacquila",1893,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderTacquila), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderTacquila",1893,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderTacquila), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderTacquila' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_604_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderTacquila::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderTacquila", 2019, G__anacore_dict_604_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_604_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderTacquila), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderTacquila' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderAD413A(void) {
   /* TArtDecoderAD413A */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderAD413A));
   G__memfunc_setup("TArtDecoderAD413A",1423,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderAD413A), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderAD413A",1423,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderAD413A), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderAD413A' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_605_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderAD413A::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderAD413A", 1549, G__anacore_dict_605_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_605_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderAD413A), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderAD413A' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderFixed24(void) {
   /* TArtDecoderFixed24 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFixed24));
   G__memfunc_setup("TArtDecoderFixed24",1671,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFixed24), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderFixed24",1671,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFixed24), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderFixed24' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_606_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderFixed24::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderFixed24", 1797, G__anacore_dict_606_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_606_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderFixed24), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderFixed24' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderVmeEasyroc(void) {
   /* TArtDecoderVmeEasyroc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderVmeEasyroc));
   G__memfunc_setup("TArtDecoderVmeEasyroc",2095,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderVmeEasyroc), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderVmeEasyroc",2095,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderVmeEasyroc), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderVmeEasyroc' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_607_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderVmeEasyroc::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isAdcHg",659,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "h - - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isAdcLg",663,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "h - - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isTdcLeading",1195,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "h - - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isTdcTrailing",1329,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "h - - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isScaler",822,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "h - - 0 - data", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderVmeEasyroc", 2221, G__anacore_dict_607_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_607_0_11, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderVmeEasyroc), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderVmeEasyroc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderNeulandTS(void) {
   /* TArtDecoderNeulandTS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderNeulandTS));
   G__memfunc_setup("TArtDecoderNeulandTS",1951,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderNeulandTS), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderNeulandTS",1951,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderNeulandTS), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderNeulandTS' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_608_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderNeulandTS::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderNeulandTS", 2077, G__anacore_dict_608_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_608_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderNeulandTS), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderNeulandTS' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtReconstruction(void) {
   /* TArtReconstruction */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtReconstruction));
   G__memfunc_setup("ReconstructData",1558,G__anacore_dict_610_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ClearData",865,G__anacore_dict_610_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetOutDataName",1363,G__anacore_dict_610_0_4, 85, G__get_linked_tagnum(&G__anacore_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsDataLoaded",1151,G__anacore_dict_610_0_5, 103, -1, -1, 0, 0, 1, 1, 0, "", "used only for raw data loading", (void*) NULL, 1);
   G__memfunc_setup("IsReconstructed",1569,G__anacore_dict_610_0_6, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anacore_dict_610_0_7, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtReconstruction::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anacore_dict_610_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtReconstruction::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anacore_dict_610_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtReconstruction::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anacore_dict_610_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtReconstruction::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__anacore_dict_610_0_11, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__anacore_dict_610_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__anacore_dict_610_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anacore_dict_610_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anacore_dict_610_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtReconstruction::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anacore_dict_610_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtReconstruction::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anacore_dict_610_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtReconstruction::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anacore_dict_610_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtReconstruction::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TArtReconstruction", 2011, G__anacore_dict_610_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_610_0_20, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtReconstruction), -1, 1, 1, 1, 1, 0, "u 'TArtReconstruction' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtParserRIDF(void) {
   /* TArtParserRIDF */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtParserRIDF));
   G__memfunc_setup("GetNextBlock",1194,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtDataSource' - 0 - source", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNextEvent",1217,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawEventObject' - 0 - rawdata", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CopyPrevEvent",1338,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - dest", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TArtParserRIDF",1293,G__anacore_dict_611_0_4, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtParserRIDF), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anacore_dict_611_0_5, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtParserRIDF::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anacore_dict_611_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtParserRIDF::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anacore_dict_611_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtParserRIDF::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anacore_dict_611_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtParserRIDF::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anacore_dict_611_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anacore_dict_611_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtParserRIDF::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anacore_dict_611_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtParserRIDF::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anacore_dict_611_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtParserRIDF::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anacore_dict_611_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtParserRIDF::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtParserRIDF", 1293, G__anacore_dict_611_0_17, (int) ('i'), G__get_linked_tagnum(&G__anacore_dictLN_TArtParserRIDF), -1, 0, 1, 1, 1, 0, "u 'TArtParserRIDF' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtParserRIDF", 1419, G__anacore_dict_611_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_611_0_19, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtParserRIDF), -1, 1, 1, 1, 1, 0, "u 'TArtParserRIDF' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderL3377d(void) {
   /* TArtDecoderL3377d */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderL3377d));
   G__memfunc_setup("TArtDecoderL3377d",1461,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderL3377d), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderL3377d",1461,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderL3377d), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderL3377d' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_616_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderL3377d::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderL3377d", 1587, G__anacore_dict_616_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_616_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderL3377d), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderL3377d' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDecoderV1190C(void) {
   /* TArtDecoderV1190C */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1190C));
   G__memfunc_setup("TArtDecoderV1190C",1429,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1190C), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDecoderV1190C",1429,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1190C), -1, 0, 1, 1, 4, 0, "u 'TArtDecoderV1190C' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anacore_dict_617_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoder), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtDecoder* (*)())(&TArtDecoderV1190C::Instance) ), 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"B - - 1 - buf h - - 11 - size "
"U 'TArtRawSegmentObject' - 0 - rawseg", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TArtDecoderV1190C", 1555, G__anacore_dict_617_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_617_0_6, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtDecoderV1190C), -1, 1, 1, 1, 1, 0, "u 'TArtDecoderV1190C' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtStreamingDataSource(void) {
   /* TArtStreamingDataSource */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtStreamingDataSource));
   G__memfunc_setup("TArtStreamingDataSource",2320,G__anacore_dict_619_0_1, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtStreamingDataSource), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SocketOpen",1019,(G__InterfaceMethod) NULL,103, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - hostname i - - 10 '10080' port "
"g - - 10 'true' fromlast", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Read",380,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 0 - buf i - - 11 - size "
"i - - 11 '0' offset", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRunNumber",1214,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Close",502,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Seek",392,(G__InterfaceMethod) NULL,105, -1, -1, 0, 2, 1, 1, 0, 
"l - - 0 - offset i - - 0 - origin", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsPrepared",1007,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anacore_dict_619_0_8, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtStreamingDataSource::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anacore_dict_619_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtStreamingDataSource::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anacore_dict_619_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtStreamingDataSource::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anacore_dict_619_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtStreamingDataSource::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__anacore_dict_619_0_12, 85, G__get_linked_tagnum(&G__anacore_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__anacore_dict_619_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__anacore_dict_619_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anacore_dict_619_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anacore_dict_619_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtStreamingDataSource::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anacore_dict_619_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtStreamingDataSource::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anacore_dict_619_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtStreamingDataSource::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anacore_dict_619_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtStreamingDataSource::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtStreamingDataSource", 2320, G__anacore_dict_619_0_20, (int) ('i'), 
G__get_linked_tagnum(&G__anacore_dictLN_TArtStreamingDataSource), -1, 0, 1, 1, 1, 0, "u 'TArtStreamingDataSource' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtStreamingDataSource", 2446, G__anacore_dict_619_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_619_0_22, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtStreamingDataSource), -1, 1, 1, 1, 1, 0, "u 'TArtStreamingDataSource' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtUtil(void) {
   /* TArtUtil */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anacore_dictLN_TArtUtil));
   G__memfunc_setup("TArtUtil",793,G__anacore_dict_620_0_1, 105, G__get_linked_tagnum(&G__anacore_dictLN_TArtUtil), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindDataObject",1362,G__anacore_dict_620_0_2, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDataObject), -1, 0, 2, 3, 1, 0, 
"U 'TClonesArray' - 0 - ca i - 'Int_t' 0 - id", (char*)NULL, (void*) G__func2void( (TArtDataObject* (*)(TClonesArray*, Int_t))(&TArtUtil::FindDataObject) ), 0);
   G__memfunc_setup("FindDataObject",1362,G__anacore_dict_620_0_3, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDataObject), -1, 0, 2, 3, 1, 0, 
"U 'TClonesArray' - 0 - ca U 'TString' - 0 - n", (char*)NULL, (void*) G__func2void( (TArtDataObject* (*)(TClonesArray*, TString*))(&TArtUtil::FindDataObject) ), 0);
   G__memfunc_setup("FindDataObject",1362,G__anacore_dict_620_0_4, 85, G__get_linked_tagnum(&G__anacore_dictLN_TArtDataObject), -1, 0, 2, 3, 1, 0, 
"U 'TClonesArray' - 0 - ca C - - 0 - n", (char*)NULL, (void*) G__func2void( (TArtDataObject* (*)(TClonesArray*, char*))(&TArtUtil::FindDataObject) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtUtil", 793, G__anacore_dict_620_0_5, (int) ('i'), G__get_linked_tagnum(&G__anacore_dictLN_TArtUtil), -1, 0, 1, 1, 1, 0, "u 'TArtUtil' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtUtil", 919, G__anacore_dict_620_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anacore_dict_620_0_7, (int) ('u'), G__get_linked_tagnum(&G__anacore_dictLN_TArtUtil), -1, 1, 1, 1, 1, 0, "u 'TArtUtil' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncanacore_dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalanacore_dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcanacore_dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__anacore_dictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtRawDataObject = { "TArtRawDataObject" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtCore = { "TArtCore" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtRawFADCDataObject = { "TArtRawFADCDataObject" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtRawTacquilaDataObject = { "TArtRawTacquilaDataObject" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtRawSegmentObject = { "TArtRawSegmentObject" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_vectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgR = { "vector<TArtRawDataObject*,allocator<TArtRawDataObject*> >" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtRawDataObject*,allocator<TArtRawDataObject*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_vectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgR = { "vector<TArtRawFADCDataObject*,allocator<TArtRawFADCDataObject*> >" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtRawFADCDataObject*,allocator<TArtRawFADCDataObject*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_vectorlETArtRawTacquilaDataObjectmUcOallocatorlETArtRawTacquilaDataObjectmUgRsPgR = { "vector<TArtRawTacquilaDataObject*,allocator<TArtRawTacquilaDataObject*> >" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawTacquilaDataObjectmUcOallocatorlETArtRawTacquilaDataObjectmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtRawTacquilaDataObject*,allocator<TArtRawTacquilaDataObject*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoder = { "TArtDecoder" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecodercLcLmask_t = { "TArtDecoder::mask_t" , 115 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderFactory = { "TArtDecoderFactory" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderBigEndianV7XX = { "TArtDecoderBigEndianV7XX" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderFixed16 = { "TArtDecoderFixed16" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderLUPO = { "TArtDecoderLUPO" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderP716X = { "TArtDecoderP716X" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderMADC32 = { "TArtDecoderMADC32" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderV1740 = { "TArtDecoderV1740" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtSemaphore = { "TArtSemaphore" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtSemaphorecLcLsembuf = { "TArtSemaphore::sembuf" , 115 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderV1190 = { "TArtDecoderV1190" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderV7XX = { "TArtDecoderV7XX" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderCTM405 = { "TArtDecoderCTM405" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderV767 = { "TArtDecoderV767" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderAMTTDC = { "TArtDecoderAMTTDC" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtMath = { "TArtMath" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderFixed32 = { "TArtDecoderFixed32" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_ArtBlockStat_t = { "ArtBlockStat_t" , 101 , -1 };
G__linked_taginfo G__anacore_dictLN_ArtEventStat_t = { "ArtEventStat_t" , 101 , -1 };
G__linked_taginfo G__anacore_dictLN_ArtFileStat_t = { "ArtFileStat_t" , 101 , -1 };
G__linked_taginfo G__anacore_dictLN_ArtDataSource_t = { "ArtDataSource_t" , 101 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDataSource = { "TArtDataSource" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtRawScalerObject = { "TArtRawScalerObject" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtRawEventObject = { "TArtRawEventObject" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_vectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgR = { "vector<TArtRawSegmentObject*,allocator<TArtRawSegmentObject*> >" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtRawSegmentObject*,allocator<TArtRawSegmentObject*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_vectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgR = { "vector<TArtRawScalerObject*,allocator<TArtRawScalerObject*> >" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtRawScalerObject*,allocator<TArtRawScalerObject*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtParser = { "TArtParser" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtParserFactory = { "TArtParserFactory" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtSharedMemory = { "TArtSharedMemory" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderA3100 = { "TArtDecoderA3100" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtRunInfo = { "TArtRunInfo" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtStoreManager = { "TArtStoreManager" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtEventStore = { "TArtEventStore" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtSharedMemoryDataSource = { "TArtSharedMemoryDataSource" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderV1290 = { "TArtDecoderV1290" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDataObject = { "TArtDataObject" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderP716XZ = { "TArtDecoderP716XZ" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderMQDC32 = { "TArtDecoderMQDC32" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtEventInfo = { "TArtEventInfo" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtMapper = { "TArtMapper" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtParserRDF = { "TArtParserRDF" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderV550 = { "TArtDecoderV550" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderMTDC32 = { "TArtDecoderMTDC32" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderDSP = { "TArtDecoderDSP" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_stat = { "stat" , 115 , -1 };
G__linked_taginfo G__anacore_dictLN_gzFile_s = { "gzFile_s" , 115 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtFileDataSource = { "TArtFileDataSource" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtRIDFMap = { "TArtRIDFMap" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderTacquila = { "TArtDecoderTacquila" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderAD413A = { "TArtDecoderAD413A" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderFixed24 = { "TArtDecoderFixed24" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderVmeEasyroc = { "TArtDecoderVmeEasyroc" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderNeulandTS = { "TArtDecoderNeulandTS" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtReconstruction = { "TArtReconstruction" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtParserRIDF = { "TArtParserRIDF" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtParserRIDFcLcLArtHeader_t = { "TArtParserRIDF::ArtHeader_t" , 117 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtParserRIDFcLcLArtSegIDRIDF_t = { "TArtParserRIDF::ArtSegIDRIDF_t" , 117 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderL3377d = { "TArtDecoderL3377d" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtDecoderV1190C = { "TArtDecoderV1190C" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TSocket = { "TSocket" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtStreamingDataSource = { "TArtStreamingDataSource" , 99 , -1 };
G__linked_taginfo G__anacore_dictLN_TArtUtil = { "TArtUtil" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableanacore_dict() {
  G__anacore_dictLN_TClass.tagnum = -1 ;
  G__anacore_dictLN_TBuffer.tagnum = -1 ;
  G__anacore_dictLN_TMemberInspector.tagnum = -1 ;
  G__anacore_dictLN_TObject.tagnum = -1 ;
  G__anacore_dictLN_TNamed.tagnum = -1 ;
  G__anacore_dictLN_TString.tagnum = -1 ;
  G__anacore_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__anacore_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anacore_dictLN_TList.tagnum = -1 ;
  G__anacore_dictLN_TClonesArray.tagnum = -1 ;
  G__anacore_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__anacore_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anacore_dictLN_TArtRawDataObject.tagnum = -1 ;
  G__anacore_dictLN_TArtCore.tagnum = -1 ;
  G__anacore_dictLN_TArtRawFADCDataObject.tagnum = -1 ;
  G__anacore_dictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__anacore_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anacore_dictLN_TArtRawTacquilaDataObject.tagnum = -1 ;
  G__anacore_dictLN_TArtRawSegmentObject.tagnum = -1 ;
  G__anacore_dictLN_vectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgR.tagnum = -1 ;
  G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anacore_dictLN_vectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgR.tagnum = -1 ;
  G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anacore_dictLN_vectorlETArtRawTacquilaDataObjectmUcOallocatorlETArtRawTacquilaDataObjectmUgRsPgR.tagnum = -1 ;
  G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawTacquilaDataObjectmUcOallocatorlETArtRawTacquilaDataObjectmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoder.tagnum = -1 ;
  G__anacore_dictLN_TArtDecodercLcLmask_t.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderFactory.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderBigEndianV7XX.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderFixed16.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderLUPO.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderP716X.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderMADC32.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderV1740.tagnum = -1 ;
  G__anacore_dictLN_TArtSemaphore.tagnum = -1 ;
  G__anacore_dictLN_TArtSemaphorecLcLsembuf.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderV1190.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderV7XX.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderCTM405.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderV767.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderAMTTDC.tagnum = -1 ;
  G__anacore_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__anacore_dictLN_TArtMath.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderFixed32.tagnum = -1 ;
  G__anacore_dictLN_ArtBlockStat_t.tagnum = -1 ;
  G__anacore_dictLN_ArtEventStat_t.tagnum = -1 ;
  G__anacore_dictLN_ArtFileStat_t.tagnum = -1 ;
  G__anacore_dictLN_ArtDataSource_t.tagnum = -1 ;
  G__anacore_dictLN_TArtDataSource.tagnum = -1 ;
  G__anacore_dictLN_TArtRawScalerObject.tagnum = -1 ;
  G__anacore_dictLN_TArtRawEventObject.tagnum = -1 ;
  G__anacore_dictLN_vectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgR.tagnum = -1 ;
  G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anacore_dictLN_vectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgR.tagnum = -1 ;
  G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anacore_dictLN_TArtParser.tagnum = -1 ;
  G__anacore_dictLN_TArtParserFactory.tagnum = -1 ;
  G__anacore_dictLN_TArtSharedMemory.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderA3100.tagnum = -1 ;
  G__anacore_dictLN_TArtRunInfo.tagnum = -1 ;
  G__anacore_dictLN_TTree.tagnum = -1 ;
  G__anacore_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__anacore_dictLN_TArtStoreManager.tagnum = -1 ;
  G__anacore_dictLN_TArtEventStore.tagnum = -1 ;
  G__anacore_dictLN_TArtSharedMemoryDataSource.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderV1290.tagnum = -1 ;
  G__anacore_dictLN_TArtDataObject.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderP716XZ.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderMQDC32.tagnum = -1 ;
  G__anacore_dictLN_TArtEventInfo.tagnum = -1 ;
  G__anacore_dictLN_TArtMapper.tagnum = -1 ;
  G__anacore_dictLN_TArtParserRDF.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderV550.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderMTDC32.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderDSP.tagnum = -1 ;
  G__anacore_dictLN_stat.tagnum = -1 ;
  G__anacore_dictLN_gzFile_s.tagnum = -1 ;
  G__anacore_dictLN_TArtFileDataSource.tagnum = -1 ;
  G__anacore_dictLN_TArtRIDFMap.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderTacquila.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderAD413A.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderFixed24.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderVmeEasyroc.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderNeulandTS.tagnum = -1 ;
  G__anacore_dictLN_TArtReconstruction.tagnum = -1 ;
  G__anacore_dictLN_TArtParserRIDF.tagnum = -1 ;
  G__anacore_dictLN_TArtParserRIDFcLcLArtHeader_t.tagnum = -1 ;
  G__anacore_dictLN_TArtParserRIDFcLcLArtSegIDRIDF_t.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderL3377d.tagnum = -1 ;
  G__anacore_dictLN_TArtDecoderV1190C.tagnum = -1 ;
  G__anacore_dictLN_TSocket.tagnum = -1 ;
  G__anacore_dictLN_TArtStreamingDataSource.tagnum = -1 ;
  G__anacore_dictLN_TArtUtil.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableanacore_dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_TClass);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_TObject);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_TString);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_TList);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtRawDataObject),sizeof(TArtRawDataObject),-1,324864,(char*)NULL,G__setup_memvarTArtRawDataObject,G__setup_memfuncTArtRawDataObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtCore),sizeof(TArtCore),-1,263424,(char*)NULL,G__setup_memvarTArtCore,G__setup_memfuncTArtCore);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtRawFADCDataObject),sizeof(TArtRawFADCDataObject),-1,324864,(char*)NULL,G__setup_memvarTArtRawFADCDataObject,G__setup_memfuncTArtRawFADCDataObject);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtRawTacquilaDataObject),sizeof(TArtRawTacquilaDataObject),-1,324864,(char*)NULL,G__setup_memvarTArtRawTacquilaDataObject,G__setup_memfuncTArtRawTacquilaDataObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtRawSegmentObject),sizeof(TArtRawSegmentObject),-1,324864,(char*)NULL,G__setup_memvarTArtRawSegmentObject,G__setup_memfuncTArtRawSegmentObject);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_vectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_vectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_vectorlETArtRawTacquilaDataObjectmUcOallocatorlETArtRawTacquilaDataObjectmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawTacquilaDataObjectmUcOallocatorlETArtRawTacquilaDataObjectmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoder),sizeof(TArtDecoder),-1,198401,(char*)NULL,G__setup_memvarTArtDecoder,G__setup_memfuncTArtDecoder);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecodercLcLmask_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderFactory),sizeof(TArtDecoderFactory),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderFactory,G__setup_memfuncTArtDecoderFactory);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderBigEndianV7XX),sizeof(TArtDecoderBigEndianV7XX),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderBigEndianV7XX,G__setup_memfuncTArtDecoderBigEndianV7XX);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderFixed16),sizeof(TArtDecoderFixed16),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderFixed16,G__setup_memfuncTArtDecoderFixed16);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderLUPO),sizeof(TArtDecoderLUPO),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderLUPO,G__setup_memfuncTArtDecoderLUPO);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderP716X),sizeof(TArtDecoderP716X),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderP716X,G__setup_memfuncTArtDecoderP716X);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderMADC32),sizeof(TArtDecoderMADC32),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderMADC32,G__setup_memfuncTArtDecoderMADC32);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderV1740),sizeof(TArtDecoderV1740),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderV1740,G__setup_memfuncTArtDecoderV1740);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtSemaphore),sizeof(TArtSemaphore),-1,230400,(char*)NULL,G__setup_memvarTArtSemaphore,G__setup_memfuncTArtSemaphore);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtSemaphorecLcLsembuf);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderV1190),sizeof(TArtDecoderV1190),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderV1190,G__setup_memfuncTArtDecoderV1190);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderV7XX),sizeof(TArtDecoderV7XX),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderV7XX,G__setup_memfuncTArtDecoderV7XX);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderCTM405),sizeof(TArtDecoderCTM405),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderCTM405,G__setup_memfuncTArtDecoderCTM405);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderV767),sizeof(TArtDecoderV767),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderV767,G__setup_memfuncTArtDecoderV767);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderAMTTDC),sizeof(TArtDecoderAMTTDC),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderAMTTDC,G__setup_memfuncTArtDecoderAMTTDC);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtMath),sizeof(TArtMath),-1,263424,(char*)NULL,G__setup_memvarTArtMath,G__setup_memfuncTArtMath);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderFixed32),sizeof(TArtDecoderFixed32),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderFixed32,G__setup_memfuncTArtDecoderFixed32);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_ArtBlockStat_t);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_ArtEventStat_t);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_ArtFileStat_t);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_ArtDataSource_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDataSource),sizeof(TArtDataSource),-1,197892,(char*)NULL,G__setup_memvarTArtDataSource,G__setup_memfuncTArtDataSource);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtRawScalerObject),sizeof(TArtRawScalerObject),-1,324864,(char*)NULL,G__setup_memvarTArtRawScalerObject,G__setup_memfuncTArtRawScalerObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtRawEventObject),sizeof(TArtRawEventObject),-1,324864,(char*)NULL,G__setup_memvarTArtRawEventObject,G__setup_memfuncTArtRawEventObject);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_vectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_vectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_reverse_iteratorlEvectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtParser),sizeof(TArtParser),-1,263427,(char*)NULL,G__setup_memvarTArtParser,G__setup_memfuncTArtParser);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtParserFactory),sizeof(TArtParserFactory),-1,197888,(char*)NULL,G__setup_memvarTArtParserFactory,G__setup_memfuncTArtParserFactory);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtSharedMemory),sizeof(TArtSharedMemory),-1,230400,(char*)NULL,G__setup_memvarTArtSharedMemory,G__setup_memfuncTArtSharedMemory);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderA3100),sizeof(TArtDecoderA3100),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderA3100,G__setup_memfuncTArtDecoderA3100);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtRunInfo),sizeof(TArtRunInfo),-1,324864,(char*)NULL,G__setup_memvarTArtRunInfo,G__setup_memfuncTArtRunInfo);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_TTree);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtStoreManager),sizeof(TArtStoreManager),-1,263424,(char*)NULL,G__setup_memvarTArtStoreManager,G__setup_memfuncTArtStoreManager);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtEventStore),sizeof(TArtEventStore),-1,263424,(char*)NULL,G__setup_memvarTArtEventStore,G__setup_memfuncTArtEventStore);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtSharedMemoryDataSource),sizeof(TArtSharedMemoryDataSource),-1,197888,(char*)NULL,G__setup_memvarTArtSharedMemoryDataSource,G__setup_memfuncTArtSharedMemoryDataSource);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderV1290),sizeof(TArtDecoderV1290),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderV1290,G__setup_memfuncTArtDecoderV1290);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDataObject),sizeof(TArtDataObject),-1,292096,(char*)NULL,G__setup_memvarTArtDataObject,G__setup_memfuncTArtDataObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderP716XZ),sizeof(TArtDecoderP716XZ),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderP716XZ,G__setup_memfuncTArtDecoderP716XZ);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderMQDC32),sizeof(TArtDecoderMQDC32),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderMQDC32,G__setup_memfuncTArtDecoderMQDC32);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtEventInfo),sizeof(TArtEventInfo),-1,324864,(char*)NULL,G__setup_memvarTArtEventInfo,G__setup_memfuncTArtEventInfo);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtMapper);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtParserRDF),sizeof(TArtParserRDF),-1,263424,(char*)NULL,G__setup_memvarTArtParserRDF,G__setup_memfuncTArtParserRDF);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderV550),sizeof(TArtDecoderV550),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderV550,G__setup_memfuncTArtDecoderV550);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderMTDC32),sizeof(TArtDecoderMTDC32),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderMTDC32,G__setup_memfuncTArtDecoderMTDC32);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderDSP),sizeof(TArtDecoderDSP),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderDSP,G__setup_memfuncTArtDecoderDSP);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_stat);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_gzFile_s);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtFileDataSource),sizeof(TArtFileDataSource),-1,197888,(char*)NULL,G__setup_memvarTArtFileDataSource,G__setup_memfuncTArtFileDataSource);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtRIDFMap),sizeof(TArtRIDFMap),-1,324864,(char*)NULL,G__setup_memvarTArtRIDFMap,G__setup_memfuncTArtRIDFMap);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderTacquila),sizeof(TArtDecoderTacquila),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderTacquila,G__setup_memfuncTArtDecoderTacquila);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderAD413A),sizeof(TArtDecoderAD413A),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderAD413A,G__setup_memfuncTArtDecoderAD413A);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderFixed24),sizeof(TArtDecoderFixed24),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderFixed24,G__setup_memfuncTArtDecoderFixed24);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderVmeEasyroc),sizeof(TArtDecoderVmeEasyroc),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderVmeEasyroc,G__setup_memfuncTArtDecoderVmeEasyroc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderNeulandTS),sizeof(TArtDecoderNeulandTS),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderNeulandTS,G__setup_memfuncTArtDecoderNeulandTS);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtReconstruction),sizeof(TArtReconstruction),-1,263426,(char*)NULL,G__setup_memvarTArtReconstruction,G__setup_memfuncTArtReconstruction);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtParserRIDF),sizeof(TArtParserRIDF),-1,263424,(char*)NULL,G__setup_memvarTArtParserRIDF,G__setup_memfuncTArtParserRIDF);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtParserRIDFcLcLArtHeader_t);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtParserRIDFcLcLArtSegIDRIDF_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderL3377d),sizeof(TArtDecoderL3377d),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderL3377d,G__setup_memfuncTArtDecoderL3377d);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtDecoderV1190C),sizeof(TArtDecoderV1190C),-1,198400,(char*)NULL,G__setup_memvarTArtDecoderV1190C,G__setup_memfuncTArtDecoderV1190C);
   G__get_linked_tagnum_fwd(&G__anacore_dictLN_TSocket);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtStreamingDataSource),sizeof(TArtStreamingDataSource),-1,263424,(char*)NULL,G__setup_memvarTArtStreamingDataSource,G__setup_memfuncTArtStreamingDataSource);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anacore_dictLN_TArtUtil),sizeof(TArtUtil),-1,1280,(char*)NULL,G__setup_memvarTArtUtil,G__setup_memfuncTArtUtil);
}
extern "C" void G__cpp_setupanacore_dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupanacore_dict()");
  G__set_cpp_environmentanacore_dict();
  G__cpp_setup_tagtableanacore_dict();

  G__cpp_setup_inheritanceanacore_dict();

  G__cpp_setup_typetableanacore_dict();

  G__cpp_setup_memvaranacore_dict();

  G__cpp_setup_memfuncanacore_dict();
  G__cpp_setup_globalanacore_dict();
  G__cpp_setup_funcanacore_dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncanacore_dict();
  return;
}
class G__cpp_setup_initanacore_dict {
  public:
    G__cpp_setup_initanacore_dict() { G__add_setup_func("anacore_dict",(G__incsetup)(&G__cpp_setupanacore_dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initanacore_dict() { G__remove_setup_func("anacore_dict"); }
};
G__cpp_setup_initanacore_dict G__cpp_setup_initializeranacore_dict;

