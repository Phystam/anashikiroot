//
// File generated by rootcint at Thu Nov  9 20:40:43 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME analoop_dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "analoop_dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void TAlEncSub_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TAlEncSub(void *p);
   static void deleteArray_TAlEncSub(void *p);
   static void destruct_TAlEncSub(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TAlEncSub*)
   {
      ::TAlEncSub *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TAlEncSub >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TAlEncSub", ::TAlEncSub::Class_Version(), "./include/TAlEncSub.hh", 10,
                  typeid(::TAlEncSub), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TAlEncSub::Dictionary, isa_proxy, 4,
                  sizeof(::TAlEncSub) );
      instance.SetDelete(&delete_TAlEncSub);
      instance.SetDeleteArray(&deleteArray_TAlEncSub);
      instance.SetDestructor(&destruct_TAlEncSub);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TAlEncSub*)
   {
      return GenerateInitInstanceLocal((::TAlEncSub*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TAlEncSub*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TAlEncFactory_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TAlEncFactory(void *p);
   static void deleteArray_TAlEncFactory(void *p);
   static void destruct_TAlEncFactory(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TAlEncFactory*)
   {
      ::TAlEncFactory *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TAlEncFactory >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TAlEncFactory", ::TAlEncFactory::Class_Version(), "./include/TAlEncFactory.hh", 9,
                  typeid(::TAlEncFactory), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TAlEncFactory::Dictionary, isa_proxy, 4,
                  sizeof(::TAlEncFactory) );
      instance.SetDelete(&delete_TAlEncFactory);
      instance.SetDeleteArray(&deleteArray_TAlEncFactory);
      instance.SetDestructor(&destruct_TAlEncFactory);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TAlEncFactory*)
   {
      return GenerateInitInstanceLocal((::TAlEncFactory*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TAlEncFactory*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtValIndex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtValIndex(void *p = 0);
   static void *newArray_TArtValIndex(Long_t size, void *p);
   static void delete_TArtValIndex(void *p);
   static void deleteArray_TArtValIndex(void *p);
   static void destruct_TArtValIndex(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtValIndex*)
   {
      ::TArtValIndex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtValIndex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtValIndex", ::TArtValIndex::Class_Version(), "./include/TArtAnaFile.hh", 27,
                  typeid(::TArtValIndex), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtValIndex::Dictionary, isa_proxy, 4,
                  sizeof(::TArtValIndex) );
      instance.SetNew(&new_TArtValIndex);
      instance.SetNewArray(&newArray_TArtValIndex);
      instance.SetDelete(&delete_TArtValIndex);
      instance.SetDeleteArray(&deleteArray_TArtValIndex);
      instance.SetDestructor(&destruct_TArtValIndex);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtValIndex*)
   {
      return GenerateInitInstanceLocal((::TArtValIndex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtValIndex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtValIndexVal_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtValIndexVal(void *p = 0);
   static void *newArray_TArtValIndexVal(Long_t size, void *p);
   static void delete_TArtValIndexVal(void *p);
   static void deleteArray_TArtValIndexVal(void *p);
   static void destruct_TArtValIndexVal(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtValIndexVal*)
   {
      ::TArtValIndexVal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtValIndexVal >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtValIndexVal", ::TArtValIndexVal::Class_Version(), "./include/TArtAnaFile.hh", 70,
                  typeid(::TArtValIndexVal), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtValIndexVal::Dictionary, isa_proxy, 4,
                  sizeof(::TArtValIndexVal) );
      instance.SetNew(&new_TArtValIndexVal);
      instance.SetNewArray(&newArray_TArtValIndexVal);
      instance.SetDelete(&delete_TArtValIndexVal);
      instance.SetDeleteArray(&deleteArray_TArtValIndexVal);
      instance.SetDestructor(&destruct_TArtValIndexVal);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtValIndexVal*)
   {
      return GenerateInitInstanceLocal((::TArtValIndexVal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtValIndexVal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtValIndexValArray_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtValIndexValArray(void *p = 0);
   static void *newArray_TArtValIndexValArray(Long_t size, void *p);
   static void delete_TArtValIndexValArray(void *p);
   static void deleteArray_TArtValIndexValArray(void *p);
   static void destruct_TArtValIndexValArray(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtValIndexValArray*)
   {
      ::TArtValIndexValArray *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtValIndexValArray >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtValIndexValArray", ::TArtValIndexValArray::Class_Version(), "./include/TArtAnaFile.hh", 84,
                  typeid(::TArtValIndexValArray), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtValIndexValArray::Dictionary, isa_proxy, 4,
                  sizeof(::TArtValIndexValArray) );
      instance.SetNew(&new_TArtValIndexValArray);
      instance.SetNewArray(&newArray_TArtValIndexValArray);
      instance.SetDelete(&delete_TArtValIndexValArray);
      instance.SetDeleteArray(&deleteArray_TArtValIndexValArray);
      instance.SetDestructor(&destruct_TArtValIndexValArray);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtValIndexValArray*)
   {
      return GenerateInitInstanceLocal((::TArtValIndexValArray*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtValIndexValArray*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtValMap_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtValMap(void *p = 0);
   static void *newArray_TArtValMap(Long_t size, void *p);
   static void delete_TArtValMap(void *p);
   static void deleteArray_TArtValMap(void *p);
   static void destruct_TArtValMap(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtValMap*)
   {
      ::TArtValMap *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtValMap >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtValMap", ::TArtValMap::Class_Version(), "./include/TArtAnaFile.hh", 99,
                  typeid(::TArtValMap), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtValMap::Dictionary, isa_proxy, 4,
                  sizeof(::TArtValMap) );
      instance.SetNew(&new_TArtValMap);
      instance.SetNewArray(&newArray_TArtValMap);
      instance.SetDelete(&delete_TArtValMap);
      instance.SetDeleteArray(&deleteArray_TArtValMap);
      instance.SetDestructor(&destruct_TArtValMap);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtValMap*)
   {
      return GenerateInitInstanceLocal((::TArtValMap*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtValMap*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtAnaFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TArtAnaFile(void *p);
   static void deleteArray_TArtAnaFile(void *p);
   static void destruct_TArtAnaFile(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtAnaFile*)
   {
      ::TArtAnaFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtAnaFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtAnaFile", ::TArtAnaFile::Class_Version(), "./include/TArtAnaFile.hh", 231,
                  typeid(::TArtAnaFile), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtAnaFile::Dictionary, isa_proxy, 4,
                  sizeof(::TArtAnaFile) );
      instance.SetDelete(&delete_TArtAnaFile);
      instance.SetDeleteArray(&deleteArray_TArtAnaFile);
      instance.SetDestructor(&destruct_TArtAnaFile);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtAnaFile*)
   {
      return GenerateInitInstanceLocal((::TArtAnaFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtAnaFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtAnaGate_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtAnaGate(void *p = 0);
   static void *newArray_TArtAnaGate(Long_t size, void *p);
   static void delete_TArtAnaGate(void *p);
   static void deleteArray_TArtAnaGate(void *p);
   static void destruct_TArtAnaGate(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtAnaGate*)
   {
      ::TArtAnaGate *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtAnaGate >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtAnaGate", ::TArtAnaGate::Class_Version(), "./include/TArtAnaFile.hh", 126,
                  typeid(::TArtAnaGate), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtAnaGate::Dictionary, isa_proxy, 4,
                  sizeof(::TArtAnaGate) );
      instance.SetNew(&new_TArtAnaGate);
      instance.SetNewArray(&newArray_TArtAnaGate);
      instance.SetDelete(&delete_TArtAnaGate);
      instance.SetDeleteArray(&deleteArray_TArtAnaGate);
      instance.SetDestructor(&destruct_TArtAnaGate);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtAnaGate*)
   {
      return GenerateInitInstanceLocal((::TArtAnaGate*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtAnaGate*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtAnaLoopStatic_ShowMembers(void *obj, TMemberInspector &R__insp);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtAnaLoopStatic*)
   {
      ::TArtAnaLoopStatic *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtAnaLoopStatic >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtAnaLoopStatic", ::TArtAnaLoopStatic::Class_Version(), "./include/TArtAnaLoopManager.hh", 105,
                  typeid(::TArtAnaLoopStatic), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtAnaLoopStatic::Dictionary, isa_proxy, 4,
                  sizeof(::TArtAnaLoopStatic) );
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtAnaLoopStatic*)
   {
      return GenerateInitInstanceLocal((::TArtAnaLoopStatic*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtAnaLoopStatic*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtAnaLoopManager_ShowMembers(void *obj, TMemberInspector &R__insp);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtAnaLoopManager*)
   {
      ::TArtAnaLoopManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtAnaLoopManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtAnaLoopManager", ::TArtAnaLoopManager::Class_Version(), "./include/TArtAnaLoopManager.hh", 37,
                  typeid(::TArtAnaLoopManager), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtAnaLoopManager::Dictionary, isa_proxy, 4,
                  sizeof(::TArtAnaLoopManager) );
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtAnaLoopManager*)
   {
      return GenerateInitInstanceLocal((::TArtAnaLoopManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtAnaLoopManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TAlRawDataExample_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TAlRawDataExample(void *p = 0);
   static void *newArray_TAlRawDataExample(Long_t size, void *p);
   static void delete_TAlRawDataExample(void *p);
   static void deleteArray_TAlRawDataExample(void *p);
   static void destruct_TAlRawDataExample(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TAlRawDataExample*)
   {
      ::TAlRawDataExample *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TAlRawDataExample >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TAlRawDataExample", ::TAlRawDataExample::Class_Version(), "./include/TAlRawDataExample.hh", 11,
                  typeid(::TAlRawDataExample), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TAlRawDataExample::Dictionary, isa_proxy, 4,
                  sizeof(::TAlRawDataExample) );
      instance.SetNew(&new_TAlRawDataExample);
      instance.SetNewArray(&newArray_TAlRawDataExample);
      instance.SetDelete(&delete_TAlRawDataExample);
      instance.SetDeleteArray(&deleteArray_TAlRawDataExample);
      instance.SetDestructor(&destruct_TAlRawDataExample);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TAlRawDataExample*)
   {
      return GenerateInitInstanceLocal((::TAlRawDataExample*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TAlRawDataExample*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TAlEncBranch_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TAlEncBranch(void *p = 0);
   static void *newArray_TAlEncBranch(Long_t size, void *p);
   static void delete_TAlEncBranch(void *p);
   static void deleteArray_TAlEncBranch(void *p);
   static void destruct_TAlEncBranch(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TAlEncBranch*)
   {
      ::TAlEncBranch *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TAlEncBranch >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TAlEncBranch", ::TAlEncBranch::Class_Version(), "./include/TAlEncBranch.hh", 14,
                  typeid(::TAlEncBranch), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TAlEncBranch::Dictionary, isa_proxy, 4,
                  sizeof(::TAlEncBranch) );
      instance.SetNew(&new_TAlEncBranch);
      instance.SetNewArray(&newArray_TAlEncBranch);
      instance.SetDelete(&delete_TAlEncBranch);
      instance.SetDeleteArray(&deleteArray_TAlEncBranch);
      instance.SetDestructor(&destruct_TAlEncBranch);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TAlEncBranch*)
   {
      return GenerateInitInstanceLocal((::TAlEncBranch*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TAlEncBranch*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TAlEncHist_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TAlEncHist(void *p = 0);
   static void *newArray_TAlEncHist(Long_t size, void *p);
   static void delete_TAlEncHist(void *p);
   static void deleteArray_TAlEncHist(void *p);
   static void destruct_TAlEncHist(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TAlEncHist*)
   {
      ::TAlEncHist *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TAlEncHist >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TAlEncHist", ::TAlEncHist::Class_Version(), "./include/TAlEncHist.hh", 14,
                  typeid(::TAlEncHist), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TAlEncHist::Dictionary, isa_proxy, 4,
                  sizeof(::TAlEncHist) );
      instance.SetNew(&new_TAlEncHist);
      instance.SetNewArray(&newArray_TAlEncHist);
      instance.SetDelete(&delete_TAlEncHist);
      instance.SetDeleteArray(&deleteArray_TAlEncHist);
      instance.SetDestructor(&destruct_TAlEncHist);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TAlEncHist*)
   {
      return GenerateInitInstanceLocal((::TAlEncHist*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TAlEncHist*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TAlEncStop_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TAlEncStop(void *p = 0);
   static void *newArray_TAlEncStop(Long_t size, void *p);
   static void delete_TAlEncStop(void *p);
   static void deleteArray_TAlEncStop(void *p);
   static void destruct_TAlEncStop(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TAlEncStop*)
   {
      ::TAlEncStop *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TAlEncStop >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TAlEncStop", ::TAlEncStop::Class_Version(), "./include/TAlEncStop.hh", 11,
                  typeid(::TAlEncStop), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TAlEncStop::Dictionary, isa_proxy, 4,
                  sizeof(::TAlEncStop) );
      instance.SetNew(&new_TAlEncStop);
      instance.SetNewArray(&newArray_TAlEncStop);
      instance.SetDelete(&delete_TAlEncStop);
      instance.SetDeleteArray(&deleteArray_TAlEncStop);
      instance.SetDestructor(&destruct_TAlEncStop);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TAlEncStop*)
   {
      return GenerateInitInstanceLocal((::TAlEncStop*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TAlEncStop*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TAlEncFillTree_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TAlEncFillTree(void *p = 0);
   static void *newArray_TAlEncFillTree(Long_t size, void *p);
   static void delete_TAlEncFillTree(void *p);
   static void deleteArray_TAlEncFillTree(void *p);
   static void destruct_TAlEncFillTree(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TAlEncFillTree*)
   {
      ::TAlEncFillTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TAlEncFillTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TAlEncFillTree", ::TAlEncFillTree::Class_Version(), "./include/TAlEncFillTree.hh", 14,
                  typeid(::TAlEncFillTree), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TAlEncFillTree::Dictionary, isa_proxy, 4,
                  sizeof(::TAlEncFillTree) );
      instance.SetNew(&new_TAlEncFillTree);
      instance.SetNewArray(&newArray_TAlEncFillTree);
      instance.SetDelete(&delete_TAlEncFillTree);
      instance.SetDeleteArray(&deleteArray_TAlEncFillTree);
      instance.SetDestructor(&destruct_TAlEncFillTree);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TAlEncFillTree*)
   {
      return GenerateInitInstanceLocal((::TAlEncFillTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TAlEncFillTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TAlEncGate_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TAlEncGate(void *p = 0);
   static void *newArray_TAlEncGate(Long_t size, void *p);
   static void delete_TAlEncGate(void *p);
   static void deleteArray_TAlEncGate(void *p);
   static void destruct_TAlEncGate(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TAlEncGate*)
   {
      ::TAlEncGate *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TAlEncGate >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TAlEncGate", ::TAlEncGate::Class_Version(), "./include/TAlEncGate.hh", 9,
                  typeid(::TAlEncGate), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TAlEncGate::Dictionary, isa_proxy, 4,
                  sizeof(::TAlEncGate) );
      instance.SetNew(&new_TAlEncGate);
      instance.SetNewArray(&newArray_TAlEncGate);
      instance.SetDelete(&delete_TAlEncGate);
      instance.SetDeleteArray(&deleteArray_TAlEncGate);
      instance.SetDestructor(&destruct_TAlEncGate);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TAlEncGate*)
   {
      return GenerateInitInstanceLocal((::TAlEncGate*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TAlEncGate*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TAlEncPrint_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TAlEncPrint(void *p = 0);
   static void *newArray_TAlEncPrint(Long_t size, void *p);
   static void delete_TAlEncPrint(void *p);
   static void deleteArray_TAlEncPrint(void *p);
   static void destruct_TAlEncPrint(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TAlEncPrint*)
   {
      ::TAlEncPrint *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TAlEncPrint >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TAlEncPrint", ::TAlEncPrint::Class_Version(), "./include/TAlEncPrint.hh", 12,
                  typeid(::TAlEncPrint), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TAlEncPrint::Dictionary, isa_proxy, 4,
                  sizeof(::TAlEncPrint) );
      instance.SetNew(&new_TAlEncPrint);
      instance.SetNewArray(&newArray_TAlEncPrint);
      instance.SetDelete(&delete_TAlEncPrint);
      instance.SetDeleteArray(&deleteArray_TAlEncPrint);
      instance.SetDestructor(&destruct_TAlEncPrint);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TAlEncPrint*)
   {
      return GenerateInitInstanceLocal((::TAlEncPrint*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TAlEncPrint*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr TAlEncSub::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TAlEncSub::Class_Name()
{
   return "TAlEncSub";
}

//______________________________________________________________________________
const char *TAlEncSub::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncSub*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAlEncSub::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncSub*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAlEncSub::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncSub*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAlEncSub::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncSub*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TAlEncFactory::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TAlEncFactory::Class_Name()
{
   return "TAlEncFactory";
}

//______________________________________________________________________________
const char *TAlEncFactory::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncFactory*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAlEncFactory::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncFactory*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAlEncFactory::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncFactory*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAlEncFactory::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncFactory*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtValIndex::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtValIndex::Class_Name()
{
   return "TArtValIndex";
}

//______________________________________________________________________________
const char *TArtValIndex::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtValIndex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtValIndex::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtValIndex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtValIndex::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtValIndex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtValIndex::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtValIndex*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtValIndexVal::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtValIndexVal::Class_Name()
{
   return "TArtValIndexVal";
}

//______________________________________________________________________________
const char *TArtValIndexVal::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtValIndexVal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtValIndexVal::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtValIndexVal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtValIndexVal::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtValIndexVal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtValIndexVal::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtValIndexVal*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtValIndexValArray::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtValIndexValArray::Class_Name()
{
   return "TArtValIndexValArray";
}

//______________________________________________________________________________
const char *TArtValIndexValArray::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtValIndexValArray*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtValIndexValArray::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtValIndexValArray*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtValIndexValArray::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtValIndexValArray*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtValIndexValArray::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtValIndexValArray*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtValMap::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtValMap::Class_Name()
{
   return "TArtValMap";
}

//______________________________________________________________________________
const char *TArtValMap::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtValMap*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtValMap::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtValMap*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtValMap::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtValMap*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtValMap::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtValMap*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtAnaFile::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtAnaFile::Class_Name()
{
   return "TArtAnaFile";
}

//______________________________________________________________________________
const char *TArtAnaFile::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtAnaFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtAnaFile::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtAnaFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtAnaFile::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtAnaFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtAnaFile::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtAnaFile*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtAnaGate::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtAnaGate::Class_Name()
{
   return "TArtAnaGate";
}

//______________________________________________________________________________
const char *TArtAnaGate::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtAnaGate*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtAnaGate::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtAnaGate*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtAnaGate::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtAnaGate*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtAnaGate::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtAnaGate*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtAnaLoopStatic::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtAnaLoopStatic::Class_Name()
{
   return "TArtAnaLoopStatic";
}

//______________________________________________________________________________
const char *TArtAnaLoopStatic::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtAnaLoopStatic*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtAnaLoopStatic::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtAnaLoopStatic*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtAnaLoopStatic::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtAnaLoopStatic*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtAnaLoopStatic::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtAnaLoopStatic*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtAnaLoopManager::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtAnaLoopManager::Class_Name()
{
   return "TArtAnaLoopManager";
}

//______________________________________________________________________________
const char *TArtAnaLoopManager::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtAnaLoopManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtAnaLoopManager::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtAnaLoopManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtAnaLoopManager::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtAnaLoopManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtAnaLoopManager::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtAnaLoopManager*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TAlRawDataExample::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TAlRawDataExample::Class_Name()
{
   return "TAlRawDataExample";
}

//______________________________________________________________________________
const char *TAlRawDataExample::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TAlRawDataExample*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAlRawDataExample::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TAlRawDataExample*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAlRawDataExample::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TAlRawDataExample*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAlRawDataExample::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TAlRawDataExample*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TAlEncBranch::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TAlEncBranch::Class_Name()
{
   return "TAlEncBranch";
}

//______________________________________________________________________________
const char *TAlEncBranch::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncBranch*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAlEncBranch::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncBranch*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAlEncBranch::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncBranch*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAlEncBranch::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncBranch*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TAlEncHist::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TAlEncHist::Class_Name()
{
   return "TAlEncHist";
}

//______________________________________________________________________________
const char *TAlEncHist::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncHist*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAlEncHist::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncHist*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAlEncHist::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncHist*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAlEncHist::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncHist*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TAlEncStop::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TAlEncStop::Class_Name()
{
   return "TAlEncStop";
}

//______________________________________________________________________________
const char *TAlEncStop::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncStop*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAlEncStop::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncStop*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAlEncStop::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncStop*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAlEncStop::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncStop*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TAlEncFillTree::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TAlEncFillTree::Class_Name()
{
   return "TAlEncFillTree";
}

//______________________________________________________________________________
const char *TAlEncFillTree::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncFillTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAlEncFillTree::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncFillTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAlEncFillTree::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncFillTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAlEncFillTree::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncFillTree*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TAlEncGate::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TAlEncGate::Class_Name()
{
   return "TAlEncGate";
}

//______________________________________________________________________________
const char *TAlEncGate::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncGate*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAlEncGate::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncGate*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAlEncGate::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncGate*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAlEncGate::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncGate*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TAlEncPrint::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TAlEncPrint::Class_Name()
{
   return "TAlEncPrint";
}

//______________________________________________________________________________
const char *TAlEncPrint::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncPrint*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAlEncPrint::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncPrint*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAlEncPrint::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncPrint*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAlEncPrint::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TAlEncPrint*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TArtAnaFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtAnaFile.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtAnaFile::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtAnaFile::Class(),this);
   }
}

//______________________________________________________________________________
void TArtAnaFile::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtAnaFile.
      TClass *R__cl = ::TArtAnaFile::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValMap", &fValMap);
      R__insp.InspectMember(fValMap, "fValMap.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValIndexArrayMapName", (void*)&fValIndexArrayMapName);
      R__insp.InspectMember("map<std::string,std::vector<TArtValIndex> >", (void*)&fValIndexArrayMapName, "fValIndexArrayMapName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValIndexArrayMapGate", (void*)&fValIndexArrayMapGate);
      R__insp.InspectMember("map<int,std::vector<TArtValIndex> >", (void*)&fValIndexArrayMapGate, "fValIndexArrayMapGate.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAnaGateMapGate", (void*)&fAnaGateMapGate);
      R__insp.InspectMember("map<int,TArtAnaGate*>", (void*)&fAnaGateMapGate, "fAnaGateMapGate.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHistNameCounter", &fHistNameCounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAnaLoop", &fAnaLoop);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtAnaFile(void *p) {
      delete ((::TArtAnaFile*)p);
   }
   static void deleteArray_TArtAnaFile(void *p) {
      delete [] ((::TArtAnaFile*)p);
   }
   static void destruct_TArtAnaFile(void *p) {
      typedef ::TArtAnaFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtAnaFile

//______________________________________________________________________________
void TArtAnaGate::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtAnaGate.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtAnaGate::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtAnaGate::Class(),this);
   }
}

//______________________________________________________________________________
void TArtAnaGate::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtAnaGate.
      TClass *R__cl = ::TArtAnaGate::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGate", &fGate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTitle", (void*)&fTitle);
      R__insp.InspectMember("string", (void*)&fTitle, "fTitle.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInside", &fInside);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCount", &fCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGateType", &fGateType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGateTypeName", (void*)&fGateTypeName);
      R__insp.InspectMember("string", (void*)&fGateTypeName, "fGateTypeName.", false);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtAnaGate(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtAnaGate : new ::TArtAnaGate;
   }
   static void *newArray_TArtAnaGate(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtAnaGate[nElements] : new ::TArtAnaGate[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtAnaGate(void *p) {
      delete ((::TArtAnaGate*)p);
   }
   static void deleteArray_TArtAnaGate(void *p) {
      delete [] ((::TArtAnaGate*)p);
   }
   static void destruct_TArtAnaGate(void *p) {
      typedef ::TArtAnaGate current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtAnaGate

//______________________________________________________________________________
void TArtValIndex::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtValIndex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtValIndex::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtValIndex::Class(),this);
   }
}

//______________________________________________________________________________
void TArtValIndex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtValIndex.
      TClass *R__cl = ::TArtValIndex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAnalyser", &fAnalyser);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWNum", &fWNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIndex", &fIndex);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtValIndex(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtValIndex : new ::TArtValIndex;
   }
   static void *newArray_TArtValIndex(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtValIndex[nElements] : new ::TArtValIndex[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtValIndex(void *p) {
      delete ((::TArtValIndex*)p);
   }
   static void deleteArray_TArtValIndex(void *p) {
      delete [] ((::TArtValIndex*)p);
   }
   static void destruct_TArtValIndex(void *p) {
      typedef ::TArtValIndex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtValIndex

//______________________________________________________________________________
void TArtValIndexVal::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtValIndexVal.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtValIndexVal::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtValIndexVal::Class(),this);
   }
}

//______________________________________________________________________________
void TArtValIndexVal::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtValIndexVal.
      TClass *R__cl = ::TArtValIndexVal::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValIndex", &fValIndex);
      R__insp.InspectMember(fValIndex, "fValIndex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVal", &fVal);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtValIndexVal(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtValIndexVal : new ::TArtValIndexVal;
   }
   static void *newArray_TArtValIndexVal(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtValIndexVal[nElements] : new ::TArtValIndexVal[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtValIndexVal(void *p) {
      delete ((::TArtValIndexVal*)p);
   }
   static void deleteArray_TArtValIndexVal(void *p) {
      delete [] ((::TArtValIndexVal*)p);
   }
   static void destruct_TArtValIndexVal(void *p) {
      typedef ::TArtValIndexVal current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtValIndexVal

//______________________________________________________________________________
void TArtValIndexValArray::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtValIndexValArray.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtValIndexValArray::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtValIndexValArray::Class(),this);
   }
}

//______________________________________________________________________________
void TArtValIndexValArray::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtValIndexValArray.
      TClass *R__cl = ::TArtValIndexValArray::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("vector<TArtValIndexVal,allocator<TArtValIndexVal> >", ( ::vector<TArtValIndexVal,allocator<TArtValIndexVal> > *) (this ), false);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtValIndexValArray(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtValIndexValArray : new ::TArtValIndexValArray;
   }
   static void *newArray_TArtValIndexValArray(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtValIndexValArray[nElements] : new ::TArtValIndexValArray[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtValIndexValArray(void *p) {
      delete ((::TArtValIndexValArray*)p);
   }
   static void deleteArray_TArtValIndexValArray(void *p) {
      delete [] ((::TArtValIndexValArray*)p);
   }
   static void destruct_TArtValIndexValArray(void *p) {
      typedef ::TArtValIndexValArray current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtValIndexValArray

//______________________________________________________________________________
void TArtValMap::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtValMap.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtValMap::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtValMap::Class(),this);
   }
}

//______________________________________________________________________________
void TArtValMap::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtValMap.
      TClass *R__cl = ::TArtValMap::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVal", (void*)&fVal);
      R__insp.InspectMember("map<int,std::map<int,std::map<int,Double_t> > >", (void*)&fVal, "fVal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFlag[64][128][512]", fFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCleanList", (void*)&fCleanList);
      R__insp.InspectMember("vector<TArtValIndex>", (void*)&fCleanList, "fCleanList.", false);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtValMap(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtValMap : new ::TArtValMap;
   }
   static void *newArray_TArtValMap(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtValMap[nElements] : new ::TArtValMap[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtValMap(void *p) {
      delete ((::TArtValMap*)p);
   }
   static void deleteArray_TArtValMap(void *p) {
      delete [] ((::TArtValMap*)p);
   }
   static void destruct_TArtValMap(void *p) {
      typedef ::TArtValMap current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtValMap

//______________________________________________________________________________
void TArtAnaLoopStatic::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtAnaLoopStatic.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtAnaLoopStatic::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtAnaLoopStatic::Class(),this);
   }
}

//______________________________________________________________________________
void TArtAnaLoopStatic::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtAnaLoopStatic.
      TClass *R__cl = ::TArtAnaLoopStatic::IsA();
      if (R__cl || R__insp.IsA()) { }
}

namespace ROOTDict {
} // end of namespace ROOTDict for class ::TArtAnaLoopStatic

//______________________________________________________________________________
void TArtAnaLoopManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtAnaLoopManager.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtAnaLoopManager::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtAnaLoopManager::Class(),this);
   }
}

//______________________________________________________________________________
void TArtAnaLoopManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtAnaLoopManager.
      TClass *R__cl = ::TArtAnaLoopManager::IsA();
      if (R__cl || R__insp.IsA()) { }
}

namespace ROOTDict {
} // end of namespace ROOTDict for class ::TArtAnaLoopManager

//______________________________________________________________________________
void TAlEncBranch::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAlEncBranch.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TAlEncBranch::Class(),this);
   } else {
      R__b.WriteClassBuffer(TAlEncBranch::Class(),this);
   }
}

//______________________________________________________________________________
void TAlEncBranch::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TAlEncBranch.
      TClass *R__cl = ::TAlEncBranch::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBranchName", &fBranchName);
      R__insp.InspectMember(fBranchName, "fBranchName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValIndexArray", (void*)&fValIndexArray);
      R__insp.InspectMember("vector<TArtValIndex>", (void*)&fValIndexArray, "fValIndexArray.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValue_v", (void*)&fValue_v);
      R__insp.InspectMember("vector<Double_t>", (void*)&fValue_v, "fValue_v.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGate", &fGate);
      TAlEncSub::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TAlEncBranch(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TAlEncBranch : new ::TAlEncBranch;
   }
   static void *newArray_TAlEncBranch(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TAlEncBranch[nElements] : new ::TAlEncBranch[nElements];
   }
   // Wrapper around operator delete
   static void delete_TAlEncBranch(void *p) {
      delete ((::TAlEncBranch*)p);
   }
   static void deleteArray_TAlEncBranch(void *p) {
      delete [] ((::TAlEncBranch*)p);
   }
   static void destruct_TAlEncBranch(void *p) {
      typedef ::TAlEncBranch current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TAlEncBranch

//______________________________________________________________________________
void TAlEncFillTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAlEncFillTree.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TAlEncFillTree::Class(),this);
   } else {
      R__b.WriteClassBuffer(TAlEncFillTree::Class(),this);
   }
}

//______________________________________________________________________________
void TAlEncFillTree::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TAlEncFillTree.
      TClass *R__cl = ::TAlEncFillTree::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTree", &fTree);
      TAlEncSub::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TAlEncFillTree(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TAlEncFillTree : new ::TAlEncFillTree;
   }
   static void *newArray_TAlEncFillTree(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TAlEncFillTree[nElements] : new ::TAlEncFillTree[nElements];
   }
   // Wrapper around operator delete
   static void delete_TAlEncFillTree(void *p) {
      delete ((::TAlEncFillTree*)p);
   }
   static void deleteArray_TAlEncFillTree(void *p) {
      delete [] ((::TAlEncFillTree*)p);
   }
   static void destruct_TAlEncFillTree(void *p) {
      typedef ::TAlEncFillTree current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TAlEncFillTree

//______________________________________________________________________________
void TAlEncPrint::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAlEncPrint.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TAlEncPrint::Class(),this);
   } else {
      R__b.WriteClassBuffer(TAlEncPrint::Class(),this);
   }
}

//______________________________________________________________________________
void TAlEncPrint::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TAlEncPrint.
      TClass *R__cl = ::TAlEncPrint::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValIndexArray", (void*)&fValIndexArray);
      R__insp.InspectMember("vector<TArtValIndex>", (void*)&fValIndexArray, "fValIndexArray.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGate", &fGate);
      TAlEncSub::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TAlEncPrint(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TAlEncPrint : new ::TAlEncPrint;
   }
   static void *newArray_TAlEncPrint(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TAlEncPrint[nElements] : new ::TAlEncPrint[nElements];
   }
   // Wrapper around operator delete
   static void delete_TAlEncPrint(void *p) {
      delete ((::TAlEncPrint*)p);
   }
   static void deleteArray_TAlEncPrint(void *p) {
      delete [] ((::TAlEncPrint*)p);
   }
   static void destruct_TAlEncPrint(void *p) {
      typedef ::TAlEncPrint current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TAlEncPrint

//______________________________________________________________________________
void TAlEncSub::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAlEncSub.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TAlEncSub::Class(),this);
   } else {
      R__b.WriteClassBuffer(TAlEncSub::Class(),this);
   }
}

//______________________________________________________________________________
void TAlEncSub::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TAlEncSub.
      TClass *R__cl = ::TAlEncSub::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAnaLoop", &fAnaLoop);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TAlEncSub(void *p) {
      delete ((::TAlEncSub*)p);
   }
   static void deleteArray_TAlEncSub(void *p) {
      delete [] ((::TAlEncSub*)p);
   }
   static void destruct_TAlEncSub(void *p) {
      typedef ::TAlEncSub current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TAlEncSub

//______________________________________________________________________________
void TAlEncFactory::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAlEncFactory.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TAlEncFactory::Class(),this);
   } else {
      R__b.WriteClassBuffer(TAlEncFactory::Class(),this);
   }
}

//______________________________________________________________________________
void TAlEncFactory::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TAlEncFactory.
      TClass *R__cl = ::TAlEncFactory::IsA();
      if (R__cl || R__insp.IsA()) { }
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TAlEncFactory(void *p) {
      delete ((::TAlEncFactory*)p);
   }
   static void deleteArray_TAlEncFactory(void *p) {
      delete [] ((::TAlEncFactory*)p);
   }
   static void destruct_TAlEncFactory(void *p) {
      typedef ::TAlEncFactory current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TAlEncFactory

//______________________________________________________________________________
void TAlEncStop::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAlEncStop.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TAlEncStop::Class(),this);
   } else {
      R__b.WriteClassBuffer(TAlEncStop::Class(),this);
   }
}

//______________________________________________________________________________
void TAlEncStop::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TAlEncStop.
      TClass *R__cl = ::TAlEncStop::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGateArray", (void*)&fGateArray);
      R__insp.InspectMember("vector<int>", (void*)&fGateArray, "fGateArray.", false);
      TAlEncSub::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TAlEncStop(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TAlEncStop : new ::TAlEncStop;
   }
   static void *newArray_TAlEncStop(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TAlEncStop[nElements] : new ::TAlEncStop[nElements];
   }
   // Wrapper around operator delete
   static void delete_TAlEncStop(void *p) {
      delete ((::TAlEncStop*)p);
   }
   static void deleteArray_TAlEncStop(void *p) {
      delete [] ((::TAlEncStop*)p);
   }
   static void destruct_TAlEncStop(void *p) {
      typedef ::TAlEncStop current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TAlEncStop

//______________________________________________________________________________
void TAlEncGate::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAlEncGate.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TAlEncGate::Class(),this);
   } else {
      R__b.WriteClassBuffer(TAlEncGate::Class(),this);
   }
}

//______________________________________________________________________________
void TAlEncGate::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TAlEncGate.
      TClass *R__cl = ::TAlEncGate::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGate", &fGate);
      TAlEncSub::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TAlEncGate(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TAlEncGate : new ::TAlEncGate;
   }
   static void *newArray_TAlEncGate(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TAlEncGate[nElements] : new ::TAlEncGate[nElements];
   }
   // Wrapper around operator delete
   static void delete_TAlEncGate(void *p) {
      delete ((::TAlEncGate*)p);
   }
   static void deleteArray_TAlEncGate(void *p) {
      delete [] ((::TAlEncGate*)p);
   }
   static void destruct_TAlEncGate(void *p) {
      typedef ::TAlEncGate current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TAlEncGate

//______________________________________________________________________________
void TAlEncHist::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAlEncHist.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TAlEncHist::Class(),this);
   } else {
      R__b.WriteClassBuffer(TAlEncHist::Class(),this);
   }
}

//______________________________________________________________________________
void TAlEncHist::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TAlEncHist.
      TClass *R__cl = ::TAlEncHist::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHist", &fHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValIndexArray", (void*)&fValIndexArray);
      R__insp.InspectMember("vector<TArtValIndex>", (void*)&fValIndexArray, "fValIndexArray.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGate", &fGate);
      TAlEncSub::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TAlEncHist(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TAlEncHist : new ::TAlEncHist;
   }
   static void *newArray_TAlEncHist(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TAlEncHist[nElements] : new ::TAlEncHist[nElements];
   }
   // Wrapper around operator delete
   static void delete_TAlEncHist(void *p) {
      delete ((::TAlEncHist*)p);
   }
   static void deleteArray_TAlEncHist(void *p) {
      delete [] ((::TAlEncHist*)p);
   }
   static void destruct_TAlEncHist(void *p) {
      typedef ::TAlEncHist current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TAlEncHist

//______________________________________________________________________________
void TAlRawDataExample::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAlRawDataExample.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TAlRawDataExample::Class(),this);
   } else {
      R__b.WriteClassBuffer(TAlRawDataExample::Class(),this);
   }
}

//______________________________________________________________________________
void TAlRawDataExample::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TAlRawDataExample.
      TClass *R__cl = ::TAlRawDataExample::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hnsegment", &hnsegment);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hefn", &hefn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdevice", &hdevice);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hfpl", &hfpl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdetector", &hdetector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hmodule", &hmodule);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hgeo", &hgeo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hedge", &hedge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hch", &hch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hval", &hval);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ntp", &ntp);
      R__insp.GenericShowMembers("TArtAnaLoop", ( ::TArtAnaLoop *) (this ), false);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TAlRawDataExample(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TAlRawDataExample : new ::TAlRawDataExample;
   }
   static void *newArray_TAlRawDataExample(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TAlRawDataExample[nElements] : new ::TAlRawDataExample[nElements];
   }
   // Wrapper around operator delete
   static void delete_TAlRawDataExample(void *p) {
      delete ((::TAlRawDataExample*)p);
   }
   static void deleteArray_TAlRawDataExample(void *p) {
      delete [] ((::TAlRawDataExample*)p);
   }
   static void destruct_TAlRawDataExample(void *p) {
      typedef ::TAlRawDataExample current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TAlRawDataExample

namespace ROOTDict {
   void maplEintcOTArtAnaGatemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOTArtAnaGatemUgR_Dictionary();
   static void *new_maplEintcOTArtAnaGatemUgR(void *p = 0);
   static void *newArray_maplEintcOTArtAnaGatemUgR(Long_t size, void *p);
   static void delete_maplEintcOTArtAnaGatemUgR(void *p);
   static void deleteArray_maplEintcOTArtAnaGatemUgR(void *p);
   static void destruct_maplEintcOTArtAnaGatemUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,TArtAnaGate*>*)
   {
      map<int,TArtAnaGate*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,TArtAnaGate*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,TArtAnaGate*>", -2, "prec_stl/map", 63,
                  typeid(map<int,TArtAnaGate*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOTArtAnaGatemUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,TArtAnaGate*>) );
      instance.SetNew(&new_maplEintcOTArtAnaGatemUgR);
      instance.SetNewArray(&newArray_maplEintcOTArtAnaGatemUgR);
      instance.SetDelete(&delete_maplEintcOTArtAnaGatemUgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOTArtAnaGatemUgR);
      instance.SetDestructor(&destruct_maplEintcOTArtAnaGatemUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,TArtAnaGate*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,TArtAnaGate*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOTArtAnaGatemUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,TArtAnaGate*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOTArtAnaGatemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,TArtAnaGate*> : new map<int,TArtAnaGate*>;
   }
   static void *newArray_maplEintcOTArtAnaGatemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,TArtAnaGate*>[nElements] : new map<int,TArtAnaGate*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOTArtAnaGatemUgR(void *p) {
      delete ((map<int,TArtAnaGate*>*)p);
   }
   static void deleteArray_maplEintcOTArtAnaGatemUgR(void *p) {
      delete [] ((map<int,TArtAnaGate*>*)p);
   }
   static void destruct_maplEintcOTArtAnaGatemUgR(void *p) {
      typedef map<int,TArtAnaGate*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,TArtAnaGate*>

namespace ROOTDict {
   void maplEintcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOdoublegR_Dictionary();
   static void *new_maplEintcOdoublegR(void *p = 0);
   static void *newArray_maplEintcOdoublegR(Long_t size, void *p);
   static void delete_maplEintcOdoublegR(void *p);
   static void deleteArray_maplEintcOdoublegR(void *p);
   static void destruct_maplEintcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,double>*)
   {
      map<int,double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,double>", -2, "prec_stl/map", 63,
                  typeid(map<int,double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,double>) );
      instance.SetNew(&new_maplEintcOdoublegR);
      instance.SetNewArray(&newArray_maplEintcOdoublegR);
      instance.SetDelete(&delete_maplEintcOdoublegR);
      instance.SetDeleteArray(&deleteArray_maplEintcOdoublegR);
      instance.SetDestructor(&destruct_maplEintcOdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,double> : new map<int,double>;
   }
   static void *newArray_maplEintcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,double>[nElements] : new map<int,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOdoublegR(void *p) {
      delete ((map<int,double>*)p);
   }
   static void deleteArray_maplEintcOdoublegR(void *p) {
      delete [] ((map<int,double>*)p);
   }
   static void destruct_maplEintcOdoublegR(void *p) {
      typedef map<int,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,double>

namespace ROOTDict {
   void maplEintcOmaplEintcOdoublegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOmaplEintcOdoublegRsPgR_Dictionary();
   static void *new_maplEintcOmaplEintcOdoublegRsPgR(void *p = 0);
   static void *newArray_maplEintcOmaplEintcOdoublegRsPgR(Long_t size, void *p);
   static void delete_maplEintcOmaplEintcOdoublegRsPgR(void *p);
   static void deleteArray_maplEintcOmaplEintcOdoublegRsPgR(void *p);
   static void destruct_maplEintcOmaplEintcOdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,map<int,double> >*)
   {
      map<int,map<int,double> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,map<int,double> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,map<int,double> >", -2, "prec_stl/map", 63,
                  typeid(map<int,map<int,double> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOmaplEintcOdoublegRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,map<int,double> >) );
      instance.SetNew(&new_maplEintcOmaplEintcOdoublegRsPgR);
      instance.SetNewArray(&newArray_maplEintcOmaplEintcOdoublegRsPgR);
      instance.SetDelete(&delete_maplEintcOmaplEintcOdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOmaplEintcOdoublegRsPgR);
      instance.SetDestructor(&destruct_maplEintcOmaplEintcOdoublegRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,map<int,double> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,map<int,double> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOmaplEintcOdoublegRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,map<int,double> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOmaplEintcOdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,map<int,double> > : new map<int,map<int,double> >;
   }
   static void *newArray_maplEintcOmaplEintcOdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,map<int,double> >[nElements] : new map<int,map<int,double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOmaplEintcOdoublegRsPgR(void *p) {
      delete ((map<int,map<int,double> >*)p);
   }
   static void deleteArray_maplEintcOmaplEintcOdoublegRsPgR(void *p) {
      delete [] ((map<int,map<int,double> >*)p);
   }
   static void destruct_maplEintcOmaplEintcOdoublegRsPgR(void *p) {
      typedef map<int,map<int,double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,map<int,double> >

namespace ROOTDict {
   void maplEintcOmaplEintcOmaplEintcOdoublegRsPgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOmaplEintcOmaplEintcOdoublegRsPgRsPgR_Dictionary();
   static void *new_maplEintcOmaplEintcOmaplEintcOdoublegRsPgRsPgR(void *p = 0);
   static void *newArray_maplEintcOmaplEintcOmaplEintcOdoublegRsPgRsPgR(Long_t size, void *p);
   static void delete_maplEintcOmaplEintcOmaplEintcOdoublegRsPgRsPgR(void *p);
   static void deleteArray_maplEintcOmaplEintcOmaplEintcOdoublegRsPgRsPgR(void *p);
   static void destruct_maplEintcOmaplEintcOmaplEintcOdoublegRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,map<int,map<int,double> > >*)
   {
      map<int,map<int,map<int,double> > > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,map<int,map<int,double> > >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,map<int,map<int,double> > >", -2, "prec_stl/map", 63,
                  typeid(map<int,map<int,map<int,double> > >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOmaplEintcOmaplEintcOdoublegRsPgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,map<int,map<int,double> > >) );
      instance.SetNew(&new_maplEintcOmaplEintcOmaplEintcOdoublegRsPgRsPgR);
      instance.SetNewArray(&newArray_maplEintcOmaplEintcOmaplEintcOdoublegRsPgRsPgR);
      instance.SetDelete(&delete_maplEintcOmaplEintcOmaplEintcOdoublegRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOmaplEintcOmaplEintcOdoublegRsPgRsPgR);
      instance.SetDestructor(&destruct_maplEintcOmaplEintcOmaplEintcOdoublegRsPgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,map<int,map<int,double> > > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,map<int,map<int,double> > >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOmaplEintcOmaplEintcOdoublegRsPgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,map<int,map<int,double> > >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOmaplEintcOmaplEintcOdoublegRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,map<int,map<int,double> > > : new map<int,map<int,map<int,double> > >;
   }
   static void *newArray_maplEintcOmaplEintcOmaplEintcOdoublegRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,map<int,map<int,double> > >[nElements] : new map<int,map<int,map<int,double> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOmaplEintcOmaplEintcOdoublegRsPgRsPgR(void *p) {
      delete ((map<int,map<int,map<int,double> > >*)p);
   }
   static void deleteArray_maplEintcOmaplEintcOmaplEintcOdoublegRsPgRsPgR(void *p) {
      delete [] ((map<int,map<int,map<int,double> > >*)p);
   }
   static void destruct_maplEintcOmaplEintcOmaplEintcOdoublegRsPgRsPgR(void *p) {
      typedef map<int,map<int,map<int,double> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,map<int,map<int,double> > >

namespace ROOTDict {
   void maplEintcOvectorlETArtValIndexgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOvectorlETArtValIndexgRsPgR_Dictionary();
   static void *new_maplEintcOvectorlETArtValIndexgRsPgR(void *p = 0);
   static void *newArray_maplEintcOvectorlETArtValIndexgRsPgR(Long_t size, void *p);
   static void delete_maplEintcOvectorlETArtValIndexgRsPgR(void *p);
   static void deleteArray_maplEintcOvectorlETArtValIndexgRsPgR(void *p);
   static void destruct_maplEintcOvectorlETArtValIndexgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,vector<TArtValIndex> >*)
   {
      map<int,vector<TArtValIndex> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,vector<TArtValIndex> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,vector<TArtValIndex> >", -2, "prec_stl/map", 63,
                  typeid(map<int,vector<TArtValIndex> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOvectorlETArtValIndexgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,vector<TArtValIndex> >) );
      instance.SetNew(&new_maplEintcOvectorlETArtValIndexgRsPgR);
      instance.SetNewArray(&newArray_maplEintcOvectorlETArtValIndexgRsPgR);
      instance.SetDelete(&delete_maplEintcOvectorlETArtValIndexgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOvectorlETArtValIndexgRsPgR);
      instance.SetDestructor(&destruct_maplEintcOvectorlETArtValIndexgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,vector<TArtValIndex> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,vector<TArtValIndex> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOvectorlETArtValIndexgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,vector<TArtValIndex> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOvectorlETArtValIndexgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,vector<TArtValIndex> > : new map<int,vector<TArtValIndex> >;
   }
   static void *newArray_maplEintcOvectorlETArtValIndexgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,vector<TArtValIndex> >[nElements] : new map<int,vector<TArtValIndex> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOvectorlETArtValIndexgRsPgR(void *p) {
      delete ((map<int,vector<TArtValIndex> >*)p);
   }
   static void deleteArray_maplEintcOvectorlETArtValIndexgRsPgR(void *p) {
      delete [] ((map<int,vector<TArtValIndex> >*)p);
   }
   static void destruct_maplEintcOvectorlETArtValIndexgRsPgR(void *p) {
      typedef map<int,vector<TArtValIndex> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,vector<TArtValIndex> >

namespace ROOTDict {
   void maplEstringcOvectorlETArtValIndexgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOvectorlETArtValIndexgRsPgR_Dictionary();
   static void *new_maplEstringcOvectorlETArtValIndexgRsPgR(void *p = 0);
   static void *newArray_maplEstringcOvectorlETArtValIndexgRsPgR(Long_t size, void *p);
   static void delete_maplEstringcOvectorlETArtValIndexgRsPgR(void *p);
   static void deleteArray_maplEstringcOvectorlETArtValIndexgRsPgR(void *p);
   static void destruct_maplEstringcOvectorlETArtValIndexgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,vector<TArtValIndex> >*)
   {
      map<string,vector<TArtValIndex> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,vector<TArtValIndex> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,vector<TArtValIndex> >", -2, "prec_stl/map", 63,
                  typeid(map<string,vector<TArtValIndex> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOvectorlETArtValIndexgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,vector<TArtValIndex> >) );
      instance.SetNew(&new_maplEstringcOvectorlETArtValIndexgRsPgR);
      instance.SetNewArray(&newArray_maplEstringcOvectorlETArtValIndexgRsPgR);
      instance.SetDelete(&delete_maplEstringcOvectorlETArtValIndexgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOvectorlETArtValIndexgRsPgR);
      instance.SetDestructor(&destruct_maplEstringcOvectorlETArtValIndexgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,vector<TArtValIndex> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,vector<TArtValIndex> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOvectorlETArtValIndexgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,vector<TArtValIndex> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOvectorlETArtValIndexgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,vector<TArtValIndex> > : new map<string,vector<TArtValIndex> >;
   }
   static void *newArray_maplEstringcOvectorlETArtValIndexgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,vector<TArtValIndex> >[nElements] : new map<string,vector<TArtValIndex> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOvectorlETArtValIndexgRsPgR(void *p) {
      delete ((map<string,vector<TArtValIndex> >*)p);
   }
   static void deleteArray_maplEstringcOvectorlETArtValIndexgRsPgR(void *p) {
      delete [] ((map<string,vector<TArtValIndex> >*)p);
   }
   static void destruct_maplEstringcOvectorlETArtValIndexgRsPgR(void *p) {
      typedef map<string,vector<TArtValIndex> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,vector<TArtValIndex> >

namespace ROOTDict {
   void vectorlETArtValIndexgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETArtValIndexgR_Dictionary();
   static void *new_vectorlETArtValIndexgR(void *p = 0);
   static void *newArray_vectorlETArtValIndexgR(Long_t size, void *p);
   static void delete_vectorlETArtValIndexgR(void *p);
   static void deleteArray_vectorlETArtValIndexgR(void *p);
   static void destruct_vectorlETArtValIndexgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TArtValIndex>*)
   {
      vector<TArtValIndex> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TArtValIndex>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TArtValIndex>", -2, "prec_stl/vector", 49,
                  typeid(vector<TArtValIndex>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETArtValIndexgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TArtValIndex>) );
      instance.SetNew(&new_vectorlETArtValIndexgR);
      instance.SetNewArray(&newArray_vectorlETArtValIndexgR);
      instance.SetDelete(&delete_vectorlETArtValIndexgR);
      instance.SetDeleteArray(&deleteArray_vectorlETArtValIndexgR);
      instance.SetDestructor(&destruct_vectorlETArtValIndexgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TArtValIndex> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TArtValIndex>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETArtValIndexgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TArtValIndex>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETArtValIndexgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtValIndex> : new vector<TArtValIndex>;
   }
   static void *newArray_vectorlETArtValIndexgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtValIndex>[nElements] : new vector<TArtValIndex>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETArtValIndexgR(void *p) {
      delete ((vector<TArtValIndex>*)p);
   }
   static void deleteArray_vectorlETArtValIndexgR(void *p) {
      delete [] ((vector<TArtValIndex>*)p);
   }
   static void destruct_vectorlETArtValIndexgR(void *p) {
      typedef vector<TArtValIndex> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TArtValIndex>

namespace ROOTDict {
   void vectorlETArtValIndexValgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETArtValIndexValgR_Dictionary();
   static void *new_vectorlETArtValIndexValgR(void *p = 0);
   static void *newArray_vectorlETArtValIndexValgR(Long_t size, void *p);
   static void delete_vectorlETArtValIndexValgR(void *p);
   static void deleteArray_vectorlETArtValIndexValgR(void *p);
   static void destruct_vectorlETArtValIndexValgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TArtValIndexVal>*)
   {
      vector<TArtValIndexVal> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TArtValIndexVal>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TArtValIndexVal>", -2, "prec_stl/vector", 49,
                  typeid(vector<TArtValIndexVal>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETArtValIndexValgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TArtValIndexVal>) );
      instance.SetNew(&new_vectorlETArtValIndexValgR);
      instance.SetNewArray(&newArray_vectorlETArtValIndexValgR);
      instance.SetDelete(&delete_vectorlETArtValIndexValgR);
      instance.SetDeleteArray(&deleteArray_vectorlETArtValIndexValgR);
      instance.SetDestructor(&destruct_vectorlETArtValIndexValgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TArtValIndexVal> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TArtValIndexVal>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETArtValIndexValgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TArtValIndexVal>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETArtValIndexValgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtValIndexVal> : new vector<TArtValIndexVal>;
   }
   static void *newArray_vectorlETArtValIndexValgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtValIndexVal>[nElements] : new vector<TArtValIndexVal>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETArtValIndexValgR(void *p) {
      delete ((vector<TArtValIndexVal>*)p);
   }
   static void deleteArray_vectorlETArtValIndexValgR(void *p) {
      delete [] ((vector<TArtValIndexVal>*)p);
   }
   static void destruct_vectorlETArtValIndexValgR(void *p) {
      typedef vector<TArtValIndexVal> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TArtValIndexVal>

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

/********************************************************
* analoop_dict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableanaloop_dict();

extern "C" void G__set_cpp_environmentanaloop_dict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("include/TArtAnaClock.hh");
  G__add_compiledheader("include/TAlRawDataExample.hh");
  G__add_compiledheader("include/TAlEncBranch.hh");
  G__add_compiledheader("include/TArtAnaLoop.hh");
  G__add_compiledheader("include/TArtAnaLoopManager.hh");
  G__add_compiledheader("include/TAlEncSub.hh");
  G__add_compiledheader("include/TAlEncHist.hh");
  G__add_compiledheader("include/TAlEncFactory.hh");
  G__add_compiledheader("include/TArtAnaFile.hh");
  G__add_compiledheader("include/TAlEncStop.hh");
  G__add_compiledheader("include/TAlEncFillTree.hh");
  G__add_compiledheader("include/TAlEncGate.hh");
  G__add_compiledheader("include/TAlEncPrint.hh");
  G__cpp_reset_tagtableanaloop_dict();
}
#include <new>
extern "C" int G__cpp_dllrevanaloop_dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TAlEncSub */
static int G__analoop_dict_479_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TAlEncSub*) G__getstructoffset())->ClassName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_479_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TAlEncSub::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_479_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncSub::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_479_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TAlEncSub::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_479_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TAlEncSub::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_479_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TAlEncSub*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_479_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncSub*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_479_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncSub*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_479_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncSub*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_479_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncSub::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_479_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAlEncSub::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_479_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncSub::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_479_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAlEncSub::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAlEncSub G__TTAlEncSub;
static int G__analoop_dict_479_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TAlEncSub*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TAlEncSub*) (soff+(sizeof(TAlEncSub)*i)))->~G__TTAlEncSub();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TAlEncSub*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TAlEncSub*) (soff))->~G__TTAlEncSub();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__analoop_dict_479_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAlEncSub* dest = (TAlEncSub*) G__getstructoffset();
   *dest = *(TAlEncSub*) libp->para[0].ref;
   const TAlEncSub& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAlEncFactory */
static int G__analoop_dict_480_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TAlEncFactory*) G__getstructoffset())->CreateEnc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_480_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TAlEncFactory::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_480_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncFactory::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_480_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TAlEncFactory::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_480_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TAlEncFactory::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_480_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TAlEncFactory*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_480_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncFactory*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_480_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncFactory*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_480_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncFactory*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_480_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncFactory::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_480_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAlEncFactory::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_480_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncFactory::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_480_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAlEncFactory::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAlEncFactory G__TTAlEncFactory;
static int G__analoop_dict_480_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TAlEncFactory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TAlEncFactory*) (soff+(sizeof(TAlEncFactory)*i)))->~G__TTAlEncFactory();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TAlEncFactory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TAlEncFactory*) (soff))->~G__TTAlEncFactory();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__analoop_dict_480_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAlEncFactory* dest = (TAlEncFactory*) G__getstructoffset();
   *dest = *(TAlEncFactory*) libp->para[0].ref;
   const TAlEncFactory& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtValIndex */
static int G__analoop_dict_483_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtValIndex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtValIndex[n];
     } else {
       p = new((void*) gvp) TArtValIndex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtValIndex;
     } else {
       p = new((void*) gvp) TArtValIndex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_483_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtValIndex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtValIndex(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TArtValIndex(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_483_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TArtValIndex*) G__getstructoffset())->operator<(*(TArtValIndex*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_483_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TArtValIndex*) G__getstructoffset())->operator==(*(TArtValIndex*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_483_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtValIndex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_483_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtValIndex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_483_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtValIndex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_483_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtValIndex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_483_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtValIndex*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_483_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtValIndex*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_483_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtValIndex*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_483_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtValIndex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_483_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtValIndex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_483_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtValIndex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_483_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtValIndex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_483_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtValIndex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__analoop_dict_483_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtValIndex* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtValIndex(*(TArtValIndex*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndex));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtValIndex G__TTArtValIndex;
static int G__analoop_dict_483_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtValIndex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtValIndex*) (soff+(sizeof(TArtValIndex)*i)))->~G__TTArtValIndex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtValIndex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtValIndex*) (soff))->~G__TTArtValIndex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__analoop_dict_483_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtValIndex* dest = (TArtValIndex*) G__getstructoffset();
   *dest = *(TArtValIndex*) libp->para[0].ref;
   const TArtValIndex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtValIndexVal */
static int G__analoop_dict_484_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtValIndexVal* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtValIndexVal[n];
     } else {
       p = new((void*) gvp) TArtValIndexVal[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtValIndexVal;
     } else {
       p = new((void*) gvp) TArtValIndexVal;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndexVal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_484_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtValIndexVal* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtValIndexVal(*((TArtValIndex*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) TArtValIndexVal(*((TArtValIndex*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndexVal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_484_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtValIndexVal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_484_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtValIndexVal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_484_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtValIndexVal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_484_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtValIndexVal::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_484_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtValIndexVal*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_484_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtValIndexVal*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_484_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtValIndexVal*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_484_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtValIndexVal*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_484_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtValIndexVal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_484_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtValIndexVal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_484_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtValIndexVal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_484_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtValIndexVal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__analoop_dict_484_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtValIndexVal* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtValIndexVal(*(TArtValIndexVal*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndexVal));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtValIndexVal G__TTArtValIndexVal;
static int G__analoop_dict_484_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtValIndexVal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtValIndexVal*) (soff+(sizeof(TArtValIndexVal)*i)))->~G__TTArtValIndexVal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtValIndexVal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtValIndexVal*) (soff))->~G__TTArtValIndexVal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__analoop_dict_484_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtValIndexVal* dest = (TArtValIndexVal*) G__getstructoffset();
   *dest = *(TArtValIndexVal*) libp->para[0].ref;
   const TArtValIndexVal& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtValIndexValArray */
static int G__analoop_dict_485_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtValIndexValArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtValIndexValArray[n];
     } else {
       p = new((void*) gvp) TArtValIndexValArray[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtValIndexValArray;
     } else {
       p = new((void*) gvp) TArtValIndexValArray;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndexValArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_485_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtValIndexValArray*) G__getstructoffset())->GetVal((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_485_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtValIndexValArray::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_485_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtValIndexValArray::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_485_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtValIndexValArray::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_485_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtValIndexValArray::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_485_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtValIndexValArray*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_485_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtValIndexValArray*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_485_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtValIndexValArray*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_485_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtValIndexValArray*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_485_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtValIndexValArray::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_485_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtValIndexValArray::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_485_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtValIndexValArray::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_485_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtValIndexValArray::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__analoop_dict_485_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtValIndexValArray* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtValIndexValArray(*(TArtValIndexValArray*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndexValArray));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtValIndexValArray G__TTArtValIndexValArray;
static int G__analoop_dict_485_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtValIndexValArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtValIndexValArray*) (soff+(sizeof(TArtValIndexValArray)*i)))->~G__TTArtValIndexValArray();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtValIndexValArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtValIndexValArray*) (soff))->~G__TTArtValIndexValArray();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__analoop_dict_485_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtValIndexValArray* dest = (TArtValIndexValArray*) G__getstructoffset();
   *dest = *(TArtValIndexValArray*) libp->para[0].ref;
   const TArtValIndexValArray& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtValMap */
static int G__analoop_dict_490_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtValMap* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtValMap[n];
     } else {
       p = new((void*) gvp) TArtValMap[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtValMap;
     } else {
       p = new((void*) gvp) TArtValMap;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TArtValMap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_490_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtValMap*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_490_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtValMap::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_490_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtValMap::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_490_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtValMap::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_490_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtValMap::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_490_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtValMap*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_490_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtValMap*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_490_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtValMap*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_490_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtValMap*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_490_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtValMap::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_490_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtValMap::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_490_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtValMap::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_490_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtValMap::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__analoop_dict_490_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtValMap* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtValMap(*(TArtValMap*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TArtValMap));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtValMap G__TTArtValMap;
static int G__analoop_dict_490_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtValMap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtValMap*) (soff+(sizeof(TArtValMap)*i)))->~G__TTArtValMap();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtValMap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtValMap*) (soff))->~G__TTArtValMap();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__analoop_dict_490_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtValMap* dest = (TArtValMap*) G__getstructoffset();
   *dest = *(TArtValMap*) libp->para[0].ref;
   const TArtValMap& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtAnaFile */
static int G__analoop_dict_516_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtAnaFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtAnaFile((TArtAnaLoop*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TArtAnaFile((TArtAnaLoop*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtAnaFile*) G__getstructoffset())->Construct());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtAnaFile*) G__getstructoffset())->Open((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtAnaFile*) G__getstructoffset())->CheckGate((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtAnaFile*) G__getstructoffset())->CalGate((int) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtAnaFile*) G__getstructoffset())->IsInside((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtAnaFile*) G__getstructoffset())->ClearVal();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtAnaFile*) G__getstructoffset())->ClearMap();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtAnaFile*) G__getstructoffset())->Find(*((TArtValIndex*) G__int(libp->para[0])), *(Double_t*) G__Doubleref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtAnaFile*) G__getstructoffset())->Add((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtAnaFile*) G__getstructoffset())->Get((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtAnaFile*) G__getstructoffset())->Get((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((TArtAnaFile*) G__getstructoffset())->CreateCutG((int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((TArtAnaFile*) G__getstructoffset())->CreateCutG((int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((TArtAnaFile*) G__getstructoffset())->CreateCutG((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((TArtAnaFile*) G__getstructoffset())->CreateCutG());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtAnaFile*) G__getstructoffset())->PrintListOfGate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtAnaFile*) G__getstructoffset())->DrawGate((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TArtAnaFile::GetGateMap((TH1*) G__int(libp->para[0]), *(int*) G__Intref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnaFile::RegisterEncFactory((int) G__int(libp->para[0]), (TAlEncFactory*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtAnaFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtAnaFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtAnaFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnaFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtAnaFile*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtAnaFile*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtAnaFile*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtAnaFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtAnaFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtAnaFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtAnaFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_516_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtAnaFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__analoop_dict_516_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtAnaFile* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtAnaFile(*(TArtAnaFile*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaFile));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtAnaFile G__TTArtAnaFile;
static int G__analoop_dict_516_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtAnaFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtAnaFile*) (soff+(sizeof(TArtAnaFile)*i)))->~G__TTArtAnaFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtAnaFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtAnaFile*) (soff))->~G__TTArtAnaFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__analoop_dict_516_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtAnaFile* dest = (TArtAnaFile*) G__getstructoffset();
   *dest = *(TArtAnaFile*) libp->para[0].ref;
   const TArtAnaFile& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtAnaGate */
static int G__analoop_dict_517_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtAnaGate* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtAnaGate[n];
     } else {
       p = new((void*) gvp) TArtAnaGate[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtAnaGate;
     } else {
       p = new((void*) gvp) TArtAnaGate;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaGate));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_517_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtAnaGate* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtAnaGate(
(int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (TArtAnaGate::EGateType) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) TArtAnaGate(
(int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (TArtAnaGate::EGateType) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaGate));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_517_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtAnaGate*) G__getstructoffset())->GetGateType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_517_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtAnaGate*) G__getstructoffset())->IsInside((int) G__int(libp->para[0]), (TArtAnaFile*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_517_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtAnaGate::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_517_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtAnaGate::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_517_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtAnaGate::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_517_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnaGate::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_517_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtAnaGate*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_517_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtAnaGate*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_517_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtAnaGate*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_517_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtAnaGate*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_517_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtAnaGate::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_517_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtAnaGate::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_517_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtAnaGate::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_517_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtAnaGate::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__analoop_dict_517_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtAnaGate* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtAnaGate(*(TArtAnaGate*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaGate));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtAnaGate G__TTArtAnaGate;
static int G__analoop_dict_517_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtAnaGate*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtAnaGate*) (soff+(sizeof(TArtAnaGate)*i)))->~G__TTArtAnaGate();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtAnaGate*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtAnaGate*) (soff))->~G__TTArtAnaGate();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__analoop_dict_517_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtAnaGate* dest = (TArtAnaGate*) G__getstructoffset();
   *dest = *(TArtAnaGate*) libp->para[0].ref;
   const TArtAnaGate& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtAnaLoopStatic */
static int G__analoop_dict_565_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) TArtAnaLoopStatic::AnaLoopStatic((void*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_565_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnaLoopStatic::SetAnaLoop((TArtAnaLoop*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_565_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnaLoopStatic::SetFileName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_565_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnaLoopStatic::SetEventNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_565_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnaLoopStatic::SetDirectory((TDirectory*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_565_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtAnaLoopStatic::GetAnaLoop());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_565_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtAnaLoopStatic::GetFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_565_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtAnaLoopStatic::GetEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_565_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtAnaLoopStatic::GetTotalEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_565_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtAnaLoopStatic::GetDirectory());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_565_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnaLoopStatic::Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_565_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtAnaLoopStatic::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_565_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtAnaLoopStatic::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_565_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtAnaLoopStatic::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_565_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnaLoopStatic::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_565_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtAnaLoopStatic*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_565_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtAnaLoopStatic*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_565_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtAnaLoopStatic*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_565_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtAnaLoopStatic*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_565_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtAnaLoopStatic::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_565_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtAnaLoopStatic::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_565_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtAnaLoopStatic::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_565_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtAnaLoopStatic::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__analoop_dict_565_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtAnaLoopStatic* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtAnaLoopStatic(*(TArtAnaLoopStatic*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoopStatic));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__analoop_dict_565_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtAnaLoopStatic* dest = (TArtAnaLoopStatic*) G__getstructoffset();
   *dest = *(TArtAnaLoopStatic*) libp->para[0].ref;
   const TArtAnaLoopStatic& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtAnaLoopManager */
static int G__analoop_dict_566_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) TArtAnaLoopManager::Book((TArtAnaLoop*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) TArtAnaLoopManager::Book((TArtAnaLoop*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      TArtAnaLoopManager::PushRidf((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      TArtAnaLoopManager::PushRidf((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      TArtAnaLoopManager::PushRidf((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      TArtAnaLoopManager::PushRidf((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      TArtAnaLoopManager::PushRidf((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      TArtAnaLoopManager::PushRidf();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnaLoopManager::PopRidf((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnaLoopManager::Start();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnaLoopManager::Stop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnaLoopManager::Next();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnaLoopManager::WaitAnalysis();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnaLoopManager::Join();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnaLoopManager::End();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnaLoopManager::ClearAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnaLoopManager::Status();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) TArtAnaLoopManager::HCut((int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) TArtAnaLoopManager::HCut((int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) TArtAnaLoopManager::HCut((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) TArtAnaLoopManager::HCut());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnaLoopManager::PrintListOfGate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnaLoopManager::DrawGate((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtAnaLoopManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtAnaLoopManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtAnaLoopManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtAnaLoopManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtAnaLoopManager*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtAnaLoopManager*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtAnaLoopManager*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtAnaLoopManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtAnaLoopManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtAnaLoopManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtAnaLoopManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_566_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtAnaLoopManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__analoop_dict_566_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtAnaLoopManager* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtAnaLoopManager(*(TArtAnaLoopManager*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoopManager));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__analoop_dict_566_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtAnaLoopManager* dest = (TArtAnaLoopManager*) G__getstructoffset();
   *dest = *(TArtAnaLoopManager*) libp->para[0].ref;
   const TArtAnaLoopManager& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAlRawDataExample */
static int G__analoop_dict_665_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAlRawDataExample* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAlRawDataExample[n];
     } else {
       p = new((void*) gvp) TAlRawDataExample[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAlRawDataExample;
     } else {
       p = new((void*) gvp) TAlRawDataExample;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TAlRawDataExample));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_665_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TAlRawDataExample::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_665_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlRawDataExample::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_665_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TAlRawDataExample::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_665_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TAlRawDataExample::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_665_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TAlRawDataExample*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_665_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlRawDataExample*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_665_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlRawDataExample*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_665_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlRawDataExample*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_665_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlRawDataExample::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_665_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAlRawDataExample::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_665_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlRawDataExample::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_665_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAlRawDataExample::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__analoop_dict_665_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TAlRawDataExample* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TAlRawDataExample(*(TAlRawDataExample*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TAlRawDataExample));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAlRawDataExample G__TTAlRawDataExample;
static int G__analoop_dict_665_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TAlRawDataExample*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TAlRawDataExample*) (soff+(sizeof(TAlRawDataExample)*i)))->~G__TTAlRawDataExample();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TAlRawDataExample*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TAlRawDataExample*) (soff))->~G__TTAlRawDataExample();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__analoop_dict_665_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAlRawDataExample* dest = (TAlRawDataExample*) G__getstructoffset();
   *dest = *(TAlRawDataExample*) libp->para[0].ref;
   const TAlRawDataExample& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAlEncBranch */
static int G__analoop_dict_667_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAlEncBranch* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAlEncBranch[n];
     } else {
       p = new((void*) gvp) TAlEncBranch[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAlEncBranch;
     } else {
       p = new((void*) gvp) TAlEncBranch;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TAlEncBranch));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_667_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncBranch*) G__getstructoffset())->SetTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_667_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncBranch*) G__getstructoffset())->SetBranchName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_667_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncBranch*) G__getstructoffset())->SetValIndexArray(*((vector<TArtValIndex>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_667_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncBranch*) G__getstructoffset())->SetGate((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_667_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TAlEncBranch::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_667_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncBranch::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_667_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TAlEncBranch::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_667_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TAlEncBranch::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_667_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncBranch*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_667_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncBranch::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_667_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAlEncBranch::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_667_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncBranch::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_667_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAlEncBranch::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__analoop_dict_667_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TAlEncBranch* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TAlEncBranch(*(TAlEncBranch*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TAlEncBranch));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAlEncBranch G__TTAlEncBranch;
static int G__analoop_dict_667_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TAlEncBranch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TAlEncBranch*) (soff+(sizeof(TAlEncBranch)*i)))->~G__TTAlEncBranch();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TAlEncBranch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TAlEncBranch*) (soff))->~G__TTAlEncBranch();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__analoop_dict_667_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAlEncBranch* dest = (TAlEncBranch*) G__getstructoffset();
   *dest = *(TAlEncBranch*) libp->para[0].ref;
   const TAlEncBranch& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAlEncHist */
static int G__analoop_dict_675_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAlEncHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAlEncHist[n];
     } else {
       p = new((void*) gvp) TAlEncHist[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAlEncHist;
     } else {
       p = new((void*) gvp) TAlEncHist;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TAlEncHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_675_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncHist*) G__getstructoffset())->SetHist((TH1*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_675_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncHist*) G__getstructoffset())->SetValIndexArray(*((vector<TArtValIndex>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_675_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncHist*) G__getstructoffset())->SetGate((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_675_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TAlEncHist::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_675_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncHist::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_675_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TAlEncHist::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_675_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TAlEncHist::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_675_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncHist*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_675_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncHist::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_675_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAlEncHist::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_675_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncHist::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_675_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAlEncHist::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__analoop_dict_675_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TAlEncHist* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TAlEncHist(*(TAlEncHist*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TAlEncHist));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAlEncHist G__TTAlEncHist;
static int G__analoop_dict_675_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TAlEncHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TAlEncHist*) (soff+(sizeof(TAlEncHist)*i)))->~G__TTAlEncHist();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TAlEncHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TAlEncHist*) (soff))->~G__TTAlEncHist();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__analoop_dict_675_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAlEncHist* dest = (TAlEncHist*) G__getstructoffset();
   *dest = *(TAlEncHist*) libp->para[0].ref;
   const TAlEncHist& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAlEncStop */
static int G__analoop_dict_676_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAlEncStop* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAlEncStop[n];
     } else {
       p = new((void*) gvp) TAlEncStop[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAlEncStop;
     } else {
       p = new((void*) gvp) TAlEncStop;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TAlEncStop));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_676_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncStop*) G__getstructoffset())->AddStop((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_676_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TAlEncStop::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_676_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncStop::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_676_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TAlEncStop::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_676_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TAlEncStop::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_676_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncStop*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_676_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncStop::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_676_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAlEncStop::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_676_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncStop::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_676_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAlEncStop::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__analoop_dict_676_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TAlEncStop* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TAlEncStop(*(TAlEncStop*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TAlEncStop));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAlEncStop G__TTAlEncStop;
static int G__analoop_dict_676_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TAlEncStop*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TAlEncStop*) (soff+(sizeof(TAlEncStop)*i)))->~G__TTAlEncStop();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TAlEncStop*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TAlEncStop*) (soff))->~G__TTAlEncStop();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__analoop_dict_676_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAlEncStop* dest = (TAlEncStop*) G__getstructoffset();
   *dest = *(TAlEncStop*) libp->para[0].ref;
   const TAlEncStop& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAlEncFillTree */
static int G__analoop_dict_677_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAlEncFillTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAlEncFillTree[n];
     } else {
       p = new((void*) gvp) TAlEncFillTree[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAlEncFillTree;
     } else {
       p = new((void*) gvp) TAlEncFillTree;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TAlEncFillTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_677_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncFillTree*) G__getstructoffset())->SetTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_677_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TAlEncFillTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_677_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncFillTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_677_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TAlEncFillTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_677_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TAlEncFillTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_677_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncFillTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_677_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncFillTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_677_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAlEncFillTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_677_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncFillTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_677_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAlEncFillTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__analoop_dict_677_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TAlEncFillTree* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TAlEncFillTree(*(TAlEncFillTree*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TAlEncFillTree));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAlEncFillTree G__TTAlEncFillTree;
static int G__analoop_dict_677_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TAlEncFillTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TAlEncFillTree*) (soff+(sizeof(TAlEncFillTree)*i)))->~G__TTAlEncFillTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TAlEncFillTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TAlEncFillTree*) (soff))->~G__TTAlEncFillTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__analoop_dict_677_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAlEncFillTree* dest = (TAlEncFillTree*) G__getstructoffset();
   *dest = *(TAlEncFillTree*) libp->para[0].ref;
   const TAlEncFillTree& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAlEncGate */
static int G__analoop_dict_678_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAlEncGate* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAlEncGate[n];
     } else {
       p = new((void*) gvp) TAlEncGate[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAlEncGate;
     } else {
       p = new((void*) gvp) TAlEncGate;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TAlEncGate));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_678_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncGate*) G__getstructoffset())->SetGate((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_678_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TAlEncGate::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_678_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncGate::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_678_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TAlEncGate::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_678_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TAlEncGate::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_678_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncGate*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_678_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncGate::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_678_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAlEncGate::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_678_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncGate::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_678_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAlEncGate::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__analoop_dict_678_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TAlEncGate* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TAlEncGate(*(TAlEncGate*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TAlEncGate));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAlEncGate G__TTAlEncGate;
static int G__analoop_dict_678_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TAlEncGate*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TAlEncGate*) (soff+(sizeof(TAlEncGate)*i)))->~G__TTAlEncGate();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TAlEncGate*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TAlEncGate*) (soff))->~G__TTAlEncGate();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__analoop_dict_678_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAlEncGate* dest = (TAlEncGate*) G__getstructoffset();
   *dest = *(TAlEncGate*) libp->para[0].ref;
   const TAlEncGate& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAlEncPrint */
static int G__analoop_dict_679_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAlEncPrint* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAlEncPrint[n];
     } else {
       p = new((void*) gvp) TAlEncPrint[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAlEncPrint;
     } else {
       p = new((void*) gvp) TAlEncPrint;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TAlEncPrint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_679_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncPrint*) G__getstructoffset())->SetValIndexArray(*((vector<TArtValIndex>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_679_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncPrint*) G__getstructoffset())->SetGate((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_679_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TAlEncPrint::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_679_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncPrint::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_679_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TAlEncPrint::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_679_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TAlEncPrint::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_679_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAlEncPrint*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_679_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncPrint::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_679_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAlEncPrint::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_679_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAlEncPrint::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict_679_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAlEncPrint::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__analoop_dict_679_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TAlEncPrint* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TAlEncPrint(*(TAlEncPrint*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__analoop_dictLN_TAlEncPrint));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAlEncPrint G__TTAlEncPrint;
static int G__analoop_dict_679_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TAlEncPrint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TAlEncPrint*) (soff+(sizeof(TAlEncPrint)*i)))->~G__TTAlEncPrint();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TAlEncPrint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TAlEncPrint*) (soff))->~G__TTAlEncPrint();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__analoop_dict_679_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAlEncPrint* dest = (TAlEncPrint*) G__getstructoffset();
   *dest = *(TAlEncPrint*) libp->para[0].ref;
   const TAlEncPrint& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__analoop_dict__0_3413(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      lv();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict__0_3414(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      book((TArtAnaLoop*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      book((TArtAnaLoop*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict__0_3415(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      push((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      push((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      push((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict__0_3416(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      push((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      push((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      push();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict__0_3417(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      spush((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (char) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      spush((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      spush((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict__0_3418(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      pop((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict__0_3419(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      start();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict__0_3420(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      stop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict__0_3421(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      next();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict__0_3422(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      join();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict__0_3423(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      end();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict__0_3424(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict__0_3425(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      status();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict__0_3426(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      lc();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict__0_3427(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) hcut((int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) hcut((int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) hcut((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) hcut());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__analoop_dict__0_3428(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      cdraw((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* TAlEncSub */

/* TAlEncFactory */

/* TArtValIndex */

/* TArtValIndexVal */

/* TArtValIndexValArray */

/* TArtValMap */

/* TArtAnaFile */

/* TArtAnaGate */

/* TArtAnaLoopStatic */

/* TArtAnaLoopManager */

/* TAlRawDataExample */

/* TAlEncBranch */

/* TAlEncHist */

/* TAlEncStop */

/* TAlEncFillTree */

/* TAlEncGate */

/* TAlEncPrint */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncanaloop_dict {
 public:
  G__Sizep2memfuncanaloop_dict(): p(&G__Sizep2memfuncanaloop_dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncanaloop_dict::*p)();
};

size_t G__get_sizep2memfuncanaloop_dict()
{
  G__Sizep2memfuncanaloop_dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceanaloop_dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndexValArray))) {
     TArtValIndexValArray *G__Lderived;
     G__Lderived=(TArtValIndexValArray*)0x1000;
     {
       vector<TArtValIndexVal,allocator<TArtValIndexVal> > *G__Lpbase=(vector<TArtValIndexVal,allocator<TArtValIndexVal> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndexValArray),G__get_linked_tagnum(&G__analoop_dictLN_vectorlETArtValIndexValcOallocatorlETArtValIndexValgRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__analoop_dictLN_TAlRawDataExample))) {
     TAlRawDataExample *G__Lderived;
     G__Lderived=(TAlRawDataExample*)0x1000;
     {
       TArtAnaLoop *G__Lpbase=(TArtAnaLoop*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlRawDataExample),G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoop),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncBranch))) {
     TAlEncBranch *G__Lderived;
     G__Lderived=(TAlEncBranch*)0x1000;
     {
       TAlEncSub *G__Lpbase=(TAlEncSub*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncBranch),G__get_linked_tagnum(&G__analoop_dictLN_TAlEncSub),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncHist))) {
     TAlEncHist *G__Lderived;
     G__Lderived=(TAlEncHist*)0x1000;
     {
       TAlEncSub *G__Lpbase=(TAlEncSub*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncHist),G__get_linked_tagnum(&G__analoop_dictLN_TAlEncSub),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncStop))) {
     TAlEncStop *G__Lderived;
     G__Lderived=(TAlEncStop*)0x1000;
     {
       TAlEncSub *G__Lpbase=(TAlEncSub*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncStop),G__get_linked_tagnum(&G__analoop_dictLN_TAlEncSub),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncFillTree))) {
     TAlEncFillTree *G__Lderived;
     G__Lderived=(TAlEncFillTree*)0x1000;
     {
       TAlEncSub *G__Lpbase=(TAlEncSub*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncFillTree),G__get_linked_tagnum(&G__analoop_dictLN_TAlEncSub),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncGate))) {
     TAlEncGate *G__Lderived;
     G__Lderived=(TAlEncGate*)0x1000;
     {
       TAlEncSub *G__Lpbase=(TAlEncSub*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncGate),G__get_linked_tagnum(&G__analoop_dictLN_TAlEncSub),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncPrint))) {
     TAlEncPrint *G__Lderived;
     G__Lderived=(TAlEncPrint*)0x1000;
     {
       TAlEncSub *G__Lpbase=(TAlEncSub*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncPrint),G__get_linked_tagnum(&G__analoop_dictLN_TAlEncSub),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableanaloop_dict() {

   /* Setting up typedef entry */
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__analoop_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__analoop_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__analoop_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__analoop_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__analoop_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__analoop_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__analoop_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__analoop_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__analoop_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__analoop_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__analoop_dictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__analoop_dictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtValIndexVal>",117,G__get_linked_tagnum(&G__analoop_dictLN_vectorlETArtValIndexValcOallocatorlETArtValIndexValgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__analoop_dictLN_reverse_iteratorlEvectorlETArtValIndexValcOallocatorlETArtValIndexValgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__analoop_dictLN_vectorlETArtValIndexValcOallocatorlETArtValIndexValgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__analoop_dictLN_reverse_iteratorlEvectorlETArtValIndexValcOallocatorlETArtValIndexValgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__analoop_dictLN_vectorlETArtValIndexValcOallocatorlETArtValIndexValgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,Double_t>",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,double>",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,double,less<int> >",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,std::map<int,Double_t> >",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,map<int,double,less<int>,allocator<pair<const int,double> > > >",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,map<int,double,less<int>,allocator<pair<const int,double> > >,less<int> >",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,std::map<int,std::map<int,Double_t> > >",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEintcOmaplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,map<int,map<int,double,less<int>,allocator<pair<const int,double> > >,less<int>,allocator<pair<const int,map<int,double,less<int>,allocator<pair<const int,double> > > > > > >",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEintcOmaplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,map<int,map<int,double,less<int>,allocator<pair<const int,double> > >,less<int>,allocator<pair<const int,map<int,double,less<int>,allocator<pair<const int,double> > > > > >,less<int> >",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEintcOmaplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtValIndex>",117,G__get_linked_tagnum(&G__analoop_dictLN_vectorlETArtValIndexcOallocatorlETArtValIndexgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__analoop_dictLN_reverse_iteratorlEvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__analoop_dictLN_vectorlETArtValIndexcOallocatorlETArtValIndexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__analoop_dictLN_reverse_iteratorlEvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__analoop_dictLN_vectorlETArtValIndexcOallocatorlETArtValIndexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__analoop_dictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__analoop_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__analoop_dictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__analoop_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__analoop_dictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::vector<TArtValIndex> >",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEstringcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::vector<TArtValIndex> >",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEstringcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<TArtValIndex,allocator<TArtValIndex> > >",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEstringcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<TArtValIndex,allocator<TArtValIndex> >,less<string> >",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEstringcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,std::vector<TArtValIndex> >",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEintcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<TArtValIndex,allocator<TArtValIndex> > >",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEintcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<TArtValIndex,allocator<TArtValIndex> >,less<int> >",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEintcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TArtAnaGate*>",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEintcOTArtAnaGatemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtAnaGatemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TArtAnaGate*,less<int> >",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEintcOTArtAnaGatemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtAnaGatemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TH1*,int>",117,G__get_linked_tagnum(&G__analoop_dictLN_maplETH1mUcOintcOlesslETH1mUgRcOallocatorlEpairlETH1mUsPconstcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TH1*,int,less<TH1*> >",117,G__get_linked_tagnum(&G__analoop_dictLN_maplETH1mUcOintcOlesslETH1mUgRcOallocatorlEpairlETH1mUsPconstcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TAlEncFactory*>",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEintcOTAlEncFactorymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTAlEncFactorymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TAlEncFactory*,less<int> >",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEintcOTAlEncFactorymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTAlEncFactorymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__analoop_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__analoop_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__analoop_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__analoop_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__analoop_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__analoop_dictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__analoop_dictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__analoop_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__analoop_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<const char*>",117,G__get_linked_tagnum(&G__analoop_dictLN_dequelEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TAlEncSub */
static void G__setup_memvarTAlEncSub(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncSub));
   { TAlEncSub *p; p=(TAlEncSub*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoop),-1,-1,2,"fAnaLoop=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAlEncFactory */
static void G__setup_memvarTAlEncFactory(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncFactory));
   { TAlEncFactory *p; p=(TAlEncFactory*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtValIndex */
static void G__setup_memvarTArtValIndex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndex));
   { TArtValIndex *p; p=(TArtValIndex*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fAnalyser)-(long)(p)),105,0,0,-1,-1,-1,1,"fAnalyser=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fWNum)-(long)(p)),105,0,0,-1,-1,-1,1,"fWNum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIndex)-(long)(p)),105,0,0,-1,-1,-1,1,"fIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtValIndexVal */
static void G__setup_memvarTArtValIndexVal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndexVal));
   { TArtValIndexVal *p; p=(TArtValIndexVal*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fValIndex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndex),-1,-1,1,"fValIndex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fVal)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fVal=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtValIndexValArray */
static void G__setup_memvarTArtValIndexValArray(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndexValArray));
   { TArtValIndexValArray *p; p=(TArtValIndexValArray*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtValMap */
static void G__setup_memvarTArtValMap(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__analoop_dictLN_TArtValMap));
   { TArtValMap *p; p=(TArtValMap*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("MaxAnalyserSize=%lldLL",(long long)TArtValMap::MaxAnalyserSize).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("MaxWNumSize=%lldLL",(long long)TArtValMap::MaxWNumSize).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("MaxIndexSize=%lldLL",(long long)TArtValMap::MaxIndexSize).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fVal)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_maplEintcOmaplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,std::map<int,std::map<int,Double_t> > >"),-1,1,"fVal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFlag)-(long)(p)),103,0,0,-1,-1,-1,1,"fFlag[64][128][512]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCleanList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_vectorlETArtValIndexcOallocatorlETArtValIndexgRsPgR),G__defined_typename("vector<TArtValIndex>"),-1,1,"fCleanList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtAnaFile */
static void G__setup_memvarTArtAnaFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaFile));
   { TArtAnaFile *p; p=(TArtAnaFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TArtValMap),-1,-1,4,"fValMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_maplEstringcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::vector<TArtValIndex> >"),-1,4,"fValIndexArrayMapName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_maplEintcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,std::vector<TArtValIndex> >"),-1,4,"fValIndexArrayMapGate=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_maplEintcOTArtAnaGatemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtAnaGatemUgRsPgRsPgR),G__defined_typename("map<int,TArtAnaGate*>"),-1,4,"fAnaGateMapGate=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fHistNameCounter=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_maplETH1mUcOintcOlesslETH1mUgRcOallocatorlEpairlETH1mUsPconstcOintgRsPgRsPgR),G__defined_typename("map<TH1*,int>"),-2,4,"fGateMapHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoop),-1,-1,4,"fAnaLoop=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_maplEintcOTAlEncFactorymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTAlEncFactorymUgRsPgRsPgR),G__defined_typename("map<int,TAlEncFactory*>"),-2,4,"fEncFactoryMapInt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtAnaGate */
static void G__setup_memvarTArtAnaGate(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaGate));
   { TArtAnaGate *p; p=(TArtAnaGate*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaGatecLcLEGateType),-1,-2,1,G__FastAllocString(2048).Format("kNoGate=%lldLL",(long long)TArtAnaGate::kNoGate).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaGatecLcLEGateType),-1,-2,1,G__FastAllocString(2048).Format("kUL=%lldLL",(long long)TArtAnaGate::kUL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaGatecLcLEGateType),-1,-2,1,G__FastAllocString(2048).Format("kAnd=%lldLL",(long long)TArtAnaGate::kAnd).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaGatecLcLEGateType),-1,-2,1,G__FastAllocString(2048).Format("kOr=%lldLL",(long long)TArtAnaGate::kOr).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaGatecLcLEGateType),-1,-2,1,G__FastAllocString(2048).Format("kCutG=%lldLL",(long long)TArtAnaGate::kCutG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaGatecLcLEGateType),-1,-2,1,G__FastAllocString(2048).Format("kCC=%lldLL",(long long)TArtAnaGate::kCC).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fGate=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_string),-1,-1,2,"fTitle=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fInside=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaGatecLcLEGateType),-1,-1,2,"fGateType=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_string),-1,-1,2,"fGateTypeName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtAnaLoopStatic */
static void G__setup_memvarTArtAnaLoopStatic(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoopStatic));
   { TArtAnaLoopStatic *p; p=(TArtAnaLoopStatic*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoop),-1,-2,4,"fAnaLoop=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TString),-1,-2,4,"fFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-2,4,"fEventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TDirectory),-1,-2,4,"fDirectory=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtAnaLoopManager */
static void G__setup_memvarTArtAnaLoopManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoopManager));
   { TArtAnaLoopManager *p; p=(TArtAnaLoopManager*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoopManagercLcLEAnalysisState),-1,-2,4,"INIT=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoopManagercLcLEAnalysisState),-1,-2,4,"RUNNING=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoopManagercLcLEAnalysisState),-1,-2,4,"SUSPENDED=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoopManagercLcLEAnalysisState),-1,-2,4,"NEXT=3LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoopManagercLcLEAnalysisState),-1,-2,4,"END=4LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoopManagercLcLEAnalysisState),-1,-2,4,"ERROR=5LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoopManagercLcLEAnalysisState),-1,-2,4,"kAnalysisState=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-2,4,"fThreadRunning=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TThread),-1,-2,4,"fThread=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-2,4,"fLock=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-2,4,"fAnaFileLast=",0,"chech last call was using anafile");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-2,4,"fStopLoop=",0,"for interrupt");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-2,4,"fSkipEvents=",0,"number of events to be skipped");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"fSystemWait=111LL",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_dequelEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR),G__defined_typename("deque<const char*>"),-2,4,"fNextRidfFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_dequelEintcOallocatorlEintgRsPgR),G__defined_typename("deque<int>"),-2,4,"fNextRidfEventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_dequelEintcOallocatorlEintgRsPgR),G__defined_typename("deque<int>"),-2,4,"fNextSID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_dequelEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR),G__defined_typename("deque<const char*>"),-2,4,"fPrevRidfFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_dequelEintcOallocatorlEintgRsPgR),G__defined_typename("deque<int>"),-2,4,"fPrevRidfEventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_dequelEintcOallocatorlEintgRsPgR),G__defined_typename("deque<int>"),-2,4,"fPrevSID=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAlRawDataExample */
static void G__setup_memvarTAlRawDataExample(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlRawDataExample));
   { TAlRawDataExample *p; p=(TAlRawDataExample*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TH1),-1,-1,2,"hnsegment=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TH1),-1,-1,2,"hefn=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TH1),-1,-1,2,"hdevice=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TH1),-1,-1,2,"hfpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TH1),-1,-1,2,"hdetector=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TH1),-1,-1,2,"hmodule=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TH1),-1,-1,2,"hgeo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TH1),-1,-1,2,"hedge=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TH1),-1,-1,2,"hch=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TH1),-1,-1,2,"hval=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TNtuple),-1,-1,2,"ntp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAlEncBranch */
static void G__setup_memvarTAlEncBranch(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncBranch));
   { TAlEncBranch *p; p=(TAlEncBranch*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TTree),-1,-1,4,"fTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TString),-1,-1,4,"fBranchName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_vectorlETArtValIndexcOallocatorlETArtValIndexgRsPgR),G__defined_typename("vector<TArtValIndex>"),-1,4,"fValIndexArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fValue_v=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fGate=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAlEncHist */
static void G__setup_memvarTAlEncHist(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncHist));
   { TAlEncHist *p; p=(TAlEncHist*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TH1),-1,-1,4,"fHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_vectorlETArtValIndexcOallocatorlETArtValIndexgRsPgR),G__defined_typename("vector<TArtValIndex>"),-1,4,"fValIndexArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fGate=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAlEncStop */
static void G__setup_memvarTAlEncStop(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncStop));
   { TAlEncStop *p; p=(TAlEncStop*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"fGateArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAlEncFillTree */
static void G__setup_memvarTAlEncFillTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncFillTree));
   { TAlEncFillTree *p; p=(TAlEncFillTree*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TTree),-1,-1,4,"fTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAlEncGate */
static void G__setup_memvarTAlEncGate(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncGate));
   { TAlEncGate *p; p=(TAlEncGate*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fGate=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAlEncPrint */
static void G__setup_memvarTAlEncPrint(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncPrint));
   { TAlEncPrint *p; p=(TAlEncPrint*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__analoop_dictLN_vectorlETArtValIndexcOallocatorlETArtValIndexgRsPgR),G__defined_typename("vector<TArtValIndex>"),-1,4,"fValIndexArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fGate=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__analoop_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvaranaloop_dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTAlEncSub(void) {
   /* TAlEncSub */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncSub));
   G__memfunc_setup("SetAnaLoop",982,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TArtAnaLoop' - 0 - analoop", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Construct",965,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("PreCalculate",1205,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Calculate",910,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("PostCalculate",1332,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Destruct",846,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ClassName",887,G__analoop_dict_479_0_8, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__analoop_dict_479_0_9, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TAlEncSub::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__analoop_dict_479_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncSub::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__analoop_dict_479_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TAlEncSub::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__analoop_dict_479_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TAlEncSub::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__analoop_dict_479_0_13, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__analoop_dict_479_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__analoop_dict_479_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__analoop_dict_479_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__analoop_dict_479_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncSub::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__analoop_dict_479_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAlEncSub::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__analoop_dict_479_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncSub::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__analoop_dict_479_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAlEncSub::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TAlEncSub", 959, G__analoop_dict_479_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__analoop_dict_479_0_22, (int) ('u'), G__get_linked_tagnum(&G__analoop_dictLN_TAlEncSub), -1, 1, 1, 1, 1, 0, "u 'TAlEncSub' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAlEncFactory(void) {
   /* TAlEncFactory */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncFactory));
   G__memfunc_setup("CreateEnc",874,G__analoop_dict_480_0_2, 85, G__get_linked_tagnum(&G__analoop_dictLN_TAlEncSub), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__analoop_dict_480_0_3, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TAlEncFactory::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__analoop_dict_480_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncFactory::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__analoop_dict_480_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TAlEncFactory::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__analoop_dict_480_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TAlEncFactory::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__analoop_dict_480_0_7, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__analoop_dict_480_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__analoop_dict_480_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__analoop_dict_480_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__analoop_dict_480_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncFactory::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__analoop_dict_480_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAlEncFactory::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__analoop_dict_480_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncFactory::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__analoop_dict_480_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAlEncFactory::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TAlEncFactory", 1389, G__analoop_dict_480_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__analoop_dict_480_0_16, (int) ('u'), G__get_linked_tagnum(&G__analoop_dictLN_TAlEncFactory), -1, 1, 1, 1, 1, 0, "u 'TAlEncFactory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtValIndex(void) {
   /* TArtValIndex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndex));
   G__memfunc_setup("TArtValIndex",1174,G__analoop_dict_483_0_1, 105, G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtValIndex",1174,G__analoop_dict_483_0_2, 105, G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndex), -1, 0, 3, 1, 1, 0, 
"i - - 0 - analyser i - - 0 - wnum "
"i - - 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__analoop_dict_483_0_3, 103, -1, -1, 0, 1, 1, 1, 8, "u 'TArtValIndex' - 11 - right", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator==",998,G__analoop_dict_483_0_4, 103, -1, -1, 0, 1, 1, 1, 8, "u 'TArtValIndex' - 11 - right", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__analoop_dict_483_0_5, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtValIndex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__analoop_dict_483_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtValIndex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__analoop_dict_483_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtValIndex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__analoop_dict_483_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtValIndex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__analoop_dict_483_0_9, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__analoop_dict_483_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__analoop_dict_483_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__analoop_dict_483_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__analoop_dict_483_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtValIndex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__analoop_dict_483_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtValIndex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__analoop_dict_483_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtValIndex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__analoop_dict_483_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtValIndex::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtValIndex", 1174, G__analoop_dict_483_0_17, (int) ('i'), G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndex), -1, 0, 1, 1, 1, 0, "u 'TArtValIndex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtValIndex", 1300, G__analoop_dict_483_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__analoop_dict_483_0_19, (int) ('u'), G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndex), -1, 1, 1, 1, 1, 0, "u 'TArtValIndex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtValIndexVal(void) {
   /* TArtValIndexVal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndexVal));
   G__memfunc_setup("TArtValIndexVal",1465,G__analoop_dict_484_0_1, 105, G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndexVal), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtValIndexVal",1465,G__analoop_dict_484_0_2, 105, G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndexVal), -1, 0, 2, 1, 1, 0, 
"u 'TArtValIndex' - 0 - valindex d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__analoop_dict_484_0_3, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtValIndexVal::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__analoop_dict_484_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtValIndexVal::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__analoop_dict_484_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtValIndexVal::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__analoop_dict_484_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtValIndexVal::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__analoop_dict_484_0_7, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__analoop_dict_484_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__analoop_dict_484_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__analoop_dict_484_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__analoop_dict_484_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtValIndexVal::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__analoop_dict_484_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtValIndexVal::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__analoop_dict_484_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtValIndexVal::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__analoop_dict_484_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtValIndexVal::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtValIndexVal", 1465, G__analoop_dict_484_0_15, (int) ('i'), G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndexVal), -1, 0, 1, 1, 1, 0, "u 'TArtValIndexVal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtValIndexVal", 1591, G__analoop_dict_484_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__analoop_dict_484_0_17, (int) ('u'), G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndexVal), -1, 1, 1, 1, 1, 0, "u 'TArtValIndexVal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtValIndexValArray(void) {
   /* TArtValIndexValArray */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndexValArray));
   G__memfunc_setup("TArtValIndexValArray",1976,G__analoop_dict_485_0_1, 105, G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndexValArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVal",579,G__analoop_dict_485_0_2, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"i - - 0 - analyser i - - 0 - wnum "
"i - - 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__analoop_dict_485_0_3, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtValIndexValArray::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__analoop_dict_485_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtValIndexValArray::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__analoop_dict_485_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtValIndexValArray::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__analoop_dict_485_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtValIndexValArray::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__analoop_dict_485_0_7, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__analoop_dict_485_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__analoop_dict_485_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__analoop_dict_485_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__analoop_dict_485_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtValIndexValArray::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__analoop_dict_485_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtValIndexValArray::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__analoop_dict_485_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtValIndexValArray::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__analoop_dict_485_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtValIndexValArray::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtValIndexValArray", 1976, G__analoop_dict_485_0_15, (int) ('i'), G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndexValArray), -1, 0, 1, 1, 1, 0, "u 'TArtValIndexValArray' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtValIndexValArray", 2102, G__analoop_dict_485_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__analoop_dict_485_0_17, (int) ('u'), G__get_linked_tagnum(&G__analoop_dictLN_TArtValIndexValArray), -1, 1, 1, 1, 1, 0, "u 'TArtValIndexValArray' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtValMap(void) {
   /* TArtValMap */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__analoop_dictLN_TArtValMap));
   G__memfunc_setup("TArtValMap",956,G__analoop_dict_490_0_1, 105, G__get_linked_tagnum(&G__analoop_dictLN_TArtValMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__analoop_dict_490_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", "trueになったflagのみfalseに戻すことにより高速化。", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__analoop_dict_490_0_3, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtValMap::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__analoop_dict_490_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtValMap::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__analoop_dict_490_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtValMap::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__analoop_dict_490_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtValMap::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__analoop_dict_490_0_7, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__analoop_dict_490_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__analoop_dict_490_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__analoop_dict_490_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__analoop_dict_490_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtValMap::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__analoop_dict_490_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtValMap::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__analoop_dict_490_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtValMap::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__analoop_dict_490_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtValMap::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtValMap", 956, G__analoop_dict_490_0_15, (int) ('i'), G__get_linked_tagnum(&G__analoop_dictLN_TArtValMap), -1, 0, 1, 1, 1, 0, "u 'TArtValMap' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtValMap", 1082, G__analoop_dict_490_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__analoop_dict_490_0_17, (int) ('u'), G__get_linked_tagnum(&G__analoop_dictLN_TArtValMap), -1, 1, 1, 1, 1, 0, "u 'TArtValMap' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtAnaFile(void) {
   /* TArtAnaFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaFile));
   G__memfunc_setup("TArtAnaFile",1035,G__analoop_dict_516_0_1, 105, G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaFile), -1, 0, 1, 1, 1, 0, "U 'TArtAnaLoop' - 0 - analoop", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Construct",965,G__analoop_dict_516_0_2, 103, -1, -1, 0, 0, 1, 1, 0, "", "boolを返したかったのでコンストラクタとは別に作った。必ず呼んで。", (void*) NULL, 0);
   G__memfunc_setup("Open",402,G__analoop_dict_516_0_3, 103, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - filename", "anafileを読み込む。", (void*) NULL, 0);
   G__memfunc_setup("CheckGate",863,G__analoop_dict_516_0_4, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - gate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalGate",657,G__analoop_dict_516_0_5, 103, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - gate g - - 0 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInside",792,G__analoop_dict_516_0_6, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - gate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearVal",778,G__analoop_dict_516_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", "clear val(実際には真偽値のみクリア). call at every beginning of event.", (void*) NULL, 0);
   G__memfunc_setup("ClearMap",773,G__analoop_dict_516_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", "call when you change anafile", (void*) NULL, 0);
   G__memfunc_setup("Find",385,G__analoop_dict_516_0_9, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'TArtValIndex' - 0 - valindex d - 'Double_t' 1 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__analoop_dict_516_0_10, 103, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - analyser i - - 0 - wnum "
"i - - 0 - index d - 'Double_t' 0 - val", "add val to index.", (void*) NULL, 0);
   G__memfunc_setup("Get",288,G__analoop_dict_516_0_11, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"i - - 0 - analyser i - - 0 - wnum "
"i - - 0 - index", "if not Added, NaN is returned", (void*) NULL, 0);
   G__memfunc_setup("Get",288,G__analoop_dict_516_0_12, 103, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - analyser i - - 0 - wnum "
"i - - 0 - index d - 'Double_t' 1 - val", "return clear flag", (void*) NULL, 0);
   G__memfunc_setup("CreateCutG",967,G__analoop_dict_516_0_13, 85, G__get_linked_tagnum(&G__analoop_dictLN_TCutG), -1, 0, 3, 1, 1, 0, 
"i - - 0 '0' id C - - 10 '0' filename "
"C - - 10 '0' cutname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListOfGate",1503,G__analoop_dict_516_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawGate",783,G__analoop_dict_516_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddValIndexMap",1346,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 2, 1, 4, 0, 
"u 'string' - 0 - name u 'vector<TArtValIndex,allocator<TArtValIndex> >' 'vector<TArtValIndex>' 0 - valindexarray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddValIndexArrayMap",1857,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - gate u 'vector<TArtValIndex,allocator<TArtValIndex> >' 'vector<TArtValIndex>' 0 - valindexarray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddAnaGateMap",1208,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - gate U 'TArtAnaGate' - 0 - anagate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGateMap",959,G__analoop_dict_516_0_19, 103, -1, -1, 0, 2, 3, 1, 0, 
"U 'TH1' - 0 - hist i - - 1 - gate", (char*)NULL, (void*) G__func2void( (bool (*)(TH1*, int&))(&TArtAnaFile::GetGateMap) ), 0);
   G__memfunc_setup("AddGateMap",936,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 2, 1, 4, 0, 
"U 'TH1' - 0 - hist i - - 0 - gate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RegisterEncFactory",1843,G__analoop_dict_516_0_21, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - analys U 'TAlEncFactory' - 0 - encfactory", (char*)NULL, (void*) G__func2void( (void (*)(int, TAlEncFactory*))(&TArtAnaFile::RegisterEncFactory) ), 0);
   G__memfunc_setup("AddSequenceMap",1376,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 2, 1, 4, 0, 
"u 'string' - 0 - name i - - 0 - fp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hist",408,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - str i - - 0 - countline "
"u 'string' - 0 - sequence", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Branch",590,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - str i - - 0 - countline "
"u 'string' - 0 - sequence", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillTree",791,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - str i - - 0 - countline "
"u 'string' - 0 - sequence", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("For",295,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - str i - - 0 - countline "
"u 'string' - 0 - sequence", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("And",275,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - str i - - 0 - countline "
"u 'string' - 0 - sequence", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Or",193,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - str i - - 0 - countline "
"u 'string' - 0 - sequence", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gate",385,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - str i - - 0 - countline "
"u 'string' - 0 - sequence", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CC",134,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - str i - - 0 - countline "
"u 'string' - 0 - sequence", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CutG",371,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - str i - - 0 - countline "
"u 'string' - 0 - sequence", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Point",522,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - str i - - 0 - countline "
"u 'string' - 0 - sequence", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Include",708,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - str i - - 0 - countline "
"u 'string' - 0 - sequence", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Analys",616,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - str i - - 0 - countline "
"u 'string' - 0 - sequence", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Stop",422,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - str i - - 0 - countline "
"u 'string' - 0 - sequence", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - str i - - 0 - countline "
"u 'string' - 0 - sequence", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateAndRegisterEnc",1986,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - analys", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RegisterEnc",1115,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TAlEncSub' - 0 - alencsub", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveComment",1345,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'string' - 1 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadSequence",1205,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - str i - - 0 - countline "
"u 'string' - 1 - sequence", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadValues",1004,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - str i - - 0 - countline "
"u 'vector<double,allocator<double> >' 'vector<double>' 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTitle",894,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 1 - str i - - 0 - countline "
"u 'string' - 1 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__analoop_dict_516_0_43, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtAnaFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__analoop_dict_516_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtAnaFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__analoop_dict_516_0_45, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtAnaFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__analoop_dict_516_0_46, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtAnaFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__analoop_dict_516_0_47, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__analoop_dict_516_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__analoop_dict_516_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__analoop_dict_516_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__analoop_dict_516_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtAnaFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__analoop_dict_516_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtAnaFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__analoop_dict_516_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtAnaFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__analoop_dict_516_0_54, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtAnaFile::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtAnaFile", 1035, G__analoop_dict_516_0_55, (int) ('i'), G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaFile), -1, 0, 1, 1, 1, 0, "u 'TArtAnaFile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtAnaFile", 1161, G__analoop_dict_516_0_56, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__analoop_dict_516_0_57, (int) ('u'), G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaFile), -1, 1, 1, 1, 1, 0, "u 'TArtAnaFile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtAnaGate(void) {
   /* TArtAnaGate */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaGate));
   G__memfunc_setup("TArtAnaGate",1036,G__analoop_dict_517_0_1, 105, G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaGate), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtAnaGate",1036,G__analoop_dict_517_0_2, 105, G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaGate), -1, 0, 4, 1, 1, 0, 
"i - - 0 - gate C - - 10 - title "
"i 'TArtAnaGate::EGateType' - 0 - gatetype C - - 10 - gatetypename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGateType",1091,G__analoop_dict_517_0_3, 105, G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaGatecLcLEGateType), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInside",792,G__analoop_dict_517_0_4, 103, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - - U 'TArtAnaFile' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__analoop_dict_517_0_5, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtAnaGate::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__analoop_dict_517_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtAnaGate::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__analoop_dict_517_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtAnaGate::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__analoop_dict_517_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtAnaGate::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__analoop_dict_517_0_9, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__analoop_dict_517_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__analoop_dict_517_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__analoop_dict_517_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__analoop_dict_517_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtAnaGate::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__analoop_dict_517_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtAnaGate::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__analoop_dict_517_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtAnaGate::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__analoop_dict_517_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtAnaGate::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtAnaGate", 1036, G__analoop_dict_517_0_17, (int) ('i'), G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaGate), -1, 0, 1, 1, 1, 0, "u 'TArtAnaGate' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtAnaGate", 1162, G__analoop_dict_517_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__analoop_dict_517_0_19, (int) ('u'), G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaGate), -1, 1, 1, 1, 1, 0, "u 'TArtAnaGate' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtAnaLoopStatic(void) {
   /* TArtAnaLoopStatic */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoopStatic));
   G__memfunc_setup("AnaLoopStatic",1298,G__analoop_dict_565_0_1, 89, -1, -1, 0, 1, 3, 1, 0, "Y - - 0 - -", (char*)NULL, (void*) G__func2void( (void* (*)(void*))(&TArtAnaLoopStatic::AnaLoopStatic) ), 0);
   G__memfunc_setup("SetAnaLoop",982,G__analoop_dict_565_0_2, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TArtAnaLoop' - 0 - analoop", (char*)NULL, (void*) G__func2void( (void (*)(TArtAnaLoop*))(&TArtAnaLoopStatic::SetAnaLoop) ), 0);
   G__memfunc_setup("SetFileName",1069,G__analoop_dict_565_0_3, 121, -1, -1, 0, 1, 3, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) G__func2void( (void (*)(const char*))(&TArtAnaLoopStatic::SetFileName) ), 0);
   G__memfunc_setup("SetEventNumber",1431,G__analoop_dict_565_0_4, 121, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - eventnumber", (char*)NULL, (void*) G__func2void( (void (*)(int))(&TArtAnaLoopStatic::SetEventNumber) ), 0);
   G__memfunc_setup("SetDirectory",1249,G__analoop_dict_565_0_5, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TDirectory' - 0 - directory", (char*)NULL, (void*) G__func2void( (void (*)(TDirectory*))(&TArtAnaLoopStatic::SetDirectory) ), 0);
   G__memfunc_setup("GetAnaLoop",970,G__analoop_dict_565_0_6, 85, G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoop), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TArtAnaLoop* (*)())(&TArtAnaLoopStatic::GetAnaLoop) ), 0);
   G__memfunc_setup("GetFileName",1057,G__analoop_dict_565_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtAnaLoopStatic::GetFileName) ), 0);
   G__memfunc_setup("GetEventNumber",1419,G__analoop_dict_565_0_8, 105, -1, -1, 0, 0, 3, 1, 0, "", "set value", (void*) G__func2void( (int (*)())(&TArtAnaLoopStatic::GetEventNumber) ), 0);
   G__memfunc_setup("GetTotalEventNumber",1935,G__analoop_dict_565_0_9, 105, -1, -1, 0, 0, 3, 1, 0, "", "current total event number", (void*) G__func2void( (int (*)())(&TArtAnaLoopStatic::GetTotalEventNumber) ), 0);
   G__memfunc_setup("GetDirectory",1237,G__analoop_dict_565_0_10, 85, G__get_linked_tagnum(&G__analoop_dictLN_TDirectory), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TDirectory* (*)())(&TArtAnaLoopStatic::GetDirectory) ), 0);
   G__memfunc_setup("Clear",487,G__analoop_dict_565_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtAnaLoopStatic::Clear) ), 0);
   G__memfunc_setup("TArtAnaLoopStatic",1677,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoopStatic), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__analoop_dict_565_0_13, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtAnaLoopStatic::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__analoop_dict_565_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtAnaLoopStatic::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__analoop_dict_565_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtAnaLoopStatic::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__analoop_dict_565_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtAnaLoopStatic::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__analoop_dict_565_0_17, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__analoop_dict_565_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__analoop_dict_565_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__analoop_dict_565_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__analoop_dict_565_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtAnaLoopStatic::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__analoop_dict_565_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtAnaLoopStatic::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__analoop_dict_565_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtAnaLoopStatic::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__analoop_dict_565_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtAnaLoopStatic::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtAnaLoopStatic", 1677, G__analoop_dict_565_0_25, (int) ('i'), G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoopStatic), -1, 0, 1, 1, 1, 0, "u 'TArtAnaLoopStatic' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__analoop_dict_565_0_26, (int) ('u'), G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoopStatic), -1, 1, 1, 1, 1, 0, "u 'TArtAnaLoopStatic' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtAnaLoopManager(void) {
   /* TArtAnaLoopManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoopManager));
   G__memfunc_setup("Book",395,G__analoop_dict_566_0_1, 85, G__get_linked_tagnum(&G__analoop_dictLN_TThread), -1, 0, 2, 3, 1, 0, 
"U 'TArtAnaLoop' - 0 - analoop C - - 10 '0' anafilename", (char*)NULL, (void*) G__func2void( (TThread* (*)(TArtAnaLoop*, const char*))(&TArtAnaLoopManager::Book) ), 0);
   G__memfunc_setup("PushRidf",805,G__analoop_dict_566_0_2, 121, -1, -1, 0, 3, 3, 1, 0, 
"C - - 10 - filename i - - 0 '-1' eventnumber "
"i - - 0 '0' startevent", (char*)NULL, (void*) G__func2void( (void (*)(const char*, int, int))(&TArtAnaLoopManager::PushRidf) ), 0);
   G__memfunc_setup("PushRidf",805,G__analoop_dict_566_0_3, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 '0' sid i - - 0 '-1' eventnumber", (char*)NULL, (void*) G__func2void( (void (*)(int, int))(&TArtAnaLoopManager::PushRidf) ), 0);
   G__memfunc_setup("PopRidf",692,G__analoop_dict_566_0_4, 121, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - i", (char*)NULL, (void*) G__func2void( (void (*)(int))(&TArtAnaLoopManager::PopRidf) ), 0);
   G__memfunc_setup("Start",526,G__analoop_dict_566_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtAnaLoopManager::Start) ), 0);
   G__memfunc_setup("Stop",422,G__analoop_dict_566_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtAnaLoopManager::Stop) ), 0);
   G__memfunc_setup("Next",415,G__analoop_dict_566_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtAnaLoopManager::Next) ), 0);
   G__memfunc_setup("WaitAnalysis",1241,G__analoop_dict_566_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", "wait state to be NEXT", (void*) G__func2void( (void (*)())(&TArtAnaLoopManager::WaitAnalysis) ), 0);
   G__memfunc_setup("Join",400,G__analoop_dict_566_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", "wait thread to finish", (void*) G__func2void( (void (*)())(&TArtAnaLoopManager::Join) ), 0);
   G__memfunc_setup("End",279,G__analoop_dict_566_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtAnaLoopManager::End) ), 0);
   G__memfunc_setup("ClearAll",768,G__analoop_dict_566_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtAnaLoopManager::ClearAll) ), 0);
   G__memfunc_setup("Status",644,G__analoop_dict_566_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtAnaLoopManager::Status) ), 0);
   G__memfunc_setup("HCut",372,G__analoop_dict_566_0_13, 85, G__get_linked_tagnum(&G__analoop_dictLN_TCutG), -1, 0, 3, 3, 1, 0, 
"i - - 0 '0' id C - - 10 '0' filename "
"C - - 10 '0' cutname", (char*)NULL, (void*) G__func2void( (TCutG* (*)(int, const char*, const char*))(&TArtAnaLoopManager::HCut) ), 0);
   G__memfunc_setup("PrintListOfGate",1503,G__analoop_dict_566_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtAnaLoopManager::PrintListOfGate) ), 0);
   G__memfunc_setup("DrawGate",783,G__analoop_dict_566_0_15, 121, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - id", (char*)NULL, (void*) G__func2void( (void (*)(int))(&TArtAnaLoopManager::DrawGate) ), 0);
   G__memfunc_setup("ClearHist",895,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 3, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearTree",887,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 3, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventNum",1106,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 3, 4, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ridf_ci",720,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 3, 4, 0, "u 'TArtAnaLoopManager::ridf_hdst' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ridf_sz",753,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 3, 4, 0, "u 'TArtAnaLoopManager::ridf_hdst' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtAnaLoopManager",1760,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoopManager), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__analoop_dict_566_0_22, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtAnaLoopManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__analoop_dict_566_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtAnaLoopManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__analoop_dict_566_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtAnaLoopManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__analoop_dict_566_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtAnaLoopManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__analoop_dict_566_0_26, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__analoop_dict_566_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__analoop_dict_566_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__analoop_dict_566_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__analoop_dict_566_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtAnaLoopManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__analoop_dict_566_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtAnaLoopManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__analoop_dict_566_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtAnaLoopManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__analoop_dict_566_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtAnaLoopManager::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtAnaLoopManager", 1760, G__analoop_dict_566_0_34, (int) ('i'), G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoopManager), -1, 0, 1, 1, 1, 0, "u 'TArtAnaLoopManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__analoop_dict_566_0_35, (int) ('u'), G__get_linked_tagnum(&G__analoop_dictLN_TArtAnaLoopManager), -1, 1, 1, 1, 1, 0, "u 'TArtAnaLoopManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAlRawDataExample(void) {
   /* TAlRawDataExample */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlRawDataExample));
   G__memfunc_setup("TAlRawDataExample",1649,G__analoop_dict_665_0_1, 105, G__get_linked_tagnum(&G__analoop_dictLN_TAlRawDataExample), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Construct",965,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Calculate",910,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Destruct",846,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClassName",887,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__analoop_dict_665_0_6, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TAlRawDataExample::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__analoop_dict_665_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlRawDataExample::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__analoop_dict_665_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TAlRawDataExample::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__analoop_dict_665_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TAlRawDataExample::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__analoop_dict_665_0_10, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__analoop_dict_665_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__analoop_dict_665_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__analoop_dict_665_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__analoop_dict_665_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlRawDataExample::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__analoop_dict_665_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAlRawDataExample::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__analoop_dict_665_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlRawDataExample::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__analoop_dict_665_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAlRawDataExample::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TAlRawDataExample", 1649, G__analoop_dict_665_0_18, (int) ('i'), G__get_linked_tagnum(&G__analoop_dictLN_TAlRawDataExample), -1, 0, 1, 1, 1, 0, "u 'TAlRawDataExample' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TAlRawDataExample", 1775, G__analoop_dict_665_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__analoop_dict_665_0_20, (int) ('u'), G__get_linked_tagnum(&G__analoop_dictLN_TAlRawDataExample), -1, 1, 1, 1, 1, 0, "u 'TAlRawDataExample' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAlEncBranch(void) {
   /* TAlEncBranch */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncBranch));
   G__memfunc_setup("TAlEncBranch",1125,G__analoop_dict_667_0_1, 105, G__get_linked_tagnum(&G__analoop_dictLN_TAlEncBranch), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTree",700,G__analoop_dict_667_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBranchName",1275,G__analoop_dict_667_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - branchname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetValIndexArray",1606,G__analoop_dict_667_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TArtValIndex,allocator<TArtValIndex> >' 'vector<TArtValIndex>' 0 - valindexarray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGate",685,G__analoop_dict_667_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - gate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Construct",965,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PreCalculate",1205,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Calculate",910,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Destruct",846,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__analoop_dict_667_0_10, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TAlEncBranch::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__analoop_dict_667_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncBranch::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__analoop_dict_667_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TAlEncBranch::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__analoop_dict_667_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TAlEncBranch::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__analoop_dict_667_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__analoop_dict_667_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncBranch::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__analoop_dict_667_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAlEncBranch::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__analoop_dict_667_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncBranch::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__analoop_dict_667_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAlEncBranch::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TAlEncBranch", 1125, G__analoop_dict_667_0_22, (int) ('i'), G__get_linked_tagnum(&G__analoop_dictLN_TAlEncBranch), -1, 0, 1, 1, 1, 0, "u 'TAlEncBranch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TAlEncBranch", 1251, G__analoop_dict_667_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__analoop_dict_667_0_24, (int) ('u'), G__get_linked_tagnum(&G__analoop_dictLN_TAlEncBranch), -1, 1, 1, 1, 1, 0, "u 'TAlEncBranch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAlEncHist(void) {
   /* TAlEncHist */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncHist));
   G__memfunc_setup("TAlEncHist",943,G__analoop_dict_675_0_1, 105, G__get_linked_tagnum(&G__analoop_dictLN_TAlEncHist), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHist",708,G__analoop_dict_675_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH1' - 0 - hist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetValIndexArray",1606,G__analoop_dict_675_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TArtValIndex,allocator<TArtValIndex> >' 'vector<TArtValIndex>' 0 - valindexarray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGate",685,G__analoop_dict_675_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - gate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Construct",965,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Calculate",910,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Destruct",846,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__analoop_dict_675_0_8, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TAlEncHist::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__analoop_dict_675_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncHist::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__analoop_dict_675_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TAlEncHist::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__analoop_dict_675_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TAlEncHist::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__analoop_dict_675_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__analoop_dict_675_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncHist::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__analoop_dict_675_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAlEncHist::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__analoop_dict_675_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncHist::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__analoop_dict_675_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAlEncHist::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TAlEncHist", 943, G__analoop_dict_675_0_20, (int) ('i'), G__get_linked_tagnum(&G__analoop_dictLN_TAlEncHist), -1, 0, 1, 1, 1, 0, "u 'TAlEncHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TAlEncHist", 1069, G__analoop_dict_675_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__analoop_dict_675_0_22, (int) ('u'), G__get_linked_tagnum(&G__analoop_dictLN_TAlEncHist), -1, 1, 1, 1, 1, 0, "u 'TAlEncHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAlEncStop(void) {
   /* TAlEncStop */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncStop));
   G__memfunc_setup("TAlEncStop",957,G__analoop_dict_676_0_1, 105, G__get_linked_tagnum(&G__analoop_dictLN_TAlEncStop), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddStop",687,G__analoop_dict_676_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - gate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Construct",965,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Calculate",910,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Destruct",846,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__analoop_dict_676_0_6, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TAlEncStop::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__analoop_dict_676_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncStop::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__analoop_dict_676_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TAlEncStop::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__analoop_dict_676_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TAlEncStop::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__analoop_dict_676_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__analoop_dict_676_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncStop::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__analoop_dict_676_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAlEncStop::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__analoop_dict_676_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncStop::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__analoop_dict_676_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAlEncStop::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TAlEncStop", 957, G__analoop_dict_676_0_18, (int) ('i'), G__get_linked_tagnum(&G__analoop_dictLN_TAlEncStop), -1, 0, 1, 1, 1, 0, "u 'TAlEncStop' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TAlEncStop", 1083, G__analoop_dict_676_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__analoop_dict_676_0_20, (int) ('u'), G__get_linked_tagnum(&G__analoop_dictLN_TAlEncStop), -1, 1, 1, 1, 1, 0, "u 'TAlEncStop' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAlEncFillTree(void) {
   /* TAlEncFillTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncFillTree));
   G__memfunc_setup("TAlEncFillTree",1326,G__analoop_dict_677_0_1, 105, G__get_linked_tagnum(&G__analoop_dictLN_TAlEncFillTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTree",700,G__analoop_dict_677_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Construct",965,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Calculate",910,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Destruct",846,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__analoop_dict_677_0_6, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TAlEncFillTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__analoop_dict_677_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncFillTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__analoop_dict_677_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TAlEncFillTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__analoop_dict_677_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TAlEncFillTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__analoop_dict_677_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__analoop_dict_677_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncFillTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__analoop_dict_677_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAlEncFillTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__analoop_dict_677_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncFillTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__analoop_dict_677_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAlEncFillTree::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TAlEncFillTree", 1326, G__analoop_dict_677_0_18, (int) ('i'), G__get_linked_tagnum(&G__analoop_dictLN_TAlEncFillTree), -1, 0, 1, 1, 1, 0, "u 'TAlEncFillTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TAlEncFillTree", 1452, G__analoop_dict_677_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__analoop_dict_677_0_20, (int) ('u'), G__get_linked_tagnum(&G__analoop_dictLN_TAlEncFillTree), -1, 1, 1, 1, 1, 0, "u 'TAlEncFillTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAlEncGate(void) {
   /* TAlEncGate */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncGate));
   G__memfunc_setup("TAlEncGate",920,G__analoop_dict_678_0_1, 105, G__get_linked_tagnum(&G__analoop_dictLN_TAlEncGate), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGate",685,G__analoop_dict_678_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - gate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Construct",965,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Calculate",910,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Destruct",846,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__analoop_dict_678_0_6, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TAlEncGate::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__analoop_dict_678_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncGate::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__analoop_dict_678_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TAlEncGate::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__analoop_dict_678_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TAlEncGate::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__analoop_dict_678_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__analoop_dict_678_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncGate::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__analoop_dict_678_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAlEncGate::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__analoop_dict_678_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncGate::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__analoop_dict_678_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAlEncGate::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TAlEncGate", 920, G__analoop_dict_678_0_18, (int) ('i'), G__get_linked_tagnum(&G__analoop_dictLN_TAlEncGate), -1, 0, 1, 1, 1, 0, "u 'TAlEncGate' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TAlEncGate", 1046, G__analoop_dict_678_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__analoop_dict_678_0_20, (int) ('u'), G__get_linked_tagnum(&G__analoop_dictLN_TAlEncGate), -1, 1, 1, 1, 1, 0, "u 'TAlEncGate' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAlEncPrint(void) {
   /* TAlEncPrint */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__analoop_dictLN_TAlEncPrint));
   G__memfunc_setup("TAlEncPrint",1060,G__analoop_dict_679_0_1, 105, G__get_linked_tagnum(&G__analoop_dictLN_TAlEncPrint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetValIndexArray",1606,G__analoop_dict_679_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TArtValIndex,allocator<TArtValIndex> >' 'vector<TArtValIndex>' 0 - valindexarray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGate",685,G__analoop_dict_679_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - gate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Construct",965,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Calculate",910,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Destruct",846,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__analoop_dict_679_0_7, 85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TAlEncPrint::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__analoop_dict_679_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncPrint::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__analoop_dict_679_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TAlEncPrint::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__analoop_dict_679_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TAlEncPrint::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__analoop_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__analoop_dict_679_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__analoop_dict_679_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncPrint::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__analoop_dict_679_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAlEncPrint::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__analoop_dict_679_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAlEncPrint::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__analoop_dict_679_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAlEncPrint::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TAlEncPrint", 1060, G__analoop_dict_679_0_19, (int) ('i'), G__get_linked_tagnum(&G__analoop_dictLN_TAlEncPrint), -1, 0, 1, 1, 1, 0, "u 'TAlEncPrint' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TAlEncPrint", 1186, G__analoop_dict_679_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__analoop_dict_679_0_21, (int) ('u'), G__get_linked_tagnum(&G__analoop_dictLN_TAlEncPrint), -1, 1, 1, 1, 1, 0, "u 'TAlEncPrint' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncanaloop_dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalanaloop_dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
   G__memfunc_setup("lv", 226, G__analoop_dict__0_3413, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("book", 427, G__analoop_dict__0_3414, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TArtAnaLoop' - 0 - analoop C - - 10 '0' anafilename", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("push", 448, G__analoop_dict__0_3415, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - filename i - - 0 '-1' eventnumber "
"i - - 0 '0' startevent", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("push", 448, G__analoop_dict__0_3416, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' sid i - - 0 '-1' eventnumber", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("spush", 563, G__analoop_dict__0_3417, 121, -1, -1, 0, 6, 1, 1, 0, 
"C - - 10 - filename_start C - - 10 - filename_end "
"i - - 0 - start i - - 0 - end "
"i - - 0 '4' width c - - 0 ''0'' fill", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("pop", 335, G__analoop_dict__0_3418, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("start", 558, G__analoop_dict__0_3419, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("stop", 454, G__analoop_dict__0_3420, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("next", 447, G__analoop_dict__0_3421, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("join", 432, G__analoop_dict__0_3422, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("end", 311, G__analoop_dict__0_3423, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("clear", 519, G__analoop_dict__0_3424, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("status", 676, G__analoop_dict__0_3425, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("lc", 207, G__analoop_dict__0_3426, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("hcut", 436, G__analoop_dict__0_3427, 85, G__get_linked_tagnum(&G__analoop_dictLN_TCutG), -1, 0, 3, 1, 1, 0, 
"i - - 0 '0' id C - - 10 '0' filename "
"C - - 10 '0' cutname", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("cdraw", 529, G__analoop_dict__0_3428, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func34() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcanaloop_dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__analoop_dictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TDirectory = { "TDirectory" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_dequelEintcOallocatorlEintgRsPgR = { "deque<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TCutG = { "TCutG" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TArtAnaLoop = { "TArtAnaLoop" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TAlEncSub = { "TAlEncSub" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TAlEncFactory = { "TAlEncFactory" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TArtValIndex = { "TArtValIndex" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TArtValIndexVal = { "TArtValIndexVal" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TArtValIndexValArray = { "TArtValIndexValArray" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_vectorlETArtValIndexValcOallocatorlETArtValIndexValgRsPgR = { "vector<TArtValIndexVal,allocator<TArtValIndexVal> >" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_reverse_iteratorlEvectorlETArtValIndexValcOallocatorlETArtValIndexValgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtValIndexVal,allocator<TArtValIndexVal> >::iterator>" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TArtValMap = { "TArtValMap" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR = { "map<int,double,less<int>,allocator<pair<const int,double> > >" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_maplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgR = { "map<int,map<int,double,less<int>,allocator<pair<const int,double> > >,less<int>,allocator<pair<const int,map<int,double,less<int>,allocator<pair<const int,double> > > > > >" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_maplEintcOmaplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR = { "map<int,map<int,map<int,double,less<int>,allocator<pair<const int,double> > >,less<int>,allocator<pair<const int,map<int,double,less<int>,allocator<pair<const int,double> > > > > >,less<int>,allocator<pair<const int,map<int,map<int,double,less<int>,allocator<pair<const int,double> > >,less<int>,allocator<pair<const int,map<int,double,less<int>,allocator<pair<const int,double> > > > > > > > >" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_vectorlETArtValIndexcOallocatorlETArtValIndexgRsPgR = { "vector<TArtValIndex,allocator<TArtValIndex> >" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_reverse_iteratorlEvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtValIndex,allocator<TArtValIndex> >::iterator>" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TArtAnaFile = { "TArtAnaFile" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TArtAnaGate = { "TArtAnaGate" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TArtAnaGatecLcLEGateType = { "TArtAnaGate::EGateType" , 101 , -1 };
G__linked_taginfo G__analoop_dictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_maplEstringcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRsPgRsPgRsPgR = { "map<string,vector<TArtValIndex,allocator<TArtValIndex> >,less<string>,allocator<pair<const string,vector<TArtValIndex,allocator<TArtValIndex> > > > >" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_maplEintcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRsPgRsPgRsPgR = { "map<int,vector<TArtValIndex,allocator<TArtValIndex> >,less<int>,allocator<pair<const int,vector<TArtValIndex,allocator<TArtValIndex> > > > >" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_maplEintcOTArtAnaGatemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtAnaGatemUgRsPgRsPgR = { "map<int,TArtAnaGate*,less<int>,allocator<pair<const int,TArtAnaGate*> > >" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_maplETH1mUcOintcOlesslETH1mUgRcOallocatorlEpairlETH1mUsPconstcOintgRsPgRsPgR = { "map<TH1*,int,less<TH1*>,allocator<pair<TH1* const,int> > >" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_maplEintcOTAlEncFactorymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTAlEncFactorymUgRsPgRsPgR = { "map<int,TAlEncFactory*,less<int>,allocator<pair<const int,TAlEncFactory*> > >" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TArtAnaLoopStatic = { "TArtAnaLoopStatic" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TArtAnaLoopManager = { "TArtAnaLoopManager" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__analoop_dictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TNtuple = { "TNtuple" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TAlRawDataExample = { "TAlRawDataExample" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TAlEncBranch = { "TAlEncBranch" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TThread = { "TThread" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TArtAnaLoopManagercLcLEAnalysisState = { "TArtAnaLoopManager::EAnalysisState" , 101 , -1 };
G__linked_taginfo G__analoop_dictLN_dequelEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR = { "deque<const char*,allocator<const char*> >" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TArtAnaLoopManagercLcLridf_hdst = { "TArtAnaLoopManager::ridf_hdst" , 115 , -1 };
G__linked_taginfo G__analoop_dictLN_TAlEncHist = { "TAlEncHist" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TAlEncStop = { "TAlEncStop" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TAlEncFillTree = { "TAlEncFillTree" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TAlEncGate = { "TAlEncGate" , 99 , -1 };
G__linked_taginfo G__analoop_dictLN_TAlEncPrint = { "TAlEncPrint" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableanaloop_dict() {
  G__analoop_dictLN_TClass.tagnum = -1 ;
  G__analoop_dictLN_TBuffer.tagnum = -1 ;
  G__analoop_dictLN_TDirectory.tagnum = -1 ;
  G__analoop_dictLN_TMemberInspector.tagnum = -1 ;
  G__analoop_dictLN_TString.tagnum = -1 ;
  G__analoop_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__analoop_dictLN_string.tagnum = -1 ;
  G__analoop_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__analoop_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__analoop_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__analoop_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__analoop_dictLN_dequelEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__analoop_dictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__analoop_dictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__analoop_dictLN_TH1.tagnum = -1 ;
  G__analoop_dictLN_TCutG.tagnum = -1 ;
  G__analoop_dictLN_TArtAnaLoop.tagnum = -1 ;
  G__analoop_dictLN_TAlEncSub.tagnum = -1 ;
  G__analoop_dictLN_TAlEncFactory.tagnum = -1 ;
  G__analoop_dictLN_TTree.tagnum = -1 ;
  G__analoop_dictLN_TArtValIndex.tagnum = -1 ;
  G__analoop_dictLN_TArtValIndexVal.tagnum = -1 ;
  G__analoop_dictLN_TArtValIndexValArray.tagnum = -1 ;
  G__analoop_dictLN_vectorlETArtValIndexValcOallocatorlETArtValIndexValgRsPgR.tagnum = -1 ;
  G__analoop_dictLN_reverse_iteratorlEvectorlETArtValIndexValcOallocatorlETArtValIndexValgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__analoop_dictLN_TArtValMap.tagnum = -1 ;
  G__analoop_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__analoop_dictLN_maplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__analoop_dictLN_maplEintcOmaplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__analoop_dictLN_vectorlETArtValIndexcOallocatorlETArtValIndexgRsPgR.tagnum = -1 ;
  G__analoop_dictLN_reverse_iteratorlEvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__analoop_dictLN_TArtAnaFile.tagnum = -1 ;
  G__analoop_dictLN_TArtAnaGate.tagnum = -1 ;
  G__analoop_dictLN_TArtAnaGatecLcLEGateType.tagnum = -1 ;
  G__analoop_dictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__analoop_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__analoop_dictLN_maplEstringcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__analoop_dictLN_maplEintcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__analoop_dictLN_maplEintcOTArtAnaGatemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtAnaGatemUgRsPgRsPgR.tagnum = -1 ;
  G__analoop_dictLN_maplETH1mUcOintcOlesslETH1mUgRcOallocatorlEpairlETH1mUsPconstcOintgRsPgRsPgR.tagnum = -1 ;
  G__analoop_dictLN_maplEintcOTAlEncFactorymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTAlEncFactorymUgRsPgRsPgR.tagnum = -1 ;
  G__analoop_dictLN_TArtAnaLoopStatic.tagnum = -1 ;
  G__analoop_dictLN_TArtAnaLoopManager.tagnum = -1 ;
  G__analoop_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__analoop_dictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__analoop_dictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__analoop_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__analoop_dictLN_TNtuple.tagnum = -1 ;
  G__analoop_dictLN_TAlRawDataExample.tagnum = -1 ;
  G__analoop_dictLN_TAlEncBranch.tagnum = -1 ;
  G__analoop_dictLN_TThread.tagnum = -1 ;
  G__analoop_dictLN_TArtAnaLoopManagercLcLEAnalysisState.tagnum = -1 ;
  G__analoop_dictLN_dequelEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR.tagnum = -1 ;
  G__analoop_dictLN_TArtAnaLoopManagercLcLridf_hdst.tagnum = -1 ;
  G__analoop_dictLN_TAlEncHist.tagnum = -1 ;
  G__analoop_dictLN_TAlEncStop.tagnum = -1 ;
  G__analoop_dictLN_TAlEncFillTree.tagnum = -1 ;
  G__analoop_dictLN_TAlEncGate.tagnum = -1 ;
  G__analoop_dictLN_TAlEncPrint.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableanaloop_dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_TClass);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_TDirectory);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_TString);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_string);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_dequelEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_TH1);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_TCutG);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_TArtAnaLoop);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__analoop_dictLN_TAlEncSub),sizeof(TAlEncSub),-1,263427,(char*)NULL,G__setup_memvarTAlEncSub,G__setup_memfuncTAlEncSub);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__analoop_dictLN_TAlEncFactory),sizeof(TAlEncFactory),-1,263425,(char*)NULL,G__setup_memvarTAlEncFactory,G__setup_memfuncTAlEncFactory);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_TTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__analoop_dictLN_TArtValIndex),sizeof(TArtValIndex),-1,296192,(char*)NULL,G__setup_memvarTArtValIndex,G__setup_memfuncTArtValIndex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__analoop_dictLN_TArtValIndexVal),sizeof(TArtValIndexVal),-1,296192,(char*)NULL,G__setup_memvarTArtValIndexVal,G__setup_memfuncTArtValIndexVal);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__analoop_dictLN_TArtValIndexValArray),sizeof(TArtValIndexValArray),-1,296192,(char*)NULL,G__setup_memvarTArtValIndexValArray,G__setup_memfuncTArtValIndexValArray);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_vectorlETArtValIndexValcOallocatorlETArtValIndexValgRsPgR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_reverse_iteratorlEvectorlETArtValIndexValcOallocatorlETArtValIndexValgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__analoop_dictLN_TArtValMap),sizeof(TArtValMap),-1,263424,(char*)NULL,G__setup_memvarTArtValMap,G__setup_memfuncTArtValMap);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_maplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_maplEintcOmaplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_vectorlETArtValIndexcOallocatorlETArtValIndexgRsPgR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_reverse_iteratorlEvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__analoop_dictLN_TArtAnaFile),sizeof(TArtAnaFile),-1,295936,(char*)NULL,G__setup_memvarTArtAnaFile,G__setup_memfuncTArtAnaFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__analoop_dictLN_TArtAnaGate),sizeof(TArtAnaGate),-1,296192,(char*)NULL,G__setup_memvarTArtAnaGate,G__setup_memfuncTArtAnaGate);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_TArtAnaGatecLcLEGateType);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_maplEstringcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_maplEintcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETArtValIndexcOallocatorlETArtValIndexgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_maplEintcOTArtAnaGatemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtAnaGatemUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_maplETH1mUcOintcOlesslETH1mUgRcOallocatorlEpairlETH1mUsPconstcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_maplEintcOTAlEncFactorymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTAlEncFactorymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__analoop_dictLN_TArtAnaLoopStatic),sizeof(TArtAnaLoopStatic),-1,263424,(char*)NULL,G__setup_memvarTArtAnaLoopStatic,G__setup_memfuncTArtAnaLoopStatic);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__analoop_dictLN_TArtAnaLoopManager),sizeof(TArtAnaLoopManager),-1,263424,(char*)NULL,G__setup_memvarTArtAnaLoopManager,G__setup_memfuncTArtAnaLoopManager);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_TNtuple);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__analoop_dictLN_TAlRawDataExample),sizeof(TAlRawDataExample),-1,263424,(char*)NULL,G__setup_memvarTAlRawDataExample,G__setup_memfuncTAlRawDataExample);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__analoop_dictLN_TAlEncBranch),sizeof(TAlEncBranch),-1,263424,(char*)NULL,G__setup_memvarTAlEncBranch,G__setup_memfuncTAlEncBranch);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_TThread);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_TArtAnaLoopManagercLcLEAnalysisState);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_dequelEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__analoop_dictLN_TArtAnaLoopManagercLcLridf_hdst);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__analoop_dictLN_TAlEncHist),sizeof(TAlEncHist),-1,263424,(char*)NULL,G__setup_memvarTAlEncHist,G__setup_memfuncTAlEncHist);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__analoop_dictLN_TAlEncStop),sizeof(TAlEncStop),-1,263424,(char*)NULL,G__setup_memvarTAlEncStop,G__setup_memfuncTAlEncStop);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__analoop_dictLN_TAlEncFillTree),sizeof(TAlEncFillTree),-1,263424,(char*)NULL,G__setup_memvarTAlEncFillTree,G__setup_memfuncTAlEncFillTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__analoop_dictLN_TAlEncGate),sizeof(TAlEncGate),-1,263424,(char*)NULL,G__setup_memvarTAlEncGate,G__setup_memfuncTAlEncGate);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__analoop_dictLN_TAlEncPrint),sizeof(TAlEncPrint),-1,263424,(char*)NULL,G__setup_memvarTAlEncPrint,G__setup_memfuncTAlEncPrint);
}
extern "C" void G__cpp_setupanaloop_dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupanaloop_dict()");
  G__set_cpp_environmentanaloop_dict();
  G__cpp_setup_tagtableanaloop_dict();

  G__cpp_setup_inheritanceanaloop_dict();

  G__cpp_setup_typetableanaloop_dict();

  G__cpp_setup_memvaranaloop_dict();

  G__cpp_setup_memfuncanaloop_dict();
  G__cpp_setup_globalanaloop_dict();
  G__cpp_setup_funcanaloop_dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncanaloop_dict();
  return;
}
class G__cpp_setup_initanaloop_dict {
  public:
    G__cpp_setup_initanaloop_dict() { G__add_setup_func("analoop_dict",(G__incsetup)(&G__cpp_setupanaloop_dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initanaloop_dict() { G__remove_setup_func("analoop_dict"); }
};
G__cpp_setup_initanaloop_dict G__cpp_setup_initializeranaloop_dict;

