//
// File generated by rootcint at Mon Sep  4 22:37:23 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME anasilicons_dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "anasilicons_dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void TArtSILICONSPara_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtSILICONSPara(void *p = 0);
   static void *newArray_TArtSILICONSPara(Long_t size, void *p);
   static void delete_TArtSILICONSPara(void *p);
   static void deleteArray_TArtSILICONSPara(void *p);
   static void destruct_TArtSILICONSPara(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtSILICONSPara*)
   {
      ::TArtSILICONSPara *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtSILICONSPara >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtSILICONSPara", ::TArtSILICONSPara::Class_Version(), "./include/TArtSILICONSPara.hh", 12,
                  typeid(::TArtSILICONSPara), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtSILICONSPara::Dictionary, isa_proxy, 4,
                  sizeof(::TArtSILICONSPara) );
      instance.SetNew(&new_TArtSILICONSPara);
      instance.SetNewArray(&newArray_TArtSILICONSPara);
      instance.SetDelete(&delete_TArtSILICONSPara);
      instance.SetDeleteArray(&deleteArray_TArtSILICONSPara);
      instance.SetDestructor(&destruct_TArtSILICONSPara);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtSILICONSPara*)
   {
      return GenerateInitInstanceLocal((::TArtSILICONSPara*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtSILICONSPara*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtSILICONSParameters_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtSILICONSParameters(void *p = 0);
   static void *newArray_TArtSILICONSParameters(Long_t size, void *p);
   static void delete_TArtSILICONSParameters(void *p);
   static void deleteArray_TArtSILICONSParameters(void *p);
   static void destruct_TArtSILICONSParameters(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtSILICONSParameters*)
   {
      ::TArtSILICONSParameters *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtSILICONSParameters >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtSILICONSParameters", ::TArtSILICONSParameters::Class_Version(), "./include/TArtSILICONSParameters.hh", 13,
                  typeid(::TArtSILICONSParameters), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtSILICONSParameters::Dictionary, isa_proxy, 4,
                  sizeof(::TArtSILICONSParameters) );
      instance.SetNew(&new_TArtSILICONSParameters);
      instance.SetNewArray(&newArray_TArtSILICONSParameters);
      instance.SetDelete(&delete_TArtSILICONSParameters);
      instance.SetDeleteArray(&deleteArray_TArtSILICONSParameters);
      instance.SetDestructor(&destruct_TArtSILICONSParameters);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtSILICONSParameters*)
   {
      return GenerateInitInstanceLocal((::TArtSILICONSParameters*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtSILICONSParameters*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtSILICONS_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtSILICONS(void *p = 0);
   static void *newArray_TArtSILICONS(Long_t size, void *p);
   static void delete_TArtSILICONS(void *p);
   static void deleteArray_TArtSILICONS(void *p);
   static void destruct_TArtSILICONS(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtSILICONS*)
   {
      ::TArtSILICONS *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtSILICONS >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtSILICONS", ::TArtSILICONS::Class_Version(), "./include/TArtSILICONS.hh", 7,
                  typeid(::TArtSILICONS), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtSILICONS::Dictionary, isa_proxy, 4,
                  sizeof(::TArtSILICONS) );
      instance.SetNew(&new_TArtSILICONS);
      instance.SetNewArray(&newArray_TArtSILICONS);
      instance.SetDelete(&delete_TArtSILICONS);
      instance.SetDeleteArray(&deleteArray_TArtSILICONS);
      instance.SetDestructor(&destruct_TArtSILICONS);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtSILICONS*)
   {
      return GenerateInitInstanceLocal((::TArtSILICONS*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtSILICONS*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibSILICONS_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibSILICONS(void *p = 0);
   static void *newArray_TArtCalibSILICONS(Long_t size, void *p);
   static void delete_TArtCalibSILICONS(void *p);
   static void deleteArray_TArtCalibSILICONS(void *p);
   static void destruct_TArtCalibSILICONS(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibSILICONS*)
   {
      ::TArtCalibSILICONS *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibSILICONS >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibSILICONS", ::TArtCalibSILICONS::Class_Version(), "./include/TArtCalibSILICONS.hh", 17,
                  typeid(::TArtCalibSILICONS), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibSILICONS::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibSILICONS) );
      instance.SetNew(&new_TArtCalibSILICONS);
      instance.SetNewArray(&newArray_TArtCalibSILICONS);
      instance.SetDelete(&delete_TArtCalibSILICONS);
      instance.SetDeleteArray(&deleteArray_TArtCalibSILICONS);
      instance.SetDestructor(&destruct_TArtCalibSILICONS);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibSILICONS*)
   {
      return GenerateInitInstanceLocal((::TArtCalibSILICONS*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibSILICONS*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr TArtSILICONSPara::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtSILICONSPara::Class_Name()
{
   return "TArtSILICONSPara";
}

//______________________________________________________________________________
const char *TArtSILICONSPara::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtSILICONSPara*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtSILICONSPara::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtSILICONSPara*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtSILICONSPara::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtSILICONSPara*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtSILICONSPara::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtSILICONSPara*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtSILICONSParameters::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtSILICONSParameters::Class_Name()
{
   return "TArtSILICONSParameters";
}

//______________________________________________________________________________
const char *TArtSILICONSParameters::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtSILICONSParameters*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtSILICONSParameters::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtSILICONSParameters*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtSILICONSParameters::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtSILICONSParameters*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtSILICONSParameters::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtSILICONSParameters*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtSILICONS::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtSILICONS::Class_Name()
{
   return "TArtSILICONS";
}

//______________________________________________________________________________
const char *TArtSILICONS::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtSILICONS*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtSILICONS::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtSILICONS*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtSILICONS::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtSILICONS*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtSILICONS::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtSILICONS*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibSILICONS::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibSILICONS::Class_Name()
{
   return "TArtCalibSILICONS";
}

//______________________________________________________________________________
const char *TArtCalibSILICONS::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibSILICONS*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibSILICONS::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibSILICONS*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibSILICONS::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibSILICONS*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibSILICONS::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibSILICONS*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TArtCalibSILICONS::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibSILICONS.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibSILICONS::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibSILICONS::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibSILICONS::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibSILICONS.
      TClass *R__cl = ::TArtCalibSILICONS::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSiArray", &fSiArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSiParaArray", (void*)&fSiParaArray);
      R__insp.InspectMember("vector<TArtSILICONSPara*>", (void*)&fSiParaArray, "fSiParaArray.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setup", &setup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sman", &sman);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibSILICONS(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibSILICONS : new ::TArtCalibSILICONS;
   }
   static void *newArray_TArtCalibSILICONS(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibSILICONS[nElements] : new ::TArtCalibSILICONS[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibSILICONS(void *p) {
      delete ((::TArtCalibSILICONS*)p);
   }
   static void deleteArray_TArtCalibSILICONS(void *p) {
      delete [] ((::TArtCalibSILICONS*)p);
   }
   static void destruct_TArtCalibSILICONS(void *p) {
      typedef ::TArtCalibSILICONS current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibSILICONS

//______________________________________________________________________________
void TArtSILICONS::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtSILICONS.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtSILICONS::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtSILICONS::Class(),this);
   }
}

//______________________________________________________________________________
void TArtSILICONS::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtSILICONS.
      TClass *R__cl = ::TArtSILICONS::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLayer", &fLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPos[3]", fPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADC", &fADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDC", &fTDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergy", &fEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeOffseted", &fTimeOffseted);
      TArtDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtSILICONS(void *p) {
      return  p ? new(p) ::TArtSILICONS : new ::TArtSILICONS;
   }
   static void *newArray_TArtSILICONS(Long_t nElements, void *p) {
      return p ? new(p) ::TArtSILICONS[nElements] : new ::TArtSILICONS[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtSILICONS(void *p) {
      delete ((::TArtSILICONS*)p);
   }
   static void deleteArray_TArtSILICONS(void *p) {
      delete [] ((::TArtSILICONS*)p);
   }
   static void destruct_TArtSILICONS(void *p) {
      typedef ::TArtSILICONS current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtSILICONS

//______________________________________________________________________________
void TArtSILICONSPara::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtSILICONSPara.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtSILICONSPara::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtSILICONSPara::Class(),this);
   }
}

//______________________________________________________________________________
void TArtSILICONSPara::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtSILICONSPara.
      TClass *R__cl = ::TArtSILICONSPara::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detname", &detname);
      R__insp.InspectMember(detname, "detname.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fpl", &fpl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "strip", &strip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer", &layer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "direction", (void*)&direction);
      R__insp.InspectMember("TArtSILICONSPara::DetDirection", (void*)&direction, "direction.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pedestal", &pedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ch2mev", &ch2mev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "position[3]", position);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_offset", &t_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ch2ns", &ch2ns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "map_adc", &map_adc);
      R__insp.InspectMember(map_adc, "map_adc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "map_tdc", &map_tdc);
      R__insp.InspectMember(map_tdc, "map_tdc.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtSILICONSPara(void *p) {
      return  p ? new(p) ::TArtSILICONSPara : new ::TArtSILICONSPara;
   }
   static void *newArray_TArtSILICONSPara(Long_t nElements, void *p) {
      return p ? new(p) ::TArtSILICONSPara[nElements] : new ::TArtSILICONSPara[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtSILICONSPara(void *p) {
      delete ((::TArtSILICONSPara*)p);
   }
   static void deleteArray_TArtSILICONSPara(void *p) {
      delete [] ((::TArtSILICONSPara*)p);
   }
   static void destruct_TArtSILICONSPara(void *p) {
      typedef ::TArtSILICONSPara current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtSILICONSPara

//______________________________________________________________________________
void TArtSILICONSParameters::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtSILICONSParameters.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtSILICONSParameters::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtSILICONSParameters::Class(),this);
   }
}

//______________________________________________________________________________
void TArtSILICONSParameters::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtSILICONSParameters.
      TClass *R__cl = ::TArtSILICONSParameters::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmap", (void*)&pmap);
      R__insp.InspectMember("map<TArtRIDFMap,TArtSILICONSPara*>", (void*)&pmap, "pmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "itrEnd", (void*)&itrEnd);
      R__insp.InspectMember("map<TArtRIDFMap,TArtSILICONSPara*,less<TArtRIDFMap>,allocator<pair<const TArtRIDFMap,TArtSILICONSPara*> > >::iterator", (void*)&itrEnd, "itrEnd.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "itr", (void*)&itr);
      R__insp.InspectMember("map<TArtRIDFMap,TArtSILICONSPara*,less<TArtRIDFMap>,allocator<pair<const TArtRIDFMap,TArtSILICONSPara*> > >::iterator", (void*)&itr, "itr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*listOfPara", &listOfPara);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtSILICONSParameters(void *p) {
      return  p ? new(p) ::TArtSILICONSParameters : new ::TArtSILICONSParameters;
   }
   static void *newArray_TArtSILICONSParameters(Long_t nElements, void *p) {
      return p ? new(p) ::TArtSILICONSParameters[nElements] : new ::TArtSILICONSParameters[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtSILICONSParameters(void *p) {
      delete ((::TArtSILICONSParameters*)p);
   }
   static void deleteArray_TArtSILICONSParameters(void *p) {
      delete [] ((::TArtSILICONSParameters*)p);
   }
   static void destruct_TArtSILICONSParameters(void *p) {
      typedef ::TArtSILICONSParameters current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtSILICONSParameters

namespace ROOTDict {
   void maplETArtRIDFMapcOTArtSILICONSParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETArtRIDFMapcOTArtSILICONSParamUgR_Dictionary();
   static void *new_maplETArtRIDFMapcOTArtSILICONSParamUgR(void *p = 0);
   static void *newArray_maplETArtRIDFMapcOTArtSILICONSParamUgR(Long_t size, void *p);
   static void delete_maplETArtRIDFMapcOTArtSILICONSParamUgR(void *p);
   static void deleteArray_maplETArtRIDFMapcOTArtSILICONSParamUgR(void *p);
   static void destruct_maplETArtRIDFMapcOTArtSILICONSParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<TArtRIDFMap,TArtSILICONSPara*>*)
   {
      map<TArtRIDFMap,TArtSILICONSPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TArtRIDFMap,TArtSILICONSPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TArtRIDFMap,TArtSILICONSPara*>", -2, "prec_stl/map", 63,
                  typeid(map<TArtRIDFMap,TArtSILICONSPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplETArtRIDFMapcOTArtSILICONSParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<TArtRIDFMap,TArtSILICONSPara*>) );
      instance.SetNew(&new_maplETArtRIDFMapcOTArtSILICONSParamUgR);
      instance.SetNewArray(&newArray_maplETArtRIDFMapcOTArtSILICONSParamUgR);
      instance.SetDelete(&delete_maplETArtRIDFMapcOTArtSILICONSParamUgR);
      instance.SetDeleteArray(&deleteArray_maplETArtRIDFMapcOTArtSILICONSParamUgR);
      instance.SetDestructor(&destruct_maplETArtRIDFMapcOTArtSILICONSParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<TArtRIDFMap,TArtSILICONSPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TArtRIDFMap,TArtSILICONSPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETArtRIDFMapcOTArtSILICONSParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<TArtRIDFMap,TArtSILICONSPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplETArtRIDFMapcOTArtSILICONSParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,TArtSILICONSPara*> : new map<TArtRIDFMap,TArtSILICONSPara*>;
   }
   static void *newArray_maplETArtRIDFMapcOTArtSILICONSParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,TArtSILICONSPara*>[nElements] : new map<TArtRIDFMap,TArtSILICONSPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETArtRIDFMapcOTArtSILICONSParamUgR(void *p) {
      delete ((map<TArtRIDFMap,TArtSILICONSPara*>*)p);
   }
   static void deleteArray_maplETArtRIDFMapcOTArtSILICONSParamUgR(void *p) {
      delete [] ((map<TArtRIDFMap,TArtSILICONSPara*>*)p);
   }
   static void destruct_maplETArtRIDFMapcOTArtSILICONSParamUgR(void *p) {
      typedef map<TArtRIDFMap,TArtSILICONSPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<TArtRIDFMap,TArtSILICONSPara*>

namespace ROOTDict {
   void vectorlETArtSILICONSParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETArtSILICONSParamUgR_Dictionary();
   static void *new_vectorlETArtSILICONSParamUgR(void *p = 0);
   static void *newArray_vectorlETArtSILICONSParamUgR(Long_t size, void *p);
   static void delete_vectorlETArtSILICONSParamUgR(void *p);
   static void deleteArray_vectorlETArtSILICONSParamUgR(void *p);
   static void destruct_vectorlETArtSILICONSParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TArtSILICONSPara*>*)
   {
      vector<TArtSILICONSPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TArtSILICONSPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TArtSILICONSPara*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TArtSILICONSPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETArtSILICONSParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TArtSILICONSPara*>) );
      instance.SetNew(&new_vectorlETArtSILICONSParamUgR);
      instance.SetNewArray(&newArray_vectorlETArtSILICONSParamUgR);
      instance.SetDelete(&delete_vectorlETArtSILICONSParamUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETArtSILICONSParamUgR);
      instance.SetDestructor(&destruct_vectorlETArtSILICONSParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TArtSILICONSPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TArtSILICONSPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETArtSILICONSParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TArtSILICONSPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETArtSILICONSParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtSILICONSPara*> : new vector<TArtSILICONSPara*>;
   }
   static void *newArray_vectorlETArtSILICONSParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtSILICONSPara*>[nElements] : new vector<TArtSILICONSPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETArtSILICONSParamUgR(void *p) {
      delete ((vector<TArtSILICONSPara*>*)p);
   }
   static void deleteArray_vectorlETArtSILICONSParamUgR(void *p) {
      delete [] ((vector<TArtSILICONSPara*>*)p);
   }
   static void destruct_vectorlETArtSILICONSParamUgR(void *p) {
      typedef vector<TArtSILICONSPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TArtSILICONSPara*>

/********************************************************
* anasilicons_dict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableanasilicons_dict();

extern "C" void G__set_cpp_environmentanasilicons_dict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("include/TArtSILICONSParameters.hh");
  G__add_compiledheader("include/TArtSILICONSPara.hh");
  G__add_compiledheader("include/TArtCalibSILICONS.hh");
  G__add_compiledheader("include/TArtSILICONS.hh");
  G__cpp_reset_tagtableanasilicons_dict();
}
#include <new>
extern "C" int G__cpp_dllrevanasilicons_dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TArtSILICONSPara */
static int G__anasilicons_dict_452_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtSILICONSPara* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtSILICONSPara[n];
     } else {
       p = new((void*) gvp) TArtSILICONSPara[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtSILICONSPara;
     } else {
       p = new((void*) gvp) TArtSILICONSPara;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSPara));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtSILICONSPara* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 11
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtSILICONSPara(
(UShort_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (UShort_t) G__int(libp->para[2]), (UShort_t) G__int(libp->para[3])
, (UShort_t) G__int(libp->para[4]), *((TArtSILICONSPara::DetDirection*) G__int(libp->para[5]))
, (Double_t*) G__int(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]));
   } else {
     p = new((void*) gvp) TArtSILICONSPara(
(UShort_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (UShort_t) G__int(libp->para[2]), (UShort_t) G__int(libp->para[3])
, (UShort_t) G__int(libp->para[4]), *((TArtSILICONSPara::DetDirection*) G__int(libp->para[5]))
, (Double_t*) G__int(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSPara));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSILICONSPara*) G__getstructoffset())->SetParameters(
(UShort_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (UShort_t) G__int(libp->para[2]), (UShort_t) G__int(libp->para[3])
, (UShort_t) G__int(libp->para[4]), *((TArtSILICONSPara::DetDirection*) G__int(libp->para[5]))
, (Double_t*) G__int(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSILICONSPara*) G__getstructoffset())->SetMap((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtSILICONSPara*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtSILICONSPara*) G__getstructoffset())->GetDetectorName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtSILICONSPara*) G__getstructoffset())->GetFpl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtSILICONSPara*) G__getstructoffset())->GetLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtSILICONSPara*) G__getstructoffset())->GetStrip());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtSILICONSPara*) G__getstructoffset())->GetDirection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TArtSILICONSPara*) G__getstructoffset())->GetPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtSILICONSPara*) G__getstructoffset())->GetPosition((UShort_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtSILICONSPara*) G__getstructoffset())->GetCh2MeV());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtSILICONSPara*) G__getstructoffset())->GetPedestal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtSILICONSPara*) G__getstructoffset())->GetCh2Ns());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtSILICONSPara*) G__getstructoffset())->GetTOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtSILICONSPara*) G__getstructoffset())->GetADCMap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtSILICONSPara*) G__getstructoffset())->GetTDCMap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtSILICONSPara::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtSILICONSPara::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtSILICONSPara::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtSILICONSPara::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSILICONSPara*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtSILICONSPara::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtSILICONSPara::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtSILICONSPara::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_452_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtSILICONSPara::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasilicons_dict_452_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtSILICONSPara* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtSILICONSPara(*(TArtSILICONSPara*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSPara));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtSILICONSPara G__TTArtSILICONSPara;
static int G__anasilicons_dict_452_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtSILICONSPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtSILICONSPara*) (soff+(sizeof(TArtSILICONSPara)*i)))->~G__TTArtSILICONSPara();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtSILICONSPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtSILICONSPara*) (soff))->~G__TTArtSILICONSPara();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasilicons_dict_452_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtSILICONSPara* dest = (TArtSILICONSPara*) G__getstructoffset();
   *dest = *(TArtSILICONSPara*) libp->para[0].ref;
   const TArtSILICONSPara& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtSILICONSParameters */
static int G__anasilicons_dict_454_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtSILICONSParameters* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtSILICONSParameters((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TArtSILICONSParameters((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtSILICONSParameters((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TArtSILICONSParameters((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtSILICONSParameters[n];
       } else {
         p = new((void*) gvp) TArtSILICONSParameters[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtSILICONSParameters;
       } else {
         p = new((void*) gvp) TArtSILICONSParameters;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSParameters));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_454_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) TArtSILICONSParameters::Instance((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) TArtSILICONSParameters::Instance((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) TArtSILICONSParameters::Instance());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_454_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtSILICONSParameters::Delete();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_454_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtSILICONSParameters*) G__getstructoffset())->LoadParameter((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_454_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSILICONSParameters*) G__getstructoffset())->PrintListOfPara();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_454_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtSILICONSParameters*) G__getstructoffset())->GetListOfPara());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_454_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtSILICONSParameters*) G__getstructoffset())->GetNumPara());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_454_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtSILICONSParameters*) G__getstructoffset())->GetSILICONSPara((TArtRIDFMap*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_454_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtSILICONSParameters::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_454_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtSILICONSParameters::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_454_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtSILICONSParameters::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_454_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtSILICONSParameters::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_454_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSILICONSParameters*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_454_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtSILICONSParameters::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_454_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtSILICONSParameters::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_454_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtSILICONSParameters::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_454_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtSILICONSParameters::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasilicons_dict_454_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtSILICONSParameters* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtSILICONSParameters(*(TArtSILICONSParameters*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSParameters));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtSILICONSParameters G__TTArtSILICONSParameters;
static int G__anasilicons_dict_454_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtSILICONSParameters*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtSILICONSParameters*) (soff+(sizeof(TArtSILICONSParameters)*i)))->~G__TTArtSILICONSParameters();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtSILICONSParameters*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtSILICONSParameters*) (soff))->~G__TTArtSILICONSParameters();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasilicons_dict_454_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtSILICONSParameters* dest = (TArtSILICONSParameters*) G__getstructoffset();
   *dest = *(TArtSILICONSParameters*) libp->para[0].ref;
   const TArtSILICONSParameters& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtSILICONS */
static int G__anasilicons_dict_465_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtSILICONS* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtSILICONS[n];
     } else {
       p = new((void*) gvp) TArtSILICONS[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtSILICONS;
     } else {
       p = new((void*) gvp) TArtSILICONS;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSILICONS*) G__getstructoffset())->SetLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtSILICONS*) G__getstructoffset())->GetLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSILICONS*) G__getstructoffset())->SetPosX((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSILICONS*) G__getstructoffset())->SetPosY((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSILICONS*) G__getstructoffset())->SetPosZ((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtSILICONS*) G__getstructoffset())->GetPosX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtSILICONS*) G__getstructoffset())->GetPosY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtSILICONS*) G__getstructoffset())->GetPosZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TArtSILICONS*) G__getstructoffset())->GetPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSILICONS*) G__getstructoffset())->SetRawADC((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSILICONS*) G__getstructoffset())->SetRawTDC((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtSILICONS*) G__getstructoffset())->GetRawADC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtSILICONS*) G__getstructoffset())->GetRawTDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSILICONS*) G__getstructoffset())->SetEnergy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSILICONS*) G__getstructoffset())->SetTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSILICONS*) G__getstructoffset())->SetTimeOffseted((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtSILICONS*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtSILICONS*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtSILICONS*) G__getstructoffset())->GetTimeOffseted());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtSILICONS::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtSILICONS::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtSILICONS::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtSILICONS::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSILICONS*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtSILICONS::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtSILICONS::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtSILICONS::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_465_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtSILICONS::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasilicons_dict_465_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtSILICONS* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtSILICONS(*(TArtSILICONS*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONS));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtSILICONS G__TTArtSILICONS;
static int G__anasilicons_dict_465_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtSILICONS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtSILICONS*) (soff+(sizeof(TArtSILICONS)*i)))->~G__TTArtSILICONS();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtSILICONS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtSILICONS*) (soff))->~G__TTArtSILICONS();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasilicons_dict_465_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtSILICONS* dest = (TArtSILICONS*) G__getstructoffset();
   *dest = *(TArtSILICONS*) libp->para[0].ref;
   const TArtSILICONS& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibSILICONS */
static int G__anasilicons_dict_471_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibSILICONS* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibSILICONS(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibSILICONS(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibSILICONS[n];
       } else {
         p = new((void*) gvp) TArtCalibSILICONS[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibSILICONS;
       } else {
         p = new((void*) gvp) TArtCalibSILICONS;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasilicons_dictLN_TArtCalibSILICONS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_471_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibSILICONS*) G__getstructoffset())->LoadData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_471_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibSILICONS*) G__getstructoffset())->LoadData((TArtRawSegmentObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_471_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSILICONS*) G__getstructoffset())->GetSiArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_471_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibSILICONS*) G__getstructoffset())->GetNumSi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_471_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSILICONS*) G__getstructoffset())->GetSi((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_471_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSILICONS*) G__getstructoffset())->GetSiPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_471_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSILICONS*) G__getstructoffset())->FindSi((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_471_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibSILICONS::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_471_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibSILICONS::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_471_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibSILICONS::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_471_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibSILICONS::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_471_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibSILICONS*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_471_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibSILICONS::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_471_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibSILICONS::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_471_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibSILICONS::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasilicons_dict_471_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibSILICONS::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasilicons_dict_471_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibSILICONS* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibSILICONS(*(TArtCalibSILICONS*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasilicons_dictLN_TArtCalibSILICONS));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibSILICONS G__TTArtCalibSILICONS;
static int G__anasilicons_dict_471_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibSILICONS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibSILICONS*) (soff+(sizeof(TArtCalibSILICONS)*i)))->~G__TTArtCalibSILICONS();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibSILICONS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibSILICONS*) (soff))->~G__TTArtCalibSILICONS();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasilicons_dict_471_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibSILICONS* dest = (TArtCalibSILICONS*) G__getstructoffset();
   *dest = *(TArtCalibSILICONS*) libp->para[0].ref;
   const TArtCalibSILICONS& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TArtSILICONSPara */

/* TArtSILICONSParameters */

/* TArtSILICONS */

/* TArtCalibSILICONS */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncanasilicons_dict {
 public:
  G__Sizep2memfuncanasilicons_dict(): p(&G__Sizep2memfuncanasilicons_dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncanasilicons_dict::*p)();
};

size_t G__get_sizep2memfuncanasilicons_dict()
{
  G__Sizep2memfuncanasilicons_dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceanasilicons_dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSPara))) {
     TArtSILICONSPara *G__Lderived;
     G__Lderived=(TArtSILICONSPara*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSPara),G__get_linked_tagnum(&G__anasilicons_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSPara),G__get_linked_tagnum(&G__anasilicons_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSParameters))) {
     TArtSILICONSParameters *G__Lderived;
     G__Lderived=(TArtSILICONSParameters*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSParameters),G__get_linked_tagnum(&G__anasilicons_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSParameters),G__get_linked_tagnum(&G__anasilicons_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONS))) {
     TArtSILICONS *G__Lderived;
     G__Lderived=(TArtSILICONS*)0x1000;
     {
       TArtDataObject *G__Lpbase=(TArtDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONS),G__get_linked_tagnum(&G__anasilicons_dictLN_TArtDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONS),G__get_linked_tagnum(&G__anasilicons_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasilicons_dictLN_TArtCalibSILICONS))) {
     TArtCalibSILICONS *G__Lderived;
     G__Lderived=(TArtCalibSILICONS*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasilicons_dictLN_TArtCalibSILICONS),G__get_linked_tagnum(&G__anasilicons_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableanasilicons_dict() {

   /* Setting up typedef entry */
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__anasilicons_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anasilicons_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasilicons_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anasilicons_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasilicons_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__anasilicons_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anasilicons_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasilicons_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anasilicons_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasilicons_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__anasilicons_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__anasilicons_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__anasilicons_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__anasilicons_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__anasilicons_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,TArtSILICONSPara*>",117,G__get_linked_tagnum(&G__anasilicons_dictLN_maplETArtRIDFMapcOTArtSILICONSParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtSILICONSParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,TArtSILICONSPara*,less<TArtRIDFMap> >",117,G__get_linked_tagnum(&G__anasilicons_dictLN_maplETArtRIDFMapcOTArtSILICONSParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtSILICONSParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtSILICONSPara*>",117,G__get_linked_tagnum(&G__anasilicons_dictLN_vectorlETArtSILICONSParamUcOallocatorlETArtSILICONSParamUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anasilicons_dictLN_reverse_iteratorlEvectorlETArtSILICONSParamUcOallocatorlETArtSILICONSParamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasilicons_dictLN_vectorlETArtSILICONSParamUcOallocatorlETArtSILICONSParamUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anasilicons_dictLN_reverse_iteratorlEvectorlETArtSILICONSParamUcOallocatorlETArtSILICONSParamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasilicons_dictLN_vectorlETArtSILICONSParamUcOallocatorlETArtSILICONSParamUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TArtSILICONSPara */
static void G__setup_memvarTArtSILICONSPara(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSPara));
   { TArtSILICONSPara *p; p=(TArtSILICONSPara*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasilicons_dictLN_TString),-1,-1,4,"detname=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"strip=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"layer=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSParacLcLDetDirection),-1,-1,4,"direction=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"pedestal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ch2mev=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"position[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"t_offset=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ch2ns=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasilicons_dictLN_TArtRIDFMap),-1,-1,4,"map_adc=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasilicons_dictLN_TArtRIDFMap),-1,-1,4,"map_tdc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasilicons_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtSILICONSParameters */
static void G__setup_memvarTArtSILICONSParameters(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSParameters));
   { TArtSILICONSParameters *p; p=(TArtSILICONSParameters*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasilicons_dictLN_maplETArtRIDFMapcOTArtSILICONSParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtSILICONSParamUgRsPgRsPgR),G__defined_typename("map<TArtRIDFMap,TArtSILICONSPara*>"),-1,2,"pmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasilicons_dictLN_maplETArtRIDFMapcOTArtSILICONSParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtSILICONSParamUgRsPgRsPgRcLcLiterator),-1,-1,2,"itrEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasilicons_dictLN_maplETArtRIDFMapcOTArtSILICONSParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtSILICONSParamUgRsPgRsPgRcLcLiterator),-1,-1,2,"itr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasilicons_dictLN_TList),-1,-1,2,"listOfPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSParameters),-1,-2,2,"fSILICONSParameters=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasilicons_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtSILICONS */
static void G__setup_memvarTArtSILICONS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONS));
   { TArtSILICONS *p; p=(TArtSILICONS*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fADC=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTDC=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTimeOffseted=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasilicons_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibSILICONS */
static void G__setup_memvarTArtCalibSILICONS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasilicons_dictLN_TArtCalibSILICONS));
   { TArtCalibSILICONS *p; p=(TArtCalibSILICONS*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasilicons_dictLN_TClonesArray),-1,-1,4,"fSiArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasilicons_dictLN_vectorlETArtSILICONSParamUcOallocatorlETArtSILICONSParamUgRsPgR),G__defined_typename("vector<TArtSILICONSPara*>"),-1,4,"fSiParaArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSParameters),-1,-1,4,"setup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasilicons_dictLN_TArtStoreManager),-1,-1,4,"sman=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasilicons_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvaranasilicons_dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTArtSILICONSPara(void) {
   /* TArtSILICONSPara */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSPara));
   G__memfunc_setup("TArtSILICONSPara",1379,G__anasilicons_dict_452_0_1, 105, G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSPara), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtSILICONSPara",1379,G__anasilicons_dict_452_0_2, 105, G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSPara), -1, 0, 11, 1, 1, 0, 
"r - 'UShort_t' 0 - id u 'TString' - 0 - n "
"r - 'UShort_t' 0 - f r - 'UShort_t' 0 - l "
"r - 'UShort_t' 0 - s u 'TArtSILICONSPara::DetDirection' - 0 - d "
"D - 'Double_t' 0 - p d - 'Double_t' 0 - tc "
"d - 'Double_t' 0 - to d - 'Double_t' 0 - qc "
"d - 'Double_t' 0 - qp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameters",1344,G__anasilicons_dict_452_0_3, 121, -1, -1, 0, 11, 1, 1, 0, 
"r - 'UShort_t' 0 - i u 'TString' - 0 - n "
"r - 'UShort_t' 0 - f r - 'UShort_t' 0 - l "
"r - 'UShort_t' 0 - s u 'TArtSILICONSPara::DetDirection' - 0 - d "
"D - 'Double_t' 0 - p d - 'Double_t' 0 - tc "
"d - 'Double_t' 0 - to d - 'Double_t' 0 - qc "
"d - 'Double_t' 0 - qp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMap",586,G__anasilicons_dict_452_0_4, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - tgeo i - 'Int_t' 0 - tch "
"i - 'Int_t' 0 - adc_geo i - 'Int_t' 0 - adc_ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__anasilicons_dict_452_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorName",1499,G__anasilicons_dict_452_0_6, 85, G__get_linked_tagnum(&G__anasilicons_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFpl",578,G__anasilicons_dict_452_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLayer",797,G__anasilicons_dict_452_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStrip",818,G__anasilicons_dict_452_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirection",1217,G__anasilicons_dict_452_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosition",1141,G__anasilicons_dict_452_0_11, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosition",1141,G__anasilicons_dict_452_0_12, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "r - 'UShort_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh2MeV",773,G__anasilicons_dict_452_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedestal",1106,G__anasilicons_dict_452_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh2Ns",702,G__anasilicons_dict_452_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOffset",987,G__anasilicons_dict_452_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetADCMap",774,G__anasilicons_dict_452_0_17, 85, G__get_linked_tagnum(&G__anasilicons_dictLN_TArtRIDFMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDCMap",793,G__anasilicons_dict_452_0_18, 85, G__get_linked_tagnum(&G__anasilicons_dictLN_TArtRIDFMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasilicons_dict_452_0_19, 85, G__get_linked_tagnum(&G__anasilicons_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtSILICONSPara::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasilicons_dict_452_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtSILICONSPara::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasilicons_dict_452_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtSILICONSPara::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasilicons_dict_452_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtSILICONSPara::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasilicons_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasilicons_dict_452_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasilicons_dict_452_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtSILICONSPara::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasilicons_dict_452_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtSILICONSPara::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasilicons_dict_452_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtSILICONSPara::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasilicons_dict_452_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtSILICONSPara::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtSILICONSPara", 1379, G__anasilicons_dict_452_0_31, (int) ('i'), G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSPara), -1, 0, 1, 1, 1, 0, "u 'TArtSILICONSPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtSILICONSPara", 1505, G__anasilicons_dict_452_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasilicons_dict_452_0_33, (int) ('u'), G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSPara), -1, 1, 1, 1, 1, 0, "u 'TArtSILICONSPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtSILICONSParameters(void) {
   /* TArtSILICONSParameters */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSParameters));
   G__memfunc_setup("TArtSILICONSParameters",2035,G__anasilicons_dict_454_0_1, 105, G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSParameters), -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"SILICONSParameters\"' name C - - 10 '\"SILICONSParameters\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anasilicons_dict_454_0_2, 85, G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSParameters), -1, 0, 2, 3, 1, 0, 
"C - - 10 '\"SILICONSParameters\"' name C - - 10 '\"SILICONSParameters\"' title", (char*)NULL, (void*) G__func2void( (TArtSILICONSParameters* (*)(const char*, const char*))(&TArtSILICONSParameters::Instance) ), 0);
   G__memfunc_setup("Delete",595,G__anasilicons_dict_454_0_3, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtSILICONSParameters::Delete) ), 0);
   G__memfunc_setup("LoadParameter",1313,G__anasilicons_dict_454_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 0 - xmlfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListOfPara",1506,G__anasilicons_dict_454_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfPara",1269,G__anasilicons_dict_454_0_6, 85, G__get_linked_tagnum(&G__anasilicons_dictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumPara",980,G__anasilicons_dict_454_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSILICONSPara",1288,G__anasilicons_dict_454_0_8, 85, G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSPara), -1, 0, 1, 1, 1, 0, "U 'TArtRIDFMap' - 0 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseParaList",1307,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TXMLNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseSILICONSPara",1507,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSPara), -1, 0, 1, 1, 2, 0, "U 'TXMLNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasilicons_dict_454_0_11, 85, G__get_linked_tagnum(&G__anasilicons_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtSILICONSParameters::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasilicons_dict_454_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtSILICONSParameters::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasilicons_dict_454_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtSILICONSParameters::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasilicons_dict_454_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtSILICONSParameters::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasilicons_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasilicons_dict_454_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasilicons_dict_454_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtSILICONSParameters::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasilicons_dict_454_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtSILICONSParameters::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasilicons_dict_454_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtSILICONSParameters::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasilicons_dict_454_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtSILICONSParameters::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtSILICONSParameters", 2035, G__anasilicons_dict_454_0_23, (int) ('i'), 
G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSParameters), -1, 0, 1, 1, 1, 0, "u 'TArtSILICONSParameters' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtSILICONSParameters", 2161, G__anasilicons_dict_454_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasilicons_dict_454_0_25, (int) ('u'), G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSParameters), -1, 1, 1, 1, 1, 0, "u 'TArtSILICONSParameters' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtSILICONS(void) {
   /* TArtSILICONS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONS));
   G__memfunc_setup("TArtSILICONS",991,G__anasilicons_dict_465_0_1, 105, G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONS), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLayer",809,G__anasilicons_dict_465_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLayer",797,G__anasilicons_dict_465_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosX",694,G__anasilicons_dict_465_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosY",695,G__anasilicons_dict_465_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosZ",696,G__anasilicons_dict_465_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosX",682,G__anasilicons_dict_465_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosY",683,G__anasilicons_dict_465_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosZ",684,G__anasilicons_dict_465_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPos",594,G__anasilicons_dict_465_0_10, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRawADC",798,G__anasilicons_dict_465_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRawTDC",817,G__anasilicons_dict_465_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRawADC",786,G__anasilicons_dict_465_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRawTDC",805,G__anasilicons_dict_465_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEnergy",918,G__anasilicons_dict_465_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTime",699,G__anasilicons_dict_465_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTimeOffseted",1515,G__anasilicons_dict_465_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergy",906,G__anasilicons_dict_465_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTime",687,G__anasilicons_dict_465_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTimeOffseted",1503,G__anasilicons_dict_465_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasilicons_dict_465_0_21, 85, G__get_linked_tagnum(&G__anasilicons_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtSILICONS::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasilicons_dict_465_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtSILICONS::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasilicons_dict_465_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtSILICONS::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasilicons_dict_465_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtSILICONS::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasilicons_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasilicons_dict_465_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasilicons_dict_465_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtSILICONS::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasilicons_dict_465_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtSILICONS::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasilicons_dict_465_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtSILICONS::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasilicons_dict_465_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtSILICONS::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtSILICONS", 991, G__anasilicons_dict_465_0_33, (int) ('i'), G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONS), -1, 0, 1, 1, 1, 0, "u 'TArtSILICONS' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtSILICONS", 1117, G__anasilicons_dict_465_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasilicons_dict_465_0_35, (int) ('u'), G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONS), -1, 1, 1, 1, 1, 0, "u 'TArtSILICONS' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibSILICONS(void) {
   /* TArtCalibSILICONS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasilicons_dictLN_TArtCalibSILICONS));
   G__memfunc_setup("TArtCalibSILICONS",1466,G__anasilicons_dict_471_0_1, 105, G__get_linked_tagnum(&G__anasilicons_dictLN_TArtCalibSILICONS), -1, 0, 1, 1, 1, 0, "u 'TString' - 10 '\"SILICONS\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anasilicons_dict_471_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anasilicons_dict_471_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSiArray",987,G__anasilicons_dict_471_0_6, 85, G__get_linked_tagnum(&G__anasilicons_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumSi",780,G__anasilicons_dict_471_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSi",476,G__anasilicons_dict_471_0_8, 85, G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONS), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSiPara",864,G__anasilicons_dict_471_0_9, 85, G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONSPara), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindSi",573,G__anasilicons_dict_471_0_10, 85, G__get_linked_tagnum(&G__anasilicons_dictLN_TArtSILICONS), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasilicons_dict_471_0_11, 85, G__get_linked_tagnum(&G__anasilicons_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibSILICONS::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasilicons_dict_471_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibSILICONS::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasilicons_dict_471_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibSILICONS::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasilicons_dict_471_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibSILICONS::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasilicons_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasilicons_dict_471_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasilicons_dict_471_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibSILICONS::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasilicons_dict_471_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibSILICONS::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasilicons_dict_471_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibSILICONS::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasilicons_dict_471_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibSILICONS::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibSILICONS", 1466, G__anasilicons_dict_471_0_23, (int) ('i'), G__get_linked_tagnum(&G__anasilicons_dictLN_TArtCalibSILICONS), -1, 0, 1, 1, 1, 0, "u 'TArtCalibSILICONS' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibSILICONS", 1592, G__anasilicons_dict_471_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasilicons_dict_471_0_25, (int) ('u'), G__get_linked_tagnum(&G__anasilicons_dictLN_TArtCalibSILICONS), -1, 1, 1, 1, 1, 0, "u 'TArtCalibSILICONS' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncanasilicons_dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalanasilicons_dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcanasilicons_dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__anasilicons_dictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__anasilicons_dictLN_TXMLNode = { "TXMLNode" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_TArtSILICONSPara = { "TArtSILICONSPara" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_TArtRIDFMap = { "TArtRIDFMap" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_TArtSILICONSParameters = { "TArtSILICONSParameters" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_maplETArtRIDFMapcOTArtSILICONSParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtSILICONSParamUgRsPgRsPgR = { "map<TArtRIDFMap,TArtSILICONSPara*,less<TArtRIDFMap>,allocator<pair<const TArtRIDFMap,TArtSILICONSPara*> > >" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_maplETArtRIDFMapcOTArtSILICONSParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtSILICONSParamUgRsPgRsPgRcLcLiterator = { "map<TArtRIDFMap,TArtSILICONSPara*,less<TArtRIDFMap>,allocator<pair<const TArtRIDFMap,TArtSILICONSPara*> > >::iterator" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_TArtDataObject = { "TArtDataObject" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_TArtSILICONS = { "TArtSILICONS" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_TArtSILICONSParacLcLDetDirection = { "TArtSILICONSPara::DetDirection" , 115 , -1 };
G__linked_taginfo G__anasilicons_dictLN_TArtReconstruction = { "TArtReconstruction" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_TArtRawSegmentObject = { "TArtRawSegmentObject" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_TArtStoreManager = { "TArtStoreManager" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_TArtCalibSILICONS = { "TArtCalibSILICONS" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_vectorlETArtSILICONSParamUcOallocatorlETArtSILICONSParamUgRsPgR = { "vector<TArtSILICONSPara*,allocator<TArtSILICONSPara*> >" , 99 , -1 };
G__linked_taginfo G__anasilicons_dictLN_reverse_iteratorlEvectorlETArtSILICONSParamUcOallocatorlETArtSILICONSParamUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtSILICONSPara*,allocator<TArtSILICONSPara*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableanasilicons_dict() {
  G__anasilicons_dictLN_TClass.tagnum = -1 ;
  G__anasilicons_dictLN_TBuffer.tagnum = -1 ;
  G__anasilicons_dictLN_TMemberInspector.tagnum = -1 ;
  G__anasilicons_dictLN_TObject.tagnum = -1 ;
  G__anasilicons_dictLN_TNamed.tagnum = -1 ;
  G__anasilicons_dictLN_TString.tagnum = -1 ;
  G__anasilicons_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__anasilicons_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anasilicons_dictLN_TList.tagnum = -1 ;
  G__anasilicons_dictLN_TClonesArray.tagnum = -1 ;
  G__anasilicons_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__anasilicons_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anasilicons_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__anasilicons_dictLN_TXMLNode.tagnum = -1 ;
  G__anasilicons_dictLN_TArtSILICONSPara.tagnum = -1 ;
  G__anasilicons_dictLN_TArtRIDFMap.tagnum = -1 ;
  G__anasilicons_dictLN_TArtSILICONSParameters.tagnum = -1 ;
  G__anasilicons_dictLN_maplETArtRIDFMapcOTArtSILICONSParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtSILICONSParamUgRsPgRsPgR.tagnum = -1 ;
  G__anasilicons_dictLN_maplETArtRIDFMapcOTArtSILICONSParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtSILICONSParamUgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__anasilicons_dictLN_TArtDataObject.tagnum = -1 ;
  G__anasilicons_dictLN_TArtSILICONS.tagnum = -1 ;
  G__anasilicons_dictLN_TArtSILICONSParacLcLDetDirection.tagnum = -1 ;
  G__anasilicons_dictLN_TArtReconstruction.tagnum = -1 ;
  G__anasilicons_dictLN_TArtRawSegmentObject.tagnum = -1 ;
  G__anasilicons_dictLN_TArtStoreManager.tagnum = -1 ;
  G__anasilicons_dictLN_TArtCalibSILICONS.tagnum = -1 ;
  G__anasilicons_dictLN_vectorlETArtSILICONSParamUcOallocatorlETArtSILICONSParamUgRsPgR.tagnum = -1 ;
  G__anasilicons_dictLN_reverse_iteratorlEvectorlETArtSILICONSParamUcOallocatorlETArtSILICONSParamUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableanasilicons_dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_TClass);
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_TObject);
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_TString);
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_TList);
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_TXMLNode);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_TArtSILICONSPara),sizeof(TArtSILICONSPara),-1,324864,(char*)NULL,G__setup_memvarTArtSILICONSPara,G__setup_memfuncTArtSILICONSPara);
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_TArtRIDFMap);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_TArtSILICONSParameters),sizeof(TArtSILICONSParameters),-1,324864,(char*)NULL,G__setup_memvarTArtSILICONSParameters,G__setup_memfuncTArtSILICONSParameters);
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_maplETArtRIDFMapcOTArtSILICONSParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtSILICONSParamUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_maplETArtRIDFMapcOTArtSILICONSParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtSILICONSParamUgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_TArtDataObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_TArtSILICONS),sizeof(TArtSILICONS),-1,292096,(char*)NULL,G__setup_memvarTArtSILICONS,G__setup_memfuncTArtSILICONS);
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_TArtSILICONSParacLcLDetDirection);
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_TArtReconstruction);
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_TArtRawSegmentObject);
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_TArtStoreManager);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_TArtCalibSILICONS),sizeof(TArtCalibSILICONS),-1,263424,(char*)NULL,G__setup_memvarTArtCalibSILICONS,G__setup_memfuncTArtCalibSILICONS);
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_vectorlETArtSILICONSParamUcOallocatorlETArtSILICONSParamUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasilicons_dictLN_reverse_iteratorlEvectorlETArtSILICONSParamUcOallocatorlETArtSILICONSParamUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupanasilicons_dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupanasilicons_dict()");
  G__set_cpp_environmentanasilicons_dict();
  G__cpp_setup_tagtableanasilicons_dict();

  G__cpp_setup_inheritanceanasilicons_dict();

  G__cpp_setup_typetableanasilicons_dict();

  G__cpp_setup_memvaranasilicons_dict();

  G__cpp_setup_memfuncanasilicons_dict();
  G__cpp_setup_globalanasilicons_dict();
  G__cpp_setup_funcanasilicons_dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncanasilicons_dict();
  return;
}
class G__cpp_setup_initanasilicons_dict {
  public:
    G__cpp_setup_initanasilicons_dict() { G__add_setup_func("anasilicons_dict",(G__incsetup)(&G__cpp_setupanasilicons_dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initanasilicons_dict() { G__remove_setup_func("anasilicons_dict"); }
};
G__cpp_setup_initanasilicons_dict G__cpp_setup_initializeranasilicons_dict;

