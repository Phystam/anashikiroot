//
// File generated by rootcint at Wed Jun  7 19:57:47 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME anaespri_dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "anaespri_dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void TArtRNaIPara_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtRNaIPara(void *p = 0);
   static void *newArray_TArtRNaIPara(Long_t size, void *p);
   static void delete_TArtRNaIPara(void *p);
   static void deleteArray_TArtRNaIPara(void *p);
   static void destruct_TArtRNaIPara(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtRNaIPara*)
   {
      ::TArtRNaIPara *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtRNaIPara >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtRNaIPara", ::TArtRNaIPara::Class_Version(), "./include/TArtRNaIPara.hh", 9,
                  typeid(::TArtRNaIPara), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtRNaIPara::Dictionary, isa_proxy, 4,
                  sizeof(::TArtRNaIPara) );
      instance.SetNew(&new_TArtRNaIPara);
      instance.SetNewArray(&newArray_TArtRNaIPara);
      instance.SetDelete(&delete_TArtRNaIPara);
      instance.SetDeleteArray(&deleteArray_TArtRNaIPara);
      instance.SetDestructor(&destruct_TArtRNaIPara);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtRNaIPara*)
   {
      return GenerateInitInstanceLocal((::TArtRNaIPara*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtRNaIPara*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtFADC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtFADC(void *p = 0);
   static void *newArray_TArtFADC(Long_t size, void *p);
   static void delete_TArtFADC(void *p);
   static void deleteArray_TArtFADC(void *p);
   static void destruct_TArtFADC(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtFADC*)
   {
      ::TArtFADC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtFADC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtFADC", ::TArtFADC::Class_Version(), "./include/TArtFADC.hh", 6,
                  typeid(::TArtFADC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtFADC::Dictionary, isa_proxy, 4,
                  sizeof(::TArtFADC) );
      instance.SetNew(&new_TArtFADC);
      instance.SetNewArray(&newArray_TArtFADC);
      instance.SetDelete(&delete_TArtFADC);
      instance.SetDeleteArray(&deleteArray_TArtFADC);
      instance.SetDestructor(&destruct_TArtFADC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtFADC*)
   {
      return GenerateInitInstanceLocal((::TArtFADC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtFADC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtTDCHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtTDCHit(void *p = 0);
   static void *newArray_TArtTDCHit(Long_t size, void *p);
   static void delete_TArtTDCHit(void *p);
   static void deleteArray_TArtTDCHit(void *p);
   static void destruct_TArtTDCHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtTDCHit*)
   {
      ::TArtTDCHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtTDCHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtTDCHit", ::TArtTDCHit::Class_Version(), "./include/TArtTDCHit.hh", 6,
                  typeid(::TArtTDCHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtTDCHit::Dictionary, isa_proxy, 4,
                  sizeof(::TArtTDCHit) );
      instance.SetNew(&new_TArtTDCHit);
      instance.SetNewArray(&newArray_TArtTDCHit);
      instance.SetDelete(&delete_TArtTDCHit);
      instance.SetDeleteArray(&deleteArray_TArtTDCHit);
      instance.SetDestructor(&destruct_TArtTDCHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtTDCHit*)
   {
      return GenerateInitInstanceLocal((::TArtTDCHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtTDCHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtTDCHitPara_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtTDCHitPara(void *p = 0);
   static void *newArray_TArtTDCHitPara(Long_t size, void *p);
   static void delete_TArtTDCHitPara(void *p);
   static void deleteArray_TArtTDCHitPara(void *p);
   static void destruct_TArtTDCHitPara(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtTDCHitPara*)
   {
      ::TArtTDCHitPara *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtTDCHitPara >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtTDCHitPara", ::TArtTDCHitPara::Class_Version(), "./include/TArtTDCHitPara.hh", 10,
                  typeid(::TArtTDCHitPara), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtTDCHitPara::Dictionary, isa_proxy, 4,
                  sizeof(::TArtTDCHitPara) );
      instance.SetNew(&new_TArtTDCHitPara);
      instance.SetNewArray(&newArray_TArtTDCHitPara);
      instance.SetDelete(&delete_TArtTDCHitPara);
      instance.SetDeleteArray(&deleteArray_TArtTDCHitPara);
      instance.SetDestructor(&destruct_TArtTDCHitPara);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtTDCHitPara*)
   {
      return GenerateInitInstanceLocal((::TArtTDCHitPara*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtTDCHitPara*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtRDC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtRDC(void *p = 0);
   static void *newArray_TArtRDC(Long_t size, void *p);
   static void delete_TArtRDC(void *p);
   static void deleteArray_TArtRDC(void *p);
   static void destruct_TArtRDC(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtRDC*)
   {
      ::TArtRDC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtRDC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtRDC", ::TArtRDC::Class_Version(), "./include/TArtRDC.hh", 6,
                  typeid(::TArtRDC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtRDC::Dictionary, isa_proxy, 4,
                  sizeof(::TArtRDC) );
      instance.SetNew(&new_TArtRDC);
      instance.SetNewArray(&newArray_TArtRDC);
      instance.SetDelete(&delete_TArtRDC);
      instance.SetDeleteArray(&deleteArray_TArtRDC);
      instance.SetDestructor(&destruct_TArtRDC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtRDC*)
   {
      return GenerateInitInstanceLocal((::TArtRDC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtRDC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtUserParameters_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtUserParameters(void *p = 0);
   static void *newArray_TArtUserParameters(Long_t size, void *p);
   static void delete_TArtUserParameters(void *p);
   static void deleteArray_TArtUserParameters(void *p);
   static void destruct_TArtUserParameters(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtUserParameters*)
   {
      ::TArtUserParameters *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtUserParameters >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtUserParameters", ::TArtUserParameters::Class_Version(), "./include/TArtUserParameters.hh", 13,
                  typeid(::TArtUserParameters), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtUserParameters::Dictionary, isa_proxy, 4,
                  sizeof(::TArtUserParameters) );
      instance.SetNew(&new_TArtUserParameters);
      instance.SetNewArray(&newArray_TArtUserParameters);
      instance.SetDelete(&delete_TArtUserParameters);
      instance.SetDeleteArray(&deleteArray_TArtUserParameters);
      instance.SetDestructor(&destruct_TArtUserParameters);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtUserParameters*)
   {
      return GenerateInitInstanceLocal((::TArtUserParameters*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtUserParameters*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtFADCPara_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtFADCPara(void *p = 0);
   static void *newArray_TArtFADCPara(Long_t size, void *p);
   static void delete_TArtFADCPara(void *p);
   static void deleteArray_TArtFADCPara(void *p);
   static void destruct_TArtFADCPara(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtFADCPara*)
   {
      ::TArtFADCPara *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtFADCPara >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtFADCPara", ::TArtFADCPara::Class_Version(), "./include/TArtFADCPara.hh", 10,
                  typeid(::TArtFADCPara), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtFADCPara::Dictionary, isa_proxy, 4,
                  sizeof(::TArtFADCPara) );
      instance.SetNew(&new_TArtFADCPara);
      instance.SetNewArray(&newArray_TArtFADCPara);
      instance.SetDelete(&delete_TArtFADCPara);
      instance.SetDeleteArray(&deleteArray_TArtFADCPara);
      instance.SetDestructor(&destruct_TArtFADCPara);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtFADCPara*)
   {
      return GenerateInitInstanceLocal((::TArtFADCPara*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtFADCPara*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtPlasPara_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtPlasPara(void *p = 0);
   static void *newArray_TArtPlasPara(Long_t size, void *p);
   static void delete_TArtPlasPara(void *p);
   static void deleteArray_TArtPlasPara(void *p);
   static void destruct_TArtPlasPara(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtPlasPara*)
   {
      ::TArtPlasPara *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtPlasPara >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtPlasPara", ::TArtPlasPara::Class_Version(), "./include/TArtPlasPara.hh", 9,
                  typeid(::TArtPlasPara), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtPlasPara::Dictionary, isa_proxy, 4,
                  sizeof(::TArtPlasPara) );
      instance.SetNew(&new_TArtPlasPara);
      instance.SetNewArray(&newArray_TArtPlasPara);
      instance.SetDelete(&delete_TArtPlasPara);
      instance.SetDeleteArray(&deleteArray_TArtPlasPara);
      instance.SetDestructor(&destruct_TArtPlasPara);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtPlasPara*)
   {
      return GenerateInitInstanceLocal((::TArtPlasPara*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtPlasPara*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtESPRIParameters_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtESPRIParameters(void *p = 0);
   static void *newArray_TArtESPRIParameters(Long_t size, void *p);
   static void delete_TArtESPRIParameters(void *p);
   static void deleteArray_TArtESPRIParameters(void *p);
   static void destruct_TArtESPRIParameters(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtESPRIParameters*)
   {
      ::TArtESPRIParameters *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtESPRIParameters >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtESPRIParameters", ::TArtESPRIParameters::Class_Version(), "./include/TArtESPRIParameters.hh", 17,
                  typeid(::TArtESPRIParameters), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtESPRIParameters::Dictionary, isa_proxy, 4,
                  sizeof(::TArtESPRIParameters) );
      instance.SetNew(&new_TArtESPRIParameters);
      instance.SetNewArray(&newArray_TArtESPRIParameters);
      instance.SetDelete(&delete_TArtESPRIParameters);
      instance.SetDeleteArray(&deleteArray_TArtESPRIParameters);
      instance.SetDestructor(&destruct_TArtESPRIParameters);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtESPRIParameters*)
   {
      return GenerateInitInstanceLocal((::TArtESPRIParameters*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtESPRIParameters*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtBDC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtBDC(void *p = 0);
   static void *newArray_TArtBDC(Long_t size, void *p);
   static void delete_TArtBDC(void *p);
   static void deleteArray_TArtBDC(void *p);
   static void destruct_TArtBDC(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtBDC*)
   {
      ::TArtBDC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtBDC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtBDC", ::TArtBDC::Class_Version(), "./include/TArtBDC.hh", 6,
                  typeid(::TArtBDC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtBDC::Dictionary, isa_proxy, 4,
                  sizeof(::TArtBDC) );
      instance.SetNew(&new_TArtBDC);
      instance.SetNewArray(&newArray_TArtBDC);
      instance.SetDelete(&delete_TArtBDC);
      instance.SetDeleteArray(&deleteArray_TArtBDC);
      instance.SetDestructor(&destruct_TArtBDC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtBDC*)
   {
      return GenerateInitInstanceLocal((::TArtBDC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtBDC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibBDC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibBDC(void *p = 0);
   static void *newArray_TArtCalibBDC(Long_t size, void *p);
   static void delete_TArtCalibBDC(void *p);
   static void deleteArray_TArtCalibBDC(void *p);
   static void destruct_TArtCalibBDC(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibBDC*)
   {
      ::TArtCalibBDC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibBDC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibBDC", ::TArtCalibBDC::Class_Version(), "./include/TArtCalibBDC.hh", 16,
                  typeid(::TArtCalibBDC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibBDC::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibBDC) );
      instance.SetNew(&new_TArtCalibBDC);
      instance.SetNewArray(&newArray_TArtCalibBDC);
      instance.SetDelete(&delete_TArtCalibBDC);
      instance.SetDeleteArray(&deleteArray_TArtCalibBDC);
      instance.SetDestructor(&destruct_TArtCalibBDC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibBDC*)
   {
      return GenerateInitInstanceLocal((::TArtCalibBDC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibBDC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibRDC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibRDC(void *p = 0);
   static void *newArray_TArtCalibRDC(Long_t size, void *p);
   static void delete_TArtCalibRDC(void *p);
   static void deleteArray_TArtCalibRDC(void *p);
   static void destruct_TArtCalibRDC(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibRDC*)
   {
      ::TArtCalibRDC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibRDC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibRDC", ::TArtCalibRDC::Class_Version(), "./include/TArtCalibRDC.hh", 16,
                  typeid(::TArtCalibRDC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibRDC::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibRDC) );
      instance.SetNew(&new_TArtCalibRDC);
      instance.SetNewArray(&newArray_TArtCalibRDC);
      instance.SetDelete(&delete_TArtCalibRDC);
      instance.SetDeleteArray(&deleteArray_TArtCalibRDC);
      instance.SetDestructor(&destruct_TArtCalibRDC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibRDC*)
   {
      return GenerateInitInstanceLocal((::TArtCalibRDC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibRDC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDia_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtDia(void *p = 0);
   static void *newArray_TArtDia(Long_t size, void *p);
   static void delete_TArtDia(void *p);
   static void deleteArray_TArtDia(void *p);
   static void destruct_TArtDia(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDia*)
   {
      ::TArtDia *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtDia >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDia", ::TArtDia::Class_Version(), "./include/TArtDia.hh", 6,
                  typeid(::TArtDia), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtDia::Dictionary, isa_proxy, 4,
                  sizeof(::TArtDia) );
      instance.SetNew(&new_TArtDia);
      instance.SetNewArray(&newArray_TArtDia);
      instance.SetDelete(&delete_TArtDia);
      instance.SetDeleteArray(&deleteArray_TArtDia);
      instance.SetDestructor(&destruct_TArtDia);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDia*)
   {
      return GenerateInitInstanceLocal((::TArtDia*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDia*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtPlas_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtPlas(void *p = 0);
   static void *newArray_TArtPlas(Long_t size, void *p);
   static void delete_TArtPlas(void *p);
   static void deleteArray_TArtPlas(void *p);
   static void destruct_TArtPlas(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtPlas*)
   {
      ::TArtPlas *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtPlas >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtPlas", ::TArtPlas::Class_Version(), "./include/TArtPlas.hh", 6,
                  typeid(::TArtPlas), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtPlas::Dictionary, isa_proxy, 4,
                  sizeof(::TArtPlas) );
      instance.SetNew(&new_TArtPlas);
      instance.SetNewArray(&newArray_TArtPlas);
      instance.SetDelete(&delete_TArtPlas);
      instance.SetDeleteArray(&deleteArray_TArtPlas);
      instance.SetDestructor(&destruct_TArtPlas);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtPlas*)
   {
      return GenerateInitInstanceLocal((::TArtPlas*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtPlas*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibPlas_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibPlas(void *p = 0);
   static void *newArray_TArtCalibPlas(Long_t size, void *p);
   static void delete_TArtCalibPlas(void *p);
   static void deleteArray_TArtCalibPlas(void *p);
   static void destruct_TArtCalibPlas(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibPlas*)
   {
      ::TArtCalibPlas *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibPlas >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibPlas", ::TArtCalibPlas::Class_Version(), "./include/TArtCalibPlas.hh", 17,
                  typeid(::TArtCalibPlas), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibPlas::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibPlas) );
      instance.SetNew(&new_TArtCalibPlas);
      instance.SetNewArray(&newArray_TArtCalibPlas);
      instance.SetDelete(&delete_TArtCalibPlas);
      instance.SetDeleteArray(&deleteArray_TArtCalibPlas);
      instance.SetDestructor(&destruct_TArtCalibPlas);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibPlas*)
   {
      return GenerateInitInstanceLocal((::TArtCalibPlas*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibPlas*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtBLD_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtBLD(void *p = 0);
   static void *newArray_TArtBLD(Long_t size, void *p);
   static void delete_TArtBLD(void *p);
   static void deleteArray_TArtBLD(void *p);
   static void destruct_TArtBLD(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtBLD*)
   {
      ::TArtBLD *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtBLD >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtBLD", ::TArtBLD::Class_Version(), "./include/TArtBLD.hh", 6,
                  typeid(::TArtBLD), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtBLD::Dictionary, isa_proxy, 4,
                  sizeof(::TArtBLD) );
      instance.SetNew(&new_TArtBLD);
      instance.SetNewArray(&newArray_TArtBLD);
      instance.SetDelete(&delete_TArtBLD);
      instance.SetDeleteArray(&deleteArray_TArtBLD);
      instance.SetDestructor(&destruct_TArtBLD);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtBLD*)
   {
      return GenerateInitInstanceLocal((::TArtBLD*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtBLD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibFADC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibFADC(void *p = 0);
   static void *newArray_TArtCalibFADC(Long_t size, void *p);
   static void delete_TArtCalibFADC(void *p);
   static void deleteArray_TArtCalibFADC(void *p);
   static void destruct_TArtCalibFADC(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibFADC*)
   {
      ::TArtCalibFADC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibFADC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibFADC", ::TArtCalibFADC::Class_Version(), "./include/TArtCalibFADC.hh", 18,
                  typeid(::TArtCalibFADC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibFADC::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibFADC) );
      instance.SetNew(&new_TArtCalibFADC);
      instance.SetNewArray(&newArray_TArtCalibFADC);
      instance.SetDelete(&delete_TArtCalibFADC);
      instance.SetDeleteArray(&deleteArray_TArtCalibFADC);
      instance.SetDestructor(&destruct_TArtCalibFADC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibFADC*)
   {
      return GenerateInitInstanceLocal((::TArtCalibFADC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibFADC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibBLD_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibBLD(void *p = 0);
   static void *newArray_TArtCalibBLD(Long_t size, void *p);
   static void delete_TArtCalibBLD(void *p);
   static void deleteArray_TArtCalibBLD(void *p);
   static void destruct_TArtCalibBLD(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibBLD*)
   {
      ::TArtCalibBLD *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibBLD >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibBLD", ::TArtCalibBLD::Class_Version(), "./include/TArtCalibBLD.hh", 16,
                  typeid(::TArtCalibBLD), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibBLD::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibBLD) );
      instance.SetNew(&new_TArtCalibBLD);
      instance.SetNewArray(&newArray_TArtCalibBLD);
      instance.SetDelete(&delete_TArtCalibBLD);
      instance.SetDeleteArray(&deleteArray_TArtCalibBLD);
      instance.SetDestructor(&destruct_TArtCalibBLD);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibBLD*)
   {
      return GenerateInitInstanceLocal((::TArtCalibBLD*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibBLD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibDia_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibDia(void *p = 0);
   static void *newArray_TArtCalibDia(Long_t size, void *p);
   static void delete_TArtCalibDia(void *p);
   static void deleteArray_TArtCalibDia(void *p);
   static void destruct_TArtCalibDia(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibDia*)
   {
      ::TArtCalibDia *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibDia >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibDia", ::TArtCalibDia::Class_Version(), "./include/TArtCalibDia.hh", 15,
                  typeid(::TArtCalibDia), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibDia::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibDia) );
      instance.SetNew(&new_TArtCalibDia);
      instance.SetNewArray(&newArray_TArtCalibDia);
      instance.SetDelete(&delete_TArtCalibDia);
      instance.SetDeleteArray(&deleteArray_TArtCalibDia);
      instance.SetDestructor(&destruct_TArtCalibDia);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibDia*)
   {
      return GenerateInitInstanceLocal((::TArtCalibDia*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibDia*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtRNaI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtRNaI(void *p = 0);
   static void *newArray_TArtRNaI(Long_t size, void *p);
   static void delete_TArtRNaI(void *p);
   static void deleteArray_TArtRNaI(void *p);
   static void destruct_TArtRNaI(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtRNaI*)
   {
      ::TArtRNaI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtRNaI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtRNaI", ::TArtRNaI::Class_Version(), "./include/TArtRNaI.hh", 6,
                  typeid(::TArtRNaI), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtRNaI::Dictionary, isa_proxy, 4,
                  sizeof(::TArtRNaI) );
      instance.SetNew(&new_TArtRNaI);
      instance.SetNewArray(&newArray_TArtRNaI);
      instance.SetDelete(&delete_TArtRNaI);
      instance.SetDeleteArray(&deleteArray_TArtRNaI);
      instance.SetDestructor(&destruct_TArtRNaI);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtRNaI*)
   {
      return GenerateInitInstanceLocal((::TArtRNaI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtRNaI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibRNaI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibRNaI(void *p = 0);
   static void *newArray_TArtCalibRNaI(Long_t size, void *p);
   static void delete_TArtCalibRNaI(void *p);
   static void deleteArray_TArtCalibRNaI(void *p);
   static void destruct_TArtCalibRNaI(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibRNaI*)
   {
      ::TArtCalibRNaI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibRNaI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibRNaI", ::TArtCalibRNaI::Class_Version(), "./include/TArtCalibRNaI.hh", 17,
                  typeid(::TArtCalibRNaI), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibRNaI::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibRNaI) );
      instance.SetNew(&new_TArtCalibRNaI);
      instance.SetNewArray(&newArray_TArtCalibRNaI);
      instance.SetDelete(&delete_TArtCalibRNaI);
      instance.SetDeleteArray(&deleteArray_TArtCalibRNaI);
      instance.SetDestructor(&destruct_TArtCalibRNaI);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibRNaI*)
   {
      return GenerateInitInstanceLocal((::TArtCalibRNaI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibRNaI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibTDCHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibTDCHit(void *p = 0);
   static void *newArray_TArtCalibTDCHit(Long_t size, void *p);
   static void delete_TArtCalibTDCHit(void *p);
   static void deleteArray_TArtCalibTDCHit(void *p);
   static void destruct_TArtCalibTDCHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibTDCHit*)
   {
      ::TArtCalibTDCHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibTDCHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibTDCHit", ::TArtCalibTDCHit::Class_Version(), "./include/TArtCalibTDCHit.hh", 17,
                  typeid(::TArtCalibTDCHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibTDCHit::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibTDCHit) );
      instance.SetNew(&new_TArtCalibTDCHit);
      instance.SetNewArray(&newArray_TArtCalibTDCHit);
      instance.SetDelete(&delete_TArtCalibTDCHit);
      instance.SetDeleteArray(&deleteArray_TArtCalibTDCHit);
      instance.SetDestructor(&destruct_TArtCalibTDCHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibTDCHit*)
   {
      return GenerateInitInstanceLocal((::TArtCalibTDCHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibTDCHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr TArtRNaIPara::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtRNaIPara::Class_Name()
{
   return "TArtRNaIPara";
}

//______________________________________________________________________________
const char *TArtRNaIPara::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRNaIPara*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtRNaIPara::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRNaIPara*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtRNaIPara::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRNaIPara*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtRNaIPara::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRNaIPara*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtFADC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtFADC::Class_Name()
{
   return "TArtFADC";
}

//______________________________________________________________________________
const char *TArtFADC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtFADC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtFADC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtFADC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtFADC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtFADC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtFADC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtFADC*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtTDCHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtTDCHit::Class_Name()
{
   return "TArtTDCHit";
}

//______________________________________________________________________________
const char *TArtTDCHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTDCHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtTDCHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTDCHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtTDCHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTDCHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtTDCHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTDCHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtTDCHitPara::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtTDCHitPara::Class_Name()
{
   return "TArtTDCHitPara";
}

//______________________________________________________________________________
const char *TArtTDCHitPara::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTDCHitPara*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtTDCHitPara::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTDCHitPara*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtTDCHitPara::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTDCHitPara*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtTDCHitPara::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTDCHitPara*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtRDC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtRDC::Class_Name()
{
   return "TArtRDC";
}

//______________________________________________________________________________
const char *TArtRDC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRDC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtRDC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRDC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtRDC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRDC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtRDC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRDC*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtUserParameters::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtUserParameters::Class_Name()
{
   return "TArtUserParameters";
}

//______________________________________________________________________________
const char *TArtUserParameters::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtUserParameters*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtUserParameters::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtUserParameters*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtUserParameters::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtUserParameters*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtUserParameters::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtUserParameters*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtFADCPara::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtFADCPara::Class_Name()
{
   return "TArtFADCPara";
}

//______________________________________________________________________________
const char *TArtFADCPara::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtFADCPara*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtFADCPara::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtFADCPara*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtFADCPara::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtFADCPara*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtFADCPara::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtFADCPara*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtPlasPara::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtPlasPara::Class_Name()
{
   return "TArtPlasPara";
}

//______________________________________________________________________________
const char *TArtPlasPara::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtPlasPara*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtPlasPara::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtPlasPara*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtPlasPara::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtPlasPara*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtPlasPara::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtPlasPara*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtESPRIParameters::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtESPRIParameters::Class_Name()
{
   return "TArtESPRIParameters";
}

//______________________________________________________________________________
const char *TArtESPRIParameters::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtESPRIParameters*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtESPRIParameters::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtESPRIParameters*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtESPRIParameters::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtESPRIParameters*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtESPRIParameters::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtESPRIParameters*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtBDC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtBDC::Class_Name()
{
   return "TArtBDC";
}

//______________________________________________________________________________
const char *TArtBDC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtBDC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtBDC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtBDC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtBDC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtBDC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtBDC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtBDC*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibBDC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibBDC::Class_Name()
{
   return "TArtCalibBDC";
}

//______________________________________________________________________________
const char *TArtCalibBDC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBDC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibBDC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBDC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibBDC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBDC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibBDC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBDC*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibRDC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibRDC::Class_Name()
{
   return "TArtCalibRDC";
}

//______________________________________________________________________________
const char *TArtCalibRDC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibRDC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibRDC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibRDC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibRDC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibRDC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibRDC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibRDC*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtDia::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtDia::Class_Name()
{
   return "TArtDia";
}

//______________________________________________________________________________
const char *TArtDia::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDia*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtDia::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDia*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtDia::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDia*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtDia::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDia*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtPlas::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtPlas::Class_Name()
{
   return "TArtPlas";
}

//______________________________________________________________________________
const char *TArtPlas::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtPlas*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtPlas::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtPlas*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtPlas::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtPlas*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtPlas::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtPlas*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibPlas::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibPlas::Class_Name()
{
   return "TArtCalibPlas";
}

//______________________________________________________________________________
const char *TArtCalibPlas::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibPlas*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibPlas::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibPlas*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibPlas::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibPlas*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibPlas::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibPlas*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtBLD::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtBLD::Class_Name()
{
   return "TArtBLD";
}

//______________________________________________________________________________
const char *TArtBLD::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtBLD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtBLD::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtBLD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtBLD::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtBLD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtBLD::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtBLD*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibFADC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibFADC::Class_Name()
{
   return "TArtCalibFADC";
}

//______________________________________________________________________________
const char *TArtCalibFADC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFADC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibFADC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFADC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibFADC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFADC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibFADC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFADC*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibBLD::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibBLD::Class_Name()
{
   return "TArtCalibBLD";
}

//______________________________________________________________________________
const char *TArtCalibBLD::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBLD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibBLD::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBLD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibBLD::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBLD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibBLD::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBLD*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibDia::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibDia::Class_Name()
{
   return "TArtCalibDia";
}

//______________________________________________________________________________
const char *TArtCalibDia::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibDia*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibDia::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibDia*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibDia::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibDia*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibDia::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibDia*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtRNaI::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtRNaI::Class_Name()
{
   return "TArtRNaI";
}

//______________________________________________________________________________
const char *TArtRNaI::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRNaI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtRNaI::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRNaI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtRNaI::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRNaI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtRNaI::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRNaI*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibRNaI::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibRNaI::Class_Name()
{
   return "TArtCalibRNaI";
}

//______________________________________________________________________________
const char *TArtCalibRNaI::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibRNaI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibRNaI::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibRNaI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibRNaI::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibRNaI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibRNaI::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibRNaI*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibTDCHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibTDCHit::Class_Name()
{
   return "TArtCalibTDCHit";
}

//______________________________________________________________________________
const char *TArtCalibTDCHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibTDCHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibTDCHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibTDCHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibTDCHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibTDCHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibTDCHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibTDCHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TArtCalibRNaI::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibRNaI.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibRNaI::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibRNaI::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibRNaI::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibRNaI.
      TClass *R__cl = ::TArtCalibRNaI::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRNaIArray", &fRNaIArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRNaIParaArray", (void*)&fRNaIParaArray);
      R__insp.InspectMember("vector<TArtRNaIPara*>", (void*)&fRNaIParaArray, "fRNaIParaArray.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setup", &setup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sman", &sman);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibRNaI(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibRNaI : new ::TArtCalibRNaI;
   }
   static void *newArray_TArtCalibRNaI(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibRNaI[nElements] : new ::TArtCalibRNaI[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibRNaI(void *p) {
      delete ((::TArtCalibRNaI*)p);
   }
   static void deleteArray_TArtCalibRNaI(void *p) {
      delete [] ((::TArtCalibRNaI*)p);
   }
   static void destruct_TArtCalibRNaI(void *p) {
      typedef ::TArtCalibRNaI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibRNaI

//______________________________________________________________________________
void TArtCalibPlas::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibPlas.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibPlas::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibPlas::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibPlas::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibPlas.
      TClass *R__cl = ::TArtCalibPlas::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPlasArray", &fPlasArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPlasParaArray", (void*)&fPlasParaArray);
      R__insp.InspectMember("vector<TArtPlasPara*>", (void*)&fPlasParaArray, "fPlasParaArray.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setup", &setup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sman", &sman);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibPlas(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibPlas : new ::TArtCalibPlas;
   }
   static void *newArray_TArtCalibPlas(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibPlas[nElements] : new ::TArtCalibPlas[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibPlas(void *p) {
      delete ((::TArtCalibPlas*)p);
   }
   static void deleteArray_TArtCalibPlas(void *p) {
      delete [] ((::TArtCalibPlas*)p);
   }
   static void destruct_TArtCalibPlas(void *p) {
      typedef ::TArtCalibPlas current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibPlas

//______________________________________________________________________________
void TArtCalibDia::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibDia.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibDia::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibDia::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibDia::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibDia.
      TClass *R__cl = ::TArtCalibDia::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDiaArray", &fDiaArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setup", &setup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sman", &sman);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibDia(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibDia : new ::TArtCalibDia;
   }
   static void *newArray_TArtCalibDia(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibDia[nElements] : new ::TArtCalibDia[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibDia(void *p) {
      delete ((::TArtCalibDia*)p);
   }
   static void deleteArray_TArtCalibDia(void *p) {
      delete [] ((::TArtCalibDia*)p);
   }
   static void destruct_TArtCalibDia(void *p) {
      typedef ::TArtCalibDia current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibDia

//______________________________________________________________________________
void TArtCalibTDCHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibTDCHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibTDCHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibTDCHit::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibTDCHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibTDCHit.
      TClass *R__cl = ::TArtCalibTDCHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detectorid", &detectorid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTDCHitArray", &fTDCHitArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDCHitParaArray", (void*)&fTDCHitParaArray);
      R__insp.InspectMember("vector<TArtTDCHitPara*>", (void*)&fTDCHitParaArray, "fTDCHitParaArray.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setup", &setup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sman", &sman);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibTDCHit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibTDCHit : new ::TArtCalibTDCHit;
   }
   static void *newArray_TArtCalibTDCHit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibTDCHit[nElements] : new ::TArtCalibTDCHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibTDCHit(void *p) {
      delete ((::TArtCalibTDCHit*)p);
   }
   static void deleteArray_TArtCalibTDCHit(void *p) {
      delete [] ((::TArtCalibTDCHit*)p);
   }
   static void destruct_TArtCalibTDCHit(void *p) {
      typedef ::TArtCalibTDCHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibTDCHit

//______________________________________________________________________________
void TArtCalibFADC::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibFADC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibFADC::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibFADC::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibFADC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibFADC.
      TClass *R__cl = ::TArtCalibFADC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detectorid", &detectorid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFADCArray", &fFADCArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFADCParaArray", (void*)&fFADCParaArray);
      R__insp.InspectMember("vector<TArtFADCPara*>", (void*)&fFADCParaArray, "fFADCParaArray.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setup", &setup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sman", &sman);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibFADC(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibFADC : new ::TArtCalibFADC;
   }
   static void *newArray_TArtCalibFADC(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibFADC[nElements] : new ::TArtCalibFADC[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibFADC(void *p) {
      delete ((::TArtCalibFADC*)p);
   }
   static void deleteArray_TArtCalibFADC(void *p) {
      delete [] ((::TArtCalibFADC*)p);
   }
   static void destruct_TArtCalibFADC(void *p) {
      typedef ::TArtCalibFADC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibFADC

//______________________________________________________________________________
void TArtCalibRDC::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibRDC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibRDC::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibRDC::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibRDC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibRDC.
      TClass *R__cl = ::TArtCalibRDC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRDCArray", &fRDCArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setup", &setup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setup2", &setup2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sman", &sman);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibRDC(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibRDC : new ::TArtCalibRDC;
   }
   static void *newArray_TArtCalibRDC(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibRDC[nElements] : new ::TArtCalibRDC[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibRDC(void *p) {
      delete ((::TArtCalibRDC*)p);
   }
   static void deleteArray_TArtCalibRDC(void *p) {
      delete [] ((::TArtCalibRDC*)p);
   }
   static void destruct_TArtCalibRDC(void *p) {
      typedef ::TArtCalibRDC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibRDC

//______________________________________________________________________________
void TArtCalibBDC::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibBDC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibBDC::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibBDC::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibBDC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibBDC.
      TClass *R__cl = ::TArtCalibBDC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBDCArray", &fBDCArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setup", &setup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setup2", &setup2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sman", &sman);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibBDC(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibBDC : new ::TArtCalibBDC;
   }
   static void *newArray_TArtCalibBDC(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibBDC[nElements] : new ::TArtCalibBDC[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibBDC(void *p) {
      delete ((::TArtCalibBDC*)p);
   }
   static void deleteArray_TArtCalibBDC(void *p) {
      delete [] ((::TArtCalibBDC*)p);
   }
   static void destruct_TArtCalibBDC(void *p) {
      typedef ::TArtCalibBDC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibBDC

//______________________________________________________________________________
void TArtCalibBLD::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibBLD.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibBLD::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibBLD::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibBLD::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibBLD.
      TClass *R__cl = ::TArtCalibBLD::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBLDArray", &fBLDArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setup", &setup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setup2", &setup2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sman", &sman);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibBLD(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibBLD : new ::TArtCalibBLD;
   }
   static void *newArray_TArtCalibBLD(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibBLD[nElements] : new ::TArtCalibBLD[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibBLD(void *p) {
      delete ((::TArtCalibBLD*)p);
   }
   static void deleteArray_TArtCalibBLD(void *p) {
      delete [] ((::TArtCalibBLD*)p);
   }
   static void destruct_TArtCalibBLD(void *p) {
      typedef ::TArtCalibBLD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibBLD

//______________________________________________________________________________
void TArtRNaI::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtRNaI.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtRNaI::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtRNaI::Class(),this);
   }
}

//______________________________________________________________________________
void TArtRNaI::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtRNaI.
      TClass *R__cl = ::TArtRNaI::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADC", &fADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDC", &fTDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer", &layer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergy", &fEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      TArtDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtRNaI(void *p) {
      return  p ? new(p) ::TArtRNaI : new ::TArtRNaI;
   }
   static void *newArray_TArtRNaI(Long_t nElements, void *p) {
      return p ? new(p) ::TArtRNaI[nElements] : new ::TArtRNaI[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtRNaI(void *p) {
      delete ((::TArtRNaI*)p);
   }
   static void deleteArray_TArtRNaI(void *p) {
      delete [] ((::TArtRNaI*)p);
   }
   static void destruct_TArtRNaI(void *p) {
      typedef ::TArtRNaI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtRNaI

//______________________________________________________________________________
void TArtRNaIPara::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtRNaIPara.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtRNaIPara::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtRNaIPara::Class(),this);
   }
}

//______________________________________________________________________________
void TArtRNaIPara::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtRNaIPara.
      TClass *R__cl = ::TArtRNaIPara::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detname", &detname);
      R__insp.InspectMember(detname, "detname.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fpl", &fpl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer", &layer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tcal", &tcal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "toff", &toff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qcal", &qcal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qped", &qped);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "map_tdc", &map_tdc);
      R__insp.InspectMember(map_tdc, "map_tdc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "map_adc", &map_adc);
      R__insp.InspectMember(map_adc, "map_adc.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtRNaIPara(void *p) {
      return  p ? new(p) ::TArtRNaIPara : new ::TArtRNaIPara;
   }
   static void *newArray_TArtRNaIPara(Long_t nElements, void *p) {
      return p ? new(p) ::TArtRNaIPara[nElements] : new ::TArtRNaIPara[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtRNaIPara(void *p) {
      delete ((::TArtRNaIPara*)p);
   }
   static void deleteArray_TArtRNaIPara(void *p) {
      delete [] ((::TArtRNaIPara*)p);
   }
   static void destruct_TArtRNaIPara(void *p) {
      typedef ::TArtRNaIPara current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtRNaIPara

//______________________________________________________________________________
void TArtPlas::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtPlas.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtPlas::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtPlas::Class(),this);
   }
}

//______________________________________________________________________________
void TArtPlas::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtPlas.
      TClass *R__cl = ::TArtPlas::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADC", &fADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDC", &fTDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer", &layer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id_plane", &id_plane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channel", &channel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergy", &fEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWidth", &fWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeW", &fTimeW);
      TArtDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtPlas(void *p) {
      return  p ? new(p) ::TArtPlas : new ::TArtPlas;
   }
   static void *newArray_TArtPlas(Long_t nElements, void *p) {
      return p ? new(p) ::TArtPlas[nElements] : new ::TArtPlas[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtPlas(void *p) {
      delete ((::TArtPlas*)p);
   }
   static void deleteArray_TArtPlas(void *p) {
      delete [] ((::TArtPlas*)p);
   }
   static void destruct_TArtPlas(void *p) {
      typedef ::TArtPlas current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtPlas

//______________________________________________________________________________
void TArtPlasPara::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtPlasPara.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtPlasPara::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtPlasPara::Class(),this);
   }
}

//______________________________________________________________________________
void TArtPlasPara::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtPlasPara.
      TClass *R__cl = ::TArtPlasPara::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detname", &detname);
      R__insp.InspectMember(detname, "detname.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fpl", &fpl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer", &layer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id_plane", &id_plane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channel", &channel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qcal", &qcal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qped", &qped);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "map", &map);
      R__insp.InspectMember(map, "map.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtPlasPara(void *p) {
      return  p ? new(p) ::TArtPlasPara : new ::TArtPlasPara;
   }
   static void *newArray_TArtPlasPara(Long_t nElements, void *p) {
      return p ? new(p) ::TArtPlasPara[nElements] : new ::TArtPlasPara[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtPlasPara(void *p) {
      delete ((::TArtPlasPara*)p);
   }
   static void deleteArray_TArtPlasPara(void *p) {
      delete [] ((::TArtPlasPara*)p);
   }
   static void destruct_TArtPlasPara(void *p) {
      typedef ::TArtPlasPara current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtPlasPara

//______________________________________________________________________________
void TArtDia::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtDia.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtDia::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtDia::Class(),this);
   }
}

//______________________________________________________________________________
void TArtDia::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtDia.
      TClass *R__cl = ::TArtDia::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer", &layer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id_plane", &id_plane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channel", &channel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWidth", &fWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeW", &fTimeW);
      TArtDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtDia(void *p) {
      return  p ? new(p) ::TArtDia : new ::TArtDia;
   }
   static void *newArray_TArtDia(Long_t nElements, void *p) {
      return p ? new(p) ::TArtDia[nElements] : new ::TArtDia[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtDia(void *p) {
      delete ((::TArtDia*)p);
   }
   static void deleteArray_TArtDia(void *p) {
      delete [] ((::TArtDia*)p);
   }
   static void destruct_TArtDia(void *p) {
      typedef ::TArtDia current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDia

//______________________________________________________________________________
void TArtTDCHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtTDCHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtTDCHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtTDCHit::Class(),this);
   }
}

//______________________________________________________________________________
void TArtTDCHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtTDCHit.
      TClass *R__cl = ::TArtTDCHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer", &layer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id_plane", &id_plane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "anodedir", &anodedir);
      R__insp.InspectMember(anodedir, "anodedir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wireang", &wireang);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wirez", &wirez);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "toffset", &toffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wireid", &wireid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "geo", &geo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id_hit", &id_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "l_hit", &l_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLTDC", &fLTDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRTDC", &fRTDC);
      TArtDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtTDCHit(void *p) {
      return  p ? new(p) ::TArtTDCHit : new ::TArtTDCHit;
   }
   static void *newArray_TArtTDCHit(Long_t nElements, void *p) {
      return p ? new(p) ::TArtTDCHit[nElements] : new ::TArtTDCHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtTDCHit(void *p) {
      delete ((::TArtTDCHit*)p);
   }
   static void deleteArray_TArtTDCHit(void *p) {
      delete [] ((::TArtTDCHit*)p);
   }
   static void destruct_TArtTDCHit(void *p) {
      typedef ::TArtTDCHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtTDCHit

//______________________________________________________________________________
void TArtTDCHitPara::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtTDCHitPara.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtTDCHitPara::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtTDCHitPara::Class(),this);
   }
}

//______________________________________________________________________________
void TArtTDCHitPara::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtTDCHitPara.
      TClass *R__cl = ::TArtTDCHitPara::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detname", &detname);
      R__insp.InspectMember(detname, "detname.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fpl", &fpl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer", &layer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id_plane", &id_plane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wireid", &wireid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wireang", &wireang);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wirez", &wirez);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "toffset", &toffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "map", &map);
      R__insp.InspectMember(map, "map.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtTDCHitPara(void *p) {
      return  p ? new(p) ::TArtTDCHitPara : new ::TArtTDCHitPara;
   }
   static void *newArray_TArtTDCHitPara(Long_t nElements, void *p) {
      return p ? new(p) ::TArtTDCHitPara[nElements] : new ::TArtTDCHitPara[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtTDCHitPara(void *p) {
      delete ((::TArtTDCHitPara*)p);
   }
   static void deleteArray_TArtTDCHitPara(void *p) {
      delete [] ((::TArtTDCHitPara*)p);
   }
   static void destruct_TArtTDCHitPara(void *p) {
      typedef ::TArtTDCHitPara current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtTDCHitPara

//______________________________________________________________________________
void TArtFADC::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtFADC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtFADC::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtFADC::Class(),this);
   }
}

//______________________________________________________________________________
void TArtFADC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtFADC.
      TClass *R__cl = ::TArtFADC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCh", &fCh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLength", &fLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFADC[4096]", fFADC);
      TArtDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtFADC(void *p) {
      return  p ? new(p) ::TArtFADC : new ::TArtFADC;
   }
   static void *newArray_TArtFADC(Long_t nElements, void *p) {
      return p ? new(p) ::TArtFADC[nElements] : new ::TArtFADC[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtFADC(void *p) {
      delete ((::TArtFADC*)p);
   }
   static void deleteArray_TArtFADC(void *p) {
      delete [] ((::TArtFADC*)p);
   }
   static void destruct_TArtFADC(void *p) {
      typedef ::TArtFADC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtFADC

//______________________________________________________________________________
void TArtFADCPara::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtFADCPara.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtFADCPara::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtFADCPara::Class(),this);
   }
}

//______________________________________________________________________________
void TArtFADCPara::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtFADCPara.
      TClass *R__cl = ::TArtFADCPara::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detname", &detname);
      R__insp.InspectMember(detname, "detname.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fpl", &fpl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "map", &map);
      R__insp.InspectMember(map, "map.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtFADCPara(void *p) {
      return  p ? new(p) ::TArtFADCPara : new ::TArtFADCPara;
   }
   static void *newArray_TArtFADCPara(Long_t nElements, void *p) {
      return p ? new(p) ::TArtFADCPara[nElements] : new ::TArtFADCPara[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtFADCPara(void *p) {
      delete ((::TArtFADCPara*)p);
   }
   static void deleteArray_TArtFADCPara(void *p) {
      delete [] ((::TArtFADCPara*)p);
   }
   static void destruct_TArtFADCPara(void *p) {
      typedef ::TArtFADCPara current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtFADCPara

//______________________________________________________________________________
void TArtRDC::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtRDC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtRDC::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtRDC::Class(),this);
   }
}

//______________________________________________________________________________
void TArtRDC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtRDC.
      TClass *R__cl = ::TArtRDC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer", &layer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRX", &fRX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRY", &fRY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRA", &fRA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRB", &fRB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCHI", &fCHI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes1", &fRes1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes2", &fRes2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes3", &fRes3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes4", &fRes4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes5", &fRes5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes6", &fRes6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit1", &fHit1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit2", &fHit2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit3", &fHit3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit4", &fHit4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit5", &fHit5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit6", &fHit6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf1", &fDrf1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf2", &fDrf2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf3", &fDrf3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf4", &fDrf4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf5", &fDrf5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf6", &fDrf6);
      TArtDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtRDC(void *p) {
      return  p ? new(p) ::TArtRDC : new ::TArtRDC;
   }
   static void *newArray_TArtRDC(Long_t nElements, void *p) {
      return p ? new(p) ::TArtRDC[nElements] : new ::TArtRDC[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtRDC(void *p) {
      delete ((::TArtRDC*)p);
   }
   static void deleteArray_TArtRDC(void *p) {
      delete [] ((::TArtRDC*)p);
   }
   static void destruct_TArtRDC(void *p) {
      typedef ::TArtRDC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtRDC

//______________________________________________________________________________
void TArtBDC::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtBDC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtBDC::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtBDC::Class(),this);
   }
}

//______________________________________________________________________________
void TArtBDC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtBDC.
      TClass *R__cl = ::TArtBDC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer", &layer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBX", &fBX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBY", &fBY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBA", &fBA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBB", &fBB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCHI", &fCHI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes1", &fRes1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes2", &fRes2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes3", &fRes3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes4", &fRes4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes5", &fRes5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes6", &fRes6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes7", &fRes7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes8", &fRes8);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit1", &fHit1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit2", &fHit2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit3", &fHit3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit4", &fHit4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit5", &fHit5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit6", &fHit6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit7", &fHit7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit8", &fHit8);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf1", &fDrf1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf2", &fDrf2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf3", &fDrf3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf4", &fDrf4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf5", &fDrf5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf6", &fDrf6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf7", &fDrf7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf8", &fDrf8);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes[8]", fRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf[8]", fDrf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit[8]", fHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDC[8]", fTDC);
      TArtDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtBDC(void *p) {
      return  p ? new(p) ::TArtBDC : new ::TArtBDC;
   }
   static void *newArray_TArtBDC(Long_t nElements, void *p) {
      return p ? new(p) ::TArtBDC[nElements] : new ::TArtBDC[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtBDC(void *p) {
      delete ((::TArtBDC*)p);
   }
   static void deleteArray_TArtBDC(void *p) {
      delete [] ((::TArtBDC*)p);
   }
   static void destruct_TArtBDC(void *p) {
      typedef ::TArtBDC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtBDC

//______________________________________________________________________________
void TArtBLD::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtBLD.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtBLD::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtBLD::Class(),this);
   }
}

//______________________________________________________________________________
void TArtBLD::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtBLD.
      TClass *R__cl = ::TArtBLD::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer", &layer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBX", &fBX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBY", &fBY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBA", &fBA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBB", &fBB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCHI", &fCHI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes1", &fRes1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes2", &fRes2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes3", &fRes3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes4", &fRes4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes5", &fRes5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes6", &fRes6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes7", &fRes7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes8", &fRes8);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit1", &fHit1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit2", &fHit2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit3", &fHit3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit4", &fHit4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit5", &fHit5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit6", &fHit6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit7", &fHit7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit8", &fHit8);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf1", &fDrf1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf2", &fDrf2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf3", &fDrf3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf4", &fDrf4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf5", &fDrf5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf6", &fDrf6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf7", &fDrf7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf8", &fDrf8);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRes[8]", fRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrf[8]", fDrf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit[8]", fHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDC[8]", fTDC);
      TArtDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtBLD(void *p) {
      return  p ? new(p) ::TArtBLD : new ::TArtBLD;
   }
   static void *newArray_TArtBLD(Long_t nElements, void *p) {
      return p ? new(p) ::TArtBLD[nElements] : new ::TArtBLD[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtBLD(void *p) {
      delete ((::TArtBLD*)p);
   }
   static void deleteArray_TArtBLD(void *p) {
      delete [] ((::TArtBLD*)p);
   }
   static void destruct_TArtBLD(void *p) {
      typedef ::TArtBLD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtBLD

//______________________________________________________________________________
void TArtESPRIParameters::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtESPRIParameters.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtESPRIParameters::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtESPRIParameters::Class(),this);
   }
}

//______________________________________________________________________________
void TArtESPRIParameters::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtESPRIParameters.
      TClass *R__cl = ::TArtESPRIParameters::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rnai_pmap", (void*)&rnai_pmap);
      R__insp.InspectMember("map<TArtRIDFMap,TArtRNaIPara*>", (void*)&rnai_pmap, "rnai_pmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc_pmap", (void*)&tdc_pmap);
      R__insp.InspectMember("map<TArtRIDFMap,TArtTDCHitPara*>", (void*)&tdc_pmap, "tdc_pmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fadc_pmap", (void*)&fadc_pmap);
      R__insp.InspectMember("map<TArtRIDFMap,TArtFADCPara*>", (void*)&fadc_pmap, "fadc_pmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "plas_pmap", (void*)&plas_pmap);
      R__insp.InspectMember("map<TArtRIDFMap,TArtPlasPara*>", (void*)&plas_pmap, "plas_pmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*listOfRNaIPara", &listOfRNaIPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*listOfTDCHitPara", &listOfTDCHitPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*listOfFADCPara", &listOfFADCPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*listOfPlasPara", &listOfPlasPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStoreManager", &fStoreManager);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtESPRIParameters(void *p) {
      return  p ? new(p) ::TArtESPRIParameters : new ::TArtESPRIParameters;
   }
   static void *newArray_TArtESPRIParameters(Long_t nElements, void *p) {
      return p ? new(p) ::TArtESPRIParameters[nElements] : new ::TArtESPRIParameters[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtESPRIParameters(void *p) {
      delete ((::TArtESPRIParameters*)p);
   }
   static void deleteArray_TArtESPRIParameters(void *p) {
      delete [] ((::TArtESPRIParameters*)p);
   }
   static void destruct_TArtESPRIParameters(void *p) {
      typedef ::TArtESPRIParameters current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtESPRIParameters

//______________________________________________________________________________
void TArtUserParameters::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtUserParameters.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtUserParameters::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtUserParameters::Class(),this);
   }
}

//______________________________________________________________________________
void TArtUserParameters::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtUserParameters.
      TClass *R__cl = ::TArtUserParameters::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "imap", (void*)&imap);
      R__insp.InspectMember("map<TString,Int_t>", (void*)&imap, "imap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dmap", (void*)&dmap);
      R__insp.InspectMember("map<TString,Double_t>", (void*)&dmap, "dmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "smap", (void*)&smap);
      R__insp.InspectMember("map<TString,TString>", (void*)&smap, "smap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cmap", (void*)&cmap);
      R__insp.InspectMember("map<TString,TString>", (void*)&cmap, "cmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStoreManager", &fStoreManager);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtUserParameters(void *p) {
      return  p ? new(p) ::TArtUserParameters : new ::TArtUserParameters;
   }
   static void *newArray_TArtUserParameters(Long_t nElements, void *p) {
      return p ? new(p) ::TArtUserParameters[nElements] : new ::TArtUserParameters[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtUserParameters(void *p) {
      delete ((::TArtUserParameters*)p);
   }
   static void deleteArray_TArtUserParameters(void *p) {
      delete [] ((::TArtUserParameters*)p);
   }
   static void destruct_TArtUserParameters(void *p) {
      typedef ::TArtUserParameters current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtUserParameters

namespace ROOTDict {
   void maplETArtRIDFMapcOTArtFADCParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETArtRIDFMapcOTArtFADCParamUgR_Dictionary();
   static void *new_maplETArtRIDFMapcOTArtFADCParamUgR(void *p = 0);
   static void *newArray_maplETArtRIDFMapcOTArtFADCParamUgR(Long_t size, void *p);
   static void delete_maplETArtRIDFMapcOTArtFADCParamUgR(void *p);
   static void deleteArray_maplETArtRIDFMapcOTArtFADCParamUgR(void *p);
   static void destruct_maplETArtRIDFMapcOTArtFADCParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<TArtRIDFMap,TArtFADCPara*>*)
   {
      map<TArtRIDFMap,TArtFADCPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TArtRIDFMap,TArtFADCPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TArtRIDFMap,TArtFADCPara*>", -2, "prec_stl/map", 63,
                  typeid(map<TArtRIDFMap,TArtFADCPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplETArtRIDFMapcOTArtFADCParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<TArtRIDFMap,TArtFADCPara*>) );
      instance.SetNew(&new_maplETArtRIDFMapcOTArtFADCParamUgR);
      instance.SetNewArray(&newArray_maplETArtRIDFMapcOTArtFADCParamUgR);
      instance.SetDelete(&delete_maplETArtRIDFMapcOTArtFADCParamUgR);
      instance.SetDeleteArray(&deleteArray_maplETArtRIDFMapcOTArtFADCParamUgR);
      instance.SetDestructor(&destruct_maplETArtRIDFMapcOTArtFADCParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<TArtRIDFMap,TArtFADCPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TArtRIDFMap,TArtFADCPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETArtRIDFMapcOTArtFADCParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<TArtRIDFMap,TArtFADCPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplETArtRIDFMapcOTArtFADCParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,TArtFADCPara*> : new map<TArtRIDFMap,TArtFADCPara*>;
   }
   static void *newArray_maplETArtRIDFMapcOTArtFADCParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,TArtFADCPara*>[nElements] : new map<TArtRIDFMap,TArtFADCPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETArtRIDFMapcOTArtFADCParamUgR(void *p) {
      delete ((map<TArtRIDFMap,TArtFADCPara*>*)p);
   }
   static void deleteArray_maplETArtRIDFMapcOTArtFADCParamUgR(void *p) {
      delete [] ((map<TArtRIDFMap,TArtFADCPara*>*)p);
   }
   static void destruct_maplETArtRIDFMapcOTArtFADCParamUgR(void *p) {
      typedef map<TArtRIDFMap,TArtFADCPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<TArtRIDFMap,TArtFADCPara*>

namespace ROOTDict {
   void maplETArtRIDFMapcOTArtPlasParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETArtRIDFMapcOTArtPlasParamUgR_Dictionary();
   static void *new_maplETArtRIDFMapcOTArtPlasParamUgR(void *p = 0);
   static void *newArray_maplETArtRIDFMapcOTArtPlasParamUgR(Long_t size, void *p);
   static void delete_maplETArtRIDFMapcOTArtPlasParamUgR(void *p);
   static void deleteArray_maplETArtRIDFMapcOTArtPlasParamUgR(void *p);
   static void destruct_maplETArtRIDFMapcOTArtPlasParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<TArtRIDFMap,TArtPlasPara*>*)
   {
      map<TArtRIDFMap,TArtPlasPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TArtRIDFMap,TArtPlasPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TArtRIDFMap,TArtPlasPara*>", -2, "prec_stl/map", 63,
                  typeid(map<TArtRIDFMap,TArtPlasPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplETArtRIDFMapcOTArtPlasParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<TArtRIDFMap,TArtPlasPara*>) );
      instance.SetNew(&new_maplETArtRIDFMapcOTArtPlasParamUgR);
      instance.SetNewArray(&newArray_maplETArtRIDFMapcOTArtPlasParamUgR);
      instance.SetDelete(&delete_maplETArtRIDFMapcOTArtPlasParamUgR);
      instance.SetDeleteArray(&deleteArray_maplETArtRIDFMapcOTArtPlasParamUgR);
      instance.SetDestructor(&destruct_maplETArtRIDFMapcOTArtPlasParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<TArtRIDFMap,TArtPlasPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TArtRIDFMap,TArtPlasPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETArtRIDFMapcOTArtPlasParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<TArtRIDFMap,TArtPlasPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplETArtRIDFMapcOTArtPlasParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,TArtPlasPara*> : new map<TArtRIDFMap,TArtPlasPara*>;
   }
   static void *newArray_maplETArtRIDFMapcOTArtPlasParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,TArtPlasPara*>[nElements] : new map<TArtRIDFMap,TArtPlasPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETArtRIDFMapcOTArtPlasParamUgR(void *p) {
      delete ((map<TArtRIDFMap,TArtPlasPara*>*)p);
   }
   static void deleteArray_maplETArtRIDFMapcOTArtPlasParamUgR(void *p) {
      delete [] ((map<TArtRIDFMap,TArtPlasPara*>*)p);
   }
   static void destruct_maplETArtRIDFMapcOTArtPlasParamUgR(void *p) {
      typedef map<TArtRIDFMap,TArtPlasPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<TArtRIDFMap,TArtPlasPara*>

namespace ROOTDict {
   void maplETArtRIDFMapcOTArtRNaIParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETArtRIDFMapcOTArtRNaIParamUgR_Dictionary();
   static void *new_maplETArtRIDFMapcOTArtRNaIParamUgR(void *p = 0);
   static void *newArray_maplETArtRIDFMapcOTArtRNaIParamUgR(Long_t size, void *p);
   static void delete_maplETArtRIDFMapcOTArtRNaIParamUgR(void *p);
   static void deleteArray_maplETArtRIDFMapcOTArtRNaIParamUgR(void *p);
   static void destruct_maplETArtRIDFMapcOTArtRNaIParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<TArtRIDFMap,TArtRNaIPara*>*)
   {
      map<TArtRIDFMap,TArtRNaIPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TArtRIDFMap,TArtRNaIPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TArtRIDFMap,TArtRNaIPara*>", -2, "prec_stl/map", 63,
                  typeid(map<TArtRIDFMap,TArtRNaIPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplETArtRIDFMapcOTArtRNaIParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<TArtRIDFMap,TArtRNaIPara*>) );
      instance.SetNew(&new_maplETArtRIDFMapcOTArtRNaIParamUgR);
      instance.SetNewArray(&newArray_maplETArtRIDFMapcOTArtRNaIParamUgR);
      instance.SetDelete(&delete_maplETArtRIDFMapcOTArtRNaIParamUgR);
      instance.SetDeleteArray(&deleteArray_maplETArtRIDFMapcOTArtRNaIParamUgR);
      instance.SetDestructor(&destruct_maplETArtRIDFMapcOTArtRNaIParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<TArtRIDFMap,TArtRNaIPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TArtRIDFMap,TArtRNaIPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETArtRIDFMapcOTArtRNaIParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<TArtRIDFMap,TArtRNaIPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplETArtRIDFMapcOTArtRNaIParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,TArtRNaIPara*> : new map<TArtRIDFMap,TArtRNaIPara*>;
   }
   static void *newArray_maplETArtRIDFMapcOTArtRNaIParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,TArtRNaIPara*>[nElements] : new map<TArtRIDFMap,TArtRNaIPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETArtRIDFMapcOTArtRNaIParamUgR(void *p) {
      delete ((map<TArtRIDFMap,TArtRNaIPara*>*)p);
   }
   static void deleteArray_maplETArtRIDFMapcOTArtRNaIParamUgR(void *p) {
      delete [] ((map<TArtRIDFMap,TArtRNaIPara*>*)p);
   }
   static void destruct_maplETArtRIDFMapcOTArtRNaIParamUgR(void *p) {
      typedef map<TArtRIDFMap,TArtRNaIPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<TArtRIDFMap,TArtRNaIPara*>

namespace ROOTDict {
   void maplETArtRIDFMapcOTArtTDCHitParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETArtRIDFMapcOTArtTDCHitParamUgR_Dictionary();
   static void *new_maplETArtRIDFMapcOTArtTDCHitParamUgR(void *p = 0);
   static void *newArray_maplETArtRIDFMapcOTArtTDCHitParamUgR(Long_t size, void *p);
   static void delete_maplETArtRIDFMapcOTArtTDCHitParamUgR(void *p);
   static void deleteArray_maplETArtRIDFMapcOTArtTDCHitParamUgR(void *p);
   static void destruct_maplETArtRIDFMapcOTArtTDCHitParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<TArtRIDFMap,TArtTDCHitPara*>*)
   {
      map<TArtRIDFMap,TArtTDCHitPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TArtRIDFMap,TArtTDCHitPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TArtRIDFMap,TArtTDCHitPara*>", -2, "prec_stl/map", 63,
                  typeid(map<TArtRIDFMap,TArtTDCHitPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplETArtRIDFMapcOTArtTDCHitParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<TArtRIDFMap,TArtTDCHitPara*>) );
      instance.SetNew(&new_maplETArtRIDFMapcOTArtTDCHitParamUgR);
      instance.SetNewArray(&newArray_maplETArtRIDFMapcOTArtTDCHitParamUgR);
      instance.SetDelete(&delete_maplETArtRIDFMapcOTArtTDCHitParamUgR);
      instance.SetDeleteArray(&deleteArray_maplETArtRIDFMapcOTArtTDCHitParamUgR);
      instance.SetDestructor(&destruct_maplETArtRIDFMapcOTArtTDCHitParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<TArtRIDFMap,TArtTDCHitPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TArtRIDFMap,TArtTDCHitPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETArtRIDFMapcOTArtTDCHitParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<TArtRIDFMap,TArtTDCHitPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplETArtRIDFMapcOTArtTDCHitParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,TArtTDCHitPara*> : new map<TArtRIDFMap,TArtTDCHitPara*>;
   }
   static void *newArray_maplETArtRIDFMapcOTArtTDCHitParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,TArtTDCHitPara*>[nElements] : new map<TArtRIDFMap,TArtTDCHitPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETArtRIDFMapcOTArtTDCHitParamUgR(void *p) {
      delete ((map<TArtRIDFMap,TArtTDCHitPara*>*)p);
   }
   static void deleteArray_maplETArtRIDFMapcOTArtTDCHitParamUgR(void *p) {
      delete [] ((map<TArtRIDFMap,TArtTDCHitPara*>*)p);
   }
   static void destruct_maplETArtRIDFMapcOTArtTDCHitParamUgR(void *p) {
      typedef map<TArtRIDFMap,TArtTDCHitPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<TArtRIDFMap,TArtTDCHitPara*>

namespace ROOTDict {
   void maplETStringcOTStringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETStringcOTStringgR_Dictionary();
   static void *new_maplETStringcOTStringgR(void *p = 0);
   static void *newArray_maplETStringcOTStringgR(Long_t size, void *p);
   static void delete_maplETStringcOTStringgR(void *p);
   static void deleteArray_maplETStringcOTStringgR(void *p);
   static void destruct_maplETStringcOTStringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<TString,TString>*)
   {
      map<TString,TString> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TString,TString>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TString,TString>", -2, "prec_stl/map", 63,
                  typeid(map<TString,TString>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplETStringcOTStringgR_Dictionary, isa_proxy, 0,
                  sizeof(map<TString,TString>) );
      instance.SetNew(&new_maplETStringcOTStringgR);
      instance.SetNewArray(&newArray_maplETStringcOTStringgR);
      instance.SetDelete(&delete_maplETStringcOTStringgR);
      instance.SetDeleteArray(&deleteArray_maplETStringcOTStringgR);
      instance.SetDestructor(&destruct_maplETStringcOTStringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<TString,TString> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TString,TString>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETStringcOTStringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<TString,TString>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplETStringcOTStringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,TString> : new map<TString,TString>;
   }
   static void *newArray_maplETStringcOTStringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,TString>[nElements] : new map<TString,TString>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETStringcOTStringgR(void *p) {
      delete ((map<TString,TString>*)p);
   }
   static void deleteArray_maplETStringcOTStringgR(void *p) {
      delete [] ((map<TString,TString>*)p);
   }
   static void destruct_maplETStringcOTStringgR(void *p) {
      typedef map<TString,TString> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<TString,TString>

namespace ROOTDict {
   void maplETStringcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETStringcOdoublegR_Dictionary();
   static void *new_maplETStringcOdoublegR(void *p = 0);
   static void *newArray_maplETStringcOdoublegR(Long_t size, void *p);
   static void delete_maplETStringcOdoublegR(void *p);
   static void deleteArray_maplETStringcOdoublegR(void *p);
   static void destruct_maplETStringcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<TString,double>*)
   {
      map<TString,double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TString,double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TString,double>", -2, "prec_stl/map", 63,
                  typeid(map<TString,double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplETStringcOdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(map<TString,double>) );
      instance.SetNew(&new_maplETStringcOdoublegR);
      instance.SetNewArray(&newArray_maplETStringcOdoublegR);
      instance.SetDelete(&delete_maplETStringcOdoublegR);
      instance.SetDeleteArray(&deleteArray_maplETStringcOdoublegR);
      instance.SetDestructor(&destruct_maplETStringcOdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<TString,double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TString,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETStringcOdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<TString,double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplETStringcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,double> : new map<TString,double>;
   }
   static void *newArray_maplETStringcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,double>[nElements] : new map<TString,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETStringcOdoublegR(void *p) {
      delete ((map<TString,double>*)p);
   }
   static void deleteArray_maplETStringcOdoublegR(void *p) {
      delete [] ((map<TString,double>*)p);
   }
   static void destruct_maplETStringcOdoublegR(void *p) {
      typedef map<TString,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<TString,double>

namespace ROOTDict {
   void maplETStringcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETStringcOintgR_Dictionary();
   static void *new_maplETStringcOintgR(void *p = 0);
   static void *newArray_maplETStringcOintgR(Long_t size, void *p);
   static void delete_maplETStringcOintgR(void *p);
   static void deleteArray_maplETStringcOintgR(void *p);
   static void destruct_maplETStringcOintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<TString,int>*)
   {
      map<TString,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TString,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TString,int>", -2, "prec_stl/map", 63,
                  typeid(map<TString,int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplETStringcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<TString,int>) );
      instance.SetNew(&new_maplETStringcOintgR);
      instance.SetNewArray(&newArray_maplETStringcOintgR);
      instance.SetDelete(&delete_maplETStringcOintgR);
      instance.SetDeleteArray(&deleteArray_maplETStringcOintgR);
      instance.SetDestructor(&destruct_maplETStringcOintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<TString,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TString,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETStringcOintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<TString,int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplETStringcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,int> : new map<TString,int>;
   }
   static void *newArray_maplETStringcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,int>[nElements] : new map<TString,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETStringcOintgR(void *p) {
      delete ((map<TString,int>*)p);
   }
   static void deleteArray_maplETStringcOintgR(void *p) {
      delete [] ((map<TString,int>*)p);
   }
   static void destruct_maplETStringcOintgR(void *p) {
      typedef map<TString,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<TString,int>

namespace ROOTDict {
   void vectorlETArtFADCParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETArtFADCParamUgR_Dictionary();
   static void *new_vectorlETArtFADCParamUgR(void *p = 0);
   static void *newArray_vectorlETArtFADCParamUgR(Long_t size, void *p);
   static void delete_vectorlETArtFADCParamUgR(void *p);
   static void deleteArray_vectorlETArtFADCParamUgR(void *p);
   static void destruct_vectorlETArtFADCParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TArtFADCPara*>*)
   {
      vector<TArtFADCPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TArtFADCPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TArtFADCPara*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TArtFADCPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETArtFADCParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TArtFADCPara*>) );
      instance.SetNew(&new_vectorlETArtFADCParamUgR);
      instance.SetNewArray(&newArray_vectorlETArtFADCParamUgR);
      instance.SetDelete(&delete_vectorlETArtFADCParamUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETArtFADCParamUgR);
      instance.SetDestructor(&destruct_vectorlETArtFADCParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TArtFADCPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TArtFADCPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETArtFADCParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TArtFADCPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETArtFADCParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtFADCPara*> : new vector<TArtFADCPara*>;
   }
   static void *newArray_vectorlETArtFADCParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtFADCPara*>[nElements] : new vector<TArtFADCPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETArtFADCParamUgR(void *p) {
      delete ((vector<TArtFADCPara*>*)p);
   }
   static void deleteArray_vectorlETArtFADCParamUgR(void *p) {
      delete [] ((vector<TArtFADCPara*>*)p);
   }
   static void destruct_vectorlETArtFADCParamUgR(void *p) {
      typedef vector<TArtFADCPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TArtFADCPara*>

namespace ROOTDict {
   void vectorlETArtPlasParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETArtPlasParamUgR_Dictionary();
   static void *new_vectorlETArtPlasParamUgR(void *p = 0);
   static void *newArray_vectorlETArtPlasParamUgR(Long_t size, void *p);
   static void delete_vectorlETArtPlasParamUgR(void *p);
   static void deleteArray_vectorlETArtPlasParamUgR(void *p);
   static void destruct_vectorlETArtPlasParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TArtPlasPara*>*)
   {
      vector<TArtPlasPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TArtPlasPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TArtPlasPara*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TArtPlasPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETArtPlasParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TArtPlasPara*>) );
      instance.SetNew(&new_vectorlETArtPlasParamUgR);
      instance.SetNewArray(&newArray_vectorlETArtPlasParamUgR);
      instance.SetDelete(&delete_vectorlETArtPlasParamUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETArtPlasParamUgR);
      instance.SetDestructor(&destruct_vectorlETArtPlasParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TArtPlasPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TArtPlasPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETArtPlasParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TArtPlasPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETArtPlasParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtPlasPara*> : new vector<TArtPlasPara*>;
   }
   static void *newArray_vectorlETArtPlasParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtPlasPara*>[nElements] : new vector<TArtPlasPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETArtPlasParamUgR(void *p) {
      delete ((vector<TArtPlasPara*>*)p);
   }
   static void deleteArray_vectorlETArtPlasParamUgR(void *p) {
      delete [] ((vector<TArtPlasPara*>*)p);
   }
   static void destruct_vectorlETArtPlasParamUgR(void *p) {
      typedef vector<TArtPlasPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TArtPlasPara*>

namespace ROOTDict {
   void vectorlETArtRNaIParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETArtRNaIParamUgR_Dictionary();
   static void *new_vectorlETArtRNaIParamUgR(void *p = 0);
   static void *newArray_vectorlETArtRNaIParamUgR(Long_t size, void *p);
   static void delete_vectorlETArtRNaIParamUgR(void *p);
   static void deleteArray_vectorlETArtRNaIParamUgR(void *p);
   static void destruct_vectorlETArtRNaIParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TArtRNaIPara*>*)
   {
      vector<TArtRNaIPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TArtRNaIPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TArtRNaIPara*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TArtRNaIPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETArtRNaIParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TArtRNaIPara*>) );
      instance.SetNew(&new_vectorlETArtRNaIParamUgR);
      instance.SetNewArray(&newArray_vectorlETArtRNaIParamUgR);
      instance.SetDelete(&delete_vectorlETArtRNaIParamUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETArtRNaIParamUgR);
      instance.SetDestructor(&destruct_vectorlETArtRNaIParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TArtRNaIPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TArtRNaIPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETArtRNaIParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TArtRNaIPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETArtRNaIParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtRNaIPara*> : new vector<TArtRNaIPara*>;
   }
   static void *newArray_vectorlETArtRNaIParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtRNaIPara*>[nElements] : new vector<TArtRNaIPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETArtRNaIParamUgR(void *p) {
      delete ((vector<TArtRNaIPara*>*)p);
   }
   static void deleteArray_vectorlETArtRNaIParamUgR(void *p) {
      delete [] ((vector<TArtRNaIPara*>*)p);
   }
   static void destruct_vectorlETArtRNaIParamUgR(void *p) {
      typedef vector<TArtRNaIPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TArtRNaIPara*>

namespace ROOTDict {
   void vectorlETArtTDCHitParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETArtTDCHitParamUgR_Dictionary();
   static void *new_vectorlETArtTDCHitParamUgR(void *p = 0);
   static void *newArray_vectorlETArtTDCHitParamUgR(Long_t size, void *p);
   static void delete_vectorlETArtTDCHitParamUgR(void *p);
   static void deleteArray_vectorlETArtTDCHitParamUgR(void *p);
   static void destruct_vectorlETArtTDCHitParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TArtTDCHitPara*>*)
   {
      vector<TArtTDCHitPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TArtTDCHitPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TArtTDCHitPara*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TArtTDCHitPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETArtTDCHitParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TArtTDCHitPara*>) );
      instance.SetNew(&new_vectorlETArtTDCHitParamUgR);
      instance.SetNewArray(&newArray_vectorlETArtTDCHitParamUgR);
      instance.SetDelete(&delete_vectorlETArtTDCHitParamUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETArtTDCHitParamUgR);
      instance.SetDestructor(&destruct_vectorlETArtTDCHitParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TArtTDCHitPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TArtTDCHitPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETArtTDCHitParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TArtTDCHitPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETArtTDCHitParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtTDCHitPara*> : new vector<TArtTDCHitPara*>;
   }
   static void *newArray_vectorlETArtTDCHitParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtTDCHitPara*>[nElements] : new vector<TArtTDCHitPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETArtTDCHitParamUgR(void *p) {
      delete ((vector<TArtTDCHitPara*>*)p);
   }
   static void deleteArray_vectorlETArtTDCHitParamUgR(void *p) {
      delete [] ((vector<TArtTDCHitPara*>*)p);
   }
   static void destruct_vectorlETArtTDCHitParamUgR(void *p) {
      typedef vector<TArtTDCHitPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TArtTDCHitPara*>

/********************************************************
* anaespri_dict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableanaespri_dict();

extern "C" void G__set_cpp_environmentanaespri_dict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("include/TArtRNaIPara.hh");
  G__add_compiledheader("include/TArtFADC.hh");
  G__add_compiledheader("include/TArtTDCHit.hh");
  G__add_compiledheader("include/TArtTDCHitPara.hh");
  G__add_compiledheader("include/TArtRDC.hh");
  G__add_compiledheader("include/TArtUserParameters.hh");
  G__add_compiledheader("include/TArtESPRIParameters.hh");
  G__add_compiledheader("include/TArtCalibBDC.hh");
  G__add_compiledheader("include/TArtCalibRDC.hh");
  G__add_compiledheader("include/TArtDia.hh");
  G__add_compiledheader("include/TArtBDC.hh");
  G__add_compiledheader("include/TArtCalibPlas.hh");
  G__add_compiledheader("include/TArtBLD.hh");
  G__add_compiledheader("include/TArtFADCPara.hh");
  G__add_compiledheader("include/TArtCalibFADC.hh");
  G__add_compiledheader("include/TArtCalibBLD.hh");
  G__add_compiledheader("include/TArtCalibDia.hh");
  G__add_compiledheader("include/TArtCalibRNaI.hh");
  G__add_compiledheader("include/TArtRNaI.hh");
  G__add_compiledheader("include/TArtCalibTDCHit.hh");
  G__add_compiledheader("include/TArtPlas.hh");
  G__add_compiledheader("include/TArtPlasPara.hh");
  G__cpp_reset_tagtableanaespri_dict();
}
#include <new>
extern "C" int G__cpp_dllrevanaespri_dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TArtRNaIPara */
static int G__anaespri_dict_185_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRNaIPara* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRNaIPara[n];
     } else {
       p = new((void*) gvp) TArtRNaIPara[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRNaIPara;
     } else {
       p = new((void*) gvp) TArtRNaIPara;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaIPara));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_185_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRNaIPara* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtRNaIPara(
(Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
   } else {
     p = new((void*) gvp) TArtRNaIPara(
(Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaIPara));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_185_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRNaIPara*) G__getstructoffset())->SetParameters(
(Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_185_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRNaIPara*) G__getstructoffset())->SetMap((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_185_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtRNaIPara*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_185_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRNaIPara*) G__getstructoffset())->GetDetectorName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_185_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtRNaIPara*) G__getstructoffset())->GetFpl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_185_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtRNaIPara*) G__getstructoffset())->GetLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_185_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtRNaIPara*) G__getstructoffset())->GetTCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_185_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtRNaIPara*) G__getstructoffset())->GetTOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_185_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtRNaIPara*) G__getstructoffset())->GetQCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_185_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtRNaIPara*) G__getstructoffset())->GetQPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_185_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRNaIPara*) G__getstructoffset())->GetTDCMap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_185_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRNaIPara*) G__getstructoffset())->GetADCMap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_185_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtRNaIPara::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_185_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRNaIPara::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_185_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtRNaIPara::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_185_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtRNaIPara::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_185_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRNaIPara*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_185_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRNaIPara::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_185_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRNaIPara::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_185_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRNaIPara::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_185_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRNaIPara::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anaespri_dict_185_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtRNaIPara* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtRNaIPara(*(TArtRNaIPara*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaIPara));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtRNaIPara G__TTArtRNaIPara;
static int G__anaespri_dict_185_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtRNaIPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtRNaIPara*) (soff+(sizeof(TArtRNaIPara)*i)))->~G__TTArtRNaIPara();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtRNaIPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtRNaIPara*) (soff))->~G__TTArtRNaIPara();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anaespri_dict_185_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRNaIPara* dest = (TArtRNaIPara*) G__getstructoffset();
   *dest = *(TArtRNaIPara*) libp->para[0].ref;
   const TArtRNaIPara& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtFADC */
static int G__anaespri_dict_187_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtFADC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtFADC[n];
     } else {
       p = new((void*) gvp) TArtFADC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtFADC;
     } else {
       p = new((void*) gvp) TArtFADC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_187_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFADC*) G__getstructoffset())->SetCh((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_187_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtFADC*) G__getstructoffset())->GetCh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_187_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFADC*) G__getstructoffset())->SetLength((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_187_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtFADC*) G__getstructoffset())->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_187_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFADC*) G__getstructoffset())->SetFADC((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_187_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtFADC*) G__getstructoffset())->GetFADC((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_187_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtFADC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_187_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtFADC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_187_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtFADC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_187_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtFADC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_187_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFADC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_187_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtFADC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_187_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtFADC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_187_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtFADC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_187_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtFADC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anaespri_dict_187_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtFADC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtFADC(*(TArtFADC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtFADC G__TTArtFADC;
static int G__anaespri_dict_187_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtFADC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtFADC*) (soff+(sizeof(TArtFADC)*i)))->~G__TTArtFADC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtFADC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtFADC*) (soff))->~G__TTArtFADC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anaespri_dict_187_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtFADC* dest = (TArtFADC*) G__getstructoffset();
   *dest = *(TArtFADC*) libp->para[0].ref;
   const TArtFADC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtTDCHit */
static int G__anaespri_dict_188_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtTDCHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtTDCHit[n];
     } else {
       p = new((void*) gvp) TArtTDCHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtTDCHit;
     } else {
       p = new((void*) gvp) TArtTDCHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTDCHit*) G__getstructoffset())->SetTDC((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTDCHit*) G__getstructoffset())->SetTrailTDC((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtTDCHit*) G__getstructoffset())->GetTDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtTDCHit*) G__getstructoffset())->GetTrailTDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTDCHit*) G__getstructoffset())->SetGeo((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtTDCHit*) G__getstructoffset())->GetGeo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTDCHit*) G__getstructoffset())->SetWireDirection((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTDCHit*) G__getstructoffset())->SetWireDirection(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTDCHit*) G__getstructoffset())->SetWireID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTDCHit*) G__getstructoffset())->SetWireAngle((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTDCHit*) G__getstructoffset())->SetWireZPosition((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTDCHit*) G__getstructoffset())->SetTzero((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTDCHit*) G__getstructoffset())->SetLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTDCHit*) G__getstructoffset())->SetPlaneID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtTDCHit*) G__getstructoffset())->GetWireDirection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtTDCHit*) G__getstructoffset())->GetWireID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtTDCHit*) G__getstructoffset())->GetWireAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtTDCHit*) G__getstructoffset())->GetWireZPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtTDCHit*) G__getstructoffset())->GetTzero());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtTDCHit*) G__getstructoffset())->GetLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtTDCHit*) G__getstructoffset())->GetPlaneID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTDCHit*) G__getstructoffset())->SetHitID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtTDCHit*) G__getstructoffset())->GetHitID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtTDCHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtTDCHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtTDCHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtTDCHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTDCHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtTDCHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtTDCHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtTDCHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_188_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtTDCHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anaespri_dict_188_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtTDCHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtTDCHit(*(TArtTDCHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtTDCHit G__TTArtTDCHit;
static int G__anaespri_dict_188_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtTDCHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtTDCHit*) (soff+(sizeof(TArtTDCHit)*i)))->~G__TTArtTDCHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtTDCHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtTDCHit*) (soff))->~G__TTArtTDCHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anaespri_dict_188_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtTDCHit* dest = (TArtTDCHit*) G__getstructoffset();
   *dest = *(TArtTDCHit*) libp->para[0].ref;
   const TArtTDCHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtTDCHitPara */
static int G__anaespri_dict_424_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtTDCHitPara* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtTDCHitPara[n];
     } else {
       p = new((void*) gvp) TArtTDCHitPara[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtTDCHitPara;
     } else {
       p = new((void*) gvp) TArtTDCHitPara;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHitPara));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_424_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtTDCHitPara* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtTDCHitPara(
(Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]));
   } else {
     p = new((void*) gvp) TArtTDCHitPara(
(Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHitPara));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_424_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTDCHitPara*) G__getstructoffset())->SetPalameters(
(Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_424_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTDCHitPara*) G__getstructoffset())->SetMap((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_424_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtTDCHitPara*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_424_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtTDCHitPara*) G__getstructoffset())->GetFpl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_424_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtTDCHitPara*) G__getstructoffset())->GetLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_424_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtTDCHitPara*) G__getstructoffset())->GetPlaneID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_424_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtTDCHitPara*) G__getstructoffset())->GetWireID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_424_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtTDCHitPara*) G__getstructoffset())->GetDetectorName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_424_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtTDCHitPara*) G__getstructoffset())->GetWireAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_424_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtTDCHitPara*) G__getstructoffset())->GetWireZPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_424_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtTDCHitPara*) G__getstructoffset())->GetTzero());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_424_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtTDCHitPara*) G__getstructoffset())->GetTDCMap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_424_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtTDCHitPara::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_424_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtTDCHitPara::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_424_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtTDCHitPara::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_424_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtTDCHitPara::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_424_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTDCHitPara*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_424_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtTDCHitPara::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_424_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtTDCHitPara::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_424_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtTDCHitPara::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_424_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtTDCHitPara::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anaespri_dict_424_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtTDCHitPara* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtTDCHitPara(*(TArtTDCHitPara*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHitPara));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtTDCHitPara G__TTArtTDCHitPara;
static int G__anaespri_dict_424_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtTDCHitPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtTDCHitPara*) (soff+(sizeof(TArtTDCHitPara)*i)))->~G__TTArtTDCHitPara();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtTDCHitPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtTDCHitPara*) (soff))->~G__TTArtTDCHitPara();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anaespri_dict_424_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtTDCHitPara* dest = (TArtTDCHitPara*) G__getstructoffset();
   *dest = *(TArtTDCHitPara*) libp->para[0].ref;
   const TArtTDCHitPara& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtRDC */
static int G__anaespri_dict_425_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRDC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRDC[n];
     } else {
       p = new((void*) gvp) TArtRDC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRDC;
     } else {
       p = new((void*) gvp) TArtRDC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtRDC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetRDCX((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetRDCY((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetRDCA((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetRDCB((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetCHI2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRDC*) G__getstructoffset())->GetRDCX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRDC*) G__getstructoffset())->GetRDCY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRDC*) G__getstructoffset())->GetRDCA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRDC*) G__getstructoffset())->GetRDCB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRDC*) G__getstructoffset())->GetLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetRes1((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetRes2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetRes3((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetRes4((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetRes5((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetRes6((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetHit1((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetHit2((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetHit3((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetHit4((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetHit5((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetHit6((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetDrf1((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetDrf2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetDrf3((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetDrf4((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetDrf5((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->SetDrf6((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtRDC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRDC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtRDC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtRDC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRDC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRDC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRDC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRDC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_425_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRDC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anaespri_dict_425_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtRDC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtRDC(*(TArtRDC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtRDC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtRDC G__TTArtRDC;
static int G__anaespri_dict_425_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtRDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtRDC*) (soff+(sizeof(TArtRDC)*i)))->~G__TTArtRDC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtRDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtRDC*) (soff))->~G__TTArtRDC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anaespri_dict_425_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRDC* dest = (TArtRDC*) G__getstructoffset();
   *dest = *(TArtRDC*) libp->para[0].ref;
   const TArtRDC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtUserParameters */
static int G__anaespri_dict_428_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtUserParameters* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtUserParameters((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TArtUserParameters((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtUserParameters((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TArtUserParameters((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtUserParameters[n];
       } else {
         p = new((void*) gvp) TArtUserParameters[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtUserParameters;
       } else {
         p = new((void*) gvp) TArtUserParameters;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtUserParameters));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_428_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) TArtUserParameters::Instance((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) TArtUserParameters::Instance((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) TArtUserParameters::Instance());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_428_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtUserParameters::Delete();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_428_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtUserParameters*) G__getstructoffset())->LoadParameter((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_428_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtUserParameters*) G__getstructoffset())->PrintPara();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_428_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtUserParameters*) G__getstructoffset())->FindIntPara(*((const TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_428_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtUserParameters*) G__getstructoffset())->FindDoublePara(*((const TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_428_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TArtUserParameters*) G__getstructoffset())->FindStringPara(*((const TString*) G__int(libp->para[0])));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_428_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TArtUserParameters*) G__getstructoffset())->FindParaComment(*((const TString*) G__int(libp->para[0])));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_428_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((TArtUserParameters*) G__getstructoffset())->SetPara(*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1]))
, *((const TString*) G__int(libp->para[2])), *((const TString*) G__int(libp->para[3])));
      G__setnull(result7);
      break;
   case 3:
      ((TArtUserParameters*) G__getstructoffset())->SetPara(*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1]))
, *((const TString*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_428_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TArtUserParameters*) G__getstructoffset())->SetIntPara(*((const TString*) G__int(libp->para[0])), (const Int_t) G__int(libp->para[1])
, *((const TString*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   case 2:
      ((TArtUserParameters*) G__getstructoffset())->SetIntPara(*((const TString*) G__int(libp->para[0])), (const Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_428_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TArtUserParameters*) G__getstructoffset())->SetDoublePara(*((const TString*) G__int(libp->para[0])), (const Double_t) G__double(libp->para[1])
, *((const TString*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   case 2:
      ((TArtUserParameters*) G__getstructoffset())->SetDoublePara(*((const TString*) G__int(libp->para[0])), (const Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_428_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TArtUserParameters*) G__getstructoffset())->SetStringPara(*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1]))
, *((const TString*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   case 2:
      ((TArtUserParameters*) G__getstructoffset())->SetStringPara(*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_428_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtUserParameters::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_428_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtUserParameters::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_428_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtUserParameters::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_428_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtUserParameters::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_428_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtUserParameters*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_428_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtUserParameters::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_428_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtUserParameters::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_428_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtUserParameters::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_428_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtUserParameters::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anaespri_dict_428_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtUserParameters* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtUserParameters(*(TArtUserParameters*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtUserParameters));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtUserParameters G__TTArtUserParameters;
static int G__anaespri_dict_428_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtUserParameters*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtUserParameters*) (soff+(sizeof(TArtUserParameters)*i)))->~G__TTArtUserParameters();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtUserParameters*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtUserParameters*) (soff))->~G__TTArtUserParameters();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anaespri_dict_428_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtUserParameters* dest = (TArtUserParameters*) G__getstructoffset();
   *dest = *(TArtUserParameters*) libp->para[0].ref;
   const TArtUserParameters& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtFADCPara */
static int G__anaespri_dict_461_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtFADCPara* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtFADCPara[n];
     } else {
       p = new((void*) gvp) TArtFADCPara[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtFADCPara;
     } else {
       p = new((void*) gvp) TArtFADCPara;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADCPara));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_461_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtFADCPara* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtFADCPara(
(Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TArtFADCPara(
(Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADCPara));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_461_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFADCPara*) G__getstructoffset())->SetPalameters((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_461_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFADCPara*) G__getstructoffset())->SetMap((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_461_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtFADCPara*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_461_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtFADCPara*) G__getstructoffset())->GetFpl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_461_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtFADCPara*) G__getstructoffset())->GetDetectorName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_461_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtFADCPara*) G__getstructoffset())->GetFADCMap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_461_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtFADCPara::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_461_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtFADCPara::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_461_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtFADCPara::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_461_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtFADCPara::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_461_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFADCPara*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_461_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtFADCPara::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_461_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtFADCPara::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_461_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtFADCPara::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_461_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtFADCPara::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anaespri_dict_461_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtFADCPara* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtFADCPara(*(TArtFADCPara*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADCPara));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtFADCPara G__TTArtFADCPara;
static int G__anaespri_dict_461_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtFADCPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtFADCPara*) (soff+(sizeof(TArtFADCPara)*i)))->~G__TTArtFADCPara();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtFADCPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtFADCPara*) (soff))->~G__TTArtFADCPara();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anaespri_dict_461_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtFADCPara* dest = (TArtFADCPara*) G__getstructoffset();
   *dest = *(TArtFADCPara*) libp->para[0].ref;
   const TArtFADCPara& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtPlasPara */
static int G__anaespri_dict_462_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtPlasPara* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtPlasPara[n];
     } else {
       p = new((void*) gvp) TArtPlasPara[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtPlasPara;
     } else {
       p = new((void*) gvp) TArtPlasPara;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlasPara));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_462_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtPlasPara* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtPlasPara(
(Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
   } else {
     p = new((void*) gvp) TArtPlasPara(
(Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlasPara));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_462_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtPlasPara*) G__getstructoffset())->SetParameters(
(Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_462_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtPlasPara*) G__getstructoffset())->SetMap((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_462_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtPlasPara*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_462_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtPlasPara*) G__getstructoffset())->GetDetectorName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_462_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtPlasPara*) G__getstructoffset())->GetFpl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_462_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtPlasPara*) G__getstructoffset())->GetLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_462_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtPlasPara*) G__getstructoffset())->GetPlaneID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_462_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtPlasPara*) G__getstructoffset())->GetCh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_462_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtPlasPara*) G__getstructoffset())->GetQCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_462_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtPlasPara*) G__getstructoffset())->GetQPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_462_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtPlasPara*) G__getstructoffset())->GetPlasMap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_462_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtPlasPara::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_462_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtPlasPara::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_462_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtPlasPara::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_462_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtPlasPara::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_462_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtPlasPara*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_462_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtPlasPara::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_462_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtPlasPara::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_462_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtPlasPara::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_462_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtPlasPara::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anaespri_dict_462_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtPlasPara* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtPlasPara(*(TArtPlasPara*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlasPara));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtPlasPara G__TTArtPlasPara;
static int G__anaespri_dict_462_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtPlasPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtPlasPara*) (soff+(sizeof(TArtPlasPara)*i)))->~G__TTArtPlasPara();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtPlasPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtPlasPara*) (soff))->~G__TTArtPlasPara();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anaespri_dict_462_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtPlasPara* dest = (TArtPlasPara*) G__getstructoffset();
   *dest = *(TArtPlasPara*) libp->para[0].ref;
   const TArtPlasPara& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtESPRIParameters */
static int G__anaespri_dict_463_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtESPRIParameters* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtESPRIParameters((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TArtESPRIParameters((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtESPRIParameters((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TArtESPRIParameters((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtESPRIParameters[n];
       } else {
         p = new((void*) gvp) TArtESPRIParameters[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtESPRIParameters;
       } else {
         p = new((void*) gvp) TArtESPRIParameters;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtESPRIParameters));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) TArtESPRIParameters::Instance((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) TArtESPRIParameters::Instance((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) TArtESPRIParameters::Instance());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtESPRIParameters::Delete();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtESPRIParameters*) G__getstructoffset())->LoadParameter((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtESPRIParameters*) G__getstructoffset())->PrintListOfRNaIPara();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtESPRIParameters*) G__getstructoffset())->PrintListOfTDCHitPara();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtESPRIParameters*) G__getstructoffset())->PrintListOfFADCPara();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtESPRIParameters*) G__getstructoffset())->PrintListOfPlasPara();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtESPRIParameters*) G__getstructoffset())->GetListOfRNaIPara());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtESPRIParameters*) G__getstructoffset())->GetListOfTDCHitPara());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtESPRIParameters*) G__getstructoffset())->GetListOfFADCPara());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtESPRIParameters*) G__getstructoffset())->GetListOfPlasPara());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtESPRIParameters*) G__getstructoffset())->FindRNaIPara((TArtRIDFMap*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtESPRIParameters*) G__getstructoffset())->FindTDCHitPara((TArtRIDFMap*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtESPRIParameters*) G__getstructoffset())->FindFADCPara((TArtRIDFMap*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtESPRIParameters*) G__getstructoffset())->FindPlasPara((TArtRIDFMap*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtESPRIParameters::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtESPRIParameters::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtESPRIParameters::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtESPRIParameters::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtESPRIParameters*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtESPRIParameters::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtESPRIParameters::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtESPRIParameters::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_463_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtESPRIParameters::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anaespri_dict_463_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtESPRIParameters* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtESPRIParameters(*(TArtESPRIParameters*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtESPRIParameters));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtESPRIParameters G__TTArtESPRIParameters;
static int G__anaespri_dict_463_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtESPRIParameters*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtESPRIParameters*) (soff+(sizeof(TArtESPRIParameters)*i)))->~G__TTArtESPRIParameters();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtESPRIParameters*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtESPRIParameters*) (soff))->~G__TTArtESPRIParameters();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anaespri_dict_463_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtESPRIParameters* dest = (TArtESPRIParameters*) G__getstructoffset();
   *dest = *(TArtESPRIParameters*) libp->para[0].ref;
   const TArtESPRIParameters& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtBDC */
static int G__anaespri_dict_520_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtBDC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtBDC[n];
     } else {
       p = new((void*) gvp) TArtBDC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtBDC;
     } else {
       p = new((void*) gvp) TArtBDC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtBDC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetBDCX((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetBDCY((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetBDCA((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetBDCB((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetCHI2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtBDC*) G__getstructoffset())->GetBDCX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtBDC*) G__getstructoffset())->GetBDCY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtBDC*) G__getstructoffset())->GetBDCA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtBDC*) G__getstructoffset())->GetBDCB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtBDC*) G__getstructoffset())->GetLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetHit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetTDC((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetRes((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetDrf((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetRes1((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetRes2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetRes3((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetRes4((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetRes5((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetRes6((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetRes7((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetRes8((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetHit1((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetHit2((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetHit3((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetHit4((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetHit5((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetHit6((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetHit7((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetHit8((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetDrf1((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetDrf2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetDrf3((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetDrf4((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetDrf5((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetDrf6((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetDrf7((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->SetDrf8((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtBDC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtBDC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtBDC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtBDC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBDC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtBDC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtBDC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtBDC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_520_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtBDC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anaespri_dict_520_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtBDC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtBDC(*(TArtBDC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtBDC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtBDC G__TTArtBDC;
static int G__anaespri_dict_520_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtBDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtBDC*) (soff+(sizeof(TArtBDC)*i)))->~G__TTArtBDC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtBDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtBDC*) (soff))->~G__TTArtBDC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anaespri_dict_520_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtBDC* dest = (TArtBDC*) G__getstructoffset();
   *dest = *(TArtBDC*) libp->para[0].ref;
   const TArtBDC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibBDC */
static int G__anaespri_dict_521_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibBDC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibBDC[n];
     } else {
       p = new((void*) gvp) TArtCalibBDC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibBDC;
     } else {
       p = new((void*) gvp) TArtCalibBDC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibBDC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_521_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibBDC*) G__getstructoffset())->GetBDCArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_521_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibBDC*) G__getstructoffset())->GetNumBDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_521_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibBDC*) G__getstructoffset())->GetBDC((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_521_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibBDC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_521_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibBDC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_521_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibBDC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_521_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibBDC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_521_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibBDC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_521_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibBDC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_521_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibBDC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_521_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibBDC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_521_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibBDC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anaespri_dict_521_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibBDC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibBDC(*(TArtCalibBDC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibBDC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibBDC G__TTArtCalibBDC;
static int G__anaespri_dict_521_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibBDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibBDC*) (soff+(sizeof(TArtCalibBDC)*i)))->~G__TTArtCalibBDC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibBDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibBDC*) (soff))->~G__TTArtCalibBDC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anaespri_dict_521_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibBDC* dest = (TArtCalibBDC*) G__getstructoffset();
   *dest = *(TArtCalibBDC*) libp->para[0].ref;
   const TArtCalibBDC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibRDC */
static int G__anaespri_dict_522_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibRDC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibRDC[n];
     } else {
       p = new((void*) gvp) TArtCalibRDC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibRDC;
     } else {
       p = new((void*) gvp) TArtCalibRDC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibRDC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_522_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibRDC*) G__getstructoffset())->GetRDCArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_522_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibRDC*) G__getstructoffset())->GetNumRDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_522_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibRDC*) G__getstructoffset())->GetRDC((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_522_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibRDC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_522_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibRDC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_522_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibRDC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_522_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibRDC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_522_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibRDC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_522_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibRDC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_522_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibRDC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_522_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibRDC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_522_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibRDC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anaespri_dict_522_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibRDC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibRDC(*(TArtCalibRDC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibRDC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibRDC G__TTArtCalibRDC;
static int G__anaespri_dict_522_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibRDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibRDC*) (soff+(sizeof(TArtCalibRDC)*i)))->~G__TTArtCalibRDC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibRDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibRDC*) (soff))->~G__TTArtCalibRDC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anaespri_dict_522_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibRDC* dest = (TArtCalibRDC*) G__getstructoffset();
   *dest = *(TArtCalibRDC*) libp->para[0].ref;
   const TArtCalibRDC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDia */
static int G__anaespri_dict_523_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDia* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtDia[n];
     } else {
       p = new((void*) gvp) TArtDia[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtDia;
     } else {
       p = new((void*) gvp) TArtDia;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtDia));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_523_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDia*) G__getstructoffset())->SetLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_523_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDia*) G__getstructoffset())->SetPlaneID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_523_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDia*) G__getstructoffset())->SetCh((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_523_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDia*) G__getstructoffset())->GetLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_523_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDia*) G__getstructoffset())->GetPlaneID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_523_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDia*) G__getstructoffset())->GetCh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_523_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDia*) G__getstructoffset())->SetWidth((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_523_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDia*) G__getstructoffset())->SetTime((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_523_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDia*) G__getstructoffset())->SetTimeW((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_523_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDia*) G__getstructoffset())->GetWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_523_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDia*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_523_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDia*) G__getstructoffset())->GetTimeW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_523_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDia::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_523_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtDia::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_523_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtDia::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_523_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtDia::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_523_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDia*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_523_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtDia::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_523_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtDia::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_523_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtDia::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_523_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtDia::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anaespri_dict_523_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtDia* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtDia(*(TArtDia*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtDia));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDia G__TTArtDia;
static int G__anaespri_dict_523_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDia*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDia*) (soff+(sizeof(TArtDia)*i)))->~G__TTArtDia();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDia*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDia*) (soff))->~G__TTArtDia();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anaespri_dict_523_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDia* dest = (TArtDia*) G__getstructoffset();
   *dest = *(TArtDia*) libp->para[0].ref;
   const TArtDia& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtPlas */
static int G__anaespri_dict_525_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtPlas* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtPlas[n];
     } else {
       p = new((void*) gvp) TArtPlas[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtPlas;
     } else {
       p = new((void*) gvp) TArtPlas;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlas));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtPlas*) G__getstructoffset())->SetLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtPlas*) G__getstructoffset())->GetLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtPlas*) G__getstructoffset())->SetPlaneID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtPlas*) G__getstructoffset())->GetPlaneID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtPlas*) G__getstructoffset())->SetCh((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtPlas*) G__getstructoffset())->GetCh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtPlas*) G__getstructoffset())->SetRawADC((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtPlas*) G__getstructoffset())->SetRawTDC((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtPlas*) G__getstructoffset())->GetRawADC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtPlas*) G__getstructoffset())->GetRawTDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtPlas*) G__getstructoffset())->SetEnergy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtPlas*) G__getstructoffset())->SetWidth((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtPlas*) G__getstructoffset())->SetTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtPlas*) G__getstructoffset())->SetTimeW((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtPlas*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtPlas*) G__getstructoffset())->GetWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtPlas*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtPlas*) G__getstructoffset())->GetTimeW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtPlas::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtPlas::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtPlas::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtPlas::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtPlas*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtPlas::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtPlas::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtPlas::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_525_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtPlas::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anaespri_dict_525_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtPlas* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtPlas(*(TArtPlas*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlas));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtPlas G__TTArtPlas;
static int G__anaespri_dict_525_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtPlas*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtPlas*) (soff+(sizeof(TArtPlas)*i)))->~G__TTArtPlas();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtPlas*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtPlas*) (soff))->~G__TTArtPlas();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anaespri_dict_525_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtPlas* dest = (TArtPlas*) G__getstructoffset();
   *dest = *(TArtPlas*) libp->para[0].ref;
   const TArtPlas& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibPlas */
static int G__anaespri_dict_526_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibPlas* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibPlas[n];
     } else {
       p = new((void*) gvp) TArtCalibPlas[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibPlas;
     } else {
       p = new((void*) gvp) TArtCalibPlas;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibPlas));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_526_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibPlas*) G__getstructoffset())->LoadData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_526_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibPlas*) G__getstructoffset())->LoadData((TArtRawSegmentObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_526_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibPlas*) G__getstructoffset())->GetPlasArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_526_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibPlas*) G__getstructoffset())->GetNumPlas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_526_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibPlas*) G__getstructoffset())->GetPlas((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_526_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibPlas*) G__getstructoffset())->GetPlasPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_526_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibPlas*) G__getstructoffset())->FindPlas((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_526_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibPlas::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_526_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibPlas::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_526_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibPlas::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_526_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibPlas::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_526_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibPlas*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_526_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibPlas::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_526_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibPlas::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_526_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibPlas::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_526_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibPlas::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anaespri_dict_526_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibPlas* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibPlas(*(TArtCalibPlas*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibPlas));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibPlas G__TTArtCalibPlas;
static int G__anaespri_dict_526_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibPlas*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibPlas*) (soff+(sizeof(TArtCalibPlas)*i)))->~G__TTArtCalibPlas();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibPlas*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibPlas*) (soff))->~G__TTArtCalibPlas();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anaespri_dict_526_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibPlas* dest = (TArtCalibPlas*) G__getstructoffset();
   *dest = *(TArtCalibPlas*) libp->para[0].ref;
   const TArtCalibPlas& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtBLD */
static int G__anaespri_dict_531_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtBLD* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtBLD[n];
     } else {
       p = new((void*) gvp) TArtBLD[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtBLD;
     } else {
       p = new((void*) gvp) TArtBLD;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtBLD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetBLDX((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetBLDY((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetBLDA((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetBLDB((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetCHI2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtBLD*) G__getstructoffset())->GetBLDX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtBLD*) G__getstructoffset())->GetBLDY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtBLD*) G__getstructoffset())->GetBLDA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtBLD*) G__getstructoffset())->GetBLDB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtBLD*) G__getstructoffset())->GetLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetHit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetTDC((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetRes((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetDrf((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetRes1((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetRes2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetRes3((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetRes4((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetRes5((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetRes6((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetRes7((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetRes8((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetHit1((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetHit2((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetHit3((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetHit4((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetHit5((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetHit6((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetHit7((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetHit8((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetDrf1((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetDrf2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetDrf3((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetDrf4((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetDrf5((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetDrf6((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetDrf7((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->SetDrf8((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtBLD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtBLD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtBLD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtBLD::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtBLD*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtBLD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtBLD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtBLD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_531_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtBLD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anaespri_dict_531_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtBLD* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtBLD(*(TArtBLD*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtBLD));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtBLD G__TTArtBLD;
static int G__anaespri_dict_531_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtBLD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtBLD*) (soff+(sizeof(TArtBLD)*i)))->~G__TTArtBLD();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtBLD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtBLD*) (soff))->~G__TTArtBLD();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anaespri_dict_531_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtBLD* dest = (TArtBLD*) G__getstructoffset();
   *dest = *(TArtBLD*) libp->para[0].ref;
   const TArtBLD& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibFADC */
static int G__anaespri_dict_533_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibFADC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibFADC[n];
     } else {
       p = new((void*) gvp) TArtCalibFADC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibFADC;
     } else {
       p = new((void*) gvp) TArtCalibFADC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibFADC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_533_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibFADC*) G__getstructoffset())->LoadData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_533_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibFADC*) G__getstructoffset())->LoadData((TArtRawSegmentObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_533_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibFADC*) G__getstructoffset())->GetFADCArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_533_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibFADC*) G__getstructoffset())->GetNumFADC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_533_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibFADC*) G__getstructoffset())->GetFADC((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_533_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibFADC*) G__getstructoffset())->GetFADCPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_533_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibFADC*) G__getstructoffset())->FindFADC((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_533_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibFADC*) G__getstructoffset())->FindFADC((TString*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_533_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibFADC*) G__getstructoffset())->FindFADC((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_533_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibFADC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_533_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibFADC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_533_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibFADC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_533_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibFADC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_533_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibFADC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_533_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibFADC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_533_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibFADC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_533_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibFADC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_533_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibFADC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anaespri_dict_533_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibFADC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibFADC(*(TArtCalibFADC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibFADC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibFADC G__TTArtCalibFADC;
static int G__anaespri_dict_533_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibFADC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibFADC*) (soff+(sizeof(TArtCalibFADC)*i)))->~G__TTArtCalibFADC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibFADC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibFADC*) (soff))->~G__TTArtCalibFADC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anaespri_dict_533_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibFADC* dest = (TArtCalibFADC*) G__getstructoffset();
   *dest = *(TArtCalibFADC*) libp->para[0].ref;
   const TArtCalibFADC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibBLD */
static int G__anaespri_dict_538_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibBLD* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibBLD[n];
     } else {
       p = new((void*) gvp) TArtCalibBLD[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibBLD;
     } else {
       p = new((void*) gvp) TArtCalibBLD;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibBLD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_538_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibBLD*) G__getstructoffset())->GetBLDArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_538_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibBLD*) G__getstructoffset())->GetNumBLD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_538_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibBLD*) G__getstructoffset())->GetBLD((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_538_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibBLD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_538_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibBLD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_538_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibBLD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_538_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibBLD::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_538_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibBLD*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_538_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibBLD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_538_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibBLD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_538_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibBLD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_538_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibBLD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anaespri_dict_538_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibBLD* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibBLD(*(TArtCalibBLD*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibBLD));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibBLD G__TTArtCalibBLD;
static int G__anaespri_dict_538_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibBLD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibBLD*) (soff+(sizeof(TArtCalibBLD)*i)))->~G__TTArtCalibBLD();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibBLD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibBLD*) (soff))->~G__TTArtCalibBLD();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anaespri_dict_538_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibBLD* dest = (TArtCalibBLD*) G__getstructoffset();
   *dest = *(TArtCalibBLD*) libp->para[0].ref;
   const TArtCalibBLD& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibDia */
static int G__anaespri_dict_539_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibDia* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibDia[n];
     } else {
       p = new((void*) gvp) TArtCalibDia[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibDia;
     } else {
       p = new((void*) gvp) TArtCalibDia;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibDia));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_539_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibDia*) G__getstructoffset())->GetDiaArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_539_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibDia*) G__getstructoffset())->GetNumDia());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_539_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibDia*) G__getstructoffset())->GetDia((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_539_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibDia*) G__getstructoffset())->FindDia((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_539_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibDia::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_539_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibDia::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_539_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibDia::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_539_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibDia::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_539_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibDia*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_539_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibDia::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_539_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibDia::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_539_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibDia::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_539_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibDia::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anaespri_dict_539_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibDia* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibDia(*(TArtCalibDia*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibDia));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibDia G__TTArtCalibDia;
static int G__anaespri_dict_539_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibDia*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibDia*) (soff+(sizeof(TArtCalibDia)*i)))->~G__TTArtCalibDia();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibDia*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibDia*) (soff))->~G__TTArtCalibDia();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anaespri_dict_539_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibDia* dest = (TArtCalibDia*) G__getstructoffset();
   *dest = *(TArtCalibDia*) libp->para[0].ref;
   const TArtCalibDia& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtRNaI */
static int G__anaespri_dict_540_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRNaI* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRNaI[n];
     } else {
       p = new((void*) gvp) TArtRNaI[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRNaI;
     } else {
       p = new((void*) gvp) TArtRNaI;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_540_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRNaI*) G__getstructoffset())->SetLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_540_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRNaI*) G__getstructoffset())->GetLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_540_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRNaI*) G__getstructoffset())->SetRawADC((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_540_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRNaI*) G__getstructoffset())->SetRawTDC((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_540_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRNaI*) G__getstructoffset())->GetRawADC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_540_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRNaI*) G__getstructoffset())->GetRawTDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_540_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRNaI*) G__getstructoffset())->SetEnergy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_540_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRNaI*) G__getstructoffset())->SetTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_540_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRNaI*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_540_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRNaI*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_540_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtRNaI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_540_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRNaI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_540_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtRNaI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_540_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtRNaI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_540_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRNaI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_540_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRNaI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_540_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRNaI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_540_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRNaI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_540_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRNaI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anaespri_dict_540_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtRNaI* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtRNaI(*(TArtRNaI*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaI));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtRNaI G__TTArtRNaI;
static int G__anaespri_dict_540_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtRNaI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtRNaI*) (soff+(sizeof(TArtRNaI)*i)))->~G__TTArtRNaI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtRNaI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtRNaI*) (soff))->~G__TTArtRNaI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anaespri_dict_540_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRNaI* dest = (TArtRNaI*) G__getstructoffset();
   *dest = *(TArtRNaI*) libp->para[0].ref;
   const TArtRNaI& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibRNaI */
static int G__anaespri_dict_541_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibRNaI* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibRNaI[n];
     } else {
       p = new((void*) gvp) TArtCalibRNaI[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibRNaI;
     } else {
       p = new((void*) gvp) TArtCalibRNaI;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibRNaI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_541_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibRNaI*) G__getstructoffset())->LoadData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_541_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibRNaI*) G__getstructoffset())->LoadData((TArtRawSegmentObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_541_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibRNaI*) G__getstructoffset())->GetRNaIArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_541_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibRNaI*) G__getstructoffset())->GetNumRNaI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_541_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibRNaI*) G__getstructoffset())->GetRNaI((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_541_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibRNaI*) G__getstructoffset())->GetRNaIPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_541_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibRNaI*) G__getstructoffset())->FindRNaI((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_541_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibRNaI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_541_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibRNaI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_541_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibRNaI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_541_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibRNaI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_541_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibRNaI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_541_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibRNaI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_541_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibRNaI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_541_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibRNaI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_541_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibRNaI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anaespri_dict_541_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibRNaI* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibRNaI(*(TArtCalibRNaI*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibRNaI));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibRNaI G__TTArtCalibRNaI;
static int G__anaespri_dict_541_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibRNaI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibRNaI*) (soff+(sizeof(TArtCalibRNaI)*i)))->~G__TTArtCalibRNaI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibRNaI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibRNaI*) (soff))->~G__TTArtCalibRNaI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anaespri_dict_541_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibRNaI* dest = (TArtCalibRNaI*) G__getstructoffset();
   *dest = *(TArtCalibRNaI*) libp->para[0].ref;
   const TArtCalibRNaI& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibTDCHit */
static int G__anaespri_dict_546_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibTDCHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibTDCHit[n];
     } else {
       p = new((void*) gvp) TArtCalibTDCHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibTDCHit;
     } else {
       p = new((void*) gvp) TArtCalibTDCHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibTDCHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_546_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibTDCHit*) G__getstructoffset())->LoadData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_546_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibTDCHit*) G__getstructoffset())->LoadData((TArtRawSegmentObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_546_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibTDCHit*) G__getstructoffset())->GetTDCHitArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_546_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibTDCHit*) G__getstructoffset())->GetNumTDCHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_546_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibTDCHit*) G__getstructoffset())->GetTDCHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_546_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibTDCHit*) G__getstructoffset())->GetTDCHitPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_546_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibTDCHit*) G__getstructoffset())->FindTDCHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_546_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibTDCHit*) G__getstructoffset())->FindTDCHit((TString*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_546_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibTDCHit*) G__getstructoffset())->FindTDCHit((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_546_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibTDCHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_546_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibTDCHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_546_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibTDCHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_546_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibTDCHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_546_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibTDCHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_546_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibTDCHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_546_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibTDCHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_546_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibTDCHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anaespri_dict_546_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibTDCHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anaespri_dict_546_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibTDCHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibTDCHit(*(TArtCalibTDCHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibTDCHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibTDCHit G__TTArtCalibTDCHit;
static int G__anaespri_dict_546_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibTDCHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibTDCHit*) (soff+(sizeof(TArtCalibTDCHit)*i)))->~G__TTArtCalibTDCHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibTDCHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibTDCHit*) (soff))->~G__TTArtCalibTDCHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anaespri_dict_546_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibTDCHit* dest = (TArtCalibTDCHit*) G__getstructoffset();
   *dest = *(TArtCalibTDCHit*) libp->para[0].ref;
   const TArtCalibTDCHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TArtRNaIPara */

/* TArtFADC */

/* TArtTDCHit */

/* TArtTDCHitPara */

/* TArtRDC */

/* TArtUserParameters */

/* TArtFADCPara */

/* TArtPlasPara */

/* TArtESPRIParameters */

/* TArtBDC */

/* TArtCalibBDC */

/* TArtCalibRDC */

/* TArtDia */

/* TArtPlas */

/* TArtCalibPlas */

/* TArtBLD */

/* TArtCalibFADC */

/* TArtCalibBLD */

/* TArtCalibDia */

/* TArtRNaI */

/* TArtCalibRNaI */

/* TArtCalibTDCHit */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncanaespri_dict {
 public:
  G__Sizep2memfuncanaespri_dict(): p(&G__Sizep2memfuncanaespri_dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncanaespri_dict::*p)();
};

size_t G__get_sizep2memfuncanaespri_dict()
{
  G__Sizep2memfuncanaespri_dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceanaespri_dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaIPara))) {
     TArtRNaIPara *G__Lderived;
     G__Lderived=(TArtRNaIPara*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaIPara),G__get_linked_tagnum(&G__anaespri_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaIPara),G__get_linked_tagnum(&G__anaespri_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADC))) {
     TArtFADC *G__Lderived;
     G__Lderived=(TArtFADC*)0x1000;
     {
       TArtDataObject *G__Lpbase=(TArtDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADC),G__get_linked_tagnum(&G__anaespri_dictLN_TArtDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADC),G__get_linked_tagnum(&G__anaespri_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHit))) {
     TArtTDCHit *G__Lderived;
     G__Lderived=(TArtTDCHit*)0x1000;
     {
       TArtDataObject *G__Lpbase=(TArtDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHit),G__get_linked_tagnum(&G__anaespri_dictLN_TArtDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHit),G__get_linked_tagnum(&G__anaespri_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHitPara))) {
     TArtTDCHitPara *G__Lderived;
     G__Lderived=(TArtTDCHitPara*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHitPara),G__get_linked_tagnum(&G__anaespri_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHitPara),G__get_linked_tagnum(&G__anaespri_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anaespri_dictLN_TArtRDC))) {
     TArtRDC *G__Lderived;
     G__Lderived=(TArtRDC*)0x1000;
     {
       TArtDataObject *G__Lpbase=(TArtDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtRDC),G__get_linked_tagnum(&G__anaespri_dictLN_TArtDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtRDC),G__get_linked_tagnum(&G__anaespri_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anaespri_dictLN_TArtUserParameters))) {
     TArtUserParameters *G__Lderived;
     G__Lderived=(TArtUserParameters*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtUserParameters),G__get_linked_tagnum(&G__anaespri_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtUserParameters),G__get_linked_tagnum(&G__anaespri_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADCPara))) {
     TArtFADCPara *G__Lderived;
     G__Lderived=(TArtFADCPara*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADCPara),G__get_linked_tagnum(&G__anaespri_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADCPara),G__get_linked_tagnum(&G__anaespri_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlasPara))) {
     TArtPlasPara *G__Lderived;
     G__Lderived=(TArtPlasPara*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlasPara),G__get_linked_tagnum(&G__anaespri_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlasPara),G__get_linked_tagnum(&G__anaespri_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anaespri_dictLN_TArtESPRIParameters))) {
     TArtESPRIParameters *G__Lderived;
     G__Lderived=(TArtESPRIParameters*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtESPRIParameters),G__get_linked_tagnum(&G__anaespri_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtESPRIParameters),G__get_linked_tagnum(&G__anaespri_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anaespri_dictLN_TArtBDC))) {
     TArtBDC *G__Lderived;
     G__Lderived=(TArtBDC*)0x1000;
     {
       TArtDataObject *G__Lpbase=(TArtDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtBDC),G__get_linked_tagnum(&G__anaespri_dictLN_TArtDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtBDC),G__get_linked_tagnum(&G__anaespri_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibBDC))) {
     TArtCalibBDC *G__Lderived;
     G__Lderived=(TArtCalibBDC*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibBDC),G__get_linked_tagnum(&G__anaespri_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibRDC))) {
     TArtCalibRDC *G__Lderived;
     G__Lderived=(TArtCalibRDC*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibRDC),G__get_linked_tagnum(&G__anaespri_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anaespri_dictLN_TArtDia))) {
     TArtDia *G__Lderived;
     G__Lderived=(TArtDia*)0x1000;
     {
       TArtDataObject *G__Lpbase=(TArtDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtDia),G__get_linked_tagnum(&G__anaespri_dictLN_TArtDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtDia),G__get_linked_tagnum(&G__anaespri_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlas))) {
     TArtPlas *G__Lderived;
     G__Lderived=(TArtPlas*)0x1000;
     {
       TArtDataObject *G__Lpbase=(TArtDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlas),G__get_linked_tagnum(&G__anaespri_dictLN_TArtDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlas),G__get_linked_tagnum(&G__anaespri_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibPlas))) {
     TArtCalibPlas *G__Lderived;
     G__Lderived=(TArtCalibPlas*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibPlas),G__get_linked_tagnum(&G__anaespri_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anaespri_dictLN_TArtBLD))) {
     TArtBLD *G__Lderived;
     G__Lderived=(TArtBLD*)0x1000;
     {
       TArtDataObject *G__Lpbase=(TArtDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtBLD),G__get_linked_tagnum(&G__anaespri_dictLN_TArtDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtBLD),G__get_linked_tagnum(&G__anaespri_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibFADC))) {
     TArtCalibFADC *G__Lderived;
     G__Lderived=(TArtCalibFADC*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibFADC),G__get_linked_tagnum(&G__anaespri_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibBLD))) {
     TArtCalibBLD *G__Lderived;
     G__Lderived=(TArtCalibBLD*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibBLD),G__get_linked_tagnum(&G__anaespri_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibDia))) {
     TArtCalibDia *G__Lderived;
     G__Lderived=(TArtCalibDia*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibDia),G__get_linked_tagnum(&G__anaespri_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaI))) {
     TArtRNaI *G__Lderived;
     G__Lderived=(TArtRNaI*)0x1000;
     {
       TArtDataObject *G__Lpbase=(TArtDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaI),G__get_linked_tagnum(&G__anaespri_dictLN_TArtDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaI),G__get_linked_tagnum(&G__anaespri_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibRNaI))) {
     TArtCalibRNaI *G__Lderived;
     G__Lderived=(TArtCalibRNaI*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibRNaI),G__get_linked_tagnum(&G__anaespri_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibTDCHit))) {
     TArtCalibTDCHit *G__Lderived;
     G__Lderived=(TArtCalibTDCHit*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibTDCHit),G__get_linked_tagnum(&G__anaespri_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableanaespri_dict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__anaespri_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anaespri_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anaespri_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anaespri_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anaespri_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__anaespri_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anaespri_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anaespri_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anaespri_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anaespri_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,Int_t>",117,G__get_linked_tagnum(&G__anaespri_dictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,int>",117,G__get_linked_tagnum(&G__anaespri_dictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,int,less<TString> >",117,G__get_linked_tagnum(&G__anaespri_dictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,Double_t>",117,G__get_linked_tagnum(&G__anaespri_dictLN_maplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,double>",117,G__get_linked_tagnum(&G__anaespri_dictLN_maplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,double,less<TString> >",117,G__get_linked_tagnum(&G__anaespri_dictLN_maplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TString>",117,G__get_linked_tagnum(&G__anaespri_dictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TString,less<TString> >",117,G__get_linked_tagnum(&G__anaespri_dictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__anaespri_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__anaespri_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__anaespri_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__anaespri_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__anaespri_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,TArtTDCHitPara*>",117,G__get_linked_tagnum(&G__anaespri_dictLN_maplETArtRIDFMapcOTArtTDCHitParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtTDCHitParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,TArtTDCHitPara*,less<TArtRIDFMap> >",117,G__get_linked_tagnum(&G__anaespri_dictLN_maplETArtRIDFMapcOTArtTDCHitParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtTDCHitParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,TArtFADCPara*>",117,G__get_linked_tagnum(&G__anaespri_dictLN_maplETArtRIDFMapcOTArtFADCParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtFADCParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,TArtFADCPara*,less<TArtRIDFMap> >",117,G__get_linked_tagnum(&G__anaespri_dictLN_maplETArtRIDFMapcOTArtFADCParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtFADCParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,TArtPlasPara*>",117,G__get_linked_tagnum(&G__anaespri_dictLN_maplETArtRIDFMapcOTArtPlasParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtPlasParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,TArtPlasPara*,less<TArtRIDFMap> >",117,G__get_linked_tagnum(&G__anaespri_dictLN_maplETArtRIDFMapcOTArtPlasParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtPlasParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,TArtRNaIPara*>",117,G__get_linked_tagnum(&G__anaespri_dictLN_maplETArtRIDFMapcOTArtRNaIParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtRNaIParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,TArtRNaIPara*,less<TArtRIDFMap> >",117,G__get_linked_tagnum(&G__anaespri_dictLN_maplETArtRIDFMapcOTArtRNaIParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtRNaIParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtPlasPara*>",117,G__get_linked_tagnum(&G__anaespri_dictLN_vectorlETArtPlasParamUcOallocatorlETArtPlasParamUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anaespri_dictLN_reverse_iteratorlEvectorlETArtPlasParamUcOallocatorlETArtPlasParamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anaespri_dictLN_vectorlETArtPlasParamUcOallocatorlETArtPlasParamUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anaespri_dictLN_reverse_iteratorlEvectorlETArtPlasParamUcOallocatorlETArtPlasParamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anaespri_dictLN_vectorlETArtPlasParamUcOallocatorlETArtPlasParamUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtFADCPara*>",117,G__get_linked_tagnum(&G__anaespri_dictLN_vectorlETArtFADCParamUcOallocatorlETArtFADCParamUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anaespri_dictLN_reverse_iteratorlEvectorlETArtFADCParamUcOallocatorlETArtFADCParamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anaespri_dictLN_vectorlETArtFADCParamUcOallocatorlETArtFADCParamUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anaespri_dictLN_reverse_iteratorlEvectorlETArtFADCParamUcOallocatorlETArtFADCParamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anaespri_dictLN_vectorlETArtFADCParamUcOallocatorlETArtFADCParamUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtRNaIPara*>",117,G__get_linked_tagnum(&G__anaespri_dictLN_vectorlETArtRNaIParamUcOallocatorlETArtRNaIParamUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anaespri_dictLN_reverse_iteratorlEvectorlETArtRNaIParamUcOallocatorlETArtRNaIParamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anaespri_dictLN_vectorlETArtRNaIParamUcOallocatorlETArtRNaIParamUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anaespri_dictLN_reverse_iteratorlEvectorlETArtRNaIParamUcOallocatorlETArtRNaIParamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anaespri_dictLN_vectorlETArtRNaIParamUcOallocatorlETArtRNaIParamUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtTDCHitPara*>",117,G__get_linked_tagnum(&G__anaespri_dictLN_vectorlETArtTDCHitParamUcOallocatorlETArtTDCHitParamUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anaespri_dictLN_reverse_iteratorlEvectorlETArtTDCHitParamUcOallocatorlETArtTDCHitParamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anaespri_dictLN_vectorlETArtTDCHitParamUcOallocatorlETArtTDCHitParamUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anaespri_dictLN_reverse_iteratorlEvectorlETArtTDCHitParamUcOallocatorlETArtTDCHitParamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anaespri_dictLN_vectorlETArtTDCHitParamUcOallocatorlETArtTDCHitParamUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TArtRNaIPara */
static void G__setup_memvarTArtRNaIPara(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaIPara));
   { TArtRNaIPara *p; p=(TArtRNaIPara*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TString),-1,-1,4,"detname=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"layer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"tcal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"toff=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"qcal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"qped=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtRIDFMap),-1,-1,4,"map_tdc=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtRIDFMap),-1,-1,4,"map_adc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtFADC */
static void G__setup_memvarTArtFADC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADC));
   { TArtFADC *p; p=(TArtFADC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCh=",0,"channel 0-3");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLength=",0,"sample length/ch typical 4096");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFADC[4096]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtTDCHit */
static void G__setup_memvarTArtTDCHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHit));
   { TArtTDCHit *p; p=(TArtTDCHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"layer=",0,"n-th layer 1-4 for BDC&RDCx, 1-3 RDCy, 1-2 Pla");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"id_plane=",0,"plane id 1-16:BDC, 17-30:RDC 31-35 Pla");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TString),-1,-1,4,"anodedir=",0,"wire direction 'X', 'Y', 'U':not used");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"wireang=",0,"wire angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"wirez=",0,"wire-x position");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"toffset=",0,"TDC offset");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"wireid=",0,"wire-id 1-16 for BDC, 1-32 for RDC, 1-2 Pla");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"geo=",0,"geometry address for commons substract");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"id_hit=",0,"hit id in array ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"l_hit=",0,"hit id in layer");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLTDC=",0,"leading edge tdc");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRTDC=",0,"trailing edge tdc");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtTDCHitPara */
static void G__setup_memvarTArtTDCHitPara(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHitPara));
   { TArtTDCHitPara *p; p=(TArtTDCHitPara*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TString),-1,-1,4,"detname=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"layer=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"id_plane=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"wireid=",0,"wire id");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"wireang=",0,"wire angle X:+90,Y:0");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"wirez=",0,"wire z position");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"toffset=",0,"Tzero");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtRIDFMap),-1,-1,4,"map=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtRDC */
static void G__setup_memvarTArtRDC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtRDC));
   { TArtRDC *p; p=(TArtRDC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"layer=",0,"1:UP 2:DW -1:No GOOD Hit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRX=",0,"x position");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRY=",0,"y position");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRA=",0,"dx/dz");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRB=",0,"dy/dz");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCHI=",0,"best chi-square");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes4=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes5=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes6=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit3=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit4=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit5=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit6=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf4=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf5=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf6=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtUserParameters */
static void G__setup_memvarTArtUserParameters(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtUserParameters));
   { TArtUserParameters *p; p=(TArtUserParameters*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),G__defined_typename("map<TString,Int_t>"),-1,4,"imap=",0,"map for int parameters");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_maplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgR),G__defined_typename("map<TString,Double_t>"),-1,4,"dmap=",0,"map for double parameters");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),G__defined_typename("map<TString,TString>"),-1,4,"smap=",0,"map for string parameters");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),G__defined_typename("map<TString,TString>"),-1,4,"cmap=",0,"map for comments");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtStoreManager),-1,-1,4,"fStoreManager=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtUserParameters),-1,-2,4,"fParameters=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtFADCPara */
static void G__setup_memvarTArtFADCPara(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADCPara));
   { TArtFADCPara *p; p=(TArtFADCPara*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TString),-1,-1,4,"detname=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtRIDFMap),-1,-1,4,"map=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtPlasPara */
static void G__setup_memvarTArtPlasPara(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlasPara));
   { TArtPlasPara *p; p=(TArtPlasPara*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TString),-1,-1,4,"detname=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"layer=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"id_plane=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"channel=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"qcal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"qped=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtRIDFMap),-1,-1,4,"map=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtESPRIParameters */
static void G__setup_memvarTArtESPRIParameters(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtESPRIParameters));
   { TArtESPRIParameters *p; p=(TArtESPRIParameters*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_maplETArtRIDFMapcOTArtRNaIParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtRNaIParamUgRsPgRsPgR),G__defined_typename("map<TArtRIDFMap,TArtRNaIPara*>"),-1,4,"rnai_pmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_maplETArtRIDFMapcOTArtTDCHitParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtTDCHitParamUgRsPgRsPgR),G__defined_typename("map<TArtRIDFMap,TArtTDCHitPara*>"),-1,4,"tdc_pmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_maplETArtRIDFMapcOTArtFADCParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtFADCParamUgRsPgRsPgR),G__defined_typename("map<TArtRIDFMap,TArtFADCPara*>"),-1,4,"fadc_pmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_maplETArtRIDFMapcOTArtPlasParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtPlasParamUgRsPgRsPgR),G__defined_typename("map<TArtRIDFMap,TArtPlasPara*>"),-1,4,"plas_pmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TList),-1,-1,4,"listOfRNaIPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TList),-1,-1,4,"listOfTDCHitPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TList),-1,-1,4,"listOfFADCPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TList),-1,-1,4,"listOfPlasPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtStoreManager),-1,-1,4,"fStoreManager=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtESPRIParameters),-1,-2,4,"fESPRIParameters=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtBDC */
static void G__setup_memvarTArtBDC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtBDC));
   { TArtBDC *p; p=(TArtBDC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"layer=",0,"1:UP 2:DW -1:No GOOD Drf");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBX=",0,"x position");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBY=",0,"y position");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBA=",0,"dx/dz");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBB=",0,"dy/dz");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCHI=",0,"best chi-square");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes4=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes5=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes6=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes7=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes8=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit3=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit4=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit5=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit6=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit7=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit8=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf4=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf5=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf6=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf7=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf8=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes[8]=",0,"Residual in each plane");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf[8]=",0,"Drft");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit[8]=",0,"Multiplicity of each plane");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTDC[8]=",0,"TDC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibBDC */
static void G__setup_memvarTArtCalibBDC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibBDC));
   { TArtCalibBDC *p; p=(TArtCalibBDC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClonesArray),-1,-1,4,"fBDCArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtESPRIParameters),-1,-1,4,"setup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtUserParameters),-1,-1,4,"setup2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtStoreManager),-1,-1,4,"sman=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibRDC */
static void G__setup_memvarTArtCalibRDC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibRDC));
   { TArtCalibRDC *p; p=(TArtCalibRDC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClonesArray),-1,-1,4,"fRDCArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtESPRIParameters),-1,-1,4,"setup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtUserParameters),-1,-1,4,"setup2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtStoreManager),-1,-1,4,"sman=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDia */
static void G__setup_memvarTArtDia(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtDia));
   { TArtDia *p; p=(TArtDia*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"layer=",0,"1-4,5-8");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"id_plane=",0,"31-34,35-38");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"channel=",0,"1:1-6,2:1,3,1-2,4,1-2");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fWidth=",0,"by QTC");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTime=",0,"by TDC");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTimeW=",0,"by QTC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtPlas */
static void G__setup_memvarTArtPlas(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlas));
   { TArtPlas *p; p=(TArtPlas*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fADC=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTDC=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"layer=",0,"1-4,5-8");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"id_plane=",0,"31-34,35-38");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"channel=",0,"1:1-6,2:1,3,1-2,4,1-2");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEnergy=",0,"by QDC");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fWidth=",0,"by QTC");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTime=",0,"by TDC");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTimeW=",0,"by QTC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibPlas */
static void G__setup_memvarTArtCalibPlas(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibPlas));
   { TArtCalibPlas *p; p=(TArtCalibPlas*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClonesArray),-1,-1,4,"fPlasArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_vectorlETArtPlasParamUcOallocatorlETArtPlasParamUgRsPgR),G__defined_typename("vector<TArtPlasPara*>"),-1,4,"fPlasParaArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtESPRIParameters),-1,-1,4,"setup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtStoreManager),-1,-1,4,"sman=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtBLD */
static void G__setup_memvarTArtBLD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtBLD));
   { TArtBLD *p; p=(TArtBLD*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"layer=",0,"1:UP 2:DW -1:No GOOD Drf");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBX=",0,"x position");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBY=",0,"y position");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBA=",0,"dx/dz");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBB=",0,"dy/dz");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCHI=",0,"best chi-square");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes4=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes5=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes6=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes7=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes8=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit3=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit4=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit5=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit6=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit7=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit8=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf4=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf5=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf6=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf7=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf8=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRes[8]=",0,"Residual in each plane");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrf[8]=",0,"Drft");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit[8]=",0,"Multiplicity of each plane");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTDC[8]=",0,"TDC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibFADC */
static void G__setup_memvarTArtCalibFADC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibFADC));
   { TArtCalibFADC *p; p=(TArtCalibFADC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"detectorid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClonesArray),-1,-1,4,"fFADCArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_vectorlETArtFADCParamUcOallocatorlETArtFADCParamUgRsPgR),G__defined_typename("vector<TArtFADCPara*>"),-1,4,"fFADCParaArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtESPRIParameters),-1,-1,4,"setup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtStoreManager),-1,-1,4,"sman=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibBLD */
static void G__setup_memvarTArtCalibBLD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibBLD));
   { TArtCalibBLD *p; p=(TArtCalibBLD*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClonesArray),-1,-1,4,"fBLDArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtESPRIParameters),-1,-1,4,"setup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtUserParameters),-1,-1,4,"setup2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtStoreManager),-1,-1,4,"sman=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibDia */
static void G__setup_memvarTArtCalibDia(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibDia));
   { TArtCalibDia *p; p=(TArtCalibDia*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClonesArray),-1,-1,4,"fDiaArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtESPRIParameters),-1,-1,4,"setup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtStoreManager),-1,-1,4,"sman=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtRNaI */
static void G__setup_memvarTArtRNaI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaI));
   { TArtRNaI *p; p=(TArtRNaI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fADC=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTDC=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"layer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibRNaI */
static void G__setup_memvarTArtCalibRNaI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibRNaI));
   { TArtCalibRNaI *p; p=(TArtCalibRNaI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClonesArray),-1,-1,4,"fRNaIArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_vectorlETArtRNaIParamUcOallocatorlETArtRNaIParamUgRsPgR),G__defined_typename("vector<TArtRNaIPara*>"),-1,4,"fRNaIParaArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtESPRIParameters),-1,-1,4,"setup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtStoreManager),-1,-1,4,"sman=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibTDCHit */
static void G__setup_memvarTArtCalibTDCHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibTDCHit));
   { TArtCalibTDCHit *p; p=(TArtCalibTDCHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"detectorid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClonesArray),-1,-1,4,"fTDCHitArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_vectorlETArtTDCHitParamUcOallocatorlETArtTDCHitParamUgRsPgR),G__defined_typename("vector<TArtTDCHitPara*>"),-1,4,"fTDCHitParaArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtESPRIParameters),-1,-1,4,"setup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TArtStoreManager),-1,-1,4,"sman=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anaespri_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvaranaespri_dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTArtRNaIPara(void) {
   /* TArtRNaIPara */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaIPara));
   G__memfunc_setup("TArtRNaIPara",1097,G__anaespri_dict_185_0_1, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaIPara), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtRNaIPara",1097,G__anaespri_dict_185_0_2, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaIPara), -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - i u 'TString' - 0 - n "
"i - 'Int_t' 0 - f i - 'Int_t' 0 - l "
"d - 'Double_t' 0 - tc d - 'Double_t' 0 - to "
"d - 'Double_t' 0 - qc d - 'Double_t' 0 - qp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameters",1344,G__anaespri_dict_185_0_3, 121, -1, -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - i u 'TString' - 0 - n "
"i - 'Int_t' 0 - f i - 'Int_t' 0 - l "
"d - 'Double_t' 0 - tc d - 'Double_t' 0 - to "
"d - 'Double_t' 0 - qc d - 'Double_t' 0 - qp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMap",586,G__anaespri_dict_185_0_4, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - tgeo i - 'Int_t' 0 - tch "
"i - 'Int_t' 0 - qgeo i - 'Int_t' 0 - qch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__anaespri_dict_185_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorName",1499,G__anaespri_dict_185_0_6, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFpl",578,G__anaespri_dict_185_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLayer",797,G__anaespri_dict_185_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTCal",644,G__anaespri_dict_185_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOffset",987,G__anaespri_dict_185_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQCal",641,G__anaespri_dict_185_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQPed",650,G__anaespri_dict_185_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDCMap",793,G__anaespri_dict_185_0_13, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtRIDFMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetADCMap",774,G__anaespri_dict_185_0_14, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtRIDFMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anaespri_dict_185_0_15, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtRNaIPara::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anaespri_dict_185_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRNaIPara::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anaespri_dict_185_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtRNaIPara::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anaespri_dict_185_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtRNaIPara::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anaespri_dict_185_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anaespri_dict_185_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRNaIPara::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anaespri_dict_185_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRNaIPara::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anaespri_dict_185_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRNaIPara::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anaespri_dict_185_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRNaIPara::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtRNaIPara", 1097, G__anaespri_dict_185_0_27, (int) ('i'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaIPara), -1, 0, 1, 1, 1, 0, "u 'TArtRNaIPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtRNaIPara", 1223, G__anaespri_dict_185_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anaespri_dict_185_0_29, (int) ('u'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaIPara), -1, 1, 1, 1, 1, 0, "u 'TArtRNaIPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtFADC(void) {
   /* TArtFADC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADC));
   G__memfunc_setup("TArtFADC",649,G__anaespri_dict_187_0_1, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh",471,G__anaespri_dict_187_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCh",459,G__anaespri_dict_187_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLength",910,G__anaespri_dict_187_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLength",898,G__anaespri_dict_187_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFADC",570,G__anaespri_dict_187_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFADC",558,G__anaespri_dict_187_0_7, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anaespri_dict_187_0_8, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtFADC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anaespri_dict_187_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtFADC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anaespri_dict_187_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtFADC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anaespri_dict_187_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtFADC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anaespri_dict_187_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anaespri_dict_187_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtFADC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anaespri_dict_187_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtFADC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anaespri_dict_187_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtFADC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anaespri_dict_187_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtFADC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtFADC", 649, G__anaespri_dict_187_0_20, (int) ('i'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADC), -1, 0, 1, 1, 1, 0, "u 'TArtFADC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtFADC", 775, G__anaespri_dict_187_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anaespri_dict_187_0_22, (int) ('u'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADC), -1, 1, 1, 1, 1, 0, "u 'TArtFADC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtTDCHit(void) {
   /* TArtTDCHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHit));
   G__memfunc_setup("TArtTDCHit",891,G__anaespri_dict_188_0_1, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDC",519,G__anaespri_dict_188_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrailTDC",1027,G__anaespri_dict_188_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDC",507,G__anaespri_dict_188_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrailTDC",1015,G__anaespri_dict_188_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGeo",583,G__anaespri_dict_188_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGeo",571,G__anaespri_dict_188_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetWireDirection",1636,G__anaespri_dict_188_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetWireDirection",1636,G__anaespri_dict_188_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - str", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetWireID",848,G__anaespri_dict_188_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetWireAngle",1194,G__anaespri_dict_188_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetWireZPosition",1650,G__anaespri_dict_188_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTzero",832,G__anaespri_dict_188_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLayer",809,G__anaespri_dict_188_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPlaneID",937,G__anaespri_dict_188_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetWireDirection",1624,G__anaespri_dict_188_0_16, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetWireID",836,G__anaespri_dict_188_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetWireAngle",1182,G__anaespri_dict_188_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetWireZPosition",1638,G__anaespri_dict_188_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTzero",820,G__anaespri_dict_188_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLayer",797,G__anaespri_dict_188_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPlaneID",925,G__anaespri_dict_188_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHitID",734,G__anaespri_dict_188_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHitID",722,G__anaespri_dict_188_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anaespri_dict_188_0_25, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtTDCHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anaespri_dict_188_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtTDCHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anaespri_dict_188_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtTDCHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anaespri_dict_188_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtTDCHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anaespri_dict_188_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anaespri_dict_188_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtTDCHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anaespri_dict_188_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtTDCHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anaespri_dict_188_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtTDCHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anaespri_dict_188_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtTDCHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtTDCHit", 891, G__anaespri_dict_188_0_37, (int) ('i'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHit), -1, 0, 1, 1, 1, 0, "u 'TArtTDCHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtTDCHit", 1017, G__anaespri_dict_188_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anaespri_dict_188_0_39, (int) ('u'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHit), -1, 1, 1, 1, 1, 0, "u 'TArtTDCHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtTDCHitPara(void) {
   /* TArtTDCHitPara */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHitPara));
   G__memfunc_setup("TArtTDCHitPara",1279,G__anaespri_dict_424_0_1, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHitPara), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtTDCHitPara",1279,G__anaespri_dict_424_0_2, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHitPara), -1, 0, 9, 1, 1, 0, 
"i - 'Int_t' 0 - i u 'TString' - 0 - n "
"i - 'Int_t' 0 - f i - 'Int_t' 0 - l "
"i - 'Int_t' 0 - idp i - 'Int_t' 0 - wid "
"d - 'Double_t' 0 - wa d - 'Double_t' 0 - wz "
"i - 'Int_t' 0 - tz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPalameters",1338,G__anaespri_dict_424_0_3, 121, -1, -1, 0, 9, 1, 1, 0, 
"i - 'Int_t' 0 - i u 'TString' - 0 - n "
"i - 'Int_t' 0 - f i - 'Int_t' 0 - l "
"i - 'Int_t' 0 - idp i - 'Int_t' 0 - wid "
"d - 'Double_t' 0 - wa d - 'Double_t' 0 - wz "
"i - 'Int_t' 0 - tz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMap",586,G__anaespri_dict_424_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - dt i - 'Int_t' 0 - tg "
"i - 'Int_t' 0 - tc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__anaespri_dict_424_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFpl",578,G__anaespri_dict_424_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLayer",797,G__anaespri_dict_424_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlaneID",925,G__anaespri_dict_424_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWireID",836,G__anaespri_dict_424_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorName",1499,G__anaespri_dict_424_0_10, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWireAngle",1182,G__anaespri_dict_424_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWireZPosition",1638,G__anaespri_dict_424_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTzero",820,G__anaespri_dict_424_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDCMap",793,G__anaespri_dict_424_0_14, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtRIDFMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anaespri_dict_424_0_15, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtTDCHitPara::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anaespri_dict_424_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtTDCHitPara::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anaespri_dict_424_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtTDCHitPara::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anaespri_dict_424_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtTDCHitPara::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anaespri_dict_424_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anaespri_dict_424_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtTDCHitPara::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anaespri_dict_424_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtTDCHitPara::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anaespri_dict_424_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtTDCHitPara::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anaespri_dict_424_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtTDCHitPara::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtTDCHitPara", 1279, G__anaespri_dict_424_0_27, (int) ('i'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHitPara), -1, 0, 1, 1, 1, 0, "u 'TArtTDCHitPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtTDCHitPara", 1405, G__anaespri_dict_424_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anaespri_dict_424_0_29, (int) ('u'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHitPara), -1, 1, 1, 1, 1, 0, "u 'TArtTDCHitPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtRDC(void) {
   /* TArtRDC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtRDC));
   G__memfunc_setup("TArtRDC",596,G__anaespri_dict_425_0_1, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtRDC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRDCX",605,G__anaespri_dict_425_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRDCY",606,G__anaespri_dict_425_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRDCA",582,G__anaespri_dict_425_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRDCB",583,G__anaespri_dict_425_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCHI2",562,G__anaespri_dict_425_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLayer",809,G__anaespri_dict_425_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRDCX",593,G__anaespri_dict_425_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRDCY",594,G__anaespri_dict_425_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRDCA",570,G__anaespri_dict_425_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRDCB",571,G__anaespri_dict_425_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLayer",797,G__anaespri_dict_425_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes1",647,G__anaespri_dict_425_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes2",648,G__anaespri_dict_425_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes3",649,G__anaespri_dict_425_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes4",650,G__anaespri_dict_425_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes5",651,G__anaespri_dict_425_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes6",652,G__anaespri_dict_425_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit1",642,G__anaespri_dict_425_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit2",643,G__anaespri_dict_425_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit3",644,G__anaespri_dict_425_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit4",645,G__anaespri_dict_425_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit5",646,G__anaespri_dict_425_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit6",647,G__anaespri_dict_425_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf1",633,G__anaespri_dict_425_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf2",634,G__anaespri_dict_425_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf3",635,G__anaespri_dict_425_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf4",636,G__anaespri_dict_425_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf5",637,G__anaespri_dict_425_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf6",638,G__anaespri_dict_425_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anaespri_dict_425_0_31, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtRDC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anaespri_dict_425_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRDC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anaespri_dict_425_0_33, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtRDC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anaespri_dict_425_0_34, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtRDC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anaespri_dict_425_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anaespri_dict_425_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRDC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anaespri_dict_425_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRDC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anaespri_dict_425_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRDC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anaespri_dict_425_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRDC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtRDC", 596, G__anaespri_dict_425_0_43, (int) ('i'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtRDC), -1, 0, 1, 1, 1, 0, "u 'TArtRDC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtRDC", 722, G__anaespri_dict_425_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anaespri_dict_425_0_45, (int) ('u'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtRDC), -1, 1, 1, 1, 1, 0, "u 'TArtRDC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtUserParameters(void) {
   /* TArtUserParameters */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtUserParameters));
   G__memfunc_setup("TArtUserParameters",1838,G__anaespri_dict_428_0_1, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtUserParameters), -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"UserParameters\"' name C - - 10 '\"UserParameters\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anaespri_dict_428_0_2, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtUserParameters), -1, 0, 2, 3, 1, 0, 
"C - - 10 '\"UserParameters\"' name C - - 10 '\"UserParameters\"' title", (char*)NULL, (void*) G__func2void( (TArtUserParameters* (*)(const char*, const char*))(&TArtUserParameters::Instance) ), 0);
   G__memfunc_setup("Delete",595,G__anaespri_dict_428_0_3, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtUserParameters::Delete) ), 0);
   G__memfunc_setup("LoadParameter",1313,G__anaespri_dict_428_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - xmlfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintPara",913,G__anaespri_dict_428_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindIntPara",1072,G__anaespri_dict_428_0_6, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "u 'TString' - 10 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindDoublePara",1376,G__anaespri_dict_428_0_7, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TString' - 10 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindStringPara",1404,G__anaespri_dict_428_0_8, 117, G__get_linked_tagnum(&G__anaespri_dictLN_TString), -1, 0, 1, 1, 1, 8, "u 'TString' - 10 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindParaComment",1496,G__anaespri_dict_428_0_9, 117, G__get_linked_tagnum(&G__anaespri_dictLN_TString), -1, 0, 1, 1, 1, 8, "u 'TString' - 10 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPara",688,G__anaespri_dict_428_0_10, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'TString' - 10 - name u 'TString' - 10 - type "
"u 'TString' - 10 - value u 'TString' - 10 '\"\"' comment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIntPara",987,G__anaespri_dict_428_0_11, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 10 - name i - 'Int_t' 10 - value "
"u 'TString' - 10 '\"\"' comment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDoublePara",1291,G__anaespri_dict_428_0_12, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 10 - name d - 'Double_t' 10 - value "
"u 'TString' - 10 '\"\"' comment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStringPara",1319,G__anaespri_dict_428_0_13, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 10 - name u 'TString' - 10 - value "
"u 'TString' - 10 '\"\"' comment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseParaList",1307,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TXMLNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParsePara",895,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TXMLNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anaespri_dict_428_0_16, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtUserParameters::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anaespri_dict_428_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtUserParameters::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anaespri_dict_428_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtUserParameters::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anaespri_dict_428_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtUserParameters::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anaespri_dict_428_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anaespri_dict_428_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtUserParameters::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anaespri_dict_428_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtUserParameters::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anaespri_dict_428_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtUserParameters::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anaespri_dict_428_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtUserParameters::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtUserParameters", 1838, G__anaespri_dict_428_0_28, (int) ('i'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtUserParameters), -1, 0, 1, 1, 1, 0, "u 'TArtUserParameters' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtUserParameters", 1964, G__anaespri_dict_428_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anaespri_dict_428_0_30, (int) ('u'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtUserParameters), -1, 1, 1, 1, 1, 0, "u 'TArtUserParameters' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtFADCPara(void) {
   /* TArtFADCPara */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADCPara));
   G__memfunc_setup("TArtFADCPara",1037,G__anaespri_dict_461_0_1, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADCPara), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtFADCPara",1037,G__anaespri_dict_461_0_2, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADCPara), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - i u 'TString' - 0 - n "
"i - 'Int_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPalameters",1338,G__anaespri_dict_461_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - i u 'TString' - 0 - n "
"i - 'Int_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMap",586,G__anaespri_dict_461_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - dt i - 'Int_t' 0 - tg "
"i - 'Int_t' 0 - tc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__anaespri_dict_461_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFpl",578,G__anaespri_dict_461_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorName",1499,G__anaespri_dict_461_0_7, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFADCMap",844,G__anaespri_dict_461_0_8, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtRIDFMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anaespri_dict_461_0_9, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtFADCPara::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anaespri_dict_461_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtFADCPara::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anaespri_dict_461_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtFADCPara::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anaespri_dict_461_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtFADCPara::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anaespri_dict_461_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anaespri_dict_461_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtFADCPara::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anaespri_dict_461_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtFADCPara::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anaespri_dict_461_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtFADCPara::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anaespri_dict_461_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtFADCPara::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtFADCPara", 1037, G__anaespri_dict_461_0_21, (int) ('i'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADCPara), -1, 0, 1, 1, 1, 0, "u 'TArtFADCPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtFADCPara", 1163, G__anaespri_dict_461_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anaespri_dict_461_0_23, (int) ('u'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADCPara), -1, 1, 1, 1, 1, 0, "u 'TArtFADCPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtPlasPara(void) {
   /* TArtPlasPara */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlasPara));
   G__memfunc_setup("TArtPlasPara",1167,G__anaespri_dict_462_0_1, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlasPara), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtPlasPara",1167,G__anaespri_dict_462_0_2, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlasPara), -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - i u 'TString' - 0 - n "
"i - 'Int_t' 0 - f i - 'Int_t' 0 - l "
"i - 'Int_t' 0 - idp i - 'Int_t' 0 - ch "
"d - 'Double_t' 0 - qc d - 'Double_t' 0 - qp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameters",1344,G__anaespri_dict_462_0_3, 121, -1, -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - i u 'TString' - 0 - n "
"i - 'Int_t' 0 - f i - 'Int_t' 0 - l "
"i - 'Int_t' 0 - idp i - 'Int_t' 0 - ch "
"d - 'Double_t' 0 - qc d - 'Double_t' 0 - qp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMap",586,G__anaespri_dict_462_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - dt i - 'Int_t' 0 - geo "
"i - 'Int_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__anaespri_dict_462_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorName",1499,G__anaespri_dict_462_0_6, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFpl",578,G__anaespri_dict_462_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLayer",797,G__anaespri_dict_462_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlaneID",925,G__anaespri_dict_462_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh",459,G__anaespri_dict_462_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQCal",641,G__anaespri_dict_462_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQPed",650,G__anaespri_dict_462_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlasMap",974,G__anaespri_dict_462_0_13, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtRIDFMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anaespri_dict_462_0_14, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtPlasPara::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anaespri_dict_462_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtPlasPara::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anaespri_dict_462_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtPlasPara::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anaespri_dict_462_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtPlasPara::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anaespri_dict_462_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anaespri_dict_462_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtPlasPara::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anaespri_dict_462_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtPlasPara::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anaespri_dict_462_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtPlasPara::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anaespri_dict_462_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtPlasPara::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtPlasPara", 1167, G__anaespri_dict_462_0_26, (int) ('i'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlasPara), -1, 0, 1, 1, 1, 0, "u 'TArtPlasPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtPlasPara", 1293, G__anaespri_dict_462_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anaespri_dict_462_0_28, (int) ('u'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlasPara), -1, 1, 1, 1, 1, 0, "u 'TArtPlasPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtESPRIParameters(void) {
   /* TArtESPRIParameters */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtESPRIParameters));
   G__memfunc_setup("TArtESPRIParameters",1810,G__anaespri_dict_463_0_1, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtESPRIParameters), -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"ESPRIParameters\"' name C - - 10 '\"ESPRIParameters\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anaespri_dict_463_0_2, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtESPRIParameters), -1, 0, 2, 3, 1, 0, 
"C - - 10 '\"ESPRIParameters\"' name C - - 10 '\"ESPRIParameters\"' title", (char*)NULL, (void*) G__func2void( (TArtESPRIParameters* (*)(const char*, const char*))(&TArtESPRIParameters::Instance) ), 0);
   G__memfunc_setup("Delete",595,G__anaespri_dict_463_0_3, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtESPRIParameters::Delete) ), 0);
   G__memfunc_setup("LoadParameter",1313,G__anaespri_dict_463_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - xmlfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListOfRNaIPara",1836,G__anaespri_dict_463_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListOfTDCHitPara",2018,G__anaespri_dict_463_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListOfFADCPara",1776,G__anaespri_dict_463_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListOfPlasPara",1906,G__anaespri_dict_463_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfRNaIPara",1599,G__anaespri_dict_463_0_9, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfTDCHitPara",1781,G__anaespri_dict_463_0_10, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfFADCPara",1539,G__anaespri_dict_463_0_11, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfPlasPara",1669,G__anaespri_dict_463_0_12, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindRNaIPara",1103,G__anaespri_dict_463_0_13, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaIPara), -1, 0, 1, 1, 1, 9, "U 'TArtRIDFMap' - 0 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindTDCHitPara",1285,G__anaespri_dict_463_0_14, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHitPara), -1, 0, 1, 1, 1, 9, "U 'TArtRIDFMap' - 0 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindFADCPara",1043,G__anaespri_dict_463_0_15, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADCPara), -1, 0, 1, 1, 1, 9, "U 'TArtRIDFMap' - 0 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPlasPara",1173,G__anaespri_dict_463_0_16, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlasPara), -1, 0, 1, 1, 1, 9, "U 'TArtRIDFMap' - 0 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseParaList",1307,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TXMLNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseRNaIPara",1225,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaIPara), -1, 0, 1, 1, 4, 0, "U 'TXMLNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseTDCHitPara",1407,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHitPara), -1, 0, 2, 1, 4, 0, 
"U 'TXMLNode' - 0 - node U 'map<TArtRIDFMap,TArtTDCHitPara*,less<TArtRIDFMap>,allocator<pair<const TArtRIDFMap,TArtTDCHitPara*> > >' 'map<TArtRIDFMap,TArtTDCHitPara*>' 0 - map", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseFADCPara",1165,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADCPara), -1, 0, 2, 1, 4, 0, 
"U 'TXMLNode' - 0 - node U 'map<TArtRIDFMap,TArtFADCPara*,less<TArtRIDFMap>,allocator<pair<const TArtRIDFMap,TArtFADCPara*> > >' 'map<TArtRIDFMap,TArtFADCPara*>' 0 - map", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParsePlasPara",1295,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlasPara), -1, 0, 2, 1, 4, 0, 
"U 'TXMLNode' - 0 - node U 'map<TArtRIDFMap,TArtPlasPara*,less<TArtRIDFMap>,allocator<pair<const TArtRIDFMap,TArtPlasPara*> > >' 'map<TArtRIDFMap,TArtPlasPara*>' 0 - map", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anaespri_dict_463_0_22, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtESPRIParameters::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anaespri_dict_463_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtESPRIParameters::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anaespri_dict_463_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtESPRIParameters::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anaespri_dict_463_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtESPRIParameters::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anaespri_dict_463_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anaespri_dict_463_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtESPRIParameters::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anaespri_dict_463_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtESPRIParameters::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anaespri_dict_463_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtESPRIParameters::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anaespri_dict_463_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtESPRIParameters::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtESPRIParameters", 1810, G__anaespri_dict_463_0_34, (int) ('i'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtESPRIParameters), -1, 0, 1, 1, 1, 0, "u 'TArtESPRIParameters' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtESPRIParameters", 1936, G__anaespri_dict_463_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anaespri_dict_463_0_36, (int) ('u'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtESPRIParameters), -1, 1, 1, 1, 1, 0, "u 'TArtESPRIParameters' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtBDC(void) {
   /* TArtBDC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtBDC));
   G__memfunc_setup("TArtBDC",580,G__anaespri_dict_520_0_1, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtBDC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBDCX",589,G__anaespri_dict_520_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBDCY",590,G__anaespri_dict_520_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBDCA",566,G__anaespri_dict_520_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBDCB",567,G__anaespri_dict_520_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCHI2",562,G__anaespri_dict_520_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLayer",809,G__anaespri_dict_520_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBDCX",577,G__anaespri_dict_520_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBDCY",578,G__anaespri_dict_520_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBDCA",554,G__anaespri_dict_520_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBDCB",555,G__anaespri_dict_520_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLayer",797,G__anaespri_dict_520_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit",593,G__anaespri_dict_520_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDC",519,G__anaespri_dict_520_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes",598,G__anaespri_dict_520_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf",584,G__anaespri_dict_520_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes1",647,G__anaespri_dict_520_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes2",648,G__anaespri_dict_520_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes3",649,G__anaespri_dict_520_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes4",650,G__anaespri_dict_520_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes5",651,G__anaespri_dict_520_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes6",652,G__anaespri_dict_520_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes7",653,G__anaespri_dict_520_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes8",654,G__anaespri_dict_520_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit1",642,G__anaespri_dict_520_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit2",643,G__anaespri_dict_520_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit3",644,G__anaespri_dict_520_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit4",645,G__anaespri_dict_520_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit5",646,G__anaespri_dict_520_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit6",647,G__anaespri_dict_520_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit7",648,G__anaespri_dict_520_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit8",649,G__anaespri_dict_520_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf1",633,G__anaespri_dict_520_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf2",634,G__anaespri_dict_520_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf3",635,G__anaespri_dict_520_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf4",636,G__anaespri_dict_520_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf5",637,G__anaespri_dict_520_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf6",638,G__anaespri_dict_520_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf7",639,G__anaespri_dict_520_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf8",640,G__anaespri_dict_520_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anaespri_dict_520_0_41, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtBDC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anaespri_dict_520_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtBDC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anaespri_dict_520_0_43, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtBDC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anaespri_dict_520_0_44, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtBDC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anaespri_dict_520_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anaespri_dict_520_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtBDC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anaespri_dict_520_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtBDC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anaespri_dict_520_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtBDC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anaespri_dict_520_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtBDC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtBDC", 580, G__anaespri_dict_520_0_53, (int) ('i'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtBDC), -1, 0, 1, 1, 1, 0, "u 'TArtBDC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtBDC", 706, G__anaespri_dict_520_0_54, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anaespri_dict_520_0_55, (int) ('u'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtBDC), -1, 1, 1, 1, 1, 0, "u 'TArtBDC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibBDC(void) {
   /* TArtCalibBDC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibBDC));
   G__memfunc_setup("TArtCalibBDC",1055,G__anaespri_dict_521_0_1, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibBDC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBDCArray",1000,G__anaespri_dict_521_0_4, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumBDC",793,G__anaespri_dict_521_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBDC",489,G__anaespri_dict_521_0_6, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtBDC), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anaespri_dict_521_0_7, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibBDC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anaespri_dict_521_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibBDC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anaespri_dict_521_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibBDC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anaespri_dict_521_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibBDC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anaespri_dict_521_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anaespri_dict_521_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibBDC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anaespri_dict_521_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibBDC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anaespri_dict_521_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibBDC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anaespri_dict_521_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibBDC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibBDC", 1055, G__anaespri_dict_521_0_19, (int) ('i'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibBDC), -1, 0, 1, 1, 1, 0, "u 'TArtCalibBDC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibBDC", 1181, G__anaespri_dict_521_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anaespri_dict_521_0_21, (int) ('u'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibBDC), -1, 1, 1, 1, 1, 0, "u 'TArtCalibBDC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibRDC(void) {
   /* TArtCalibRDC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibRDC));
   G__memfunc_setup("TArtCalibRDC",1071,G__anaespri_dict_522_0_1, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibRDC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRDCArray",1016,G__anaespri_dict_522_0_4, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumRDC",809,G__anaespri_dict_522_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRDC",505,G__anaespri_dict_522_0_6, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtRDC), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anaespri_dict_522_0_7, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibRDC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anaespri_dict_522_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibRDC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anaespri_dict_522_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibRDC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anaespri_dict_522_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibRDC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anaespri_dict_522_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anaespri_dict_522_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibRDC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anaespri_dict_522_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibRDC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anaespri_dict_522_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibRDC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anaespri_dict_522_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibRDC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibRDC", 1071, G__anaespri_dict_522_0_19, (int) ('i'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibRDC), -1, 0, 1, 1, 1, 0, "u 'TArtCalibRDC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibRDC", 1197, G__anaespri_dict_522_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anaespri_dict_522_0_21, (int) ('u'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibRDC), -1, 1, 1, 1, 1, 0, "u 'TArtCalibRDC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDia(void) {
   /* TArtDia */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtDia));
   G__memfunc_setup("TArtDia",649,G__anaespri_dict_523_0_1, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtDia), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLayer",809,G__anaespri_dict_523_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPlaneID",937,G__anaespri_dict_523_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCh",471,G__anaespri_dict_523_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLayer",797,G__anaespri_dict_523_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPlaneID",925,G__anaespri_dict_523_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCh",459,G__anaespri_dict_523_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetWidth",812,G__anaespri_dict_523_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTime",699,G__anaespri_dict_523_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTimeW",786,G__anaespri_dict_523_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetWidth",800,G__anaespri_dict_523_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTime",687,G__anaespri_dict_523_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTimeW",774,G__anaespri_dict_523_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anaespri_dict_523_0_14, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtDia::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anaespri_dict_523_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtDia::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anaespri_dict_523_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtDia::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anaespri_dict_523_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtDia::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anaespri_dict_523_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anaespri_dict_523_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtDia::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anaespri_dict_523_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtDia::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anaespri_dict_523_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtDia::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anaespri_dict_523_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtDia::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtDia", 649, G__anaespri_dict_523_0_26, (int) ('i'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtDia), -1, 0, 1, 1, 1, 0, "u 'TArtDia' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtDia", 775, G__anaespri_dict_523_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anaespri_dict_523_0_28, (int) ('u'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtDia), -1, 1, 1, 1, 1, 0, "u 'TArtDia' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtPlas(void) {
   /* TArtPlas */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlas));
   G__memfunc_setup("TArtPlas",779,G__anaespri_dict_525_0_1, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLayer",809,G__anaespri_dict_525_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLayer",797,G__anaespri_dict_525_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPlaneID",937,G__anaespri_dict_525_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPlaneID",925,G__anaespri_dict_525_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCh",471,G__anaespri_dict_525_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCh",459,G__anaespri_dict_525_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRawADC",798,G__anaespri_dict_525_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRawTDC",817,G__anaespri_dict_525_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRawADC",786,G__anaespri_dict_525_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRawTDC",805,G__anaespri_dict_525_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEnergy",918,G__anaespri_dict_525_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetWidth",812,G__anaespri_dict_525_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTime",699,G__anaespri_dict_525_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTimeW",786,G__anaespri_dict_525_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergy",906,G__anaespri_dict_525_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetWidth",800,G__anaespri_dict_525_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTime",687,G__anaespri_dict_525_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTimeW",774,G__anaespri_dict_525_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anaespri_dict_525_0_20, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtPlas::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anaespri_dict_525_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtPlas::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anaespri_dict_525_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtPlas::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anaespri_dict_525_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtPlas::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anaespri_dict_525_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anaespri_dict_525_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtPlas::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anaespri_dict_525_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtPlas::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anaespri_dict_525_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtPlas::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anaespri_dict_525_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtPlas::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtPlas", 779, G__anaespri_dict_525_0_32, (int) ('i'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlas), -1, 0, 1, 1, 1, 0, "u 'TArtPlas' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtPlas", 905, G__anaespri_dict_525_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anaespri_dict_525_0_34, (int) ('u'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlas), -1, 1, 1, 1, 1, 0, "u 'TArtPlas' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibPlas(void) {
   /* TArtCalibPlas */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibPlas));
   G__memfunc_setup("TArtCalibPlas",1254,G__anaespri_dict_526_0_1, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibPlas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anaespri_dict_526_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anaespri_dict_526_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPlasArray",1199,G__anaespri_dict_526_0_6, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumPlas",992,G__anaespri_dict_526_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlas",688,G__anaespri_dict_526_0_8, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlas), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlasPara",1076,G__anaespri_dict_526_0_9, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlasPara), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPlas",785,G__anaespri_dict_526_0_10, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtPlas), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anaespri_dict_526_0_11, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibPlas::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anaespri_dict_526_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibPlas::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anaespri_dict_526_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibPlas::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anaespri_dict_526_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibPlas::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anaespri_dict_526_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anaespri_dict_526_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibPlas::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anaespri_dict_526_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibPlas::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anaespri_dict_526_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibPlas::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anaespri_dict_526_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibPlas::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibPlas", 1254, G__anaespri_dict_526_0_23, (int) ('i'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibPlas), -1, 0, 1, 1, 1, 0, "u 'TArtCalibPlas' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibPlas", 1380, G__anaespri_dict_526_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anaespri_dict_526_0_25, (int) ('u'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibPlas), -1, 1, 1, 1, 1, 0, "u 'TArtCalibPlas' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtBLD(void) {
   /* TArtBLD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtBLD));
   G__memfunc_setup("TArtBLD",589,G__anaespri_dict_531_0_1, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtBLD), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBLDX",598,G__anaespri_dict_531_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBLDY",599,G__anaespri_dict_531_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBLDA",575,G__anaespri_dict_531_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBLDB",576,G__anaespri_dict_531_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCHI2",562,G__anaespri_dict_531_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLayer",809,G__anaespri_dict_531_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBLDX",586,G__anaespri_dict_531_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBLDY",587,G__anaespri_dict_531_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBLDA",563,G__anaespri_dict_531_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBLDB",564,G__anaespri_dict_531_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLayer",797,G__anaespri_dict_531_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit",593,G__anaespri_dict_531_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDC",519,G__anaespri_dict_531_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes",598,G__anaespri_dict_531_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf",584,G__anaespri_dict_531_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes1",647,G__anaespri_dict_531_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes2",648,G__anaespri_dict_531_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes3",649,G__anaespri_dict_531_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes4",650,G__anaespri_dict_531_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes5",651,G__anaespri_dict_531_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes6",652,G__anaespri_dict_531_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes7",653,G__anaespri_dict_531_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRes8",654,G__anaespri_dict_531_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit1",642,G__anaespri_dict_531_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit2",643,G__anaespri_dict_531_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit3",644,G__anaespri_dict_531_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit4",645,G__anaespri_dict_531_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit5",646,G__anaespri_dict_531_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit6",647,G__anaespri_dict_531_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit7",648,G__anaespri_dict_531_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit8",649,G__anaespri_dict_531_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf1",633,G__anaespri_dict_531_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf2",634,G__anaespri_dict_531_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf3",635,G__anaespri_dict_531_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf4",636,G__anaespri_dict_531_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf5",637,G__anaespri_dict_531_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf6",638,G__anaespri_dict_531_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf7",639,G__anaespri_dict_531_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDrf8",640,G__anaespri_dict_531_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anaespri_dict_531_0_41, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtBLD::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anaespri_dict_531_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtBLD::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anaespri_dict_531_0_43, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtBLD::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anaespri_dict_531_0_44, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtBLD::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anaespri_dict_531_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anaespri_dict_531_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtBLD::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anaespri_dict_531_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtBLD::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anaespri_dict_531_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtBLD::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anaespri_dict_531_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtBLD::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtBLD", 589, G__anaespri_dict_531_0_53, (int) ('i'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtBLD), -1, 0, 1, 1, 1, 0, "u 'TArtBLD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtBLD", 715, G__anaespri_dict_531_0_54, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anaespri_dict_531_0_55, (int) ('u'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtBLD), -1, 1, 1, 1, 1, 0, "u 'TArtBLD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibFADC(void) {
   /* TArtCalibFADC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibFADC));
   G__memfunc_setup("TArtCalibFADC",1124,G__anaespri_dict_533_0_1, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibFADC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anaespri_dict_533_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anaespri_dict_533_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFADCArray",1069,G__anaespri_dict_533_0_6, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumFADC",862,G__anaespri_dict_533_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFADC",558,G__anaespri_dict_533_0_8, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADC), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFADCPara",946,G__anaespri_dict_533_0_9, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADCPara), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindFADC",655,G__anaespri_dict_533_0_10, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADC), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindFADC",655,G__anaespri_dict_533_0_11, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADC), -1, 0, 1, 1, 1, 0, "U 'TString' - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindFADC",655,G__anaespri_dict_533_0_12, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtFADC), -1, 0, 1, 1, 1, 0, "C - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anaespri_dict_533_0_13, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibFADC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anaespri_dict_533_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibFADC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anaespri_dict_533_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibFADC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anaespri_dict_533_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibFADC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anaespri_dict_533_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anaespri_dict_533_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibFADC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anaespri_dict_533_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibFADC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anaespri_dict_533_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibFADC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anaespri_dict_533_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibFADC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibFADC", 1124, G__anaespri_dict_533_0_25, (int) ('i'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibFADC), -1, 0, 1, 1, 1, 0, "u 'TArtCalibFADC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibFADC", 1250, G__anaespri_dict_533_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anaespri_dict_533_0_27, (int) ('u'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibFADC), -1, 1, 1, 1, 1, 0, "u 'TArtCalibFADC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibBLD(void) {
   /* TArtCalibBLD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibBLD));
   G__memfunc_setup("TArtCalibBLD",1064,G__anaespri_dict_538_0_1, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibBLD), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBLDArray",1009,G__anaespri_dict_538_0_4, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumBLD",802,G__anaespri_dict_538_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBLD",498,G__anaespri_dict_538_0_6, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtBLD), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anaespri_dict_538_0_7, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibBLD::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anaespri_dict_538_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibBLD::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anaespri_dict_538_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibBLD::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anaespri_dict_538_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibBLD::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anaespri_dict_538_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anaespri_dict_538_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibBLD::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anaespri_dict_538_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibBLD::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anaespri_dict_538_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibBLD::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anaespri_dict_538_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibBLD::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibBLD", 1064, G__anaespri_dict_538_0_19, (int) ('i'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibBLD), -1, 0, 1, 1, 1, 0, "u 'TArtCalibBLD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibBLD", 1190, G__anaespri_dict_538_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anaespri_dict_538_0_21, (int) ('u'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibBLD), -1, 1, 1, 1, 1, 0, "u 'TArtCalibBLD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibDia(void) {
   /* TArtCalibDia */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibDia));
   G__memfunc_setup("TArtCalibDia",1124,G__anaespri_dict_539_0_1, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibDia), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDiaArray",1069,G__anaespri_dict_539_0_4, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumDia",862,G__anaespri_dict_539_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDia",558,G__anaespri_dict_539_0_6, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtDia), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindDia",655,G__anaespri_dict_539_0_7, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtDia), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anaespri_dict_539_0_8, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibDia::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anaespri_dict_539_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibDia::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anaespri_dict_539_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibDia::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anaespri_dict_539_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibDia::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anaespri_dict_539_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anaespri_dict_539_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibDia::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anaespri_dict_539_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibDia::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anaespri_dict_539_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibDia::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anaespri_dict_539_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibDia::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibDia", 1124, G__anaespri_dict_539_0_20, (int) ('i'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibDia), -1, 0, 1, 1, 1, 0, "u 'TArtCalibDia' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibDia", 1250, G__anaespri_dict_539_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anaespri_dict_539_0_22, (int) ('u'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibDia), -1, 1, 1, 1, 1, 0, "u 'TArtCalibDia' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtRNaI(void) {
   /* TArtRNaI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaI));
   G__memfunc_setup("TArtRNaI",709,G__anaespri_dict_540_0_1, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaI), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLayer",809,G__anaespri_dict_540_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLayer",797,G__anaespri_dict_540_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRawADC",798,G__anaespri_dict_540_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRawTDC",817,G__anaespri_dict_540_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRawADC",786,G__anaespri_dict_540_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRawTDC",805,G__anaespri_dict_540_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEnergy",918,G__anaespri_dict_540_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTime",699,G__anaespri_dict_540_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergy",906,G__anaespri_dict_540_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTime",687,G__anaespri_dict_540_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anaespri_dict_540_0_12, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtRNaI::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anaespri_dict_540_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRNaI::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anaespri_dict_540_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtRNaI::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anaespri_dict_540_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtRNaI::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anaespri_dict_540_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anaespri_dict_540_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRNaI::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anaespri_dict_540_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRNaI::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anaespri_dict_540_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRNaI::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anaespri_dict_540_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRNaI::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtRNaI", 709, G__anaespri_dict_540_0_24, (int) ('i'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaI), -1, 0, 1, 1, 1, 0, "u 'TArtRNaI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtRNaI", 835, G__anaespri_dict_540_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anaespri_dict_540_0_26, (int) ('u'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaI), -1, 1, 1, 1, 1, 0, "u 'TArtRNaI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibRNaI(void) {
   /* TArtCalibRNaI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibRNaI));
   G__memfunc_setup("TArtCalibRNaI",1184,G__anaespri_dict_541_0_1, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibRNaI), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anaespri_dict_541_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anaespri_dict_541_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRNaIArray",1129,G__anaespri_dict_541_0_6, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumRNaI",922,G__anaespri_dict_541_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRNaI",618,G__anaespri_dict_541_0_8, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaI), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRNaIPara",1006,G__anaespri_dict_541_0_9, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaIPara), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindRNaI",715,G__anaespri_dict_541_0_10, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtRNaI), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anaespri_dict_541_0_11, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibRNaI::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anaespri_dict_541_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibRNaI::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anaespri_dict_541_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibRNaI::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anaespri_dict_541_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibRNaI::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anaespri_dict_541_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anaespri_dict_541_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibRNaI::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anaespri_dict_541_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibRNaI::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anaespri_dict_541_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibRNaI::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anaespri_dict_541_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibRNaI::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibRNaI", 1184, G__anaespri_dict_541_0_23, (int) ('i'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibRNaI), -1, 0, 1, 1, 1, 0, "u 'TArtCalibRNaI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibRNaI", 1310, G__anaespri_dict_541_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anaespri_dict_541_0_25, (int) ('u'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibRNaI), -1, 1, 1, 1, 1, 0, "u 'TArtCalibRNaI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibTDCHit(void) {
   /* TArtCalibTDCHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibTDCHit));
   G__memfunc_setup("TArtCalibTDCHit",1366,G__anaespri_dict_546_0_1, 105, G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibTDCHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anaespri_dict_546_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anaespri_dict_546_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDCHitArray",1311,G__anaespri_dict_546_0_6, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumTDCHit",1104,G__anaespri_dict_546_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDCHit",800,G__anaespri_dict_546_0_8, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHit), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDCHitPara",1188,G__anaespri_dict_546_0_9, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHitPara), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindTDCHit",897,G__anaespri_dict_546_0_10, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHit), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindTDCHit",897,G__anaespri_dict_546_0_11, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHit), -1, 0, 1, 1, 1, 0, "U 'TString' - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindTDCHit",897,G__anaespri_dict_546_0_12, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TArtTDCHit), -1, 0, 1, 1, 1, 0, "C - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anaespri_dict_546_0_13, 85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibTDCHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anaespri_dict_546_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibTDCHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anaespri_dict_546_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibTDCHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anaespri_dict_546_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibTDCHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anaespri_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anaespri_dict_546_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anaespri_dict_546_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibTDCHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anaespri_dict_546_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibTDCHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anaespri_dict_546_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibTDCHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anaespri_dict_546_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibTDCHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibTDCHit", 1366, G__anaespri_dict_546_0_25, (int) ('i'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibTDCHit), -1, 0, 1, 1, 1, 0, "u 'TArtCalibTDCHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibTDCHit", 1492, G__anaespri_dict_546_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anaespri_dict_546_0_27, (int) ('u'), G__get_linked_tagnum(&G__anaespri_dictLN_TArtCalibTDCHit), -1, 1, 1, 1, 1, 0, "u 'TArtCalibTDCHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncanaespri_dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalanaespri_dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcanaespri_dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__anaespri_dictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtRIDFMap = { "TArtRIDFMap" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtRNaIPara = { "TArtRNaIPara" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtDataObject = { "TArtDataObject" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtFADC = { "TArtFADC" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtTDCHit = { "TArtTDCHit" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtTDCHitPara = { "TArtTDCHitPara" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtRDC = { "TArtRDC" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TXMLNode = { "TXMLNode" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtStoreManager = { "TArtStoreManager" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtUserParameters = { "TArtUserParameters" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR = { "map<TString,int,less<TString>,allocator<pair<const TString,int> > >" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_maplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgR = { "map<TString,double,less<TString>,allocator<pair<const TString,double> > >" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR = { "map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtFADCPara = { "TArtFADCPara" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtPlasPara = { "TArtPlasPara" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtESPRIParameters = { "TArtESPRIParameters" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_maplETArtRIDFMapcOTArtTDCHitParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtTDCHitParamUgRsPgRsPgR = { "map<TArtRIDFMap,TArtTDCHitPara*,less<TArtRIDFMap>,allocator<pair<const TArtRIDFMap,TArtTDCHitPara*> > >" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_maplETArtRIDFMapcOTArtFADCParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtFADCParamUgRsPgRsPgR = { "map<TArtRIDFMap,TArtFADCPara*,less<TArtRIDFMap>,allocator<pair<const TArtRIDFMap,TArtFADCPara*> > >" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_maplETArtRIDFMapcOTArtPlasParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtPlasParamUgRsPgRsPgR = { "map<TArtRIDFMap,TArtPlasPara*,less<TArtRIDFMap>,allocator<pair<const TArtRIDFMap,TArtPlasPara*> > >" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_maplETArtRIDFMapcOTArtRNaIParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtRNaIParamUgRsPgRsPgR = { "map<TArtRIDFMap,TArtRNaIPara*,less<TArtRIDFMap>,allocator<pair<const TArtRIDFMap,TArtRNaIPara*> > >" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtReconstruction = { "TArtReconstruction" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtBDC = { "TArtBDC" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtCalibBDC = { "TArtCalibBDC" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtCalibRDC = { "TArtCalibRDC" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtDia = { "TArtDia" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtRawSegmentObject = { "TArtRawSegmentObject" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtPlas = { "TArtPlas" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtCalibPlas = { "TArtCalibPlas" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_vectorlETArtPlasParamUcOallocatorlETArtPlasParamUgRsPgR = { "vector<TArtPlasPara*,allocator<TArtPlasPara*> >" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_reverse_iteratorlEvectorlETArtPlasParamUcOallocatorlETArtPlasParamUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtPlasPara*,allocator<TArtPlasPara*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtBLD = { "TArtBLD" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtCalibFADC = { "TArtCalibFADC" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_vectorlETArtFADCParamUcOallocatorlETArtFADCParamUgRsPgR = { "vector<TArtFADCPara*,allocator<TArtFADCPara*> >" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_reverse_iteratorlEvectorlETArtFADCParamUcOallocatorlETArtFADCParamUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtFADCPara*,allocator<TArtFADCPara*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtCalibBLD = { "TArtCalibBLD" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtCalibDia = { "TArtCalibDia" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtRNaI = { "TArtRNaI" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtCalibRNaI = { "TArtCalibRNaI" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_vectorlETArtRNaIParamUcOallocatorlETArtRNaIParamUgRsPgR = { "vector<TArtRNaIPara*,allocator<TArtRNaIPara*> >" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_reverse_iteratorlEvectorlETArtRNaIParamUcOallocatorlETArtRNaIParamUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtRNaIPara*,allocator<TArtRNaIPara*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_TArtCalibTDCHit = { "TArtCalibTDCHit" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_vectorlETArtTDCHitParamUcOallocatorlETArtTDCHitParamUgRsPgR = { "vector<TArtTDCHitPara*,allocator<TArtTDCHitPara*> >" , 99 , -1 };
G__linked_taginfo G__anaespri_dictLN_reverse_iteratorlEvectorlETArtTDCHitParamUcOallocatorlETArtTDCHitParamUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtTDCHitPara*,allocator<TArtTDCHitPara*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableanaespri_dict() {
  G__anaespri_dictLN_TClass.tagnum = -1 ;
  G__anaespri_dictLN_TBuffer.tagnum = -1 ;
  G__anaespri_dictLN_TMemberInspector.tagnum = -1 ;
  G__anaespri_dictLN_TObject.tagnum = -1 ;
  G__anaespri_dictLN_TNamed.tagnum = -1 ;
  G__anaespri_dictLN_TString.tagnum = -1 ;
  G__anaespri_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__anaespri_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anaespri_dictLN_TList.tagnum = -1 ;
  G__anaespri_dictLN_TClonesArray.tagnum = -1 ;
  G__anaespri_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__anaespri_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anaespri_dictLN_TArtRIDFMap.tagnum = -1 ;
  G__anaespri_dictLN_TArtRNaIPara.tagnum = -1 ;
  G__anaespri_dictLN_TArtDataObject.tagnum = -1 ;
  G__anaespri_dictLN_TArtFADC.tagnum = -1 ;
  G__anaespri_dictLN_TArtTDCHit.tagnum = -1 ;
  G__anaespri_dictLN_TArtTDCHitPara.tagnum = -1 ;
  G__anaespri_dictLN_TArtRDC.tagnum = -1 ;
  G__anaespri_dictLN_TXMLNode.tagnum = -1 ;
  G__anaespri_dictLN_TArtStoreManager.tagnum = -1 ;
  G__anaespri_dictLN_TArtUserParameters.tagnum = -1 ;
  G__anaespri_dictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR.tagnum = -1 ;
  G__anaespri_dictLN_maplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__anaespri_dictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR.tagnum = -1 ;
  G__anaespri_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__anaespri_dictLN_TArtFADCPara.tagnum = -1 ;
  G__anaespri_dictLN_TArtPlasPara.tagnum = -1 ;
  G__anaespri_dictLN_TArtESPRIParameters.tagnum = -1 ;
  G__anaespri_dictLN_maplETArtRIDFMapcOTArtTDCHitParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtTDCHitParamUgRsPgRsPgR.tagnum = -1 ;
  G__anaespri_dictLN_maplETArtRIDFMapcOTArtFADCParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtFADCParamUgRsPgRsPgR.tagnum = -1 ;
  G__anaespri_dictLN_maplETArtRIDFMapcOTArtPlasParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtPlasParamUgRsPgRsPgR.tagnum = -1 ;
  G__anaespri_dictLN_maplETArtRIDFMapcOTArtRNaIParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtRNaIParamUgRsPgRsPgR.tagnum = -1 ;
  G__anaespri_dictLN_TArtReconstruction.tagnum = -1 ;
  G__anaespri_dictLN_TArtBDC.tagnum = -1 ;
  G__anaespri_dictLN_TArtCalibBDC.tagnum = -1 ;
  G__anaespri_dictLN_TArtCalibRDC.tagnum = -1 ;
  G__anaespri_dictLN_TArtDia.tagnum = -1 ;
  G__anaespri_dictLN_TArtRawSegmentObject.tagnum = -1 ;
  G__anaespri_dictLN_TArtPlas.tagnum = -1 ;
  G__anaespri_dictLN_TArtCalibPlas.tagnum = -1 ;
  G__anaespri_dictLN_vectorlETArtPlasParamUcOallocatorlETArtPlasParamUgRsPgR.tagnum = -1 ;
  G__anaespri_dictLN_reverse_iteratorlEvectorlETArtPlasParamUcOallocatorlETArtPlasParamUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anaespri_dictLN_TArtBLD.tagnum = -1 ;
  G__anaespri_dictLN_TArtCalibFADC.tagnum = -1 ;
  G__anaespri_dictLN_vectorlETArtFADCParamUcOallocatorlETArtFADCParamUgRsPgR.tagnum = -1 ;
  G__anaespri_dictLN_reverse_iteratorlEvectorlETArtFADCParamUcOallocatorlETArtFADCParamUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anaespri_dictLN_TArtCalibBLD.tagnum = -1 ;
  G__anaespri_dictLN_TArtCalibDia.tagnum = -1 ;
  G__anaespri_dictLN_TArtRNaI.tagnum = -1 ;
  G__anaespri_dictLN_TArtCalibRNaI.tagnum = -1 ;
  G__anaespri_dictLN_vectorlETArtRNaIParamUcOallocatorlETArtRNaIParamUgRsPgR.tagnum = -1 ;
  G__anaespri_dictLN_reverse_iteratorlEvectorlETArtRNaIParamUcOallocatorlETArtRNaIParamUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anaespri_dictLN_TArtCalibTDCHit.tagnum = -1 ;
  G__anaespri_dictLN_vectorlETArtTDCHitParamUcOallocatorlETArtTDCHitParamUgRsPgR.tagnum = -1 ;
  G__anaespri_dictLN_reverse_iteratorlEvectorlETArtTDCHitParamUcOallocatorlETArtTDCHitParamUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableanaespri_dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TClass);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TObject);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TString);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TList);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtRIDFMap);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtRNaIPara),sizeof(TArtRNaIPara),-1,324864,(char*)NULL,G__setup_memvarTArtRNaIPara,G__setup_memfuncTArtRNaIPara);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtDataObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtFADC),sizeof(TArtFADC),-1,292096,(char*)NULL,G__setup_memvarTArtFADC,G__setup_memfuncTArtFADC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtTDCHit),sizeof(TArtTDCHit),-1,292096,(char*)NULL,G__setup_memvarTArtTDCHit,G__setup_memfuncTArtTDCHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtTDCHitPara),sizeof(TArtTDCHitPara),-1,324864,(char*)NULL,G__setup_memvarTArtTDCHitPara,G__setup_memfuncTArtTDCHitPara);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtRDC),sizeof(TArtRDC),-1,292096,(char*)NULL,G__setup_memvarTArtRDC,G__setup_memfuncTArtRDC);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TXMLNode);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtStoreManager);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtUserParameters),sizeof(TArtUserParameters),-1,324864,(char*)NULL,G__setup_memvarTArtUserParameters,G__setup_memfuncTArtUserParameters);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_maplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtFADCPara),sizeof(TArtFADCPara),-1,324864,(char*)NULL,G__setup_memvarTArtFADCPara,G__setup_memfuncTArtFADCPara);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtPlasPara),sizeof(TArtPlasPara),-1,324864,(char*)NULL,G__setup_memvarTArtPlasPara,G__setup_memfuncTArtPlasPara);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtESPRIParameters),sizeof(TArtESPRIParameters),-1,324864,(char*)NULL,G__setup_memvarTArtESPRIParameters,G__setup_memfuncTArtESPRIParameters);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_maplETArtRIDFMapcOTArtTDCHitParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtTDCHitParamUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_maplETArtRIDFMapcOTArtFADCParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtFADCParamUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_maplETArtRIDFMapcOTArtPlasParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtPlasParamUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_maplETArtRIDFMapcOTArtRNaIParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtRNaIParamUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtReconstruction);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtBDC),sizeof(TArtBDC),-1,292096,(char*)NULL,G__setup_memvarTArtBDC,G__setup_memfuncTArtBDC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtCalibBDC),sizeof(TArtCalibBDC),-1,263424,(char*)NULL,G__setup_memvarTArtCalibBDC,G__setup_memfuncTArtCalibBDC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtCalibRDC),sizeof(TArtCalibRDC),-1,263424,(char*)NULL,G__setup_memvarTArtCalibRDC,G__setup_memfuncTArtCalibRDC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtDia),sizeof(TArtDia),-1,292096,(char*)NULL,G__setup_memvarTArtDia,G__setup_memfuncTArtDia);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtRawSegmentObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtPlas),sizeof(TArtPlas),-1,292096,(char*)NULL,G__setup_memvarTArtPlas,G__setup_memfuncTArtPlas);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtCalibPlas),sizeof(TArtCalibPlas),-1,263424,(char*)NULL,G__setup_memvarTArtCalibPlas,G__setup_memfuncTArtCalibPlas);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_vectorlETArtPlasParamUcOallocatorlETArtPlasParamUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_reverse_iteratorlEvectorlETArtPlasParamUcOallocatorlETArtPlasParamUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtBLD),sizeof(TArtBLD),-1,292096,(char*)NULL,G__setup_memvarTArtBLD,G__setup_memfuncTArtBLD);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtCalibFADC),sizeof(TArtCalibFADC),-1,263424,(char*)NULL,G__setup_memvarTArtCalibFADC,G__setup_memfuncTArtCalibFADC);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_vectorlETArtFADCParamUcOallocatorlETArtFADCParamUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_reverse_iteratorlEvectorlETArtFADCParamUcOallocatorlETArtFADCParamUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtCalibBLD),sizeof(TArtCalibBLD),-1,263424,(char*)NULL,G__setup_memvarTArtCalibBLD,G__setup_memfuncTArtCalibBLD);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtCalibDia),sizeof(TArtCalibDia),-1,263424,(char*)NULL,G__setup_memvarTArtCalibDia,G__setup_memfuncTArtCalibDia);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtRNaI),sizeof(TArtRNaI),-1,292096,(char*)NULL,G__setup_memvarTArtRNaI,G__setup_memfuncTArtRNaI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtCalibRNaI),sizeof(TArtCalibRNaI),-1,263424,(char*)NULL,G__setup_memvarTArtCalibRNaI,G__setup_memfuncTArtCalibRNaI);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_vectorlETArtRNaIParamUcOallocatorlETArtRNaIParamUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_reverse_iteratorlEvectorlETArtRNaIParamUcOallocatorlETArtRNaIParamUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anaespri_dictLN_TArtCalibTDCHit),sizeof(TArtCalibTDCHit),-1,263424,(char*)NULL,G__setup_memvarTArtCalibTDCHit,G__setup_memfuncTArtCalibTDCHit);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_vectorlETArtTDCHitParamUcOallocatorlETArtTDCHitParamUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anaespri_dictLN_reverse_iteratorlEvectorlETArtTDCHitParamUcOallocatorlETArtTDCHitParamUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupanaespri_dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupanaespri_dict()");
  G__set_cpp_environmentanaespri_dict();
  G__cpp_setup_tagtableanaespri_dict();

  G__cpp_setup_inheritanceanaespri_dict();

  G__cpp_setup_typetableanaespri_dict();

  G__cpp_setup_memvaranaespri_dict();

  G__cpp_setup_memfuncanaespri_dict();
  G__cpp_setup_globalanaespri_dict();
  G__cpp_setup_funcanaespri_dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncanaespri_dict();
  return;
}
class G__cpp_setup_initanaespri_dict {
  public:
    G__cpp_setup_initanaespri_dict() { G__add_setup_func("anaespri_dict",(G__incsetup)(&G__cpp_setupanaespri_dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initanaespri_dict() { G__remove_setup_func("anaespri_dict"); }
};
G__cpp_setup_initanaespri_dict G__cpp_setup_initializeranaespri_dict;

