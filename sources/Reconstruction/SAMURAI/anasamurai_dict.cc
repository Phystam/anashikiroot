//
// File generated by rootcint at Tue Jul 25 02:48:40 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME anasamurai_dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "anasamurai_dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void TArtTEDCsI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtTEDCsI(void *p = 0);
   static void *newArray_TArtTEDCsI(Long_t size, void *p);
   static void delete_TArtTEDCsI(void *p);
   static void deleteArray_TArtTEDCsI(void *p);
   static void destruct_TArtTEDCsI(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtTEDCsI*)
   {
      ::TArtTEDCsI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtTEDCsI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtTEDCsI", ::TArtTEDCsI::Class_Version(), "./include/TArtTEDCsI.hh", 6,
                  typeid(::TArtTEDCsI), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtTEDCsI::Dictionary, isa_proxy, 4,
                  sizeof(::TArtTEDCsI) );
      instance.SetNew(&new_TArtTEDCsI);
      instance.SetNewArray(&newArray_TArtTEDCsI);
      instance.SetDelete(&delete_TArtTEDCsI);
      instance.SetDeleteArray(&deleteArray_TArtTEDCsI);
      instance.SetDestructor(&destruct_TArtTEDCsI);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtTEDCsI*)
   {
      return GenerateInitInstanceLocal((::TArtTEDCsI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtTEDCsI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDCHitPara_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtDCHitPara(void *p = 0);
   static void *newArray_TArtDCHitPara(Long_t size, void *p);
   static void delete_TArtDCHitPara(void *p);
   static void deleteArray_TArtDCHitPara(void *p);
   static void destruct_TArtDCHitPara(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDCHitPara*)
   {
      ::TArtDCHitPara *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtDCHitPara >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDCHitPara", ::TArtDCHitPara::Class_Version(), "./include/TArtDCHitPara.hh", 12,
                  typeid(::TArtDCHitPara), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtDCHitPara::Dictionary, isa_proxy, 4,
                  sizeof(::TArtDCHitPara) );
      instance.SetNew(&new_TArtDCHitPara);
      instance.SetNewArray(&newArray_TArtDCHitPara);
      instance.SetDelete(&delete_TArtDCHitPara);
      instance.SetDeleteArray(&deleteArray_TArtDCHitPara);
      instance.SetDestructor(&destruct_TArtDCHitPara);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDCHitPara*)
   {
      return GenerateInitInstanceLocal((::TArtDCHitPara*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDCHitPara*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDCHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtDCHit(void *p = 0);
   static void *newArray_TArtDCHit(Long_t size, void *p);
   static void delete_TArtDCHit(void *p);
   static void deleteArray_TArtDCHit(void *p);
   static void destruct_TArtDCHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDCHit*)
   {
      ::TArtDCHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtDCHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDCHit", ::TArtDCHit::Class_Version(), "./include/TArtDCHit.hh", 6,
                  typeid(::TArtDCHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtDCHit::Dictionary, isa_proxy, 4,
                  sizeof(::TArtDCHit) );
      instance.SetNew(&new_TArtDCHit);
      instance.SetNewArray(&newArray_TArtDCHit);
      instance.SetDelete(&delete_TArtDCHit);
      instance.SetDeleteArray(&deleteArray_TArtDCHit);
      instance.SetDestructor(&destruct_TArtDCHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDCHit*)
   {
      return GenerateInitInstanceLocal((::TArtDCHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDCHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtSAMURAIParameters_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtSAMURAIParameters(void *p = 0);
   static void *newArray_TArtSAMURAIParameters(Long_t size, void *p);
   static void delete_TArtSAMURAIParameters(void *p);
   static void deleteArray_TArtSAMURAIParameters(void *p);
   static void destruct_TArtSAMURAIParameters(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtSAMURAIParameters*)
   {
      ::TArtSAMURAIParameters *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtSAMURAIParameters >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtSAMURAIParameters", ::TArtSAMURAIParameters::Class_Version(), "./include/TArtSAMURAIParameters.hh", 39,
                  typeid(::TArtSAMURAIParameters), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtSAMURAIParameters::Dictionary, isa_proxy, 4,
                  sizeof(::TArtSAMURAIParameters) );
      instance.SetNew(&new_TArtSAMURAIParameters);
      instance.SetNewArray(&newArray_TArtSAMURAIParameters);
      instance.SetDelete(&delete_TArtSAMURAIParameters);
      instance.SetDeleteArray(&deleteArray_TArtSAMURAIParameters);
      instance.SetDestructor(&destruct_TArtSAMURAIParameters);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtSAMURAIParameters*)
   {
      return GenerateInitInstanceLocal((::TArtSAMURAIParameters*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtSAMURAIParameters*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibDCHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TArtCalibDCHit(void *p);
   static void deleteArray_TArtCalibDCHit(void *p);
   static void destruct_TArtCalibDCHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibDCHit*)
   {
      ::TArtCalibDCHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibDCHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibDCHit", ::TArtCalibDCHit::Class_Version(), "./include/TArtCalibDCHit.hh", 16,
                  typeid(::TArtCalibDCHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibDCHit::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibDCHit) );
      instance.SetDelete(&delete_TArtCalibDCHit);
      instance.SetDeleteArray(&deleteArray_TArtCalibDCHit);
      instance.SetDestructor(&destruct_TArtCalibDCHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibDCHit*)
   {
      return GenerateInitInstanceLocal((::TArtCalibDCHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibDCHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibS1DC1Hit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibS1DC1Hit(void *p = 0);
   static void *newArray_TArtCalibS1DC1Hit(Long_t size, void *p);
   static void delete_TArtCalibS1DC1Hit(void *p);
   static void deleteArray_TArtCalibS1DC1Hit(void *p);
   static void destruct_TArtCalibS1DC1Hit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibS1DC1Hit*)
   {
      ::TArtCalibS1DC1Hit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibS1DC1Hit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibS1DC1Hit", ::TArtCalibS1DC1Hit::Class_Version(), "./include/TArtCalibS1DC1Hit.hh", 9,
                  typeid(::TArtCalibS1DC1Hit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibS1DC1Hit::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibS1DC1Hit) );
      instance.SetNew(&new_TArtCalibS1DC1Hit);
      instance.SetNewArray(&newArray_TArtCalibS1DC1Hit);
      instance.SetDelete(&delete_TArtCalibS1DC1Hit);
      instance.SetDeleteArray(&deleteArray_TArtCalibS1DC1Hit);
      instance.SetDestructor(&destruct_TArtCalibS1DC1Hit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibS1DC1Hit*)
   {
      return GenerateInitInstanceLocal((::TArtCalibS1DC1Hit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibS1DC1Hit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibBPCHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibBPCHit(void *p = 0);
   static void *newArray_TArtCalibBPCHit(Long_t size, void *p);
   static void delete_TArtCalibBPCHit(void *p);
   static void deleteArray_TArtCalibBPCHit(void *p);
   static void destruct_TArtCalibBPCHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibBPCHit*)
   {
      ::TArtCalibBPCHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibBPCHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibBPCHit", ::TArtCalibBPCHit::Class_Version(), "./include/TArtCalibBPCHit.hh", 9,
                  typeid(::TArtCalibBPCHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibBPCHit::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibBPCHit) );
      instance.SetNew(&new_TArtCalibBPCHit);
      instance.SetNewArray(&newArray_TArtCalibBPCHit);
      instance.SetDelete(&delete_TArtCalibBPCHit);
      instance.SetDeleteArray(&deleteArray_TArtCalibBPCHit);
      instance.SetDestructor(&destruct_TArtCalibBPCHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibBPCHit*)
   {
      return GenerateInitInstanceLocal((::TArtCalibBPCHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibBPCHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibBDC1Hit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibBDC1Hit(void *p = 0);
   static void *newArray_TArtCalibBDC1Hit(Long_t size, void *p);
   static void delete_TArtCalibBDC1Hit(void *p);
   static void deleteArray_TArtCalibBDC1Hit(void *p);
   static void destruct_TArtCalibBDC1Hit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibBDC1Hit*)
   {
      ::TArtCalibBDC1Hit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibBDC1Hit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibBDC1Hit", ::TArtCalibBDC1Hit::Class_Version(), "./include/TArtCalibBDC1Hit.hh", 9,
                  typeid(::TArtCalibBDC1Hit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibBDC1Hit::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibBDC1Hit) );
      instance.SetNew(&new_TArtCalibBDC1Hit);
      instance.SetNewArray(&newArray_TArtCalibBDC1Hit);
      instance.SetDelete(&delete_TArtCalibBDC1Hit);
      instance.SetDeleteArray(&deleteArray_TArtCalibBDC1Hit);
      instance.SetDestructor(&destruct_TArtCalibBDC1Hit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibBDC1Hit*)
   {
      return GenerateInitInstanceLocal((::TArtCalibBDC1Hit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibBDC1Hit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibBDC2Hit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibBDC2Hit(void *p = 0);
   static void *newArray_TArtCalibBDC2Hit(Long_t size, void *p);
   static void delete_TArtCalibBDC2Hit(void *p);
   static void deleteArray_TArtCalibBDC2Hit(void *p);
   static void destruct_TArtCalibBDC2Hit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibBDC2Hit*)
   {
      ::TArtCalibBDC2Hit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibBDC2Hit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibBDC2Hit", ::TArtCalibBDC2Hit::Class_Version(), "./include/TArtCalibBDC2Hit.hh", 9,
                  typeid(::TArtCalibBDC2Hit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibBDC2Hit::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibBDC2Hit) );
      instance.SetNew(&new_TArtCalibBDC2Hit);
      instance.SetNewArray(&newArray_TArtCalibBDC2Hit);
      instance.SetDelete(&delete_TArtCalibBDC2Hit);
      instance.SetDeleteArray(&deleteArray_TArtCalibBDC2Hit);
      instance.SetDestructor(&destruct_TArtCalibBDC2Hit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibBDC2Hit*)
   {
      return GenerateInitInstanceLocal((::TArtCalibBDC2Hit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibBDC2Hit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibFDC0Hit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibFDC0Hit(void *p = 0);
   static void *newArray_TArtCalibFDC0Hit(Long_t size, void *p);
   static void delete_TArtCalibFDC0Hit(void *p);
   static void deleteArray_TArtCalibFDC0Hit(void *p);
   static void destruct_TArtCalibFDC0Hit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibFDC0Hit*)
   {
      ::TArtCalibFDC0Hit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibFDC0Hit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibFDC0Hit", ::TArtCalibFDC0Hit::Class_Version(), "./include/TArtCalibFDC0Hit.hh", 9,
                  typeid(::TArtCalibFDC0Hit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibFDC0Hit::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibFDC0Hit) );
      instance.SetNew(&new_TArtCalibFDC0Hit);
      instance.SetNewArray(&newArray_TArtCalibFDC0Hit);
      instance.SetDelete(&delete_TArtCalibFDC0Hit);
      instance.SetDeleteArray(&deleteArray_TArtCalibFDC0Hit);
      instance.SetDestructor(&destruct_TArtCalibFDC0Hit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibFDC0Hit*)
   {
      return GenerateInitInstanceLocal((::TArtCalibFDC0Hit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibFDC0Hit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibFDC1Hit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibFDC1Hit(void *p = 0);
   static void *newArray_TArtCalibFDC1Hit(Long_t size, void *p);
   static void delete_TArtCalibFDC1Hit(void *p);
   static void deleteArray_TArtCalibFDC1Hit(void *p);
   static void destruct_TArtCalibFDC1Hit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibFDC1Hit*)
   {
      ::TArtCalibFDC1Hit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibFDC1Hit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibFDC1Hit", ::TArtCalibFDC1Hit::Class_Version(), "./include/TArtCalibFDC1Hit.hh", 9,
                  typeid(::TArtCalibFDC1Hit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibFDC1Hit::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibFDC1Hit) );
      instance.SetNew(&new_TArtCalibFDC1Hit);
      instance.SetNewArray(&newArray_TArtCalibFDC1Hit);
      instance.SetDelete(&delete_TArtCalibFDC1Hit);
      instance.SetDeleteArray(&deleteArray_TArtCalibFDC1Hit);
      instance.SetDestructor(&destruct_TArtCalibFDC1Hit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibFDC1Hit*)
   {
      return GenerateInitInstanceLocal((::TArtCalibFDC1Hit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibFDC1Hit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibFDC2Hit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibFDC2Hit(void *p = 0);
   static void *newArray_TArtCalibFDC2Hit(Long_t size, void *p);
   static void delete_TArtCalibFDC2Hit(void *p);
   static void deleteArray_TArtCalibFDC2Hit(void *p);
   static void destruct_TArtCalibFDC2Hit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibFDC2Hit*)
   {
      ::TArtCalibFDC2Hit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibFDC2Hit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibFDC2Hit", ::TArtCalibFDC2Hit::Class_Version(), "./include/TArtCalibFDC2Hit.hh", 9,
                  typeid(::TArtCalibFDC2Hit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibFDC2Hit::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibFDC2Hit) );
      instance.SetNew(&new_TArtCalibFDC2Hit);
      instance.SetNewArray(&newArray_TArtCalibFDC2Hit);
      instance.SetDelete(&delete_TArtCalibFDC2Hit);
      instance.SetDeleteArray(&deleteArray_TArtCalibFDC2Hit);
      instance.SetDestructor(&destruct_TArtCalibFDC2Hit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibFDC2Hit*)
   {
      return GenerateInitInstanceLocal((::TArtCalibFDC2Hit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibFDC2Hit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibBDC1Track_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibBDC1Track(void *p = 0);
   static void *newArray_TArtCalibBDC1Track(Long_t size, void *p);
   static void delete_TArtCalibBDC1Track(void *p);
   static void deleteArray_TArtCalibBDC1Track(void *p);
   static void destruct_TArtCalibBDC1Track(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibBDC1Track*)
   {
      ::TArtCalibBDC1Track *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibBDC1Track >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibBDC1Track", ::TArtCalibBDC1Track::Class_Version(), "./include/TArtCalibBDC1Track.hh", 11,
                  typeid(::TArtCalibBDC1Track), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibBDC1Track::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibBDC1Track) );
      instance.SetNew(&new_TArtCalibBDC1Track);
      instance.SetNewArray(&newArray_TArtCalibBDC1Track);
      instance.SetDelete(&delete_TArtCalibBDC1Track);
      instance.SetDeleteArray(&deleteArray_TArtCalibBDC1Track);
      instance.SetDestructor(&destruct_TArtCalibBDC1Track);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibBDC1Track*)
   {
      return GenerateInitInstanceLocal((::TArtCalibBDC1Track*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibBDC1Track*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibBDC2Track_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibBDC2Track(void *p = 0);
   static void *newArray_TArtCalibBDC2Track(Long_t size, void *p);
   static void delete_TArtCalibBDC2Track(void *p);
   static void deleteArray_TArtCalibBDC2Track(void *p);
   static void destruct_TArtCalibBDC2Track(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibBDC2Track*)
   {
      ::TArtCalibBDC2Track *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibBDC2Track >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibBDC2Track", ::TArtCalibBDC2Track::Class_Version(), "./include/TArtCalibBDC2Track.hh", 11,
                  typeid(::TArtCalibBDC2Track), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibBDC2Track::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibBDC2Track) );
      instance.SetNew(&new_TArtCalibBDC2Track);
      instance.SetNewArray(&newArray_TArtCalibBDC2Track);
      instance.SetDelete(&delete_TArtCalibBDC2Track);
      instance.SetDeleteArray(&deleteArray_TArtCalibBDC2Track);
      instance.SetDestructor(&destruct_TArtCalibBDC2Track);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibBDC2Track*)
   {
      return GenerateInitInstanceLocal((::TArtCalibBDC2Track*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibBDC2Track*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibFDC0Track_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibFDC0Track(void *p = 0);
   static void *newArray_TArtCalibFDC0Track(Long_t size, void *p);
   static void delete_TArtCalibFDC0Track(void *p);
   static void deleteArray_TArtCalibFDC0Track(void *p);
   static void destruct_TArtCalibFDC0Track(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibFDC0Track*)
   {
      ::TArtCalibFDC0Track *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibFDC0Track >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibFDC0Track", ::TArtCalibFDC0Track::Class_Version(), "./include/TArtCalibFDC0Track.hh", 11,
                  typeid(::TArtCalibFDC0Track), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibFDC0Track::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibFDC0Track) );
      instance.SetNew(&new_TArtCalibFDC0Track);
      instance.SetNewArray(&newArray_TArtCalibFDC0Track);
      instance.SetDelete(&delete_TArtCalibFDC0Track);
      instance.SetDeleteArray(&deleteArray_TArtCalibFDC0Track);
      instance.SetDestructor(&destruct_TArtCalibFDC0Track);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibFDC0Track*)
   {
      return GenerateInitInstanceLocal((::TArtCalibFDC0Track*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibFDC0Track*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibFDC1Track_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibFDC1Track(void *p = 0);
   static void *newArray_TArtCalibFDC1Track(Long_t size, void *p);
   static void delete_TArtCalibFDC1Track(void *p);
   static void deleteArray_TArtCalibFDC1Track(void *p);
   static void destruct_TArtCalibFDC1Track(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibFDC1Track*)
   {
      ::TArtCalibFDC1Track *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibFDC1Track >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibFDC1Track", ::TArtCalibFDC1Track::Class_Version(), "./include/TArtCalibFDC1Track.hh", 11,
                  typeid(::TArtCalibFDC1Track), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibFDC1Track::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibFDC1Track) );
      instance.SetNew(&new_TArtCalibFDC1Track);
      instance.SetNewArray(&newArray_TArtCalibFDC1Track);
      instance.SetDelete(&delete_TArtCalibFDC1Track);
      instance.SetDeleteArray(&deleteArray_TArtCalibFDC1Track);
      instance.SetDestructor(&destruct_TArtCalibFDC1Track);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibFDC1Track*)
   {
      return GenerateInitInstanceLocal((::TArtCalibFDC1Track*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibFDC1Track*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibFDC2Track_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibFDC2Track(void *p = 0);
   static void *newArray_TArtCalibFDC2Track(Long_t size, void *p);
   static void delete_TArtCalibFDC2Track(void *p);
   static void deleteArray_TArtCalibFDC2Track(void *p);
   static void destruct_TArtCalibFDC2Track(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibFDC2Track*)
   {
      ::TArtCalibFDC2Track *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibFDC2Track >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibFDC2Track", ::TArtCalibFDC2Track::Class_Version(), "./include/TArtCalibFDC2Track.hh", 11,
                  typeid(::TArtCalibFDC2Track), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibFDC2Track::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibFDC2Track) );
      instance.SetNew(&new_TArtCalibFDC2Track);
      instance.SetNewArray(&newArray_TArtCalibFDC2Track);
      instance.SetDelete(&delete_TArtCalibFDC2Track);
      instance.SetDeleteArray(&deleteArray_TArtCalibFDC2Track);
      instance.SetDestructor(&destruct_TArtCalibFDC2Track);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibFDC2Track*)
   {
      return GenerateInitInstanceLocal((::TArtCalibFDC2Track*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibFDC2Track*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibHODPla_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibHODPla(void *p = 0);
   static void *newArray_TArtCalibHODPla(Long_t size, void *p);
   static void delete_TArtCalibHODPla(void *p);
   static void deleteArray_TArtCalibHODPla(void *p);
   static void destruct_TArtCalibHODPla(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibHODPla*)
   {
      ::TArtCalibHODPla *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibHODPla >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibHODPla", ::TArtCalibHODPla::Class_Version(), "./include/TArtCalibHODPla.hh", 17,
                  typeid(::TArtCalibHODPla), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibHODPla::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibHODPla) );
      instance.SetNew(&new_TArtCalibHODPla);
      instance.SetNewArray(&newArray_TArtCalibHODPla);
      instance.SetDelete(&delete_TArtCalibHODPla);
      instance.SetDeleteArray(&deleteArray_TArtCalibHODPla);
      instance.SetDestructor(&destruct_TArtCalibHODPla);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibHODPla*)
   {
      return GenerateInitInstanceLocal((::TArtCalibHODPla*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibHODPla*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibSAMURAI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibSAMURAI(void *p = 0);
   static void *newArray_TArtCalibSAMURAI(Long_t size, void *p);
   static void delete_TArtCalibSAMURAI(void *p);
   static void deleteArray_TArtCalibSAMURAI(void *p);
   static void destruct_TArtCalibSAMURAI(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibSAMURAI*)
   {
      ::TArtCalibSAMURAI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibSAMURAI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibSAMURAI", ::TArtCalibSAMURAI::Class_Version(), "./include/TArtCalibSAMURAI.hh", 27,
                  typeid(::TArtCalibSAMURAI), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibSAMURAI::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibSAMURAI) );
      instance.SetNew(&new_TArtCalibSAMURAI);
      instance.SetNewArray(&newArray_TArtCalibSAMURAI);
      instance.SetDelete(&delete_TArtCalibSAMURAI);
      instance.SetDeleteArray(&deleteArray_TArtCalibSAMURAI);
      instance.SetDestructor(&destruct_TArtCalibSAMURAI);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibSAMURAI*)
   {
      return GenerateInitInstanceLocal((::TArtCalibSAMURAI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibSAMURAI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtTacquilaMap_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtTacquilaMap(void *p = 0);
   static void *newArray_TArtTacquilaMap(Long_t size, void *p);
   static void delete_TArtTacquilaMap(void *p);
   static void deleteArray_TArtTacquilaMap(void *p);
   static void destruct_TArtTacquilaMap(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtTacquilaMap*)
   {
      ::TArtTacquilaMap *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtTacquilaMap >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtTacquilaMap", ::TArtTacquilaMap::Class_Version(), "./include/TArtTacquilaMap.hh", 7,
                  typeid(::TArtTacquilaMap), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtTacquilaMap::Dictionary, isa_proxy, 4,
                  sizeof(::TArtTacquilaMap) );
      instance.SetNew(&new_TArtTacquilaMap);
      instance.SetNewArray(&newArray_TArtTacquilaMap);
      instance.SetDelete(&delete_TArtTacquilaMap);
      instance.SetDeleteArray(&deleteArray_TArtTacquilaMap);
      instance.SetDestructor(&destruct_TArtTacquilaMap);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtTacquilaMap*)
   {
      return GenerateInitInstanceLocal((::TArtTacquilaMap*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtTacquilaMap*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtHODPlaPara_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtHODPlaPara(void *p = 0);
   static void *newArray_TArtHODPlaPara(Long_t size, void *p);
   static void delete_TArtHODPlaPara(void *p);
   static void deleteArray_TArtHODPlaPara(void *p);
   static void destruct_TArtHODPlaPara(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtHODPlaPara*)
   {
      ::TArtHODPlaPara *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtHODPlaPara >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtHODPlaPara", ::TArtHODPlaPara::Class_Version(), "./include/TArtHODPlaPara.hh", 12,
                  typeid(::TArtHODPlaPara), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtHODPlaPara::Dictionary, isa_proxy, 4,
                  sizeof(::TArtHODPlaPara) );
      instance.SetNew(&new_TArtHODPlaPara);
      instance.SetNewArray(&newArray_TArtHODPlaPara);
      instance.SetDelete(&delete_TArtHODPlaPara);
      instance.SetDeleteArray(&deleteArray_TArtHODPlaPara);
      instance.SetDestructor(&destruct_TArtHODPlaPara);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtHODPlaPara*)
   {
      return GenerateInitInstanceLocal((::TArtHODPlaPara*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtHODPlaPara*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtRPTOFPlaPara_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtRPTOFPlaPara(void *p = 0);
   static void *newArray_TArtRPTOFPlaPara(Long_t size, void *p);
   static void delete_TArtRPTOFPlaPara(void *p);
   static void deleteArray_TArtRPTOFPlaPara(void *p);
   static void destruct_TArtRPTOFPlaPara(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtRPTOFPlaPara*)
   {
      ::TArtRPTOFPlaPara *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtRPTOFPlaPara >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtRPTOFPlaPara", ::TArtRPTOFPlaPara::Class_Version(), "./include/TArtRPTOFPlaPara.hh", 12,
                  typeid(::TArtRPTOFPlaPara), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtRPTOFPlaPara::Dictionary, isa_proxy, 4,
                  sizeof(::TArtRPTOFPlaPara) );
      instance.SetNew(&new_TArtRPTOFPlaPara);
      instance.SetNewArray(&newArray_TArtRPTOFPlaPara);
      instance.SetDelete(&delete_TArtRPTOFPlaPara);
      instance.SetDeleteArray(&deleteArray_TArtRPTOFPlaPara);
      instance.SetDestructor(&destruct_TArtRPTOFPlaPara);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtRPTOFPlaPara*)
   {
      return GenerateInitInstanceLocal((::TArtRPTOFPlaPara*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtRPTOFPlaPara*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtTEDCsIPara_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtTEDCsIPara(void *p = 0);
   static void *newArray_TArtTEDCsIPara(Long_t size, void *p);
   static void delete_TArtTEDCsIPara(void *p);
   static void deleteArray_TArtTEDCsIPara(void *p);
   static void destruct_TArtTEDCsIPara(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtTEDCsIPara*)
   {
      ::TArtTEDCsIPara *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtTEDCsIPara >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtTEDCsIPara", ::TArtTEDCsIPara::Class_Version(), "./include/TArtTEDCsIPara.hh", 10,
                  typeid(::TArtTEDCsIPara), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtTEDCsIPara::Dictionary, isa_proxy, 4,
                  sizeof(::TArtTEDCsIPara) );
      instance.SetNew(&new_TArtTEDCsIPara);
      instance.SetNewArray(&newArray_TArtTEDCsIPara);
      instance.SetDelete(&delete_TArtTEDCsIPara);
      instance.SetDeleteArray(&deleteArray_TArtTEDCsIPara);
      instance.SetDestructor(&destruct_TArtTEDCsIPara);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtTEDCsIPara*)
   {
      return GenerateInitInstanceLocal((::TArtTEDCsIPara*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtTEDCsIPara*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtNEBULAPlaPara_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtNEBULAPlaPara(void *p = 0);
   static void *newArray_TArtNEBULAPlaPara(Long_t size, void *p);
   static void delete_TArtNEBULAPlaPara(void *p);
   static void deleteArray_TArtNEBULAPlaPara(void *p);
   static void destruct_TArtNEBULAPlaPara(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtNEBULAPlaPara*)
   {
      ::TArtNEBULAPlaPara *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtNEBULAPlaPara >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtNEBULAPlaPara", ::TArtNEBULAPlaPara::Class_Version(), "./include/TArtNEBULAPlaPara.hh", 10,
                  typeid(::TArtNEBULAPlaPara), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtNEBULAPlaPara::Dictionary, isa_proxy, 4,
                  sizeof(::TArtNEBULAPlaPara) );
      instance.SetNew(&new_TArtNEBULAPlaPara);
      instance.SetNewArray(&newArray_TArtNEBULAPlaPara);
      instance.SetDelete(&delete_TArtNEBULAPlaPara);
      instance.SetDeleteArray(&deleteArray_TArtNEBULAPlaPara);
      instance.SetDestructor(&destruct_TArtNEBULAPlaPara);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtNEBULAPlaPara*)
   {
      return GenerateInitInstanceLocal((::TArtNEBULAPlaPara*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtNEBULAPlaPara*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtNeuLANDPlaPara_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtNeuLANDPlaPara(void *p = 0);
   static void *newArray_TArtNeuLANDPlaPara(Long_t size, void *p);
   static void delete_TArtNeuLANDPlaPara(void *p);
   static void deleteArray_TArtNeuLANDPlaPara(void *p);
   static void destruct_TArtNeuLANDPlaPara(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtNeuLANDPlaPara*)
   {
      ::TArtNeuLANDPlaPara *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtNeuLANDPlaPara >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtNeuLANDPlaPara", ::TArtNeuLANDPlaPara::Class_Version(), "./include/TArtNeuLANDPlaPara.hh", 45,
                  typeid(::TArtNeuLANDPlaPara), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtNeuLANDPlaPara::Dictionary, isa_proxy, 4,
                  sizeof(::TArtNeuLANDPlaPara) );
      instance.SetNew(&new_TArtNeuLANDPlaPara);
      instance.SetNewArray(&newArray_TArtNeuLANDPlaPara);
      instance.SetDelete(&delete_TArtNeuLANDPlaPara);
      instance.SetDeleteArray(&deleteArray_TArtNeuLANDPlaPara);
      instance.SetDestructor(&destruct_TArtNeuLANDPlaPara);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtNeuLANDPlaPara*)
   {
      return GenerateInitInstanceLocal((::TArtNeuLANDPlaPara*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtNeuLANDPlaPara*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtTacquilaPara_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtTacquilaPara(void *p = 0);
   static void *newArray_TArtTacquilaPara(Long_t size, void *p);
   static void delete_TArtTacquilaPara(void *p);
   static void deleteArray_TArtTacquilaPara(void *p);
   static void destruct_TArtTacquilaPara(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtTacquilaPara*)
   {
      ::TArtTacquilaPara *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtTacquilaPara >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtTacquilaPara", ::TArtTacquilaPara::Class_Version(), "./include/TArtNeuLANDPlaPara.hh", 10,
                  typeid(::TArtTacquilaPara), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtTacquilaPara::Dictionary, isa_proxy, 4,
                  sizeof(::TArtTacquilaPara) );
      instance.SetNew(&new_TArtTacquilaPara);
      instance.SetNewArray(&newArray_TArtTacquilaPara);
      instance.SetDelete(&delete_TArtTacquilaPara);
      instance.SetDeleteArray(&deleteArray_TArtTacquilaPara);
      instance.SetDestructor(&destruct_TArtTacquilaPara);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtTacquilaPara*)
   {
      return GenerateInitInstanceLocal((::TArtTacquilaPara*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtTacquilaPara*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtHIMEPlaPara_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtHIMEPlaPara(void *p = 0);
   static void *newArray_TArtHIMEPlaPara(Long_t size, void *p);
   static void delete_TArtHIMEPlaPara(void *p);
   static void deleteArray_TArtHIMEPlaPara(void *p);
   static void destruct_TArtHIMEPlaPara(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtHIMEPlaPara*)
   {
      ::TArtHIMEPlaPara *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtHIMEPlaPara >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtHIMEPlaPara", ::TArtHIMEPlaPara::Class_Version(), "./include/TArtHIMEPlaPara.hh", 10,
                  typeid(::TArtHIMEPlaPara), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtHIMEPlaPara::Dictionary, isa_proxy, 4,
                  sizeof(::TArtHIMEPlaPara) );
      instance.SetNew(&new_TArtHIMEPlaPara);
      instance.SetNewArray(&newArray_TArtHIMEPlaPara);
      instance.SetDelete(&delete_TArtHIMEPlaPara);
      instance.SetDeleteArray(&deleteArray_TArtHIMEPlaPara);
      instance.SetDestructor(&destruct_TArtHIMEPlaPara);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtHIMEPlaPara*)
   {
      return GenerateInitInstanceLocal((::TArtHIMEPlaPara*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtHIMEPlaPara*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtNEBULAHPCPara_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtNEBULAHPCPara(void *p = 0);
   static void *newArray_TArtNEBULAHPCPara(Long_t size, void *p);
   static void delete_TArtNEBULAHPCPara(void *p);
   static void deleteArray_TArtNEBULAHPCPara(void *p);
   static void destruct_TArtNEBULAHPCPara(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtNEBULAHPCPara*)
   {
      ::TArtNEBULAHPCPara *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtNEBULAHPCPara >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtNEBULAHPCPara", ::TArtNEBULAHPCPara::Class_Version(), "./include/TArtNEBULAHPCPara.hh", 10,
                  typeid(::TArtNEBULAHPCPara), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtNEBULAHPCPara::Dictionary, isa_proxy, 4,
                  sizeof(::TArtNEBULAHPCPara) );
      instance.SetNew(&new_TArtNEBULAHPCPara);
      instance.SetNewArray(&newArray_TArtNEBULAHPCPara);
      instance.SetDelete(&delete_TArtNEBULAHPCPara);
      instance.SetDeleteArray(&deleteArray_TArtNEBULAHPCPara);
      instance.SetDestructor(&destruct_TArtNEBULAHPCPara);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtNEBULAHPCPara*)
   {
      return GenerateInitInstanceLocal((::TArtNEBULAHPCPara*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtNEBULAHPCPara*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtNEBULAPla_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtNEBULAPla(void *p = 0);
   static void *newArray_TArtNEBULAPla(Long_t size, void *p);
   static void delete_TArtNEBULAPla(void *p);
   static void deleteArray_TArtNEBULAPla(void *p);
   static void destruct_TArtNEBULAPla(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtNEBULAPla*)
   {
      ::TArtNEBULAPla *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtNEBULAPla >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtNEBULAPla", ::TArtNEBULAPla::Class_Version(), "./include/TArtNEBULAPla.hh", 11,
                  typeid(::TArtNEBULAPla), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtNEBULAPla::Dictionary, isa_proxy, 4,
                  sizeof(::TArtNEBULAPla) );
      instance.SetNew(&new_TArtNEBULAPla);
      instance.SetNewArray(&newArray_TArtNEBULAPla);
      instance.SetDelete(&delete_TArtNEBULAPla);
      instance.SetDeleteArray(&deleteArray_TArtNEBULAPla);
      instance.SetDestructor(&destruct_TArtNEBULAPla);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtNEBULAPla*)
   {
      return GenerateInitInstanceLocal((::TArtNEBULAPla*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtNEBULAPla*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtNEBULAHPC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtNEBULAHPC(void *p = 0);
   static void *newArray_TArtNEBULAHPC(Long_t size, void *p);
   static void delete_TArtNEBULAHPC(void *p);
   static void deleteArray_TArtNEBULAHPC(void *p);
   static void destruct_TArtNEBULAHPC(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtNEBULAHPC*)
   {
      ::TArtNEBULAHPC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtNEBULAHPC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtNEBULAHPC", ::TArtNEBULAHPC::Class_Version(), "./include/TArtNEBULAHPC.hh", 11,
                  typeid(::TArtNEBULAHPC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtNEBULAHPC::Dictionary, isa_proxy, 4,
                  sizeof(::TArtNEBULAHPC) );
      instance.SetNew(&new_TArtNEBULAHPC);
      instance.SetNewArray(&newArray_TArtNEBULAHPC);
      instance.SetDelete(&delete_TArtNEBULAHPC);
      instance.SetDeleteArray(&deleteArray_TArtNEBULAHPC);
      instance.SetDestructor(&destruct_TArtNEBULAHPC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtNEBULAHPC*)
   {
      return GenerateInitInstanceLocal((::TArtNEBULAHPC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtNEBULAHPC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibNEBULAHPC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibNEBULAHPC(void *p = 0);
   static void *newArray_TArtCalibNEBULAHPC(Long_t size, void *p);
   static void delete_TArtCalibNEBULAHPC(void *p);
   static void deleteArray_TArtCalibNEBULAHPC(void *p);
   static void destruct_TArtCalibNEBULAHPC(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibNEBULAHPC*)
   {
      ::TArtCalibNEBULAHPC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibNEBULAHPC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibNEBULAHPC", ::TArtCalibNEBULAHPC::Class_Version(), "./include/TArtCalibNEBULAHPC.hh", 25,
                  typeid(::TArtCalibNEBULAHPC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibNEBULAHPC::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibNEBULAHPC) );
      instance.SetNew(&new_TArtCalibNEBULAHPC);
      instance.SetNewArray(&newArray_TArtCalibNEBULAHPC);
      instance.SetDelete(&delete_TArtCalibNEBULAHPC);
      instance.SetDeleteArray(&deleteArray_TArtCalibNEBULAHPC);
      instance.SetDestructor(&destruct_TArtCalibNEBULAHPC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibNEBULAHPC*)
   {
      return GenerateInitInstanceLocal((::TArtCalibNEBULAHPC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibNEBULAHPC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtHIMEPla_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtHIMEPla(void *p = 0);
   static void *newArray_TArtHIMEPla(Long_t size, void *p);
   static void delete_TArtHIMEPla(void *p);
   static void deleteArray_TArtHIMEPla(void *p);
   static void destruct_TArtHIMEPla(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtHIMEPla*)
   {
      ::TArtHIMEPla *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtHIMEPla >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtHIMEPla", ::TArtHIMEPla::Class_Version(), "./include/TArtHIMEPla.hh", 11,
                  typeid(::TArtHIMEPla), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtHIMEPla::Dictionary, isa_proxy, 4,
                  sizeof(::TArtHIMEPla) );
      instance.SetNew(&new_TArtHIMEPla);
      instance.SetNewArray(&newArray_TArtHIMEPla);
      instance.SetDelete(&delete_TArtHIMEPla);
      instance.SetDeleteArray(&deleteArray_TArtHIMEPla);
      instance.SetDestructor(&destruct_TArtHIMEPla);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtHIMEPla*)
   {
      return GenerateInitInstanceLocal((::TArtHIMEPla*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtHIMEPla*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibNEBULA_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibNEBULA(void *p = 0);
   static void *newArray_TArtCalibNEBULA(Long_t size, void *p);
   static void delete_TArtCalibNEBULA(void *p);
   static void deleteArray_TArtCalibNEBULA(void *p);
   static void destruct_TArtCalibNEBULA(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibNEBULA*)
   {
      ::TArtCalibNEBULA *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibNEBULA >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibNEBULA", ::TArtCalibNEBULA::Class_Version(), "./include/TArtCalibNEBULA.hh", 61,
                  typeid(::TArtCalibNEBULA), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibNEBULA::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibNEBULA) );
      instance.SetNew(&new_TArtCalibNEBULA);
      instance.SetNewArray(&newArray_TArtCalibNEBULA);
      instance.SetDelete(&delete_TArtCalibNEBULA);
      instance.SetDeleteArray(&deleteArray_TArtCalibNEBULA);
      instance.SetDestructor(&destruct_TArtCalibNEBULA);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibNEBULA*)
   {
      return GenerateInitInstanceLocal((::TArtCalibNEBULA*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibNEBULA*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtRecoNeutron_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtRecoNeutron(void *p = 0);
   static void *newArray_TArtRecoNeutron(Long_t size, void *p);
   static void delete_TArtRecoNeutron(void *p);
   static void deleteArray_TArtRecoNeutron(void *p);
   static void destruct_TArtRecoNeutron(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtRecoNeutron*)
   {
      ::TArtRecoNeutron *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtRecoNeutron >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtRecoNeutron", ::TArtRecoNeutron::Class_Version(), "./include/TArtRecoNeutron.hh", 16,
                  typeid(::TArtRecoNeutron), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtRecoNeutron::Dictionary, isa_proxy, 4,
                  sizeof(::TArtRecoNeutron) );
      instance.SetNew(&new_TArtRecoNeutron);
      instance.SetNewArray(&newArray_TArtRecoNeutron);
      instance.SetDelete(&delete_TArtRecoNeutron);
      instance.SetDeleteArray(&deleteArray_TArtRecoNeutron);
      instance.SetDestructor(&destruct_TArtRecoNeutron);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtRecoNeutron*)
   {
      return GenerateInitInstanceLocal((::TArtRecoNeutron*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtRecoNeutron*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtNEBULAFilter_ShowMembers(void *obj, TMemberInspector &R__insp);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtNEBULAFilter*)
   {
      ::TArtNEBULAFilter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtNEBULAFilter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtNEBULAFilter", ::TArtNEBULAFilter::Class_Version(), "./include/TArtNEBULAFilter.hh", 10,
                  typeid(::TArtNEBULAFilter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtNEBULAFilter::Dictionary, isa_proxy, 4,
                  sizeof(::TArtNEBULAFilter) );
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtNEBULAFilter*)
   {
      return GenerateInitInstanceLocal((::TArtNEBULAFilter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtNEBULAFilter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibHIME_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibHIME(void *p = 0);
   static void *newArray_TArtCalibHIME(Long_t size, void *p);
   static void delete_TArtCalibHIME(void *p);
   static void deleteArray_TArtCalibHIME(void *p);
   static void destruct_TArtCalibHIME(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibHIME*)
   {
      ::TArtCalibHIME *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibHIME >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibHIME", ::TArtCalibHIME::Class_Version(), "./include/TArtCalibHIME.hh", 65,
                  typeid(::TArtCalibHIME), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibHIME::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibHIME) );
      instance.SetNew(&new_TArtCalibHIME);
      instance.SetNewArray(&newArray_TArtCalibHIME);
      instance.SetDelete(&delete_TArtCalibHIME);
      instance.SetDeleteArray(&deleteArray_TArtCalibHIME);
      instance.SetDestructor(&destruct_TArtCalibHIME);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibHIME*)
   {
      return GenerateInitInstanceLocal((::TArtCalibHIME*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibHIME*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtHIMEFilter_ShowMembers(void *obj, TMemberInspector &R__insp);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtHIMEFilter*)
   {
      ::TArtHIMEFilter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtHIMEFilter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtHIMEFilter", ::TArtHIMEFilter::Class_Version(), "./include/TArtHIMEFilter.hh", 10,
                  typeid(::TArtHIMEFilter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtHIMEFilter::Dictionary, isa_proxy, 4,
                  sizeof(::TArtHIMEFilter) );
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtHIMEFilter*)
   {
      return GenerateInitInstanceLocal((::TArtHIMEFilter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtHIMEFilter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtDCTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtDCTrack(void *p = 0);
   static void *newArray_TArtDCTrack(Long_t size, void *p);
   static void delete_TArtDCTrack(void *p);
   static void deleteArray_TArtDCTrack(void *p);
   static void destruct_TArtDCTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtDCTrack*)
   {
      ::TArtDCTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtDCTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtDCTrack", ::TArtDCTrack::Class_Version(), "./include/TArtDCTrack.hh", 16,
                  typeid(::TArtDCTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtDCTrack::Dictionary, isa_proxy, 4,
                  sizeof(::TArtDCTrack) );
      instance.SetNew(&new_TArtDCTrack);
      instance.SetNewArray(&newArray_TArtDCTrack);
      instance.SetDelete(&delete_TArtDCTrack);
      instance.SetDeleteArray(&deleteArray_TArtDCTrack);
      instance.SetDestructor(&destruct_TArtDCTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtDCTrack*)
   {
      return GenerateInitInstanceLocal((::TArtDCTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtDCTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibDCTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TArtCalibDCTrack(void *p);
   static void deleteArray_TArtCalibDCTrack(void *p);
   static void destruct_TArtCalibDCTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibDCTrack*)
   {
      ::TArtCalibDCTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibDCTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibDCTrack", ::TArtCalibDCTrack::Class_Version(), "./include/TArtCalibDCTrack.hh", 45,
                  typeid(::TArtCalibDCTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibDCTrack::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibDCTrack) );
      instance.SetDelete(&delete_TArtCalibDCTrack);
      instance.SetDeleteArray(&deleteArray_TArtCalibDCTrack);
      instance.SetDestructor(&destruct_TArtCalibDCTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibDCTrack*)
   {
      return GenerateInitInstanceLocal((::TArtCalibDCTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibDCTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibRPDCTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibRPDCTrack(void *p = 0);
   static void *newArray_TArtCalibRPDCTrack(Long_t size, void *p);
   static void delete_TArtCalibRPDCTrack(void *p);
   static void deleteArray_TArtCalibRPDCTrack(void *p);
   static void destruct_TArtCalibRPDCTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibRPDCTrack*)
   {
      ::TArtCalibRPDCTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibRPDCTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibRPDCTrack", ::TArtCalibRPDCTrack::Class_Version(), "./include/TArtCalibRPDCTrack.hh", 11,
                  typeid(::TArtCalibRPDCTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibRPDCTrack::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibRPDCTrack) );
      instance.SetNew(&new_TArtCalibRPDCTrack);
      instance.SetNewArray(&newArray_TArtCalibRPDCTrack);
      instance.SetDelete(&delete_TArtCalibRPDCTrack);
      instance.SetDeleteArray(&deleteArray_TArtCalibRPDCTrack);
      instance.SetDestructor(&destruct_TArtCalibRPDCTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibRPDCTrack*)
   {
      return GenerateInitInstanceLocal((::TArtCalibRPDCTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibRPDCTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtHODPla_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtHODPla(void *p = 0);
   static void *newArray_TArtHODPla(Long_t size, void *p);
   static void delete_TArtHODPla(void *p);
   static void deleteArray_TArtHODPla(void *p);
   static void destruct_TArtHODPla(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtHODPla*)
   {
      ::TArtHODPla *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtHODPla >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtHODPla", ::TArtHODPla::Class_Version(), "./include/TArtHODPla.hh", 6,
                  typeid(::TArtHODPla), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtHODPla::Dictionary, isa_proxy, 4,
                  sizeof(::TArtHODPla) );
      instance.SetNew(&new_TArtHODPla);
      instance.SetNewArray(&newArray_TArtHODPla);
      instance.SetDelete(&delete_TArtHODPla);
      instance.SetDeleteArray(&deleteArray_TArtHODPla);
      instance.SetDestructor(&destruct_TArtHODPla);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtHODPla*)
   {
      return GenerateInitInstanceLocal((::TArtHODPla*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtHODPla*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtNeuLANDPla_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtNeuLANDPla(void *p = 0);
   static void *newArray_TArtNeuLANDPla(Long_t size, void *p);
   static void delete_TArtNeuLANDPla(void *p);
   static void deleteArray_TArtNeuLANDPla(void *p);
   static void destruct_TArtNeuLANDPla(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtNeuLANDPla*)
   {
      ::TArtNeuLANDPla *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtNeuLANDPla >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtNeuLANDPla", ::TArtNeuLANDPla::Class_Version(), "./include/TArtNeuLANDPla.hh", 11,
                  typeid(::TArtNeuLANDPla), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtNeuLANDPla::Dictionary, isa_proxy, 4,
                  sizeof(::TArtNeuLANDPla) );
      instance.SetNew(&new_TArtNeuLANDPla);
      instance.SetNewArray(&newArray_TArtNeuLANDPla);
      instance.SetDelete(&delete_TArtNeuLANDPla);
      instance.SetDeleteArray(&deleteArray_TArtNeuLANDPla);
      instance.SetDestructor(&destruct_TArtNeuLANDPla);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtNeuLANDPla*)
   {
      return GenerateInitInstanceLocal((::TArtNeuLANDPla*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtNeuLANDPla*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibNeuLAND_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibNeuLAND(void *p = 0);
   static void *newArray_TArtCalibNeuLAND(Long_t size, void *p);
   static void delete_TArtCalibNeuLAND(void *p);
   static void deleteArray_TArtCalibNeuLAND(void *p);
   static void destruct_TArtCalibNeuLAND(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibNeuLAND*)
   {
      ::TArtCalibNeuLAND *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibNeuLAND >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibNeuLAND", ::TArtCalibNeuLAND::Class_Version(), "./include/TArtCalibNeuLAND.hh", 39,
                  typeid(::TArtCalibNeuLAND), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibNeuLAND::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibNeuLAND) );
      instance.SetNew(&new_TArtCalibNeuLAND);
      instance.SetNewArray(&newArray_TArtCalibNeuLAND);
      instance.SetDelete(&delete_TArtCalibNeuLAND);
      instance.SetDeleteArray(&deleteArray_TArtCalibNeuLAND);
      instance.SetDestructor(&destruct_TArtCalibNeuLAND);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibNeuLAND*)
   {
      return GenerateInitInstanceLocal((::TArtCalibNeuLAND*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibNeuLAND*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibS1DC2Track_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibS1DC2Track(void *p = 0);
   static void *newArray_TArtCalibS1DC2Track(Long_t size, void *p);
   static void delete_TArtCalibS1DC2Track(void *p);
   static void deleteArray_TArtCalibS1DC2Track(void *p);
   static void destruct_TArtCalibS1DC2Track(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibS1DC2Track*)
   {
      ::TArtCalibS1DC2Track *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibS1DC2Track >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibS1DC2Track", ::TArtCalibS1DC2Track::Class_Version(), "./include/TArtCalibS1DC2Track.hh", 11,
                  typeid(::TArtCalibS1DC2Track), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibS1DC2Track::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibS1DC2Track) );
      instance.SetNew(&new_TArtCalibS1DC2Track);
      instance.SetNewArray(&newArray_TArtCalibS1DC2Track);
      instance.SetDelete(&delete_TArtCalibS1DC2Track);
      instance.SetDeleteArray(&deleteArray_TArtCalibS1DC2Track);
      instance.SetDestructor(&destruct_TArtCalibS1DC2Track);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibS1DC2Track*)
   {
      return GenerateInitInstanceLocal((::TArtCalibS1DC2Track*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibS1DC2Track*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtTZero_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtTZero(void *p = 0);
   static void *newArray_TArtTZero(Long_t size, void *p);
   static void delete_TArtTZero(void *p);
   static void deleteArray_TArtTZero(void *p);
   static void destruct_TArtTZero(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtTZero*)
   {
      ::TArtTZero *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtTZero >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtTZero", ::TArtTZero::Class_Version(), "./include/TArtTZero.hh", 10,
                  typeid(::TArtTZero), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtTZero::Dictionary, isa_proxy, 4,
                  sizeof(::TArtTZero) );
      instance.SetNew(&new_TArtTZero);
      instance.SetNewArray(&newArray_TArtTZero);
      instance.SetDelete(&delete_TArtTZero);
      instance.SetDeleteArray(&deleteArray_TArtTZero);
      instance.SetDestructor(&destruct_TArtTZero);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtTZero*)
   {
      return GenerateInitInstanceLocal((::TArtTZero*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtTZero*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibS1DC1Track_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibS1DC1Track(void *p = 0);
   static void *newArray_TArtCalibS1DC1Track(Long_t size, void *p);
   static void delete_TArtCalibS1DC1Track(void *p);
   static void deleteArray_TArtCalibS1DC1Track(void *p);
   static void destruct_TArtCalibS1DC1Track(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibS1DC1Track*)
   {
      ::TArtCalibS1DC1Track *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibS1DC1Track >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibS1DC1Track", ::TArtCalibS1DC1Track::Class_Version(), "./include/TArtCalibS1DC1Track.hh", 11,
                  typeid(::TArtCalibS1DC1Track), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibS1DC1Track::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibS1DC1Track) );
      instance.SetNew(&new_TArtCalibS1DC1Track);
      instance.SetNewArray(&newArray_TArtCalibS1DC1Track);
      instance.SetDelete(&delete_TArtCalibS1DC1Track);
      instance.SetDeleteArray(&deleteArray_TArtCalibS1DC1Track);
      instance.SetDestructor(&destruct_TArtCalibS1DC1Track);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibS1DC1Track*)
   {
      return GenerateInitInstanceLocal((::TArtCalibS1DC1Track*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibS1DC1Track*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtNeutron_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtNeutron(void *p = 0);
   static void *newArray_TArtNeutron(Long_t size, void *p);
   static void delete_TArtNeutron(void *p);
   static void deleteArray_TArtNeutron(void *p);
   static void destruct_TArtNeutron(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtNeutron*)
   {
      ::TArtNeutron *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtNeutron >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtNeutron", ::TArtNeutron::Class_Version(), "./include/TArtNeutron.hh", 8,
                  typeid(::TArtNeutron), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtNeutron::Dictionary, isa_proxy, 4,
                  sizeof(::TArtNeutron) );
      instance.SetNew(&new_TArtNeutron);
      instance.SetNewArray(&newArray_TArtNeutron);
      instance.SetDelete(&delete_TArtNeutron);
      instance.SetDeleteArray(&deleteArray_TArtNeutron);
      instance.SetDestructor(&destruct_TArtNeutron);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtNeutron*)
   {
      return GenerateInitInstanceLocal((::TArtNeutron*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtNeutron*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtICF_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtICF(void *p = 0);
   static void *newArray_TArtICF(Long_t size, void *p);
   static void delete_TArtICF(void *p);
   static void deleteArray_TArtICF(void *p);
   static void destruct_TArtICF(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtICF*)
   {
      ::TArtICF *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtICF >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtICF", ::TArtICF::Class_Version(), "./include/TArtICF.hh", 12,
                  typeid(::TArtICF), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtICF::Dictionary, isa_proxy, 4,
                  sizeof(::TArtICF) );
      instance.SetNew(&new_TArtICF);
      instance.SetNewArray(&newArray_TArtICF);
      instance.SetDelete(&delete_TArtICF);
      instance.SetDeleteArray(&deleteArray_TArtICF);
      instance.SetDestructor(&destruct_TArtICF);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtICF*)
   {
      return GenerateInitInstanceLocal((::TArtICF*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtICF*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtRPTOFPla_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtRPTOFPla(void *p = 0);
   static void *newArray_TArtRPTOFPla(Long_t size, void *p);
   static void delete_TArtRPTOFPla(void *p);
   static void deleteArray_TArtRPTOFPla(void *p);
   static void destruct_TArtRPTOFPla(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtRPTOFPla*)
   {
      ::TArtRPTOFPla *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtRPTOFPla >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtRPTOFPla", ::TArtRPTOFPla::Class_Version(), "./include/TArtRPTOFPla.hh", 11,
                  typeid(::TArtRPTOFPla), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtRPTOFPla::Dictionary, isa_proxy, 4,
                  sizeof(::TArtRPTOFPla) );
      instance.SetNew(&new_TArtRPTOFPla);
      instance.SetNewArray(&newArray_TArtRPTOFPla);
      instance.SetDelete(&delete_TArtRPTOFPla);
      instance.SetDeleteArray(&deleteArray_TArtRPTOFPla);
      instance.SetDestructor(&destruct_TArtRPTOFPla);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtRPTOFPla*)
   {
      return GenerateInitInstanceLocal((::TArtRPTOFPla*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtRPTOFPla*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibRPTOFPla_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibRPTOFPla(void *p = 0);
   static void *newArray_TArtCalibRPTOFPla(Long_t size, void *p);
   static void delete_TArtCalibRPTOFPla(void *p);
   static void deleteArray_TArtCalibRPTOFPla(void *p);
   static void destruct_TArtCalibRPTOFPla(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibRPTOFPla*)
   {
      ::TArtCalibRPTOFPla *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibRPTOFPla >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibRPTOFPla", ::TArtCalibRPTOFPla::Class_Version(), "./include/TArtCalibRPTOFPla.hh", 17,
                  typeid(::TArtCalibRPTOFPla), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibRPTOFPla::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibRPTOFPla) );
      instance.SetNew(&new_TArtCalibRPTOFPla);
      instance.SetNewArray(&newArray_TArtCalibRPTOFPla);
      instance.SetDelete(&delete_TArtCalibRPTOFPla);
      instance.SetDeleteArray(&deleteArray_TArtCalibRPTOFPla);
      instance.SetDestructor(&destruct_TArtCalibRPTOFPla);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibRPTOFPla*)
   {
      return GenerateInitInstanceLocal((::TArtCalibRPTOFPla*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibRPTOFPla*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibNEBULAMult_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibNEBULAMult(void *p = 0);
   static void *newArray_TArtCalibNEBULAMult(Long_t size, void *p);
   static void delete_TArtCalibNEBULAMult(void *p);
   static void deleteArray_TArtCalibNEBULAMult(void *p);
   static void destruct_TArtCalibNEBULAMult(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibNEBULAMult*)
   {
      ::TArtCalibNEBULAMult *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibNEBULAMult >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibNEBULAMult", ::TArtCalibNEBULAMult::Class_Version(), "./include/TArtCalibNEBULA.hh", 40,
                  typeid(::TArtCalibNEBULAMult), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibNEBULAMult::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibNEBULAMult) );
      instance.SetNew(&new_TArtCalibNEBULAMult);
      instance.SetNewArray(&newArray_TArtCalibNEBULAMult);
      instance.SetDelete(&delete_TArtCalibNEBULAMult);
      instance.SetDeleteArray(&deleteArray_TArtCalibNEBULAMult);
      instance.SetDestructor(&destruct_TArtCalibNEBULAMult);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibNEBULAMult*)
   {
      return GenerateInitInstanceLocal((::TArtCalibNEBULAMult*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibNEBULAMult*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibTEDCsI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibTEDCsI(void *p = 0);
   static void *newArray_TArtCalibTEDCsI(Long_t size, void *p);
   static void delete_TArtCalibTEDCsI(void *p);
   static void deleteArray_TArtCalibTEDCsI(void *p);
   static void destruct_TArtCalibTEDCsI(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibTEDCsI*)
   {
      ::TArtCalibTEDCsI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibTEDCsI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibTEDCsI", ::TArtCalibTEDCsI::Class_Version(), "./include/TArtCalibTEDCsI.hh", 17,
                  typeid(::TArtCalibTEDCsI), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibTEDCsI::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibTEDCsI) );
      instance.SetNew(&new_TArtCalibTEDCsI);
      instance.SetNewArray(&newArray_TArtCalibTEDCsI);
      instance.SetDelete(&delete_TArtCalibTEDCsI);
      instance.SetDeleteArray(&deleteArray_TArtCalibTEDCsI);
      instance.SetDestructor(&destruct_TArtCalibTEDCsI);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibTEDCsI*)
   {
      return GenerateInitInstanceLocal((::TArtCalibTEDCsI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibTEDCsI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtRecoFragment_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtRecoFragment(void *p = 0);
   static void *newArray_TArtRecoFragment(Long_t size, void *p);
   static void delete_TArtRecoFragment(void *p);
   static void deleteArray_TArtRecoFragment(void *p);
   static void destruct_TArtRecoFragment(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtRecoFragment*)
   {
      ::TArtRecoFragment *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtRecoFragment >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtRecoFragment", ::TArtRecoFragment::Class_Version(), "./include/TArtRecoFragment.hh", 41,
                  typeid(::TArtRecoFragment), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtRecoFragment::Dictionary, isa_proxy, 4,
                  sizeof(::TArtRecoFragment) );
      instance.SetNew(&new_TArtRecoFragment);
      instance.SetNewArray(&newArray_TArtRecoFragment);
      instance.SetDelete(&delete_TArtRecoFragment);
      instance.SetDeleteArray(&deleteArray_TArtRecoFragment);
      instance.SetDestructor(&destruct_TArtRecoFragment);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtRecoFragment*)
   {
      return GenerateInitInstanceLocal((::TArtRecoFragment*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtRecoFragment*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtRecoSAMURAI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtRecoSAMURAI(void *p = 0);
   static void *newArray_TArtRecoSAMURAI(Long_t size, void *p);
   static void delete_TArtRecoSAMURAI(void *p);
   static void deleteArray_TArtRecoSAMURAI(void *p);
   static void destruct_TArtRecoSAMURAI(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtRecoSAMURAI*)
   {
      ::TArtRecoSAMURAI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtRecoSAMURAI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtRecoSAMURAI", ::TArtRecoSAMURAI::Class_Version(), "./include/TArtRecoSAMURAI.hh", 18,
                  typeid(::TArtRecoSAMURAI), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtRecoSAMURAI::Dictionary, isa_proxy, 4,
                  sizeof(::TArtRecoSAMURAI) );
      instance.SetNew(&new_TArtRecoSAMURAI);
      instance.SetNewArray(&newArray_TArtRecoSAMURAI);
      instance.SetDelete(&delete_TArtRecoSAMURAI);
      instance.SetDeleteArray(&deleteArray_TArtRecoSAMURAI);
      instance.SetDestructor(&destruct_TArtRecoSAMURAI);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtRecoSAMURAI*)
   {
      return GenerateInitInstanceLocal((::TArtRecoSAMURAI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtRecoSAMURAI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalcGlobalTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TArtCalcGlobalTrack(void *p);
   static void deleteArray_TArtCalcGlobalTrack(void *p);
   static void destruct_TArtCalcGlobalTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalcGlobalTrack*)
   {
      ::TArtCalcGlobalTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalcGlobalTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalcGlobalTrack", ::TArtCalcGlobalTrack::Class_Version(), "./include/TArtCalcGlobalTrack.hh", 21,
                  typeid(::TArtCalcGlobalTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalcGlobalTrack::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalcGlobalTrack) );
      instance.SetDelete(&delete_TArtCalcGlobalTrack);
      instance.SetDeleteArray(&deleteArray_TArtCalcGlobalTrack);
      instance.SetDestructor(&destruct_TArtCalcGlobalTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalcGlobalTrack*)
   {
      return GenerateInitInstanceLocal((::TArtCalcGlobalTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalcGlobalTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibNeuLANDVETO_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibNeuLANDVETO(void *p = 0);
   static void *newArray_TArtCalibNeuLANDVETO(Long_t size, void *p);
   static void delete_TArtCalibNeuLANDVETO(void *p);
   static void deleteArray_TArtCalibNeuLANDVETO(void *p);
   static void destruct_TArtCalibNeuLANDVETO(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibNeuLANDVETO*)
   {
      ::TArtCalibNeuLANDVETO *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibNeuLANDVETO >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibNeuLANDVETO", ::TArtCalibNeuLANDVETO::Class_Version(), "./include/TArtCalibNeuLANDVETO.hh", 38,
                  typeid(::TArtCalibNeuLANDVETO), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibNeuLANDVETO::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibNeuLANDVETO) );
      instance.SetNew(&new_TArtCalibNeuLANDVETO);
      instance.SetNewArray(&newArray_TArtCalibNeuLANDVETO);
      instance.SetDelete(&delete_TArtCalibNeuLANDVETO);
      instance.SetDeleteArray(&deleteArray_TArtCalibNeuLANDVETO);
      instance.SetDestructor(&destruct_TArtCalibNeuLANDVETO);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibNeuLANDVETO*)
   {
      return GenerateInitInstanceLocal((::TArtCalibNeuLANDVETO*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibNeuLANDVETO*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtFragment_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtFragment(void *p = 0);
   static void *newArray_TArtFragment(Long_t size, void *p);
   static void delete_TArtFragment(void *p);
   static void deleteArray_TArtFragment(void *p);
   static void destruct_TArtFragment(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtFragment*)
   {
      ::TArtFragment *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtFragment >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtFragment", ::TArtFragment::Class_Version(), "./include/TArtFragment.hh", 8,
                  typeid(::TArtFragment), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtFragment::Dictionary, isa_proxy, 4,
                  sizeof(::TArtFragment) );
      instance.SetNew(&new_TArtFragment);
      instance.SetNewArray(&newArray_TArtFragment);
      instance.SetDelete(&delete_TArtFragment);
      instance.SetDeleteArray(&deleteArray_TArtFragment);
      instance.SetDestructor(&destruct_TArtFragment);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtFragment*)
   {
      return GenerateInitInstanceLocal((::TArtFragment*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtFragment*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibSAMURAITZero_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibSAMURAITZero(void *p = 0);
   static void *newArray_TArtCalibSAMURAITZero(Long_t size, void *p);
   static void delete_TArtCalibSAMURAITZero(void *p);
   static void deleteArray_TArtCalibSAMURAITZero(void *p);
   static void destruct_TArtCalibSAMURAITZero(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibSAMURAITZero*)
   {
      ::TArtCalibSAMURAITZero *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibSAMURAITZero >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibSAMURAITZero", ::TArtCalibSAMURAITZero::Class_Version(), "./include/TArtCalibSAMURAITZero.hh", 15,
                  typeid(::TArtCalibSAMURAITZero), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibSAMURAITZero::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibSAMURAITZero) );
      instance.SetNew(&new_TArtCalibSAMURAITZero);
      instance.SetNewArray(&newArray_TArtCalibSAMURAITZero);
      instance.SetDelete(&delete_TArtCalibSAMURAITZero);
      instance.SetDeleteArray(&deleteArray_TArtCalibSAMURAITZero);
      instance.SetDestructor(&destruct_TArtCalibSAMURAITZero);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibSAMURAITZero*)
   {
      return GenerateInitInstanceLocal((::TArtCalibSAMURAITZero*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibSAMURAITZero*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibHIMEMult_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibHIMEMult(void *p = 0);
   static void *newArray_TArtCalibHIMEMult(Long_t size, void *p);
   static void delete_TArtCalibHIMEMult(void *p);
   static void deleteArray_TArtCalibHIMEMult(void *p);
   static void destruct_TArtCalibHIMEMult(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibHIMEMult*)
   {
      ::TArtCalibHIMEMult *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibHIMEMult >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibHIMEMult", ::TArtCalibHIMEMult::Class_Version(), "./include/TArtCalibHIME.hh", 42,
                  typeid(::TArtCalibHIMEMult), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibHIMEMult::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibHIMEMult) );
      instance.SetNew(&new_TArtCalibHIMEMult);
      instance.SetNewArray(&newArray_TArtCalibHIMEMult);
      instance.SetDelete(&delete_TArtCalibHIMEMult);
      instance.SetDeleteArray(&deleteArray_TArtCalibHIMEMult);
      instance.SetDestructor(&destruct_TArtCalibHIMEMult);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibHIMEMult*)
   {
      return GenerateInitInstanceLocal((::TArtCalibHIMEMult*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibHIMEMult*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibRPDCHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibRPDCHit(void *p = 0);
   static void *newArray_TArtCalibRPDCHit(Long_t size, void *p);
   static void delete_TArtCalibRPDCHit(void *p);
   static void deleteArray_TArtCalibRPDCHit(void *p);
   static void destruct_TArtCalibRPDCHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibRPDCHit*)
   {
      ::TArtCalibRPDCHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibRPDCHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibRPDCHit", ::TArtCalibRPDCHit::Class_Version(), "./include/TArtCalibRPDCHit.hh", 9,
                  typeid(::TArtCalibRPDCHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibRPDCHit::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibRPDCHit) );
      instance.SetNew(&new_TArtCalibRPDCHit);
      instance.SetNewArray(&newArray_TArtCalibRPDCHit);
      instance.SetDelete(&delete_TArtCalibRPDCHit);
      instance.SetDeleteArray(&deleteArray_TArtCalibRPDCHit);
      instance.SetDestructor(&destruct_TArtCalibRPDCHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibRPDCHit*)
   {
      return GenerateInitInstanceLocal((::TArtCalibRPDCHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibRPDCHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibICF_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibICF(void *p = 0);
   static void *newArray_TArtCalibICF(Long_t size, void *p);
   static void delete_TArtCalibICF(void *p);
   static void deleteArray_TArtCalibICF(void *p);
   static void destruct_TArtCalibICF(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibICF*)
   {
      ::TArtCalibICF *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibICF >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibICF", ::TArtCalibICF::Class_Version(), "./include/TArtCalibICF.hh", 14,
                  typeid(::TArtCalibICF), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibICF::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibICF) );
      instance.SetNew(&new_TArtCalibICF);
      instance.SetNewArray(&newArray_TArtCalibICF);
      instance.SetDelete(&delete_TArtCalibICF);
      instance.SetDeleteArray(&deleteArray_TArtCalibICF);
      instance.SetDestructor(&destruct_TArtCalibICF);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibICF*)
   {
      return GenerateInitInstanceLocal((::TArtCalibICF*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibICF*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TArtCalibS1DC2Hit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TArtCalibS1DC2Hit(void *p = 0);
   static void *newArray_TArtCalibS1DC2Hit(Long_t size, void *p);
   static void delete_TArtCalibS1DC2Hit(void *p);
   static void deleteArray_TArtCalibS1DC2Hit(void *p);
   static void destruct_TArtCalibS1DC2Hit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TArtCalibS1DC2Hit*)
   {
      ::TArtCalibS1DC2Hit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TArtCalibS1DC2Hit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TArtCalibS1DC2Hit", ::TArtCalibS1DC2Hit::Class_Version(), "./include/TArtCalibS1DC2Hit.hh", 9,
                  typeid(::TArtCalibS1DC2Hit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TArtCalibS1DC2Hit::Dictionary, isa_proxy, 4,
                  sizeof(::TArtCalibS1DC2Hit) );
      instance.SetNew(&new_TArtCalibS1DC2Hit);
      instance.SetNewArray(&newArray_TArtCalibS1DC2Hit);
      instance.SetDelete(&delete_TArtCalibS1DC2Hit);
      instance.SetDeleteArray(&deleteArray_TArtCalibS1DC2Hit);
      instance.SetDestructor(&destruct_TArtCalibS1DC2Hit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TArtCalibS1DC2Hit*)
   {
      return GenerateInitInstanceLocal((::TArtCalibS1DC2Hit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TArtCalibS1DC2Hit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr TArtTEDCsI::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtTEDCsI::Class_Name()
{
   return "TArtTEDCsI";
}

//______________________________________________________________________________
const char *TArtTEDCsI::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTEDCsI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtTEDCsI::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTEDCsI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtTEDCsI::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTEDCsI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtTEDCsI::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTEDCsI*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtDCHitPara::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtDCHitPara::Class_Name()
{
   return "TArtDCHitPara";
}

//______________________________________________________________________________
const char *TArtDCHitPara::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDCHitPara*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtDCHitPara::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDCHitPara*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtDCHitPara::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDCHitPara*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtDCHitPara::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDCHitPara*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtDCHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtDCHit::Class_Name()
{
   return "TArtDCHit";
}

//______________________________________________________________________________
const char *TArtDCHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDCHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtDCHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDCHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtDCHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDCHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtDCHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDCHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtSAMURAIParameters::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtSAMURAIParameters::Class_Name()
{
   return "TArtSAMURAIParameters";
}

//______________________________________________________________________________
const char *TArtSAMURAIParameters::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtSAMURAIParameters*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtSAMURAIParameters::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtSAMURAIParameters*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtSAMURAIParameters::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtSAMURAIParameters*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtSAMURAIParameters::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtSAMURAIParameters*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibDCHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibDCHit::Class_Name()
{
   return "TArtCalibDCHit";
}

//______________________________________________________________________________
const char *TArtCalibDCHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibDCHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibDCHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibDCHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibDCHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibDCHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibDCHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibDCHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibS1DC1Hit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibS1DC1Hit::Class_Name()
{
   return "TArtCalibS1DC1Hit";
}

//______________________________________________________________________________
const char *TArtCalibS1DC1Hit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibS1DC1Hit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibS1DC1Hit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibS1DC1Hit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibS1DC1Hit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibS1DC1Hit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibS1DC1Hit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibS1DC1Hit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibBPCHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibBPCHit::Class_Name()
{
   return "TArtCalibBPCHit";
}

//______________________________________________________________________________
const char *TArtCalibBPCHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBPCHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibBPCHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBPCHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibBPCHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBPCHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibBPCHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBPCHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibBDC1Hit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibBDC1Hit::Class_Name()
{
   return "TArtCalibBDC1Hit";
}

//______________________________________________________________________________
const char *TArtCalibBDC1Hit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBDC1Hit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibBDC1Hit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBDC1Hit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibBDC1Hit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBDC1Hit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibBDC1Hit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBDC1Hit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibBDC2Hit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibBDC2Hit::Class_Name()
{
   return "TArtCalibBDC2Hit";
}

//______________________________________________________________________________
const char *TArtCalibBDC2Hit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBDC2Hit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibBDC2Hit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBDC2Hit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibBDC2Hit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBDC2Hit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibBDC2Hit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBDC2Hit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibFDC0Hit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibFDC0Hit::Class_Name()
{
   return "TArtCalibFDC0Hit";
}

//______________________________________________________________________________
const char *TArtCalibFDC0Hit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC0Hit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibFDC0Hit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC0Hit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibFDC0Hit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC0Hit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibFDC0Hit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC0Hit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibFDC1Hit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibFDC1Hit::Class_Name()
{
   return "TArtCalibFDC1Hit";
}

//______________________________________________________________________________
const char *TArtCalibFDC1Hit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC1Hit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibFDC1Hit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC1Hit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibFDC1Hit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC1Hit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibFDC1Hit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC1Hit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibFDC2Hit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibFDC2Hit::Class_Name()
{
   return "TArtCalibFDC2Hit";
}

//______________________________________________________________________________
const char *TArtCalibFDC2Hit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC2Hit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibFDC2Hit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC2Hit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibFDC2Hit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC2Hit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibFDC2Hit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC2Hit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibBDC1Track::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibBDC1Track::Class_Name()
{
   return "TArtCalibBDC1Track";
}

//______________________________________________________________________________
const char *TArtCalibBDC1Track::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBDC1Track*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibBDC1Track::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBDC1Track*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibBDC1Track::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBDC1Track*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibBDC1Track::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBDC1Track*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibBDC2Track::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibBDC2Track::Class_Name()
{
   return "TArtCalibBDC2Track";
}

//______________________________________________________________________________
const char *TArtCalibBDC2Track::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBDC2Track*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibBDC2Track::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBDC2Track*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibBDC2Track::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBDC2Track*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibBDC2Track::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibBDC2Track*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibFDC0Track::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibFDC0Track::Class_Name()
{
   return "TArtCalibFDC0Track";
}

//______________________________________________________________________________
const char *TArtCalibFDC0Track::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC0Track*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibFDC0Track::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC0Track*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibFDC0Track::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC0Track*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibFDC0Track::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC0Track*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibFDC1Track::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibFDC1Track::Class_Name()
{
   return "TArtCalibFDC1Track";
}

//______________________________________________________________________________
const char *TArtCalibFDC1Track::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC1Track*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibFDC1Track::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC1Track*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibFDC1Track::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC1Track*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibFDC1Track::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC1Track*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibFDC2Track::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibFDC2Track::Class_Name()
{
   return "TArtCalibFDC2Track";
}

//______________________________________________________________________________
const char *TArtCalibFDC2Track::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC2Track*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibFDC2Track::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC2Track*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibFDC2Track::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC2Track*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibFDC2Track::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibFDC2Track*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibHODPla::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibHODPla::Class_Name()
{
   return "TArtCalibHODPla";
}

//______________________________________________________________________________
const char *TArtCalibHODPla::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibHODPla*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibHODPla::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibHODPla*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibHODPla::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibHODPla*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibHODPla::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibHODPla*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibSAMURAI::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibSAMURAI::Class_Name()
{
   return "TArtCalibSAMURAI";
}

//______________________________________________________________________________
const char *TArtCalibSAMURAI::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibSAMURAI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibSAMURAI::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibSAMURAI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibSAMURAI::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibSAMURAI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibSAMURAI::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibSAMURAI*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtTacquilaMap::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtTacquilaMap::Class_Name()
{
   return "TArtTacquilaMap";
}

//______________________________________________________________________________
const char *TArtTacquilaMap::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTacquilaMap*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtTacquilaMap::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTacquilaMap*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtTacquilaMap::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTacquilaMap*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtTacquilaMap::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTacquilaMap*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtHODPlaPara::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtHODPlaPara::Class_Name()
{
   return "TArtHODPlaPara";
}

//______________________________________________________________________________
const char *TArtHODPlaPara::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtHODPlaPara*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtHODPlaPara::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtHODPlaPara*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtHODPlaPara::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtHODPlaPara*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtHODPlaPara::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtHODPlaPara*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtRPTOFPlaPara::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtRPTOFPlaPara::Class_Name()
{
   return "TArtRPTOFPlaPara";
}

//______________________________________________________________________________
const char *TArtRPTOFPlaPara::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRPTOFPlaPara*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtRPTOFPlaPara::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRPTOFPlaPara*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtRPTOFPlaPara::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRPTOFPlaPara*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtRPTOFPlaPara::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRPTOFPlaPara*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtTEDCsIPara::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtTEDCsIPara::Class_Name()
{
   return "TArtTEDCsIPara";
}

//______________________________________________________________________________
const char *TArtTEDCsIPara::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTEDCsIPara*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtTEDCsIPara::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTEDCsIPara*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtTEDCsIPara::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTEDCsIPara*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtTEDCsIPara::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTEDCsIPara*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtNEBULAPlaPara::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtNEBULAPlaPara::Class_Name()
{
   return "TArtNEBULAPlaPara";
}

//______________________________________________________________________________
const char *TArtNEBULAPlaPara::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNEBULAPlaPara*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtNEBULAPlaPara::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNEBULAPlaPara*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtNEBULAPlaPara::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNEBULAPlaPara*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtNEBULAPlaPara::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNEBULAPlaPara*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtNeuLANDPlaPara::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtNeuLANDPlaPara::Class_Name()
{
   return "TArtNeuLANDPlaPara";
}

//______________________________________________________________________________
const char *TArtNeuLANDPlaPara::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNeuLANDPlaPara*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtNeuLANDPlaPara::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNeuLANDPlaPara*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtNeuLANDPlaPara::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNeuLANDPlaPara*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtNeuLANDPlaPara::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNeuLANDPlaPara*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtTacquilaPara::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtTacquilaPara::Class_Name()
{
   return "TArtTacquilaPara";
}

//______________________________________________________________________________
const char *TArtTacquilaPara::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTacquilaPara*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtTacquilaPara::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTacquilaPara*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtTacquilaPara::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTacquilaPara*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtTacquilaPara::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTacquilaPara*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtHIMEPlaPara::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtHIMEPlaPara::Class_Name()
{
   return "TArtHIMEPlaPara";
}

//______________________________________________________________________________
const char *TArtHIMEPlaPara::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtHIMEPlaPara*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtHIMEPlaPara::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtHIMEPlaPara*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtHIMEPlaPara::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtHIMEPlaPara*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtHIMEPlaPara::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtHIMEPlaPara*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtNEBULAHPCPara::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtNEBULAHPCPara::Class_Name()
{
   return "TArtNEBULAHPCPara";
}

//______________________________________________________________________________
const char *TArtNEBULAHPCPara::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNEBULAHPCPara*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtNEBULAHPCPara::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNEBULAHPCPara*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtNEBULAHPCPara::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNEBULAHPCPara*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtNEBULAHPCPara::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNEBULAHPCPara*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtNEBULAPla::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtNEBULAPla::Class_Name()
{
   return "TArtNEBULAPla";
}

//______________________________________________________________________________
const char *TArtNEBULAPla::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNEBULAPla*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtNEBULAPla::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNEBULAPla*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtNEBULAPla::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNEBULAPla*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtNEBULAPla::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNEBULAPla*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtNEBULAHPC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtNEBULAHPC::Class_Name()
{
   return "TArtNEBULAHPC";
}

//______________________________________________________________________________
const char *TArtNEBULAHPC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNEBULAHPC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtNEBULAHPC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNEBULAHPC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtNEBULAHPC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNEBULAHPC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtNEBULAHPC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNEBULAHPC*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibNEBULAHPC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibNEBULAHPC::Class_Name()
{
   return "TArtCalibNEBULAHPC";
}

//______________________________________________________________________________
const char *TArtCalibNEBULAHPC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibNEBULAHPC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibNEBULAHPC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibNEBULAHPC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibNEBULAHPC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibNEBULAHPC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibNEBULAHPC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibNEBULAHPC*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtHIMEPla::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtHIMEPla::Class_Name()
{
   return "TArtHIMEPla";
}

//______________________________________________________________________________
const char *TArtHIMEPla::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtHIMEPla*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtHIMEPla::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtHIMEPla*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtHIMEPla::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtHIMEPla*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtHIMEPla::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtHIMEPla*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibNEBULA::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibNEBULA::Class_Name()
{
   return "TArtCalibNEBULA";
}

//______________________________________________________________________________
const char *TArtCalibNEBULA::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibNEBULA*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibNEBULA::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibNEBULA*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibNEBULA::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibNEBULA*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibNEBULA::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibNEBULA*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtRecoNeutron::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtRecoNeutron::Class_Name()
{
   return "TArtRecoNeutron";
}

//______________________________________________________________________________
const char *TArtRecoNeutron::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRecoNeutron*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtRecoNeutron::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRecoNeutron*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtRecoNeutron::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRecoNeutron*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtRecoNeutron::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRecoNeutron*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtNEBULAFilter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtNEBULAFilter::Class_Name()
{
   return "TArtNEBULAFilter";
}

//______________________________________________________________________________
const char *TArtNEBULAFilter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNEBULAFilter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtNEBULAFilter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNEBULAFilter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtNEBULAFilter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNEBULAFilter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtNEBULAFilter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNEBULAFilter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibHIME::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibHIME::Class_Name()
{
   return "TArtCalibHIME";
}

//______________________________________________________________________________
const char *TArtCalibHIME::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibHIME*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibHIME::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibHIME*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibHIME::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibHIME*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibHIME::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibHIME*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtHIMEFilter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtHIMEFilter::Class_Name()
{
   return "TArtHIMEFilter";
}

//______________________________________________________________________________
const char *TArtHIMEFilter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtHIMEFilter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtHIMEFilter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtHIMEFilter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtHIMEFilter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtHIMEFilter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtHIMEFilter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtHIMEFilter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtDCTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtDCTrack::Class_Name()
{
   return "TArtDCTrack";
}

//______________________________________________________________________________
const char *TArtDCTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDCTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtDCTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDCTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtDCTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDCTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtDCTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtDCTrack*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibDCTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibDCTrack::Class_Name()
{
   return "TArtCalibDCTrack";
}

//______________________________________________________________________________
const char *TArtCalibDCTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibDCTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibDCTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibDCTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibDCTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibDCTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibDCTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibDCTrack*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibRPDCTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibRPDCTrack::Class_Name()
{
   return "TArtCalibRPDCTrack";
}

//______________________________________________________________________________
const char *TArtCalibRPDCTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibRPDCTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibRPDCTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibRPDCTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibRPDCTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibRPDCTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibRPDCTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibRPDCTrack*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtHODPla::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtHODPla::Class_Name()
{
   return "TArtHODPla";
}

//______________________________________________________________________________
const char *TArtHODPla::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtHODPla*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtHODPla::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtHODPla*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtHODPla::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtHODPla*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtHODPla::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtHODPla*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtNeuLANDPla::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtNeuLANDPla::Class_Name()
{
   return "TArtNeuLANDPla";
}

//______________________________________________________________________________
const char *TArtNeuLANDPla::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNeuLANDPla*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtNeuLANDPla::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNeuLANDPla*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtNeuLANDPla::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNeuLANDPla*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtNeuLANDPla::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNeuLANDPla*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibNeuLAND::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibNeuLAND::Class_Name()
{
   return "TArtCalibNeuLAND";
}

//______________________________________________________________________________
const char *TArtCalibNeuLAND::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibNeuLAND*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibNeuLAND::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibNeuLAND*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibNeuLAND::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibNeuLAND*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibNeuLAND::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibNeuLAND*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibS1DC2Track::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibS1DC2Track::Class_Name()
{
   return "TArtCalibS1DC2Track";
}

//______________________________________________________________________________
const char *TArtCalibS1DC2Track::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibS1DC2Track*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibS1DC2Track::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibS1DC2Track*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibS1DC2Track::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibS1DC2Track*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibS1DC2Track::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibS1DC2Track*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtTZero::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtTZero::Class_Name()
{
   return "TArtTZero";
}

//______________________________________________________________________________
const char *TArtTZero::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTZero*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtTZero::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTZero*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtTZero::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTZero*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtTZero::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtTZero*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibS1DC1Track::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibS1DC1Track::Class_Name()
{
   return "TArtCalibS1DC1Track";
}

//______________________________________________________________________________
const char *TArtCalibS1DC1Track::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibS1DC1Track*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibS1DC1Track::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibS1DC1Track*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibS1DC1Track::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibS1DC1Track*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibS1DC1Track::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibS1DC1Track*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtNeutron::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtNeutron::Class_Name()
{
   return "TArtNeutron";
}

//______________________________________________________________________________
const char *TArtNeutron::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNeutron*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtNeutron::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNeutron*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtNeutron::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNeutron*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtNeutron::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtNeutron*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtICF::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtICF::Class_Name()
{
   return "TArtICF";
}

//______________________________________________________________________________
const char *TArtICF::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtICF*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtICF::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtICF*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtICF::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtICF*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtICF::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtICF*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtRPTOFPla::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtRPTOFPla::Class_Name()
{
   return "TArtRPTOFPla";
}

//______________________________________________________________________________
const char *TArtRPTOFPla::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRPTOFPla*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtRPTOFPla::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRPTOFPla*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtRPTOFPla::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRPTOFPla*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtRPTOFPla::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRPTOFPla*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibRPTOFPla::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibRPTOFPla::Class_Name()
{
   return "TArtCalibRPTOFPla";
}

//______________________________________________________________________________
const char *TArtCalibRPTOFPla::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibRPTOFPla*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibRPTOFPla::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibRPTOFPla*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibRPTOFPla::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibRPTOFPla*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibRPTOFPla::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibRPTOFPla*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibNEBULAMult::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibNEBULAMult::Class_Name()
{
   return "TArtCalibNEBULAMult";
}

//______________________________________________________________________________
const char *TArtCalibNEBULAMult::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibNEBULAMult*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibNEBULAMult::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibNEBULAMult*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibNEBULAMult::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibNEBULAMult*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibNEBULAMult::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibNEBULAMult*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibTEDCsI::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibTEDCsI::Class_Name()
{
   return "TArtCalibTEDCsI";
}

//______________________________________________________________________________
const char *TArtCalibTEDCsI::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibTEDCsI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibTEDCsI::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibTEDCsI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibTEDCsI::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibTEDCsI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibTEDCsI::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibTEDCsI*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtRecoFragment::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtRecoFragment::Class_Name()
{
   return "TArtRecoFragment";
}

//______________________________________________________________________________
const char *TArtRecoFragment::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRecoFragment*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtRecoFragment::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRecoFragment*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtRecoFragment::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRecoFragment*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtRecoFragment::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRecoFragment*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtRecoSAMURAI::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtRecoSAMURAI::Class_Name()
{
   return "TArtRecoSAMURAI";
}

//______________________________________________________________________________
const char *TArtRecoSAMURAI::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRecoSAMURAI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtRecoSAMURAI::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRecoSAMURAI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtRecoSAMURAI::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRecoSAMURAI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtRecoSAMURAI::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtRecoSAMURAI*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalcGlobalTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalcGlobalTrack::Class_Name()
{
   return "TArtCalcGlobalTrack";
}

//______________________________________________________________________________
const char *TArtCalcGlobalTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalcGlobalTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalcGlobalTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalcGlobalTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalcGlobalTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalcGlobalTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalcGlobalTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalcGlobalTrack*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibNeuLANDVETO::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibNeuLANDVETO::Class_Name()
{
   return "TArtCalibNeuLANDVETO";
}

//______________________________________________________________________________
const char *TArtCalibNeuLANDVETO::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibNeuLANDVETO*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibNeuLANDVETO::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibNeuLANDVETO*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibNeuLANDVETO::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibNeuLANDVETO*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibNeuLANDVETO::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibNeuLANDVETO*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtFragment::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtFragment::Class_Name()
{
   return "TArtFragment";
}

//______________________________________________________________________________
const char *TArtFragment::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtFragment*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtFragment::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtFragment*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtFragment::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtFragment*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtFragment::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtFragment*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibSAMURAITZero::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibSAMURAITZero::Class_Name()
{
   return "TArtCalibSAMURAITZero";
}

//______________________________________________________________________________
const char *TArtCalibSAMURAITZero::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibSAMURAITZero*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibSAMURAITZero::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibSAMURAITZero*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibSAMURAITZero::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibSAMURAITZero*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibSAMURAITZero::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibSAMURAITZero*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibHIMEMult::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibHIMEMult::Class_Name()
{
   return "TArtCalibHIMEMult";
}

//______________________________________________________________________________
const char *TArtCalibHIMEMult::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibHIMEMult*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibHIMEMult::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibHIMEMult*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibHIMEMult::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibHIMEMult*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibHIMEMult::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibHIMEMult*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibRPDCHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibRPDCHit::Class_Name()
{
   return "TArtCalibRPDCHit";
}

//______________________________________________________________________________
const char *TArtCalibRPDCHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibRPDCHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibRPDCHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibRPDCHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibRPDCHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibRPDCHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibRPDCHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibRPDCHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibICF::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibICF::Class_Name()
{
   return "TArtCalibICF";
}

//______________________________________________________________________________
const char *TArtCalibICF::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibICF*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibICF::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibICF*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibICF::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibICF*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibICF::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibICF*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TArtCalibS1DC2Hit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TArtCalibS1DC2Hit::Class_Name()
{
   return "TArtCalibS1DC2Hit";
}

//______________________________________________________________________________
const char *TArtCalibS1DC2Hit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibS1DC2Hit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TArtCalibS1DC2Hit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibS1DC2Hit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TArtCalibS1DC2Hit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibS1DC2Hit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TArtCalibS1DC2Hit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TArtCalibS1DC2Hit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TArtRecoSAMURAI::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtRecoSAMURAI.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtRecoSAMURAI::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtRecoSAMURAI::Class(),this);
   }
}

//______________________________________________________________________________
void TArtRecoSAMURAI::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtRecoSAMURAI.
      TClass *R__cl = ::TArtRecoSAMURAI::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rips", &rips);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRecoRIPS", &fRecoRIPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRecoTOF", &fRecoTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRecoBeam", &fRecoBeam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRecoFragment", &fRecoFragment);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sman", &sman);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtRecoSAMURAI(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtRecoSAMURAI : new ::TArtRecoSAMURAI;
   }
   static void *newArray_TArtRecoSAMURAI(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtRecoSAMURAI[nElements] : new ::TArtRecoSAMURAI[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtRecoSAMURAI(void *p) {
      delete ((::TArtRecoSAMURAI*)p);
   }
   static void deleteArray_TArtRecoSAMURAI(void *p) {
      delete [] ((::TArtRecoSAMURAI*)p);
   }
   static void destruct_TArtRecoSAMURAI(void *p) {
      typedef ::TArtRecoSAMURAI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtRecoSAMURAI

//______________________________________________________________________________
void TArtCalibSAMURAI::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibSAMURAI.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibSAMURAI::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibSAMURAI::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibSAMURAI::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibSAMURAI.
      TClass *R__cl = ::TArtCalibSAMURAI::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCalibCoin", &fCalibCoin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCalibBPCHit", &fCalibBPCHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCalibBDC1Hit", &fCalibBDC1Hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCalibBDC2Hit", &fCalibBDC2Hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCalibFDC0Hit", &fCalibFDC0Hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCalibFDC1Hit", &fCalibFDC1Hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCalibFDC2Hit", &fCalibFDC2Hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCalibBDC1Track", &fCalibBDC1Track);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCalibBDC2Track", &fCalibBDC2Track);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCalibFDC0Track", &fCalibFDC0Track);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCalibFDC1Track", &fCalibFDC1Track);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCalibFDC2Track", &fCalibFDC2Track);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCalibHODPla", &fCalibHODPla);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sman", &sman);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibSAMURAI(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibSAMURAI : new ::TArtCalibSAMURAI;
   }
   static void *newArray_TArtCalibSAMURAI(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibSAMURAI[nElements] : new ::TArtCalibSAMURAI[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibSAMURAI(void *p) {
      delete ((::TArtCalibSAMURAI*)p);
   }
   static void deleteArray_TArtCalibSAMURAI(void *p) {
      delete [] ((::TArtCalibSAMURAI*)p);
   }
   static void destruct_TArtCalibSAMURAI(void *p) {
      typedef ::TArtCalibSAMURAI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibSAMURAI

//______________________________________________________________________________
void TArtCalibSAMURAITZero::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibSAMURAITZero.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibSAMURAITZero::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibSAMURAITZero::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibSAMURAITZero::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibSAMURAITZero.
      TClass *R__cl = ::TArtCalibSAMURAITZero::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fT0Array", &fT0Array);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pla_array", &pla_array);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStoreManager", &fStoreManager);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibSAMURAITZero(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibSAMURAITZero : new ::TArtCalibSAMURAITZero;
   }
   static void *newArray_TArtCalibSAMURAITZero(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibSAMURAITZero[nElements] : new ::TArtCalibSAMURAITZero[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibSAMURAITZero(void *p) {
      delete ((::TArtCalibSAMURAITZero*)p);
   }
   static void deleteArray_TArtCalibSAMURAITZero(void *p) {
      delete [] ((::TArtCalibSAMURAITZero*)p);
   }
   static void destruct_TArtCalibSAMURAITZero(void *p) {
      typedef ::TArtCalibSAMURAITZero current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibSAMURAITZero

//______________________________________________________________________________
void TArtCalibBPCHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibBPCHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibBPCHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibBPCHit::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibBPCHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibBPCHit.
      TClass *R__cl = ::TArtCalibBPCHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      TArtCalibDCHit::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibBPCHit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibBPCHit : new ::TArtCalibBPCHit;
   }
   static void *newArray_TArtCalibBPCHit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibBPCHit[nElements] : new ::TArtCalibBPCHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibBPCHit(void *p) {
      delete ((::TArtCalibBPCHit*)p);
   }
   static void deleteArray_TArtCalibBPCHit(void *p) {
      delete [] ((::TArtCalibBPCHit*)p);
   }
   static void destruct_TArtCalibBPCHit(void *p) {
      typedef ::TArtCalibBPCHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibBPCHit

//______________________________________________________________________________
void TArtCalibBDC1Track::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibBDC1Track.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibBDC1Track::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibBDC1Track::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibBDC1Track::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibBDC1Track.
      TClass *R__cl = ::TArtCalibBDC1Track::IsA();
      if (R__cl || R__insp.IsA()) { }
      TArtCalibDCTrack::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibBDC1Track(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibBDC1Track : new ::TArtCalibBDC1Track;
   }
   static void *newArray_TArtCalibBDC1Track(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibBDC1Track[nElements] : new ::TArtCalibBDC1Track[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibBDC1Track(void *p) {
      delete ((::TArtCalibBDC1Track*)p);
   }
   static void deleteArray_TArtCalibBDC1Track(void *p) {
      delete [] ((::TArtCalibBDC1Track*)p);
   }
   static void destruct_TArtCalibBDC1Track(void *p) {
      typedef ::TArtCalibBDC1Track current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibBDC1Track

//______________________________________________________________________________
void TArtCalibBDC1Hit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibBDC1Hit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibBDC1Hit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibBDC1Hit::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibBDC1Hit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibBDC1Hit.
      TClass *R__cl = ::TArtCalibBDC1Hit::IsA();
      if (R__cl || R__insp.IsA()) { }
      TArtCalibDCHit::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibBDC1Hit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibBDC1Hit : new ::TArtCalibBDC1Hit;
   }
   static void *newArray_TArtCalibBDC1Hit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibBDC1Hit[nElements] : new ::TArtCalibBDC1Hit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibBDC1Hit(void *p) {
      delete ((::TArtCalibBDC1Hit*)p);
   }
   static void deleteArray_TArtCalibBDC1Hit(void *p) {
      delete [] ((::TArtCalibBDC1Hit*)p);
   }
   static void destruct_TArtCalibBDC1Hit(void *p) {
      typedef ::TArtCalibBDC1Hit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibBDC1Hit

//______________________________________________________________________________
void TArtCalibBDC2Track::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibBDC2Track.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibBDC2Track::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibBDC2Track::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibBDC2Track::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibBDC2Track.
      TClass *R__cl = ::TArtCalibBDC2Track::IsA();
      if (R__cl || R__insp.IsA()) { }
      TArtCalibDCTrack::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibBDC2Track(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibBDC2Track : new ::TArtCalibBDC2Track;
   }
   static void *newArray_TArtCalibBDC2Track(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibBDC2Track[nElements] : new ::TArtCalibBDC2Track[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibBDC2Track(void *p) {
      delete ((::TArtCalibBDC2Track*)p);
   }
   static void deleteArray_TArtCalibBDC2Track(void *p) {
      delete [] ((::TArtCalibBDC2Track*)p);
   }
   static void destruct_TArtCalibBDC2Track(void *p) {
      typedef ::TArtCalibBDC2Track current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibBDC2Track

//______________________________________________________________________________
void TArtCalibBDC2Hit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibBDC2Hit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibBDC2Hit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibBDC2Hit::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibBDC2Hit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibBDC2Hit.
      TClass *R__cl = ::TArtCalibBDC2Hit::IsA();
      if (R__cl || R__insp.IsA()) { }
      TArtCalibDCHit::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibBDC2Hit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibBDC2Hit : new ::TArtCalibBDC2Hit;
   }
   static void *newArray_TArtCalibBDC2Hit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibBDC2Hit[nElements] : new ::TArtCalibBDC2Hit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibBDC2Hit(void *p) {
      delete ((::TArtCalibBDC2Hit*)p);
   }
   static void deleteArray_TArtCalibBDC2Hit(void *p) {
      delete [] ((::TArtCalibBDC2Hit*)p);
   }
   static void destruct_TArtCalibBDC2Hit(void *p) {
      typedef ::TArtCalibBDC2Hit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibBDC2Hit

//______________________________________________________________________________
void TArtCalibFDC0Track::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibFDC0Track.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibFDC0Track::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibFDC0Track::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibFDC0Track::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibFDC0Track.
      TClass *R__cl = ::TArtCalibFDC0Track::IsA();
      if (R__cl || R__insp.IsA()) { }
      TArtCalibDCTrack::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibFDC0Track(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibFDC0Track : new ::TArtCalibFDC0Track;
   }
   static void *newArray_TArtCalibFDC0Track(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibFDC0Track[nElements] : new ::TArtCalibFDC0Track[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibFDC0Track(void *p) {
      delete ((::TArtCalibFDC0Track*)p);
   }
   static void deleteArray_TArtCalibFDC0Track(void *p) {
      delete [] ((::TArtCalibFDC0Track*)p);
   }
   static void destruct_TArtCalibFDC0Track(void *p) {
      typedef ::TArtCalibFDC0Track current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibFDC0Track

//______________________________________________________________________________
void TArtCalibFDC0Hit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibFDC0Hit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibFDC0Hit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibFDC0Hit::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibFDC0Hit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibFDC0Hit.
      TClass *R__cl = ::TArtCalibFDC0Hit::IsA();
      if (R__cl || R__insp.IsA()) { }
      TArtCalibDCHit::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibFDC0Hit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibFDC0Hit : new ::TArtCalibFDC0Hit;
   }
   static void *newArray_TArtCalibFDC0Hit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibFDC0Hit[nElements] : new ::TArtCalibFDC0Hit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibFDC0Hit(void *p) {
      delete ((::TArtCalibFDC0Hit*)p);
   }
   static void deleteArray_TArtCalibFDC0Hit(void *p) {
      delete [] ((::TArtCalibFDC0Hit*)p);
   }
   static void destruct_TArtCalibFDC0Hit(void *p) {
      typedef ::TArtCalibFDC0Hit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibFDC0Hit

//______________________________________________________________________________
void TArtCalibFDC1Track::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibFDC1Track.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibFDC1Track::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibFDC1Track::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibFDC1Track::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibFDC1Track.
      TClass *R__cl = ::TArtCalibFDC1Track::IsA();
      if (R__cl || R__insp.IsA()) { }
      TArtCalibDCTrack::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibFDC1Track(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibFDC1Track : new ::TArtCalibFDC1Track;
   }
   static void *newArray_TArtCalibFDC1Track(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibFDC1Track[nElements] : new ::TArtCalibFDC1Track[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibFDC1Track(void *p) {
      delete ((::TArtCalibFDC1Track*)p);
   }
   static void deleteArray_TArtCalibFDC1Track(void *p) {
      delete [] ((::TArtCalibFDC1Track*)p);
   }
   static void destruct_TArtCalibFDC1Track(void *p) {
      typedef ::TArtCalibFDC1Track current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibFDC1Track

//______________________________________________________________________________
void TArtCalibFDC1Hit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibFDC1Hit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibFDC1Hit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibFDC1Hit::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibFDC1Hit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibFDC1Hit.
      TClass *R__cl = ::TArtCalibFDC1Hit::IsA();
      if (R__cl || R__insp.IsA()) { }
      TArtCalibDCHit::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibFDC1Hit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibFDC1Hit : new ::TArtCalibFDC1Hit;
   }
   static void *newArray_TArtCalibFDC1Hit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibFDC1Hit[nElements] : new ::TArtCalibFDC1Hit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibFDC1Hit(void *p) {
      delete ((::TArtCalibFDC1Hit*)p);
   }
   static void deleteArray_TArtCalibFDC1Hit(void *p) {
      delete [] ((::TArtCalibFDC1Hit*)p);
   }
   static void destruct_TArtCalibFDC1Hit(void *p) {
      typedef ::TArtCalibFDC1Hit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibFDC1Hit

//______________________________________________________________________________
void TArtCalibFDC2Track::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibFDC2Track.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibFDC2Track::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibFDC2Track::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibFDC2Track::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibFDC2Track.
      TClass *R__cl = ::TArtCalibFDC2Track::IsA();
      if (R__cl || R__insp.IsA()) { }
      TArtCalibDCTrack::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibFDC2Track(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibFDC2Track : new ::TArtCalibFDC2Track;
   }
   static void *newArray_TArtCalibFDC2Track(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibFDC2Track[nElements] : new ::TArtCalibFDC2Track[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibFDC2Track(void *p) {
      delete ((::TArtCalibFDC2Track*)p);
   }
   static void deleteArray_TArtCalibFDC2Track(void *p) {
      delete [] ((::TArtCalibFDC2Track*)p);
   }
   static void destruct_TArtCalibFDC2Track(void *p) {
      typedef ::TArtCalibFDC2Track current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibFDC2Track

//______________________________________________________________________________
void TArtCalibFDC2Hit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibFDC2Hit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibFDC2Hit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibFDC2Hit::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibFDC2Hit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibFDC2Hit.
      TClass *R__cl = ::TArtCalibFDC2Hit::IsA();
      if (R__cl || R__insp.IsA()) { }
      TArtCalibDCHit::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibFDC2Hit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibFDC2Hit : new ::TArtCalibFDC2Hit;
   }
   static void *newArray_TArtCalibFDC2Hit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibFDC2Hit[nElements] : new ::TArtCalibFDC2Hit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibFDC2Hit(void *p) {
      delete ((::TArtCalibFDC2Hit*)p);
   }
   static void deleteArray_TArtCalibFDC2Hit(void *p) {
      delete [] ((::TArtCalibFDC2Hit*)p);
   }
   static void destruct_TArtCalibFDC2Hit(void *p) {
      typedef ::TArtCalibFDC2Hit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibFDC2Hit

//______________________________________________________________________________
void TArtCalibRPDCTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibRPDCTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibRPDCTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibRPDCTrack::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibRPDCTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibRPDCTrack.
      TClass *R__cl = ::TArtCalibRPDCTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      TArtCalibDCTrack::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibRPDCTrack(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibRPDCTrack : new ::TArtCalibRPDCTrack;
   }
   static void *newArray_TArtCalibRPDCTrack(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibRPDCTrack[nElements] : new ::TArtCalibRPDCTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibRPDCTrack(void *p) {
      delete ((::TArtCalibRPDCTrack*)p);
   }
   static void deleteArray_TArtCalibRPDCTrack(void *p) {
      delete [] ((::TArtCalibRPDCTrack*)p);
   }
   static void destruct_TArtCalibRPDCTrack(void *p) {
      typedef ::TArtCalibRPDCTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibRPDCTrack

//______________________________________________________________________________
void TArtCalibRPDCHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibRPDCHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibRPDCHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibRPDCHit::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibRPDCHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibRPDCHit.
      TClass *R__cl = ::TArtCalibRPDCHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      TArtCalibDCHit::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibRPDCHit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibRPDCHit : new ::TArtCalibRPDCHit;
   }
   static void *newArray_TArtCalibRPDCHit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibRPDCHit[nElements] : new ::TArtCalibRPDCHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibRPDCHit(void *p) {
      delete ((::TArtCalibRPDCHit*)p);
   }
   static void deleteArray_TArtCalibRPDCHit(void *p) {
      delete [] ((::TArtCalibRPDCHit*)p);
   }
   static void destruct_TArtCalibRPDCHit(void *p) {
      typedef ::TArtCalibRPDCHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibRPDCHit

//______________________________________________________________________________
void TArtCalibS1DC1Track::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibS1DC1Track.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibS1DC1Track::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibS1DC1Track::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibS1DC1Track::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibS1DC1Track.
      TClass *R__cl = ::TArtCalibS1DC1Track::IsA();
      if (R__cl || R__insp.IsA()) { }
      TArtCalibDCTrack::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibS1DC1Track(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibS1DC1Track : new ::TArtCalibS1DC1Track;
   }
   static void *newArray_TArtCalibS1DC1Track(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibS1DC1Track[nElements] : new ::TArtCalibS1DC1Track[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibS1DC1Track(void *p) {
      delete ((::TArtCalibS1DC1Track*)p);
   }
   static void deleteArray_TArtCalibS1DC1Track(void *p) {
      delete [] ((::TArtCalibS1DC1Track*)p);
   }
   static void destruct_TArtCalibS1DC1Track(void *p) {
      typedef ::TArtCalibS1DC1Track current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibS1DC1Track

//______________________________________________________________________________
void TArtCalibS1DC1Hit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibS1DC1Hit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibS1DC1Hit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibS1DC1Hit::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibS1DC1Hit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibS1DC1Hit.
      TClass *R__cl = ::TArtCalibS1DC1Hit::IsA();
      if (R__cl || R__insp.IsA()) { }
      TArtCalibDCHit::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibS1DC1Hit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibS1DC1Hit : new ::TArtCalibS1DC1Hit;
   }
   static void *newArray_TArtCalibS1DC1Hit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibS1DC1Hit[nElements] : new ::TArtCalibS1DC1Hit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibS1DC1Hit(void *p) {
      delete ((::TArtCalibS1DC1Hit*)p);
   }
   static void deleteArray_TArtCalibS1DC1Hit(void *p) {
      delete [] ((::TArtCalibS1DC1Hit*)p);
   }
   static void destruct_TArtCalibS1DC1Hit(void *p) {
      typedef ::TArtCalibS1DC1Hit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibS1DC1Hit

//______________________________________________________________________________
void TArtCalibS1DC2Track::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibS1DC2Track.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibS1DC2Track::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibS1DC2Track::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibS1DC2Track::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibS1DC2Track.
      TClass *R__cl = ::TArtCalibS1DC2Track::IsA();
      if (R__cl || R__insp.IsA()) { }
      TArtCalibDCTrack::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibS1DC2Track(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibS1DC2Track : new ::TArtCalibS1DC2Track;
   }
   static void *newArray_TArtCalibS1DC2Track(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibS1DC2Track[nElements] : new ::TArtCalibS1DC2Track[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibS1DC2Track(void *p) {
      delete ((::TArtCalibS1DC2Track*)p);
   }
   static void deleteArray_TArtCalibS1DC2Track(void *p) {
      delete [] ((::TArtCalibS1DC2Track*)p);
   }
   static void destruct_TArtCalibS1DC2Track(void *p) {
      typedef ::TArtCalibS1DC2Track current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibS1DC2Track

//______________________________________________________________________________
void TArtCalibS1DC2Hit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibS1DC2Hit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibS1DC2Hit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibS1DC2Hit::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibS1DC2Hit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibS1DC2Hit.
      TClass *R__cl = ::TArtCalibS1DC2Hit::IsA();
      if (R__cl || R__insp.IsA()) { }
      TArtCalibDCHit::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibS1DC2Hit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibS1DC2Hit : new ::TArtCalibS1DC2Hit;
   }
   static void *newArray_TArtCalibS1DC2Hit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibS1DC2Hit[nElements] : new ::TArtCalibS1DC2Hit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibS1DC2Hit(void *p) {
      delete ((::TArtCalibS1DC2Hit*)p);
   }
   static void deleteArray_TArtCalibS1DC2Hit(void *p) {
      delete [] ((::TArtCalibS1DC2Hit*)p);
   }
   static void destruct_TArtCalibS1DC2Hit(void *p) {
      typedef ::TArtCalibS1DC2Hit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibS1DC2Hit

//______________________________________________________________________________
void TArtCalibDCTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibDCTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibDCTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibDCTrack::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibDCTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibDCTrack.
      TClass *R__cl = ::TArtCalibDCTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "indataname", &indataname);
      R__insp.InspectMember(indataname, "indataname.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layerdirs", (void*)&layerdirs);
      R__insp.InspectMember("vector<TString>", (void*)&layerdirs, "layerdirs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdczero", &tdczero);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "driftv", &driftv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pitch[14]", pitch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*stcfunc[14]", &stcfunc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minhitlayer", &minhitlayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdcwindow[2]", tdcwindow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdcint[14]", tdcint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc2mm[14][5000]", tdc2mm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer_pattern", &layer_pattern);
      R__insp.InspectMember(layer_pattern, "layer_pattern.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nlayer", &nlayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nlayer_x", &nlayer_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nlayer_y", &nlayer_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nlayer_u", &nlayer_u);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nlayer_v", &nlayer_v);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fyDCangle", &fyDCangle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fuDCangle", &fuDCangle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fvDCangle", &fvDCangle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer_map", (void*)&layer_map);
      R__insp.InspectMember("vector<int>", (void*)&layer_map, "layer_map.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDCTrackArray", &fDCTrackArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sman", &sman);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hits_buffer", &hits_buffer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hits_buffer_x", &hits_buffer_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hits_buffer_y", &hits_buffer_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hits_buffer_u", &hits_buffer_u);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hits_buffer_v", &hits_buffer_v);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtCalibDCTrack(void *p) {
      delete ((::TArtCalibDCTrack*)p);
   }
   static void deleteArray_TArtCalibDCTrack(void *p) {
      delete [] ((::TArtCalibDCTrack*)p);
   }
   static void destruct_TArtCalibDCTrack(void *p) {
      typedef ::TArtCalibDCTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibDCTrack

//______________________________________________________________________________
void TArtCalibDCHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibDCHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibDCHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibDCHit::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibDCHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibDCHit.
      TClass *R__cl = ::TArtCalibDCHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detectorid", &detectorid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDCHitArray", &fDCHitArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDCHitParaArray", (void*)&fDCHitParaArray);
      R__insp.InspectMember("vector<TArtDCHitPara*>", (void*)&fDCHitParaArray, "fDCHitParaArray.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setup", &setup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sman", &sman);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtCalibDCHit(void *p) {
      delete ((::TArtCalibDCHit*)p);
   }
   static void deleteArray_TArtCalibDCHit(void *p) {
      delete [] ((::TArtCalibDCHit*)p);
   }
   static void destruct_TArtCalibDCHit(void *p) {
      typedef ::TArtCalibDCHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibDCHit

//______________________________________________________________________________
void TArtCalibICF::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibICF.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibICF::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibICF::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibICF::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibICF.
      TClass *R__cl = ::TArtCalibICF::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCalibIC", &fCalibIC);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibICF(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibICF : new ::TArtCalibICF;
   }
   static void *newArray_TArtCalibICF(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibICF[nElements] : new ::TArtCalibICF[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibICF(void *p) {
      delete ((::TArtCalibICF*)p);
   }
   static void deleteArray_TArtCalibICF(void *p) {
      delete [] ((::TArtCalibICF*)p);
   }
   static void destruct_TArtCalibICF(void *p) {
      typedef ::TArtCalibICF current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibICF

//______________________________________________________________________________
void TArtCalcGlobalTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalcGlobalTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalcGlobalTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalcGlobalTrack::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalcGlobalTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalcGlobalTrack.
      TClass *R__cl = ::TArtCalcGlobalTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*In_", &In_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Out_", &Out_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iniP_", &iniP_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "l_FDC2HOD_", &l_FDC2HOD_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hPntCont_", (void*)&hPntCont_);
      R__insp.InspectMember("RKHitPointContainer", (void*)&hPntCont_, "hPntCont_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "status_", &status_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nIteration_", &nIteration_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chisqr_", &chisqr_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "diff_[100]", diff_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "priPos_", &priPos_);
      R__insp.InspectMember(priPos_, "priPos_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "priMom_", &priMom_);
      R__insp.InspectMember(priMom_, "priMom_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pLenTtoT_", &pLenTtoT_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pLenTot_", &pLenTot_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CPval_", (void*)&CPval_);
      R__insp.InspectMember("RKCordParameter", (void*)&CPval_, "CPval_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hitArray_", (void*)&hitArray_);
      R__insp.InspectMember("vector<TrackHit*>", (void*)&hitArray_, "hitArray_.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaxIteraction", &MaxIteraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaxChiSqr", &MaxChiSqr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MinDeltaChiSqrR", &MinDeltaChiSqrR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InitialChiSqr", &InitialChiSqr);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TArtCalcGlobalTrack(void *p) {
      delete ((::TArtCalcGlobalTrack*)p);
   }
   static void deleteArray_TArtCalcGlobalTrack(void *p) {
      delete [] ((::TArtCalcGlobalTrack*)p);
   }
   static void destruct_TArtCalcGlobalTrack(void *p) {
      typedef ::TArtCalcGlobalTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalcGlobalTrack

//______________________________________________________________________________
void TArtTZero::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtTZero.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtTZero::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtTZero::Class(),this);
   }
}

//______________________________________________________________________________
void TArtTZero::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtTZero.
      TClass *R__cl = ::TArtTZero::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT0Cal", &fT0Cal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT0Slw", &fT0Slw);
      TArtDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtTZero(void *p) {
      return  p ? new(p) ::TArtTZero : new ::TArtTZero;
   }
   static void *newArray_TArtTZero(Long_t nElements, void *p) {
      return p ? new(p) ::TArtTZero[nElements] : new ::TArtTZero[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtTZero(void *p) {
      delete ((::TArtTZero*)p);
   }
   static void deleteArray_TArtTZero(void *p) {
      delete [] ((::TArtTZero*)p);
   }
   static void destruct_TArtTZero(void *p) {
      typedef ::TArtTZero current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtTZero

//______________________________________________________________________________
void TArtICF::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtICF.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtICF::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtICF::Class(),this);
   }
}

//______________________________________________________________________________
void TArtICF::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtICF.
      TClass *R__cl = ::TArtICF::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zcoef[2]", zcoef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ionpair", &ionpair);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nhitchannel", &nhitchannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ic[4]", ic);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalMeVSqSum", &fCalMeVSqSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalMeVAvSum", &fCalMeVAvSum);
      TArtDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtICF(void *p) {
      return  p ? new(p) ::TArtICF : new ::TArtICF;
   }
   static void *newArray_TArtICF(Long_t nElements, void *p) {
      return p ? new(p) ::TArtICF[nElements] : new ::TArtICF[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtICF(void *p) {
      delete ((::TArtICF*)p);
   }
   static void deleteArray_TArtICF(void *p) {
      delete [] ((::TArtICF*)p);
   }
   static void destruct_TArtICF(void *p) {
      typedef ::TArtICF current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtICF

//______________________________________________________________________________
void TArtDCTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtDCTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtDCTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtDCTrack::Class(),this);
   }
}

//______________________________________________________________________________
void TArtDCTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtDCTrack.
      TClass *R__cl = ::TArtDCTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nhitlayer", &nhitlayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2", &chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ndf", &ndf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cx[2]", cx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ca[2]", ca);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hitid", (void*)&hitid);
      R__insp.InspectMember("vector<Int_t>", (void*)&hitid, "hitid.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dl", (void*)&dl);
      R__insp.InspectMember("vector<Double_t>", (void*)&dl, "dl.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lx", (void*)&lx);
      R__insp.InspectMember("vector<Double_t>", (void*)&lx, "lx.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lz", (void*)&lz);
      R__insp.InspectMember("vector<Double_t>", (void*)&lz, "lz.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "plane_id", (void*)&plane_id);
      R__insp.InspectMember("vector<Int_t>", (void*)&plane_id, "plane_id.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dcangle", (void*)&dcangle);
      R__insp.InspectMember("vector<Double_t>", (void*)&dcangle, "dcangle.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fsign", (void*)&fsign);
      R__insp.InspectMember("vector<Int_t>", (void*)&fsign, "fsign.", false);
      TArtDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtDCTrack(void *p) {
      return  p ? new(p) ::TArtDCTrack : new ::TArtDCTrack;
   }
   static void *newArray_TArtDCTrack(Long_t nElements, void *p) {
      return p ? new(p) ::TArtDCTrack[nElements] : new ::TArtDCTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtDCTrack(void *p) {
      delete ((::TArtDCTrack*)p);
   }
   static void deleteArray_TArtDCTrack(void *p) {
      delete [] ((::TArtDCTrack*)p);
   }
   static void destruct_TArtDCTrack(void *p) {
      typedef ::TArtDCTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDCTrack

//______________________________________________________________________________
void TArtDCHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtDCHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtDCHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtDCHit::Class(),this);
   }
}

//______________________________________________________________________________
void TArtDCHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtDCHit.
      TClass *R__cl = ::TArtDCHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer", &layer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id_plane", &id_plane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "anodedir", &anodedir);
      R__insp.InspectMember(anodedir, "anodedir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wirepos", &wirepos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wirez", &wirez);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wireid", &wireid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coef[3]", coef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id_hit", &id_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDC", &fTDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrailTDC", &fTrailTDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosition", &fPosition);
      TArtDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtDCHit(void *p) {
      return  p ? new(p) ::TArtDCHit : new ::TArtDCHit;
   }
   static void *newArray_TArtDCHit(Long_t nElements, void *p) {
      return p ? new(p) ::TArtDCHit[nElements] : new ::TArtDCHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtDCHit(void *p) {
      delete ((::TArtDCHit*)p);
   }
   static void deleteArray_TArtDCHit(void *p) {
      delete [] ((::TArtDCHit*)p);
   }
   static void destruct_TArtDCHit(void *p) {
      typedef ::TArtDCHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDCHit

//______________________________________________________________________________
void TArtDCHitPara::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtDCHitPara.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtDCHitPara::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtDCHitPara::Class(),this);
   }
}

//______________________________________________________________________________
void TArtDCHitPara::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtDCHitPara.
      TClass *R__cl = ::TArtDCHitPara::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detname", &detname);
      R__insp.InspectMember(detname, "detname.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fpl", &fpl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer", &layer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id_plane", &id_plane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wireid", &wireid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wirepos", &wirepos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wirez", &wirez);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tzero_offset", &tzero_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coef0", &coef0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coef1", &coef1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coef2", &coef2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "map", &map);
      R__insp.InspectMember(map, "map.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtDCHitPara(void *p) {
      return  p ? new(p) ::TArtDCHitPara : new ::TArtDCHitPara;
   }
   static void *newArray_TArtDCHitPara(Long_t nElements, void *p) {
      return p ? new(p) ::TArtDCHitPara[nElements] : new ::TArtDCHitPara[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtDCHitPara(void *p) {
      delete ((::TArtDCHitPara*)p);
   }
   static void deleteArray_TArtDCHitPara(void *p) {
      delete [] ((::TArtDCHitPara*)p);
   }
   static void destruct_TArtDCHitPara(void *p) {
      typedef ::TArtDCHitPara current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtDCHitPara

//______________________________________________________________________________
void TArtCalibHODPla::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibHODPla.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibHODPla::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibHODPla::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibHODPla::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibHODPla.
      TClass *R__cl = ::TArtCalibHODPla::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHODPlaArray", &fHODPlaArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHODPlaParaArray", (void*)&fHODPlaParaArray);
      R__insp.InspectMember("vector<TArtHODPlaPara*>", (void*)&fHODPlaParaArray, "fHODPlaParaArray.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setup", &setup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sman", &sman);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibHODPla(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibHODPla : new ::TArtCalibHODPla;
   }
   static void *newArray_TArtCalibHODPla(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibHODPla[nElements] : new ::TArtCalibHODPla[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibHODPla(void *p) {
      delete ((::TArtCalibHODPla*)p);
   }
   static void deleteArray_TArtCalibHODPla(void *p) {
      delete [] ((::TArtCalibHODPla*)p);
   }
   static void destruct_TArtCalibHODPla(void *p) {
      typedef ::TArtCalibHODPla current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibHODPla

//______________________________________________________________________________
void TArtHODPla::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtHODPla.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtHODPla::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtHODPla::Class(),this);
   }
}

//______________________________________________________________________________
void TArtHODPla::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtHODPla.
      TClass *R__cl = ::TArtHODPla::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTURaw", &fTURaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDRaw", &fTDRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQURaw", &fQURaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQDRaw", &fQDRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQUPed", &fQUPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQDPed", &fQDPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQUCal", &fQUCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQDCal", &fQDCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQAveRaw", &fQAveRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQAvePed", &fQAvePed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQAveCal", &fQAveCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAveCal", &fTAveCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTUCal", &fTUCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDCal", &fTDCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTUSlw", &fTUSlw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDSlw", &fTDSlw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAveSlw", &fTAveSlw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zcoef[4]", zcoef);
      TArtDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtHODPla(void *p) {
      return  p ? new(p) ::TArtHODPla : new ::TArtHODPla;
   }
   static void *newArray_TArtHODPla(Long_t nElements, void *p) {
      return p ? new(p) ::TArtHODPla[nElements] : new ::TArtHODPla[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtHODPla(void *p) {
      delete ((::TArtHODPla*)p);
   }
   static void deleteArray_TArtHODPla(void *p) {
      delete [] ((::TArtHODPla*)p);
   }
   static void destruct_TArtHODPla(void *p) {
      typedef ::TArtHODPla current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtHODPla

//______________________________________________________________________________
void TArtHODPlaPara::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtHODPlaPara.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtHODPlaPara::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtHODPlaPara::Class(),this);
   }
}

//______________________________________________________________________________
void TArtHODPlaPara::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtHODPlaPara.
      TClass *R__cl = ::TArtHODPlaPara::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detname", &detname);
      R__insp.InspectMember(detname, "detname.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fpl", &fpl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tcal_up", &tcal_up);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tcal_down", &tcal_down);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "toff_up", &toff_up);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "toff_down", &toff_down);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_off", &t_off);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qcal_up", &qcal_up);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qcal_down", &qcal_down);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qped_up", &qped_up);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qped_down", &qped_down);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tslew_up_a", &tslew_up_a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tslew_up_b", &tslew_up_b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tslew_down_a", &tslew_down_a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tslew_down_b", &tslew_down_b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zcoef_0", &zcoef_0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zcoef_1", &zcoef_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zcoef_2", &zcoef_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zcoef_3", &zcoef_3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "map_tup", &map_tup);
      R__insp.InspectMember(map_tup, "map_tup.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "map_tdown", &map_tdown);
      R__insp.InspectMember(map_tdown, "map_tdown.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "map_qup", &map_qup);
      R__insp.InspectMember(map_qup, "map_qup.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "map_qdown", &map_qdown);
      R__insp.InspectMember(map_qdown, "map_qdown.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtHODPlaPara(void *p) {
      return  p ? new(p) ::TArtHODPlaPara : new ::TArtHODPlaPara;
   }
   static void *newArray_TArtHODPlaPara(Long_t nElements, void *p) {
      return p ? new(p) ::TArtHODPlaPara[nElements] : new ::TArtHODPlaPara[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtHODPlaPara(void *p) {
      delete ((::TArtHODPlaPara*)p);
   }
   static void deleteArray_TArtHODPlaPara(void *p) {
      delete [] ((::TArtHODPlaPara*)p);
   }
   static void destruct_TArtHODPlaPara(void *p) {
      typedef ::TArtHODPlaPara current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtHODPlaPara

//______________________________________________________________________________
void TArtCalibTEDCsI::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibTEDCsI.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibTEDCsI::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibTEDCsI::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibTEDCsI::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibTEDCsI.
      TClass *R__cl = ::TArtCalibTEDCsI::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTEDCsIArray", &fTEDCsIArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTEDCsIParaArray", (void*)&fTEDCsIParaArray);
      R__insp.InspectMember("vector<TArtTEDCsIPara*>", (void*)&fTEDCsIParaArray, "fTEDCsIParaArray.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setup", &setup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sman", &sman);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibTEDCsI(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibTEDCsI : new ::TArtCalibTEDCsI;
   }
   static void *newArray_TArtCalibTEDCsI(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibTEDCsI[nElements] : new ::TArtCalibTEDCsI[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibTEDCsI(void *p) {
      delete ((::TArtCalibTEDCsI*)p);
   }
   static void deleteArray_TArtCalibTEDCsI(void *p) {
      delete [] ((::TArtCalibTEDCsI*)p);
   }
   static void destruct_TArtCalibTEDCsI(void *p) {
      typedef ::TArtCalibTEDCsI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibTEDCsI

//______________________________________________________________________________
void TArtTEDCsI::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtTEDCsI.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtTEDCsI::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtTEDCsI::Class(),this);
   }
}

//______________________________________________________________________________
void TArtTEDCsI::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtTEDCsI.
      TClass *R__cl = ::TArtTEDCsI::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "row", &row);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "column", &column);
      TArtTKE::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtTEDCsI(void *p) {
      return  p ? new(p) ::TArtTEDCsI : new ::TArtTEDCsI;
   }
   static void *newArray_TArtTEDCsI(Long_t nElements, void *p) {
      return p ? new(p) ::TArtTEDCsI[nElements] : new ::TArtTEDCsI[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtTEDCsI(void *p) {
      delete ((::TArtTEDCsI*)p);
   }
   static void deleteArray_TArtTEDCsI(void *p) {
      delete [] ((::TArtTEDCsI*)p);
   }
   static void destruct_TArtTEDCsI(void *p) {
      typedef ::TArtTEDCsI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtTEDCsI

//______________________________________________________________________________
void TArtTEDCsIPara::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtTEDCsIPara.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtTEDCsIPara::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtTEDCsIPara::Class(),this);
   }
}

//______________________________________________________________________________
void TArtTEDCsIPara::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtTEDCsIPara.
      TClass *R__cl = ::TArtTEDCsIPara::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "row", &row);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "column", &column);
      TArtTKEPara::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtTEDCsIPara(void *p) {
      return  p ? new(p) ::TArtTEDCsIPara : new ::TArtTEDCsIPara;
   }
   static void *newArray_TArtTEDCsIPara(Long_t nElements, void *p) {
      return p ? new(p) ::TArtTEDCsIPara[nElements] : new ::TArtTEDCsIPara[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtTEDCsIPara(void *p) {
      delete ((::TArtTEDCsIPara*)p);
   }
   static void deleteArray_TArtTEDCsIPara(void *p) {
      delete [] ((::TArtTEDCsIPara*)p);
   }
   static void destruct_TArtTEDCsIPara(void *p) {
      typedef ::TArtTEDCsIPara current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtTEDCsIPara

//______________________________________________________________________________
void TArtCalibNEBULA::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibNEBULA.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibNEBULA::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibNEBULA::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibNEBULA::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibNEBULA.
      TClass *R__cl = ::TArtCalibNEBULA::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fT0Array", &fT0Array);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNEBULAPlaArray", &fNEBULAPlaArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNEBULAPlaParaArray", &fNEBULAPlaParaArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSAMURAIParameters", &fSAMURAIParameters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStoreManager", &fStoreManager);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMult", &fMult);
      R__insp.InspectMember(fMult, "fMult.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIDNPlaMap", (void*)&fIDNPlaMap);
      R__insp.InspectMember("map<int,int>", (void*)&fIDNPlaMap, "fIDNPlaMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIDNPlaParaMap", (void*)&fIDNPlaParaMap);
      R__insp.InspectMember("map<int,int>", (void*)&fIDNPlaParaMap, "fIDNPlaParaMap.", false);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibNEBULA(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibNEBULA : new ::TArtCalibNEBULA;
   }
   static void *newArray_TArtCalibNEBULA(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibNEBULA[nElements] : new ::TArtCalibNEBULA[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibNEBULA(void *p) {
      delete ((::TArtCalibNEBULA*)p);
   }
   static void deleteArray_TArtCalibNEBULA(void *p) {
      delete [] ((::TArtCalibNEBULA*)p);
   }
   static void destruct_TArtCalibNEBULA(void *p) {
      typedef ::TArtCalibNEBULA current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibNEBULA

//______________________________________________________________________________
void TArtNEBULAPla::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtNEBULAPla.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtNEBULAPla::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtNEBULAPla::Class(),this);
   }
}

//______________________________________________________________________________
void TArtNEBULAPla::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtNEBULAPla.
      TClass *R__cl = ::TArtNEBULAPla::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLayer", &fLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSubLayer", &fSubLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetPos[3]", fDetPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit", &fHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQURaw", &fQURaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQDRaw", &fQDRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQUPed", &fQUPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQDPed", &fQDPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQUCal", &fQUCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQDCal", &fQDCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQAvePed", &fQAvePed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQAveCal", &fQAveCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLogQPed", &fLogQPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLogQCal", &fLogQCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIvSqrtQUPed", &fIvSqrtQUPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIvSqrtQDPed", &fIvSqrtQDPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIvSqrtQAvePed", &fIvSqrtQAvePed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTURaw", &fTURaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDRaw", &fTDRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTUCal", &fTUCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDCal", &fTDCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTUSlw", &fTUSlw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDSlw", &fTDSlw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDTRaw", &fDTRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDTCal", &fDTCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDTSlw", &fDTSlw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAveRaw", &fTAveRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAveCal", &fTAveCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAveSlw", &fTAveSlw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTUCalT0", &fTUCalT0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDCalT0", &fTDCalT0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTUSlwT0", &fTUSlwT0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDSlwT0", &fTDSlwT0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAveCalT0", &fTAveCalT0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAveSlwT0", &fTAveSlwT0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTOFGamma", &fTTOFGamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTOFNeutron", &fTTOFNeutron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosCal", &fPosCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosSlw", &fPosSlw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPos[3]", fPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFlightLength", &fFlightLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFlightAngle", &fFlightAngle);
      TArtDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtNEBULAPla(void *p) {
      return  p ? new(p) ::TArtNEBULAPla : new ::TArtNEBULAPla;
   }
   static void *newArray_TArtNEBULAPla(Long_t nElements, void *p) {
      return p ? new(p) ::TArtNEBULAPla[nElements] : new ::TArtNEBULAPla[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtNEBULAPla(void *p) {
      delete ((::TArtNEBULAPla*)p);
   }
   static void deleteArray_TArtNEBULAPla(void *p) {
      delete [] ((::TArtNEBULAPla*)p);
   }
   static void destruct_TArtNEBULAPla(void *p) {
      typedef ::TArtNEBULAPla current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtNEBULAPla

//______________________________________________________________________________
void TArtNEBULAPlaPara::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtNEBULAPlaPara.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtNEBULAPlaPara::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtNEBULAPlaPara::Class(),this);
   }
}

//______________________________________________________________________________
void TArtNEBULAPlaPara::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtNEBULAPlaPara.
      TClass *R__cl = ::TArtNEBULAPlaPara::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fID", &fID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetName", &fDetName);
      R__insp.InspectMember(fDetName, "fDetName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFpl", &fFpl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLayer", &fLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSubLayer", &fSubLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetPos[3]", fDetPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTUCal", &fTUCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTUOff", &fTUOff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTUSlw", &fTUSlw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTUSlwLog[5]", fTUSlwLog);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQUCal", &fQUCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQUPed", &fQUPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDCal", &fTDCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDOff", &fTDOff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDSlw", &fTDSlw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDSlwLog[5]", fTDSlwLog);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQDCal", &fQDCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQDPed", &fQDPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDTCal", &fDTCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDTOff", &fDTOff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAveOff", &fTAveOff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQAveCal", &fQAveCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQAveCalAtt", &fQAveCalAtt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQAveCalAtt2", &fQAveCalAtt2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTSlwPow", &fTSlwPow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAveOffSlw", &fTAveOffSlw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAveOffDelta", &fTAveOffDelta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAveOffLight", &fTAveOffLight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIgnore", &fIgnore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMapU", &fMapU);
      R__insp.InspectMember(fMapU, "fMapU.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMapD", &fMapD);
      R__insp.InspectMember(fMapD, "fMapD.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtNEBULAPlaPara(void *p) {
      return  p ? new(p) ::TArtNEBULAPlaPara : new ::TArtNEBULAPlaPara;
   }
   static void *newArray_TArtNEBULAPlaPara(Long_t nElements, void *p) {
      return p ? new(p) ::TArtNEBULAPlaPara[nElements] : new ::TArtNEBULAPlaPara[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtNEBULAPlaPara(void *p) {
      delete ((::TArtNEBULAPlaPara*)p);
   }
   static void deleteArray_TArtNEBULAPlaPara(void *p) {
      delete [] ((::TArtNEBULAPlaPara*)p);
   }
   static void destruct_TArtNEBULAPlaPara(void *p) {
      typedef ::TArtNEBULAPlaPara current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtNEBULAPlaPara

//______________________________________________________________________________
void TArtNEBULAFilter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtNEBULAFilter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtNEBULAFilter::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtNEBULAFilter::Class(),this);
   }
}

//______________________________________________________________________________
void TArtNEBULAFilter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtNEBULAFilter.
      TClass *R__cl = ::TArtNEBULAFilter::IsA();
      if (R__cl || R__insp.IsA()) { }
}

namespace ROOTDict {
} // end of namespace ROOTDict for class ::TArtNEBULAFilter

//______________________________________________________________________________
void TArtCalibNEBULAMult::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibNEBULAMult.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibNEBULAMult::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibNEBULAMult::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibNEBULAMult::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibNEBULAMult.
      TClass *R__cl = ::TArtCalibNEBULAMult::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultiplicity_N", &fMultiplicity_N);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultiplicity_N1", &fMultiplicity_N1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultiplicity_N2", &fMultiplicity_N2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultiplicity_V1", &fMultiplicity_V1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultiplicity_V2", &fMultiplicity_V2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultiplicity_N11", &fMultiplicity_N11);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultiplicity_N12", &fMultiplicity_N12);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultiplicity_N21", &fMultiplicity_N21);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultiplicity_N22", &fMultiplicity_N22);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibNEBULAMult(void *p) {
      return  p ? new(p) ::TArtCalibNEBULAMult : new ::TArtCalibNEBULAMult;
   }
   static void *newArray_TArtCalibNEBULAMult(Long_t nElements, void *p) {
      return p ? new(p) ::TArtCalibNEBULAMult[nElements] : new ::TArtCalibNEBULAMult[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibNEBULAMult(void *p) {
      delete ((::TArtCalibNEBULAMult*)p);
   }
   static void deleteArray_TArtCalibNEBULAMult(void *p) {
      delete [] ((::TArtCalibNEBULAMult*)p);
   }
   static void destruct_TArtCalibNEBULAMult(void *p) {
      typedef ::TArtCalibNEBULAMult current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibNEBULAMult

//______________________________________________________________________________
void TArtCalibHIME::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibHIME.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibHIME::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibHIME::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibHIME::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibHIME.
      TClass *R__cl = ::TArtCalibHIME::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fT0Array", &fT0Array);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHIMEPlaArray", &fHIMEPlaArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHIMEPlaParaArray", &fHIMEPlaParaArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSAMURAIParameters", &fSAMURAIParameters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStoreManager", &fStoreManager);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMult", &fMult);
      R__insp.InspectMember(fMult, "fMult.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIDNPlaMap", (void*)&fIDNPlaMap);
      R__insp.InspectMember("map<int,int>", (void*)&fIDNPlaMap, "fIDNPlaMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIDNPlaParaMap", (void*)&fIDNPlaParaMap);
      R__insp.InspectMember("map<int,int>", (void*)&fIDNPlaParaMap, "fIDNPlaParaMap.", false);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibHIME(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibHIME : new ::TArtCalibHIME;
   }
   static void *newArray_TArtCalibHIME(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibHIME[nElements] : new ::TArtCalibHIME[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibHIME(void *p) {
      delete ((::TArtCalibHIME*)p);
   }
   static void deleteArray_TArtCalibHIME(void *p) {
      delete [] ((::TArtCalibHIME*)p);
   }
   static void destruct_TArtCalibHIME(void *p) {
      typedef ::TArtCalibHIME current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibHIME

//______________________________________________________________________________
void TArtHIMEPla::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtHIMEPla.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtHIMEPla::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtHIMEPla::Class(),this);
   }
}

//______________________________________________________________________________
void TArtHIMEPla::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtHIMEPla.
      TClass *R__cl = ::TArtHIMEPla::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLayer", &fLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSubLayer", &fSubLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetPos[3]", fDetPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit", &fHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQRaw[2]", fQRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQPed[2]", fQPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQCal[2]", fQCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQAvePed", &fQAvePed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQAveCal", &fQAveCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLogQPed", &fLogQPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLogQCal", &fLogQCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIvSqrtQPed[2]", fIvSqrtQPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIvSqrtQAvePed", &fIvSqrtQAvePed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTRaw[2]", fTRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTCal[2]", fTCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTSlw[2]", fTSlw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDTRaw", &fDTRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDTCal", &fDTCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDTSlw", &fDTSlw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAveRaw", &fTAveRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAveCal", &fTAveCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAveSlw", &fTAveSlw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTCalT0[2]", fTCalT0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTSlwT0[2]", fTSlwT0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAveCalT0", &fTAveCalT0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAveSlwT0", &fTAveSlwT0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTOFGamma", &fTTOFGamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTOFNeutron", &fTTOFNeutron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosCal", &fPosCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosSlw", &fPosSlw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPos[3]", fPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFlightLength", &fFlightLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFlightAngle", &fFlightAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetDirect", &fDetDirect);
      TArtDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtHIMEPla(void *p) {
      return  p ? new(p) ::TArtHIMEPla : new ::TArtHIMEPla;
   }
   static void *newArray_TArtHIMEPla(Long_t nElements, void *p) {
      return p ? new(p) ::TArtHIMEPla[nElements] : new ::TArtHIMEPla[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtHIMEPla(void *p) {
      delete ((::TArtHIMEPla*)p);
   }
   static void deleteArray_TArtHIMEPla(void *p) {
      delete [] ((::TArtHIMEPla*)p);
   }
   static void destruct_TArtHIMEPla(void *p) {
      typedef ::TArtHIMEPla current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtHIMEPla

//______________________________________________________________________________
void TArtHIMEPlaPara::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtHIMEPlaPara.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtHIMEPlaPara::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtHIMEPlaPara::Class(),this);
   }
}

//______________________________________________________________________________
void TArtHIMEPlaPara::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtHIMEPlaPara.
      TClass *R__cl = ::TArtHIMEPlaPara::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fID", &fID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetName", &fDetName);
      R__insp.InspectMember(fDetName, "fDetName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFpl", &fFpl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLayer", &fLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSubLayer", &fSubLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetPos[3]", fDetPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTCal[2]", fTCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTOff[2]", fTOff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTSlw[2]", fTSlw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTSlwLog[2][5]", fTSlwLog);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQCal[2]", fQCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQPed[2]", fQPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDTCal", &fDTCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDTOff", &fDTOff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAveOff", &fTAveOff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQAveCal", &fQAveCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQAveCalAtt", &fQAveCalAtt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQAveCalAtt2", &fQAveCalAtt2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIgnore", &fIgnore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetDirect", &fDetDirect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMapU", &fMapU);
      R__insp.InspectMember(fMapU, "fMapU.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMapD", &fMapD);
      R__insp.InspectMember(fMapD, "fMapD.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtHIMEPlaPara(void *p) {
      return  p ? new(p) ::TArtHIMEPlaPara : new ::TArtHIMEPlaPara;
   }
   static void *newArray_TArtHIMEPlaPara(Long_t nElements, void *p) {
      return p ? new(p) ::TArtHIMEPlaPara[nElements] : new ::TArtHIMEPlaPara[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtHIMEPlaPara(void *p) {
      delete ((::TArtHIMEPlaPara*)p);
   }
   static void deleteArray_TArtHIMEPlaPara(void *p) {
      delete [] ((::TArtHIMEPlaPara*)p);
   }
   static void destruct_TArtHIMEPlaPara(void *p) {
      typedef ::TArtHIMEPlaPara current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtHIMEPlaPara

//______________________________________________________________________________
void TArtHIMEFilter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtHIMEFilter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtHIMEFilter::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtHIMEFilter::Class(),this);
   }
}

//______________________________________________________________________________
void TArtHIMEFilter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtHIMEFilter.
      TClass *R__cl = ::TArtHIMEFilter::IsA();
      if (R__cl || R__insp.IsA()) { }
}

namespace ROOTDict {
} // end of namespace ROOTDict for class ::TArtHIMEFilter

//______________________________________________________________________________
void TArtCalibHIMEMult::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibHIMEMult.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibHIMEMult::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibHIMEMult::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibHIMEMult::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibHIMEMult.
      TClass *R__cl = ::TArtCalibHIMEMult::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultiplicity_N[6]", fMultiplicity_N);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultiplicity_V", &fMultiplicity_V);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibHIMEMult(void *p) {
      return  p ? new(p) ::TArtCalibHIMEMult : new ::TArtCalibHIMEMult;
   }
   static void *newArray_TArtCalibHIMEMult(Long_t nElements, void *p) {
      return p ? new(p) ::TArtCalibHIMEMult[nElements] : new ::TArtCalibHIMEMult[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibHIMEMult(void *p) {
      delete ((::TArtCalibHIMEMult*)p);
   }
   static void deleteArray_TArtCalibHIMEMult(void *p) {
      delete [] ((::TArtCalibHIMEMult*)p);
   }
   static void destruct_TArtCalibHIMEMult(void *p) {
      typedef ::TArtCalibHIMEMult current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibHIMEMult

//______________________________________________________________________________
void TArtCalibNEBULAHPC::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibNEBULAHPC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibNEBULAHPC::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibNEBULAHPC::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibNEBULAHPC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibNEBULAHPC.
      TClass *R__cl = ::TArtCalibNEBULAHPC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNEBULAHPCArray", &fNEBULAHPCArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNEBULAHPCParaArray", &fNEBULAHPCParaArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSAMURAIParameters", &fSAMURAIParameters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStoreManager", &fStoreManager);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIDNHPCMap", (void*)&fIDNHPCMap);
      R__insp.InspectMember("map<int,int>", (void*)&fIDNHPCMap, "fIDNHPCMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIDNHPCParaMap", (void*)&fIDNHPCParaMap);
      R__insp.InspectMember("map<int,int>", (void*)&fIDNHPCParaMap, "fIDNHPCParaMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultiplicity", &fMultiplicity);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibNEBULAHPC(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibNEBULAHPC : new ::TArtCalibNEBULAHPC;
   }
   static void *newArray_TArtCalibNEBULAHPC(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibNEBULAHPC[nElements] : new ::TArtCalibNEBULAHPC[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibNEBULAHPC(void *p) {
      delete ((::TArtCalibNEBULAHPC*)p);
   }
   static void deleteArray_TArtCalibNEBULAHPC(void *p) {
      delete [] ((::TArtCalibNEBULAHPC*)p);
   }
   static void destruct_TArtCalibNEBULAHPC(void *p) {
      typedef ::TArtCalibNEBULAHPC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibNEBULAHPC

//______________________________________________________________________________
void TArtNEBULAHPC::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtNEBULAHPC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtNEBULAHPC::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtNEBULAHPC::Class(),this);
   }
}

//______________________________________________________________________________
void TArtNEBULAHPC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtNEBULAHPC.
      TClass *R__cl = ::TArtNEBULAHPC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLayer", &fLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSubLayer", &fSubLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetPos[3]", fDetPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTRaw", &fTRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTCal", &fTCal);
      TArtDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtNEBULAHPC(void *p) {
      return  p ? new(p) ::TArtNEBULAHPC : new ::TArtNEBULAHPC;
   }
   static void *newArray_TArtNEBULAHPC(Long_t nElements, void *p) {
      return p ? new(p) ::TArtNEBULAHPC[nElements] : new ::TArtNEBULAHPC[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtNEBULAHPC(void *p) {
      delete ((::TArtNEBULAHPC*)p);
   }
   static void deleteArray_TArtNEBULAHPC(void *p) {
      delete [] ((::TArtNEBULAHPC*)p);
   }
   static void destruct_TArtNEBULAHPC(void *p) {
      typedef ::TArtNEBULAHPC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtNEBULAHPC

//______________________________________________________________________________
void TArtNEBULAHPCPara::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtNEBULAHPCPara.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtNEBULAHPCPara::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtNEBULAHPCPara::Class(),this);
   }
}

//______________________________________________________________________________
void TArtNEBULAHPCPara::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtNEBULAHPCPara.
      TClass *R__cl = ::TArtNEBULAHPCPara::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fID", &fID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetName", &fDetName);
      R__insp.InspectMember(fDetName, "fDetName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFpl", &fFpl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLayer", &fLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSubLayer", &fSubLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetPos[3]", fDetPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTCal", &fTCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTOff", &fTOff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRIDFMap", &fRIDFMap);
      R__insp.InspectMember(fRIDFMap, "fRIDFMap.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtNEBULAHPCPara(void *p) {
      return  p ? new(p) ::TArtNEBULAHPCPara : new ::TArtNEBULAHPCPara;
   }
   static void *newArray_TArtNEBULAHPCPara(Long_t nElements, void *p) {
      return p ? new(p) ::TArtNEBULAHPCPara[nElements] : new ::TArtNEBULAHPCPara[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtNEBULAHPCPara(void *p) {
      delete ((::TArtNEBULAHPCPara*)p);
   }
   static void deleteArray_TArtNEBULAHPCPara(void *p) {
      delete [] ((::TArtNEBULAHPCPara*)p);
   }
   static void destruct_TArtNEBULAHPCPara(void *p) {
      typedef ::TArtNEBULAHPCPara current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtNEBULAHPCPara

//______________________________________________________________________________
void TArtCalibNeuLAND::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibNeuLAND.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibNeuLAND::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibNeuLAND::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibNeuLAND::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibNeuLAND.
      TClass *R__cl = ::TArtCalibNeuLAND::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fT0Array", &fT0Array);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNeuLANDPlaArray", &fNeuLANDPlaArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNeuLANDMasterStart", &fNeuLANDMasterStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNeuLANDPlaParaArray", &fNeuLANDPlaParaArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSAMURAIParameters", &fSAMURAIParameters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStoreManager", &fStoreManager);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIDNPlaMap", (void*)&fIDNPlaMap);
      R__insp.InspectMember("map<int,int>", (void*)&fIDNPlaMap, "fIDNPlaMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIDNPlaParaMap", (void*)&fIDNPlaParaMap);
      R__insp.InspectMember("map<int,int>", (void*)&fIDNPlaParaMap, "fIDNPlaParaMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tac16_array", &tac16_array);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibNeuLAND(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibNeuLAND : new ::TArtCalibNeuLAND;
   }
   static void *newArray_TArtCalibNeuLAND(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibNeuLAND[nElements] : new ::TArtCalibNeuLAND[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibNeuLAND(void *p) {
      delete ((::TArtCalibNeuLAND*)p);
   }
   static void deleteArray_TArtCalibNeuLAND(void *p) {
      delete [] ((::TArtCalibNeuLAND*)p);
   }
   static void destruct_TArtCalibNeuLAND(void *p) {
      typedef ::TArtCalibNeuLAND current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibNeuLAND

//______________________________________________________________________________
void TArtNeuLANDPla::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtNeuLANDPla.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtNeuLANDPla::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtNeuLANDPla::Class(),this);
   }
}

//______________________________________________________________________________
void TArtNeuLANDPla::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtNeuLANDPla.
      TClass *R__cl = ::TArtNeuLANDPla::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLayer", &fLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBarID", &fBarID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQRaw[2]", fQRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQCal[2]", fQCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTac[2]", fTac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTacRef[2]", fTacRef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTCycle[2]", fTCycle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTRaw[2]", fTRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTCal[2]", fTCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isFired[2]", isFired);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPos", &fPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZPos", &fZPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fsam", &fsam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgtb", &fgtb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fmod", &fmod);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fch", &fch);
      TArtDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtNeuLANDPla(void *p) {
      return  p ? new(p) ::TArtNeuLANDPla : new ::TArtNeuLANDPla;
   }
   static void *newArray_TArtNeuLANDPla(Long_t nElements, void *p) {
      return p ? new(p) ::TArtNeuLANDPla[nElements] : new ::TArtNeuLANDPla[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtNeuLANDPla(void *p) {
      delete ((::TArtNeuLANDPla*)p);
   }
   static void deleteArray_TArtNeuLANDPla(void *p) {
      delete [] ((::TArtNeuLANDPla*)p);
   }
   static void destruct_TArtNeuLANDPla(void *p) {
      typedef ::TArtNeuLANDPla current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtNeuLANDPla

//______________________________________________________________________________
void TArtNeuLANDPlaPara::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtNeuLANDPlaPara.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtNeuLANDPlaPara::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtNeuLANDPlaPara::Class(),this);
   }
}

//______________________________________________________________________________
void TArtNeuLANDPlaPara::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtNeuLANDPlaPara.
      TClass *R__cl = ::TArtNeuLANDPlaPara::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fID", &fID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetName", &fDetName);
      R__insp.InspectMember(fDetName, "fDetName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFpl", &fFpl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirection", &fDirection);
      R__insp.InspectMember(fDirection, "fDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLayer", &fLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBarID", &fBarID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQCal[2]", fQCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQPed[2]", fQPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDC0ns[2]", fTDC0ns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDC25ns[2]", fTDC25ns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDC0ns_t17[2]", fTDC0ns_t17);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDC25ns_t17[2]", fTDC25ns_t17);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTac2nsPara[2][2][4]", fTac2nsPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTCalChannel[4]", fTCalChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTCalNs[4]", fTCalNs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTCalYep[2]", fTCalYep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdiff_offset", &tdiff_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tsync_offset", &tsync_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vscint", &vscint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ediff_offset", &ediff_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "esync_offset", &esync_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "att", &att);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tof_zero", &tof_zero);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tof_clight", &tof_clight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZPos", &fZPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMap[2]", fMap);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtNeuLANDPlaPara(void *p) {
      return  p ? new(p) ::TArtNeuLANDPlaPara : new ::TArtNeuLANDPlaPara;
   }
   static void *newArray_TArtNeuLANDPlaPara(Long_t nElements, void *p) {
      return p ? new(p) ::TArtNeuLANDPlaPara[nElements] : new ::TArtNeuLANDPlaPara[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtNeuLANDPlaPara(void *p) {
      delete ((::TArtNeuLANDPlaPara*)p);
   }
   static void deleteArray_TArtNeuLANDPlaPara(void *p) {
      delete [] ((::TArtNeuLANDPlaPara*)p);
   }
   static void destruct_TArtNeuLANDPlaPara(void *p) {
      typedef ::TArtNeuLANDPlaPara current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtNeuLANDPlaPara

//______________________________________________________________________________
void TArtTacquilaPara::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtTacquilaPara.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtTacquilaPara::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtTacquilaPara::Class(),this);
   }
}

//______________________________________________________________________________
void TArtTacquilaPara::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtTacquilaPara.
      TClass *R__cl = ::TArtTacquilaPara::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fID", &fID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetName", &fDetName);
      R__insp.InspectMember(fDetName, "fDetName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTac2Ns", &fTac2Ns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMap", &fMap);
      R__insp.InspectMember(fMap, "fMap.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtTacquilaPara(void *p) {
      return  p ? new(p) ::TArtTacquilaPara : new ::TArtTacquilaPara;
   }
   static void *newArray_TArtTacquilaPara(Long_t nElements, void *p) {
      return p ? new(p) ::TArtTacquilaPara[nElements] : new ::TArtTacquilaPara[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtTacquilaPara(void *p) {
      delete ((::TArtTacquilaPara*)p);
   }
   static void deleteArray_TArtTacquilaPara(void *p) {
      delete [] ((::TArtTacquilaPara*)p);
   }
   static void destruct_TArtTacquilaPara(void *p) {
      typedef ::TArtTacquilaPara current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtTacquilaPara

//______________________________________________________________________________
void TArtTacquilaMap::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtTacquilaMap.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtTacquilaMap::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtTacquilaMap::Class(),this);
   }
}

//______________________________________________________________________________
void TArtTacquilaMap::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtTacquilaMap.
      TClass *R__cl = ::TArtTacquilaMap::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sam", &sam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gtb", &gtb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mod", &mod);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ch", &ch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mapinfo[64]", mapinfo);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtTacquilaMap(void *p) {
      return  p ? new(p) ::TArtTacquilaMap : new ::TArtTacquilaMap;
   }
   static void *newArray_TArtTacquilaMap(Long_t nElements, void *p) {
      return p ? new(p) ::TArtTacquilaMap[nElements] : new ::TArtTacquilaMap[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtTacquilaMap(void *p) {
      delete ((::TArtTacquilaMap*)p);
   }
   static void deleteArray_TArtTacquilaMap(void *p) {
      delete [] ((::TArtTacquilaMap*)p);
   }
   static void destruct_TArtTacquilaMap(void *p) {
      typedef ::TArtTacquilaMap current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtTacquilaMap

//______________________________________________________________________________
void TArtCalibNeuLANDVETO::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibNeuLANDVETO.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibNeuLANDVETO::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibNeuLANDVETO::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibNeuLANDVETO::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibNeuLANDVETO.
      TClass *R__cl = ::TArtCalibNeuLANDVETO::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fT0Array", &fT0Array);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNeuLANDVETOPlaArray", &fNeuLANDVETOPlaArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNeuLANDVETOPlaParaArray", &fNeuLANDVETOPlaParaArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSAMURAIParameters", &fSAMURAIParameters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStoreManager", &fStoreManager);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIDNPlaMap", (void*)&fIDNPlaMap);
      R__insp.InspectMember("map<int,int>", (void*)&fIDNPlaMap, "fIDNPlaMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIDNPlaParaMap", (void*)&fIDNPlaParaMap);
      R__insp.InspectMember("map<int,int>", (void*)&fIDNPlaParaMap, "fIDNPlaParaMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNeuLANDVETOPlaMasterStart", &fNeuLANDVETOPlaMasterStart);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibNeuLANDVETO(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibNeuLANDVETO : new ::TArtCalibNeuLANDVETO;
   }
   static void *newArray_TArtCalibNeuLANDVETO(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibNeuLANDVETO[nElements] : new ::TArtCalibNeuLANDVETO[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibNeuLANDVETO(void *p) {
      delete ((::TArtCalibNeuLANDVETO*)p);
   }
   static void deleteArray_TArtCalibNeuLANDVETO(void *p) {
      delete [] ((::TArtCalibNeuLANDVETO*)p);
   }
   static void destruct_TArtCalibNeuLANDVETO(void *p) {
      typedef ::TArtCalibNeuLANDVETO current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibNeuLANDVETO

//______________________________________________________________________________
void TArtFragment::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtFragment.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtFragment::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtFragment::Class(),this);
   }
}

//______________________________________________________________________________
void TArtFragment::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtFragment.
      TClass *R__cl = ::TArtFragment::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDelta", &fDelta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rktrace_status", &rktrace_status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "primary_position", &primary_position);
      R__insp.InspectMember(primary_position, "primary_position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "primary_momentum", &primary_momentum);
      R__insp.InspectMember(primary_momentum, "primary_momentum.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "path_length2hod", &path_length2hod);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChi2", &fChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnHit", &fnHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnIter", &fnIter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDiff[100]", fDiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTof", &fTof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBeta", &fBeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAoQ", &fAoQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBrho", &fBrho);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTzero", &fTzero);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTzeroQ", &fTzeroQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHODT", &fHODT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHODQ", &fHODQ);
      TArtDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtFragment(void *p) {
      return  p ? new(p) ::TArtFragment : new ::TArtFragment;
   }
   static void *newArray_TArtFragment(Long_t nElements, void *p) {
      return p ? new(p) ::TArtFragment[nElements] : new ::TArtFragment[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtFragment(void *p) {
      delete ((::TArtFragment*)p);
   }
   static void deleteArray_TArtFragment(void *p) {
      delete [] ((::TArtFragment*)p);
   }
   static void destruct_TArtFragment(void *p) {
      typedef ::TArtFragment current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtFragment

//______________________________________________________________________________
void TArtRecoFragment::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtRecoFragment.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtRecoFragment::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtRecoFragment::Class(),this);
   }
}

//______________________________________________________________________________
void TArtRecoFragment::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtRecoFragment.
      TClass *R__cl = ::TArtRecoFragment::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFragmentArray", &fFragmentArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hod_array", &hod_array);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sman", &sman);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pla_tzero", &pla_tzero);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "l_pla2target", &l_pla2target);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tof_offset", (void*)&tof_offset);
      R__insp.InspectMember("map<UInt_t,Double_t>", (void*)&tof_offset, "tof_offset.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BDCs_dist", &BDCs_dist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BDC1_Tgt_dist", &BDC1_Tgt_dist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tgt_FDC1_dist", &Tgt_FDC1_dist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BDC2X0", &BDC2X0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BDC2Y0", &BDC2Y0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QtoZ_a", &QtoZ_a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QtoZ_b", &QtoZ_b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clight", &clight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mnucleon", &mnucleon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mat0", &mat0);
      R__insp.InspectMember(mat0, "mat0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mat1", &mat1);
      R__insp.InspectMember(mat1, "mat1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mat2", &mat2);
      R__insp.InspectMember(mat2, "mat2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inv_mat2", &inv_mat2);
      R__insp.InspectMember(inv_mat2, "inv_mat2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMatReady", &fMatReady);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRKtraceReady", &fRKtraceReady);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultDimReady", &fMultDimReady);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "center_brho", &center_brho);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r_gNVariables", &r_gNVariables);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r_gNCoefficients", &r_gNCoefficients);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r_gDMean", &r_gDMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r_gXMin", (void*)&r_gXMin);
      R__insp.InspectMember("vector<Double_t>", (void*)&r_gXMin, "r_gXMin.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r_gXMax", (void*)&r_gXMax);
      R__insp.InspectMember("vector<Double_t>", (void*)&r_gXMax, "r_gXMax.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r_gCoefficient", (void*)&r_gCoefficient);
      R__insp.InspectMember("vector<Double_t>", (void*)&r_gCoefficient, "r_gCoefficient.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r_gPower", (void*)&r_gPower);
      R__insp.InspectMember("vector<Int_t>", (void*)&r_gPower, "r_gPower.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "l_gNVariables", &l_gNVariables);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "l_gNCoefficients", &l_gNCoefficients);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "l_gDMean", &l_gDMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "l_gXMin", (void*)&l_gXMin);
      R__insp.InspectMember("vector<Double_t>", (void*)&l_gXMin, "l_gXMin.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "l_gXMax", (void*)&l_gXMax);
      R__insp.InspectMember("vector<Double_t>", (void*)&l_gXMax, "l_gXMax.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "l_gCoefficient", (void*)&l_gCoefficient);
      R__insp.InspectMember("vector<Double_t>", (void*)&l_gCoefficient, "l_gCoefficient.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "l_gPower", (void*)&l_gPower);
      R__insp.InspectMember("vector<Int_t>", (void*)&l_gPower, "l_gPower.", false);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtRecoFragment(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtRecoFragment : new ::TArtRecoFragment;
   }
   static void *newArray_TArtRecoFragment(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtRecoFragment[nElements] : new ::TArtRecoFragment[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtRecoFragment(void *p) {
      delete ((::TArtRecoFragment*)p);
   }
   static void deleteArray_TArtRecoFragment(void *p) {
      delete [] ((::TArtRecoFragment*)p);
   }
   static void destruct_TArtRecoFragment(void *p) {
      typedef ::TArtRecoFragment current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtRecoFragment

//______________________________________________________________________________
void TArtNeutron::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtNeutron.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtNeutron::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtNeutron::Class(),this);
   }
}

//______________________________________________________________________________
void TArtNeutron::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtNeutron.
      TClass *R__cl = ::TArtNeutron::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMass", &fMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeVee", &fMeVee);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPos[3]", fPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBeta[3]", fBeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGamma", &fGamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP[3]", fP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPAbs", &fPAbs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergy", &fEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTheta", &fTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhi", &fPhi);
      TArtDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtNeutron(void *p) {
      return  p ? new(p) ::TArtNeutron : new ::TArtNeutron;
   }
   static void *newArray_TArtNeutron(Long_t nElements, void *p) {
      return p ? new(p) ::TArtNeutron[nElements] : new ::TArtNeutron[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtNeutron(void *p) {
      delete ((::TArtNeutron*)p);
   }
   static void deleteArray_TArtNeutron(void *p) {
      delete [] ((::TArtNeutron*)p);
   }
   static void destruct_TArtNeutron(void *p) {
      typedef ::TArtNeutron current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtNeutron

//______________________________________________________________________________
void TArtRecoNeutron::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtRecoNeutron.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtRecoNeutron::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtRecoNeutron::Class(),this);
   }
}

//______________________________________________________________________________
void TArtRecoNeutron::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtRecoNeutron.
      TClass *R__cl = ::TArtRecoNeutron::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*nebulaplaarray", &nebulaplaarray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNeutronArray", &fNeutronArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStoreManager", &fStoreManager);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtRecoNeutron(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtRecoNeutron : new ::TArtRecoNeutron;
   }
   static void *newArray_TArtRecoNeutron(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtRecoNeutron[nElements] : new ::TArtRecoNeutron[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtRecoNeutron(void *p) {
      delete ((::TArtRecoNeutron*)p);
   }
   static void deleteArray_TArtRecoNeutron(void *p) {
      delete [] ((::TArtRecoNeutron*)p);
   }
   static void destruct_TArtRecoNeutron(void *p) {
      typedef ::TArtRecoNeutron current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtRecoNeutron

//______________________________________________________________________________
void TArtCalibRPTOFPla::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtCalibRPTOFPla.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtCalibRPTOFPla::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtCalibRPTOFPla::Class(),this);
   }
}

//______________________________________________________________________________
void TArtCalibRPTOFPla::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtCalibRPTOFPla.
      TClass *R__cl = ::TArtCalibRPTOFPla::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRPTOFPlaArray", &fRPTOFPlaArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRPTOFWPlaArray", &fRPTOFWPlaArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRPTOFPlaParaArray", (void*)&fRPTOFPlaParaArray);
      R__insp.InspectMember("vector<TArtRPTOFPlaPara*>", (void*)&fRPTOFPlaParaArray, "fRPTOFPlaParaArray.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRPTOFWPlaParaArray", (void*)&fRPTOFWPlaParaArray);
      R__insp.InspectMember("vector<TArtRPTOFPlaPara*>", (void*)&fRPTOFWPlaParaArray, "fRPTOFWPlaParaArray.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setup", &setup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sman", &sman);
      TArtReconstruction::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtCalibRPTOFPla(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibRPTOFPla : new ::TArtCalibRPTOFPla;
   }
   static void *newArray_TArtCalibRPTOFPla(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TArtCalibRPTOFPla[nElements] : new ::TArtCalibRPTOFPla[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtCalibRPTOFPla(void *p) {
      delete ((::TArtCalibRPTOFPla*)p);
   }
   static void deleteArray_TArtCalibRPTOFPla(void *p) {
      delete [] ((::TArtCalibRPTOFPla*)p);
   }
   static void destruct_TArtCalibRPTOFPla(void *p) {
      typedef ::TArtCalibRPTOFPla current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtCalibRPTOFPla

//______________________________________________________________________________
void TArtRPTOFPla::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtRPTOFPla.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtRPTOFPla::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtRPTOFPla::Class(),this);
   }
}

//______________________________________________________________________________
void TArtRPTOFPla::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtRPTOFPla.
      TClass *R__cl = ::TArtRPTOFPla::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTULV775Raw", &fTULV775Raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDRV775Raw", &fTDRV775Raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTULV1290Raw", &fTULV1290Raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDRV1290Raw", &fTDRV1290Raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQULRaw", &fQULRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQDRRaw", &fQDRRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQULPed", &fQULPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQDRPed", &fQDRPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQULCal", &fQULCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQDRCal", &fQDRCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQAveRaw", &fQAveRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQAvePed", &fQAvePed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQAveCal", &fQAveCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fV775Time", &fV775Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fV775TimeUL", &fV775TimeUL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fV775TimeDR", &fV775TimeDR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fV1290Time", &fV1290Time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fV1290TimeUL", &fV1290TimeUL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fV1290TimeDR", &fV1290TimeDR);
      TArtDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtRPTOFPla(void *p) {
      return  p ? new(p) ::TArtRPTOFPla : new ::TArtRPTOFPla;
   }
   static void *newArray_TArtRPTOFPla(Long_t nElements, void *p) {
      return p ? new(p) ::TArtRPTOFPla[nElements] : new ::TArtRPTOFPla[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtRPTOFPla(void *p) {
      delete ((::TArtRPTOFPla*)p);
   }
   static void deleteArray_TArtRPTOFPla(void *p) {
      delete [] ((::TArtRPTOFPla*)p);
   }
   static void destruct_TArtRPTOFPla(void *p) {
      typedef ::TArtRPTOFPla current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtRPTOFPla

//______________________________________________________________________________
void TArtRPTOFPlaPara::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtRPTOFPlaPara.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtRPTOFPlaPara::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtRPTOFPlaPara::Class(),this);
   }
}

//______________________________________________________________________________
void TArtRPTOFPlaPara::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtRPTOFPlaPara.
      TClass *R__cl = ::TArtRPTOFPlaPara::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detname", &detname);
      R__insp.InspectMember(detname, "detname.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fpl", &fpl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tcal_v775_ul", &tcal_v775_ul);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tcal_v775_dr", &tcal_v775_dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "toff_v775_ul", &toff_v775_ul);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "toff_v775_dr", &toff_v775_dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tcal_v1290_ul", &tcal_v1290_ul);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tcal_v1290_dr", &tcal_v1290_dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "toff_v1290_ul", &toff_v1290_ul);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "toff_v1290_dr", &toff_v1290_dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qcal_ul", &qcal_ul);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qcal_dr", &qcal_dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qped_ul", &qped_ul);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qped_dr", &qped_dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "map_v775_tul", &map_v775_tul);
      R__insp.InspectMember(map_v775_tul, "map_v775_tul.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "map_v775_tdr", &map_v775_tdr);
      R__insp.InspectMember(map_v775_tdr, "map_v775_tdr.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "map_v1290_tul", &map_v1290_tul);
      R__insp.InspectMember(map_v1290_tul, "map_v1290_tul.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "map_v1290_tdr", &map_v1290_tdr);
      R__insp.InspectMember(map_v1290_tdr, "map_v1290_tdr.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "map_qul", &map_qul);
      R__insp.InspectMember(map_qul, "map_qul.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "map_qdr", &map_qdr);
      R__insp.InspectMember(map_qdr, "map_qdr.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtRPTOFPlaPara(void *p) {
      return  p ? new(p) ::TArtRPTOFPlaPara : new ::TArtRPTOFPlaPara;
   }
   static void *newArray_TArtRPTOFPlaPara(Long_t nElements, void *p) {
      return p ? new(p) ::TArtRPTOFPlaPara[nElements] : new ::TArtRPTOFPlaPara[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtRPTOFPlaPara(void *p) {
      delete ((::TArtRPTOFPlaPara*)p);
   }
   static void deleteArray_TArtRPTOFPlaPara(void *p) {
      delete [] ((::TArtRPTOFPlaPara*)p);
   }
   static void destruct_TArtRPTOFPlaPara(void *p) {
      typedef ::TArtRPTOFPlaPara current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtRPTOFPlaPara

//______________________________________________________________________________
void TArtSAMURAIParameters::Streamer(TBuffer &R__b)
{
   // Stream an object of class TArtSAMURAIParameters.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TArtSAMURAIParameters::Class(),this);
   } else {
      R__b.WriteClassBuffer(TArtSAMURAIParameters::Class(),this);
   }
}

//______________________________________________________________________________
void TArtSAMURAIParameters::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TArtSAMURAIParameters.
      TClass *R__cl = ::TArtSAMURAIParameters::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hod_pmap", (void*)&hod_pmap);
      R__insp.InspectMember("map<TArtRIDFMap,TArtHODPlaPara*>", (void*)&hod_pmap, "hod_pmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rptof_pmap", (void*)&rptof_pmap);
      R__insp.InspectMember("map<TArtRIDFMap,TArtRPTOFPlaPara*>", (void*)&rptof_pmap, "rptof_pmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ted_pmap", (void*)&ted_pmap);
      R__insp.InspectMember("map<TArtRIDFMap,TArtTEDCsIPara*>", (void*)&ted_pmap, "ted_pmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bpc_pmap", (void*)&bpc_pmap);
      R__insp.InspectMember("map<TArtRIDFMap,TArtDCHitPara*>", (void*)&bpc_pmap, "bpc_pmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bdc1_pmap", (void*)&bdc1_pmap);
      R__insp.InspectMember("map<TArtRIDFMap,TArtDCHitPara*>", (void*)&bdc1_pmap, "bdc1_pmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bdc2_pmap", (void*)&bdc2_pmap);
      R__insp.InspectMember("map<TArtRIDFMap,TArtDCHitPara*>", (void*)&bdc2_pmap, "bdc2_pmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdc0_pmap", (void*)&fdc0_pmap);
      R__insp.InspectMember("map<TArtRIDFMap,TArtDCHitPara*>", (void*)&fdc0_pmap, "fdc0_pmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdc1_pmap", (void*)&fdc1_pmap);
      R__insp.InspectMember("map<TArtRIDFMap,TArtDCHitPara*>", (void*)&fdc1_pmap, "fdc1_pmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdc2_pmap", (void*)&fdc2_pmap);
      R__insp.InspectMember("map<TArtRIDFMap,TArtDCHitPara*>", (void*)&fdc2_pmap, "fdc2_pmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rpdc_pmap", (void*)&rpdc_pmap);
      R__insp.InspectMember("map<TArtRIDFMap,TArtDCHitPara*>", (void*)&rpdc_pmap, "rpdc_pmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "s1dc1_pmap", (void*)&s1dc1_pmap);
      R__insp.InspectMember("map<TArtRIDFMap,TArtDCHitPara*>", (void*)&s1dc1_pmap, "s1dc1_pmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "s1dc2_pmap", (void*)&s1dc2_pmap);
      R__insp.InspectMember("map<TArtRIDFMap,TArtDCHitPara*>", (void*)&s1dc2_pmap, "s1dc2_pmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNEBULAPlaUParaMap", &fNEBULAPlaUParaMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNEBULAPlaDParaMap", &fNEBULAPlaDParaMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHIMEPlaUParaMap", &fHIMEPlaUParaMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHIMEPlaDParaMap", &fHIMEPlaDParaMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNEBULAHPCParaMap", &fNEBULAHPCParaMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNeuLANDPlaParaMap", &fNeuLANDPlaParaMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTacquilaParaMap", &fTacquilaParaMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNeuLANDVETOPlaUParaMap", &fNeuLANDVETOPlaUParaMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNeuLANDVETOPlaDParaMap", &fNeuLANDVETOPlaDParaMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*listOfHODPlaPara", &listOfHODPlaPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*listOfRPTOFPlaPara", &listOfRPTOFPlaPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*listOfTEDCsIPara", &listOfTEDCsIPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*listOfBPCHitPara", &listOfBPCHitPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*listOfBDC1HitPara", &listOfBDC1HitPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*listOfBDC2HitPara", &listOfBDC2HitPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*listOfFDC0HitPara", &listOfFDC0HitPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*listOfFDC1HitPara", &listOfFDC1HitPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*listOfFDC2HitPara", &listOfFDC2HitPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*listOfRPDCHitPara", &listOfRPDCHitPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*listOfS1DC1HitPara", &listOfS1DC1HitPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*listOfS1DC2HitPara", &listOfS1DC2HitPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIDNEBULAPlaParaMap", (void*)&fIDNEBULAPlaParaMap);
      R__insp.InspectMember("map<int,TArtNEBULAPlaPara*>", (void*)&fIDNEBULAPlaParaMap, "fIDNEBULAPlaParaMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIDHIMEPlaParaMap", (void*)&fIDHIMEPlaParaMap);
      R__insp.InspectMember("map<int,TArtHIMEPlaPara*>", (void*)&fIDHIMEPlaParaMap, "fIDHIMEPlaParaMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIDNEBULAHPCParaMap", (void*)&fIDNEBULAHPCParaMap);
      R__insp.InspectMember("map<int,TArtNEBULAHPCPara*>", (void*)&fIDNEBULAHPCParaMap, "fIDNEBULAHPCParaMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIDNeuLANDPlaParaMap", (void*)&fIDNeuLANDPlaParaMap);
      R__insp.InspectMember("map<int,TArtNeuLANDPlaPara*>", (void*)&fIDNeuLANDPlaParaMap, "fIDNeuLANDPlaParaMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIDTacquilaParaMap", (void*)&fIDTacquilaParaMap);
      R__insp.InspectMember("map<int,TArtTacquilaPara*>", (void*)&fIDTacquilaParaMap, "fIDTacquilaParaMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIDNeuLANDVETOPlaParaMap", (void*)&fIDNeuLANDVETOPlaParaMap);
      R__insp.InspectMember("map<int,TArtNEBULAPlaPara*>", (void*)&fIDNeuLANDVETOPlaParaMap, "fIDNeuLANDVETOPlaParaMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStoreManager", &fStoreManager);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TArtSAMURAIParameters(void *p) {
      return  p ? new(p) ::TArtSAMURAIParameters : new ::TArtSAMURAIParameters;
   }
   static void *newArray_TArtSAMURAIParameters(Long_t nElements, void *p) {
      return p ? new(p) ::TArtSAMURAIParameters[nElements] : new ::TArtSAMURAIParameters[nElements];
   }
   // Wrapper around operator delete
   static void delete_TArtSAMURAIParameters(void *p) {
      delete ((::TArtSAMURAIParameters*)p);
   }
   static void deleteArray_TArtSAMURAIParameters(void *p) {
      delete [] ((::TArtSAMURAIParameters*)p);
   }
   static void destruct_TArtSAMURAIParameters(void *p) {
      typedef ::TArtSAMURAIParameters current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TArtSAMURAIParameters

namespace ROOTDict {
   void maplETArtRIDFMapcOTArtDCHitParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETArtRIDFMapcOTArtDCHitParamUgR_Dictionary();
   static void *new_maplETArtRIDFMapcOTArtDCHitParamUgR(void *p = 0);
   static void *newArray_maplETArtRIDFMapcOTArtDCHitParamUgR(Long_t size, void *p);
   static void delete_maplETArtRIDFMapcOTArtDCHitParamUgR(void *p);
   static void deleteArray_maplETArtRIDFMapcOTArtDCHitParamUgR(void *p);
   static void destruct_maplETArtRIDFMapcOTArtDCHitParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<TArtRIDFMap,TArtDCHitPara*>*)
   {
      map<TArtRIDFMap,TArtDCHitPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TArtRIDFMap,TArtDCHitPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TArtRIDFMap,TArtDCHitPara*>", -2, "prec_stl/map", 63,
                  typeid(map<TArtRIDFMap,TArtDCHitPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplETArtRIDFMapcOTArtDCHitParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<TArtRIDFMap,TArtDCHitPara*>) );
      instance.SetNew(&new_maplETArtRIDFMapcOTArtDCHitParamUgR);
      instance.SetNewArray(&newArray_maplETArtRIDFMapcOTArtDCHitParamUgR);
      instance.SetDelete(&delete_maplETArtRIDFMapcOTArtDCHitParamUgR);
      instance.SetDeleteArray(&deleteArray_maplETArtRIDFMapcOTArtDCHitParamUgR);
      instance.SetDestructor(&destruct_maplETArtRIDFMapcOTArtDCHitParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<TArtRIDFMap,TArtDCHitPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TArtRIDFMap,TArtDCHitPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETArtRIDFMapcOTArtDCHitParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<TArtRIDFMap,TArtDCHitPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplETArtRIDFMapcOTArtDCHitParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,TArtDCHitPara*> : new map<TArtRIDFMap,TArtDCHitPara*>;
   }
   static void *newArray_maplETArtRIDFMapcOTArtDCHitParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,TArtDCHitPara*>[nElements] : new map<TArtRIDFMap,TArtDCHitPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETArtRIDFMapcOTArtDCHitParamUgR(void *p) {
      delete ((map<TArtRIDFMap,TArtDCHitPara*>*)p);
   }
   static void deleteArray_maplETArtRIDFMapcOTArtDCHitParamUgR(void *p) {
      delete [] ((map<TArtRIDFMap,TArtDCHitPara*>*)p);
   }
   static void destruct_maplETArtRIDFMapcOTArtDCHitParamUgR(void *p) {
      typedef map<TArtRIDFMap,TArtDCHitPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<TArtRIDFMap,TArtDCHitPara*>

namespace ROOTDict {
   void maplETArtRIDFMapcOTArtHODPlaParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETArtRIDFMapcOTArtHODPlaParamUgR_Dictionary();
   static void *new_maplETArtRIDFMapcOTArtHODPlaParamUgR(void *p = 0);
   static void *newArray_maplETArtRIDFMapcOTArtHODPlaParamUgR(Long_t size, void *p);
   static void delete_maplETArtRIDFMapcOTArtHODPlaParamUgR(void *p);
   static void deleteArray_maplETArtRIDFMapcOTArtHODPlaParamUgR(void *p);
   static void destruct_maplETArtRIDFMapcOTArtHODPlaParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<TArtRIDFMap,TArtHODPlaPara*>*)
   {
      map<TArtRIDFMap,TArtHODPlaPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TArtRIDFMap,TArtHODPlaPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TArtRIDFMap,TArtHODPlaPara*>", -2, "prec_stl/map", 63,
                  typeid(map<TArtRIDFMap,TArtHODPlaPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplETArtRIDFMapcOTArtHODPlaParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<TArtRIDFMap,TArtHODPlaPara*>) );
      instance.SetNew(&new_maplETArtRIDFMapcOTArtHODPlaParamUgR);
      instance.SetNewArray(&newArray_maplETArtRIDFMapcOTArtHODPlaParamUgR);
      instance.SetDelete(&delete_maplETArtRIDFMapcOTArtHODPlaParamUgR);
      instance.SetDeleteArray(&deleteArray_maplETArtRIDFMapcOTArtHODPlaParamUgR);
      instance.SetDestructor(&destruct_maplETArtRIDFMapcOTArtHODPlaParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<TArtRIDFMap,TArtHODPlaPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TArtRIDFMap,TArtHODPlaPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETArtRIDFMapcOTArtHODPlaParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<TArtRIDFMap,TArtHODPlaPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplETArtRIDFMapcOTArtHODPlaParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,TArtHODPlaPara*> : new map<TArtRIDFMap,TArtHODPlaPara*>;
   }
   static void *newArray_maplETArtRIDFMapcOTArtHODPlaParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,TArtHODPlaPara*>[nElements] : new map<TArtRIDFMap,TArtHODPlaPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETArtRIDFMapcOTArtHODPlaParamUgR(void *p) {
      delete ((map<TArtRIDFMap,TArtHODPlaPara*>*)p);
   }
   static void deleteArray_maplETArtRIDFMapcOTArtHODPlaParamUgR(void *p) {
      delete [] ((map<TArtRIDFMap,TArtHODPlaPara*>*)p);
   }
   static void destruct_maplETArtRIDFMapcOTArtHODPlaParamUgR(void *p) {
      typedef map<TArtRIDFMap,TArtHODPlaPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<TArtRIDFMap,TArtHODPlaPara*>

namespace ROOTDict {
   void maplETArtRIDFMapcOTArtRPTOFPlaParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETArtRIDFMapcOTArtRPTOFPlaParamUgR_Dictionary();
   static void *new_maplETArtRIDFMapcOTArtRPTOFPlaParamUgR(void *p = 0);
   static void *newArray_maplETArtRIDFMapcOTArtRPTOFPlaParamUgR(Long_t size, void *p);
   static void delete_maplETArtRIDFMapcOTArtRPTOFPlaParamUgR(void *p);
   static void deleteArray_maplETArtRIDFMapcOTArtRPTOFPlaParamUgR(void *p);
   static void destruct_maplETArtRIDFMapcOTArtRPTOFPlaParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<TArtRIDFMap,TArtRPTOFPlaPara*>*)
   {
      map<TArtRIDFMap,TArtRPTOFPlaPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TArtRIDFMap,TArtRPTOFPlaPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TArtRIDFMap,TArtRPTOFPlaPara*>", -2, "prec_stl/map", 63,
                  typeid(map<TArtRIDFMap,TArtRPTOFPlaPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplETArtRIDFMapcOTArtRPTOFPlaParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<TArtRIDFMap,TArtRPTOFPlaPara*>) );
      instance.SetNew(&new_maplETArtRIDFMapcOTArtRPTOFPlaParamUgR);
      instance.SetNewArray(&newArray_maplETArtRIDFMapcOTArtRPTOFPlaParamUgR);
      instance.SetDelete(&delete_maplETArtRIDFMapcOTArtRPTOFPlaParamUgR);
      instance.SetDeleteArray(&deleteArray_maplETArtRIDFMapcOTArtRPTOFPlaParamUgR);
      instance.SetDestructor(&destruct_maplETArtRIDFMapcOTArtRPTOFPlaParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<TArtRIDFMap,TArtRPTOFPlaPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TArtRIDFMap,TArtRPTOFPlaPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETArtRIDFMapcOTArtRPTOFPlaParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<TArtRIDFMap,TArtRPTOFPlaPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplETArtRIDFMapcOTArtRPTOFPlaParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,TArtRPTOFPlaPara*> : new map<TArtRIDFMap,TArtRPTOFPlaPara*>;
   }
   static void *newArray_maplETArtRIDFMapcOTArtRPTOFPlaParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,TArtRPTOFPlaPara*>[nElements] : new map<TArtRIDFMap,TArtRPTOFPlaPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETArtRIDFMapcOTArtRPTOFPlaParamUgR(void *p) {
      delete ((map<TArtRIDFMap,TArtRPTOFPlaPara*>*)p);
   }
   static void deleteArray_maplETArtRIDFMapcOTArtRPTOFPlaParamUgR(void *p) {
      delete [] ((map<TArtRIDFMap,TArtRPTOFPlaPara*>*)p);
   }
   static void destruct_maplETArtRIDFMapcOTArtRPTOFPlaParamUgR(void *p) {
      typedef map<TArtRIDFMap,TArtRPTOFPlaPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<TArtRIDFMap,TArtRPTOFPlaPara*>

namespace ROOTDict {
   void maplETArtRIDFMapcOTArtTEDCsIParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETArtRIDFMapcOTArtTEDCsIParamUgR_Dictionary();
   static void *new_maplETArtRIDFMapcOTArtTEDCsIParamUgR(void *p = 0);
   static void *newArray_maplETArtRIDFMapcOTArtTEDCsIParamUgR(Long_t size, void *p);
   static void delete_maplETArtRIDFMapcOTArtTEDCsIParamUgR(void *p);
   static void deleteArray_maplETArtRIDFMapcOTArtTEDCsIParamUgR(void *p);
   static void destruct_maplETArtRIDFMapcOTArtTEDCsIParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<TArtRIDFMap,TArtTEDCsIPara*>*)
   {
      map<TArtRIDFMap,TArtTEDCsIPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TArtRIDFMap,TArtTEDCsIPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TArtRIDFMap,TArtTEDCsIPara*>", -2, "prec_stl/map", 63,
                  typeid(map<TArtRIDFMap,TArtTEDCsIPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplETArtRIDFMapcOTArtTEDCsIParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<TArtRIDFMap,TArtTEDCsIPara*>) );
      instance.SetNew(&new_maplETArtRIDFMapcOTArtTEDCsIParamUgR);
      instance.SetNewArray(&newArray_maplETArtRIDFMapcOTArtTEDCsIParamUgR);
      instance.SetDelete(&delete_maplETArtRIDFMapcOTArtTEDCsIParamUgR);
      instance.SetDeleteArray(&deleteArray_maplETArtRIDFMapcOTArtTEDCsIParamUgR);
      instance.SetDestructor(&destruct_maplETArtRIDFMapcOTArtTEDCsIParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<TArtRIDFMap,TArtTEDCsIPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TArtRIDFMap,TArtTEDCsIPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETArtRIDFMapcOTArtTEDCsIParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<TArtRIDFMap,TArtTEDCsIPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplETArtRIDFMapcOTArtTEDCsIParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,TArtTEDCsIPara*> : new map<TArtRIDFMap,TArtTEDCsIPara*>;
   }
   static void *newArray_maplETArtRIDFMapcOTArtTEDCsIParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,TArtTEDCsIPara*>[nElements] : new map<TArtRIDFMap,TArtTEDCsIPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETArtRIDFMapcOTArtTEDCsIParamUgR(void *p) {
      delete ((map<TArtRIDFMap,TArtTEDCsIPara*>*)p);
   }
   static void deleteArray_maplETArtRIDFMapcOTArtTEDCsIParamUgR(void *p) {
      delete [] ((map<TArtRIDFMap,TArtTEDCsIPara*>*)p);
   }
   static void destruct_maplETArtRIDFMapcOTArtTEDCsIParamUgR(void *p) {
      typedef map<TArtRIDFMap,TArtTEDCsIPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<TArtRIDFMap,TArtTEDCsIPara*>

namespace ROOTDict {
   void maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUgR_Dictionary();
   static void *new_maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUgR(void *p = 0);
   static void *newArray_maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUgR(Long_t size, void *p);
   static void delete_maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUgR(void *p);
   static void deleteArray_maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUgR(void *p);
   static void destruct_maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<TArtRIDFMap,const TArtHIMEPlaPara*>*)
   {
      map<TArtRIDFMap,const TArtHIMEPlaPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TArtRIDFMap,const TArtHIMEPlaPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TArtRIDFMap,const TArtHIMEPlaPara*>", -2, "prec_stl/map", 63,
                  typeid(map<TArtRIDFMap,const TArtHIMEPlaPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<TArtRIDFMap,const TArtHIMEPlaPara*>) );
      instance.SetNew(&new_maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUgR);
      instance.SetNewArray(&newArray_maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUgR);
      instance.SetDelete(&delete_maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUgR);
      instance.SetDeleteArray(&deleteArray_maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUgR);
      instance.SetDestructor(&destruct_maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<TArtRIDFMap,const TArtHIMEPlaPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TArtRIDFMap,const TArtHIMEPlaPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<TArtRIDFMap,const TArtHIMEPlaPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,const TArtHIMEPlaPara*> : new map<TArtRIDFMap,const TArtHIMEPlaPara*>;
   }
   static void *newArray_maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,const TArtHIMEPlaPara*>[nElements] : new map<TArtRIDFMap,const TArtHIMEPlaPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUgR(void *p) {
      delete ((map<TArtRIDFMap,const TArtHIMEPlaPara*>*)p);
   }
   static void deleteArray_maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUgR(void *p) {
      delete [] ((map<TArtRIDFMap,const TArtHIMEPlaPara*>*)p);
   }
   static void destruct_maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUgR(void *p) {
      typedef map<TArtRIDFMap,const TArtHIMEPlaPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<TArtRIDFMap,const TArtHIMEPlaPara*>

namespace ROOTDict {
   void maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUgR_Dictionary();
   static void *new_maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUgR(void *p = 0);
   static void *newArray_maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUgR(Long_t size, void *p);
   static void delete_maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUgR(void *p);
   static void deleteArray_maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUgR(void *p);
   static void destruct_maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<TArtRIDFMap,const TArtNEBULAHPCPara*>*)
   {
      map<TArtRIDFMap,const TArtNEBULAHPCPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TArtRIDFMap,const TArtNEBULAHPCPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TArtRIDFMap,const TArtNEBULAHPCPara*>", -2, "prec_stl/map", 63,
                  typeid(map<TArtRIDFMap,const TArtNEBULAHPCPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<TArtRIDFMap,const TArtNEBULAHPCPara*>) );
      instance.SetNew(&new_maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUgR);
      instance.SetNewArray(&newArray_maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUgR);
      instance.SetDelete(&delete_maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUgR);
      instance.SetDeleteArray(&deleteArray_maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUgR);
      instance.SetDestructor(&destruct_maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<TArtRIDFMap,const TArtNEBULAHPCPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TArtRIDFMap,const TArtNEBULAHPCPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<TArtRIDFMap,const TArtNEBULAHPCPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,const TArtNEBULAHPCPara*> : new map<TArtRIDFMap,const TArtNEBULAHPCPara*>;
   }
   static void *newArray_maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,const TArtNEBULAHPCPara*>[nElements] : new map<TArtRIDFMap,const TArtNEBULAHPCPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUgR(void *p) {
      delete ((map<TArtRIDFMap,const TArtNEBULAHPCPara*>*)p);
   }
   static void deleteArray_maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUgR(void *p) {
      delete [] ((map<TArtRIDFMap,const TArtNEBULAHPCPara*>*)p);
   }
   static void destruct_maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUgR(void *p) {
      typedef map<TArtRIDFMap,const TArtNEBULAHPCPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<TArtRIDFMap,const TArtNEBULAHPCPara*>

namespace ROOTDict {
   void maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUgR_Dictionary();
   static void *new_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUgR(void *p = 0);
   static void *newArray_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUgR(Long_t size, void *p);
   static void delete_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUgR(void *p);
   static void deleteArray_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUgR(void *p);
   static void destruct_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<TArtRIDFMap,const TArtNEBULAPlaPara*>*)
   {
      map<TArtRIDFMap,const TArtNEBULAPlaPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TArtRIDFMap,const TArtNEBULAPlaPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TArtRIDFMap,const TArtNEBULAPlaPara*>", -2, "prec_stl/map", 63,
                  typeid(map<TArtRIDFMap,const TArtNEBULAPlaPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<TArtRIDFMap,const TArtNEBULAPlaPara*>) );
      instance.SetNew(&new_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUgR);
      instance.SetNewArray(&newArray_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUgR);
      instance.SetDelete(&delete_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUgR);
      instance.SetDeleteArray(&deleteArray_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUgR);
      instance.SetDestructor(&destruct_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<TArtRIDFMap,const TArtNEBULAPlaPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TArtRIDFMap,const TArtNEBULAPlaPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<TArtRIDFMap,const TArtNEBULAPlaPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,const TArtNEBULAPlaPara*> : new map<TArtRIDFMap,const TArtNEBULAPlaPara*>;
   }
   static void *newArray_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtRIDFMap,const TArtNEBULAPlaPara*>[nElements] : new map<TArtRIDFMap,const TArtNEBULAPlaPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUgR(void *p) {
      delete ((map<TArtRIDFMap,const TArtNEBULAPlaPara*>*)p);
   }
   static void deleteArray_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUgR(void *p) {
      delete [] ((map<TArtRIDFMap,const TArtNEBULAPlaPara*>*)p);
   }
   static void destruct_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUgR(void *p) {
      typedef map<TArtRIDFMap,const TArtNEBULAPlaPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<TArtRIDFMap,const TArtNEBULAPlaPara*>

namespace ROOTDict {
   void maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgR_Dictionary();
   static void *new_maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgR(void *p = 0);
   static void *newArray_maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgR(Long_t size, void *p);
   static void delete_maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgR(void *p);
   static void deleteArray_maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgR(void *p);
   static void destruct_maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<TArtTacquilaMap,const TArtNeuLANDPlaPara*>*)
   {
      map<TArtTacquilaMap,const TArtNeuLANDPlaPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TArtTacquilaMap,const TArtNeuLANDPlaPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TArtTacquilaMap,const TArtNeuLANDPlaPara*>", -2, "prec_stl/map", 63,
                  typeid(map<TArtTacquilaMap,const TArtNeuLANDPlaPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<TArtTacquilaMap,const TArtNeuLANDPlaPara*>) );
      instance.SetNew(&new_maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgR);
      instance.SetNewArray(&newArray_maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgR);
      instance.SetDelete(&delete_maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgR);
      instance.SetDeleteArray(&deleteArray_maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgR);
      instance.SetDestructor(&destruct_maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<TArtTacquilaMap,const TArtNeuLANDPlaPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TArtTacquilaMap,const TArtNeuLANDPlaPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<TArtTacquilaMap,const TArtNeuLANDPlaPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtTacquilaMap,const TArtNeuLANDPlaPara*> : new map<TArtTacquilaMap,const TArtNeuLANDPlaPara*>;
   }
   static void *newArray_maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtTacquilaMap,const TArtNeuLANDPlaPara*>[nElements] : new map<TArtTacquilaMap,const TArtNeuLANDPlaPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgR(void *p) {
      delete ((map<TArtTacquilaMap,const TArtNeuLANDPlaPara*>*)p);
   }
   static void deleteArray_maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgR(void *p) {
      delete [] ((map<TArtTacquilaMap,const TArtNeuLANDPlaPara*>*)p);
   }
   static void destruct_maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgR(void *p) {
      typedef map<TArtTacquilaMap,const TArtNeuLANDPlaPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<TArtTacquilaMap,const TArtNeuLANDPlaPara*>

namespace ROOTDict {
   void maplETArtTacquilaMapcOconstsPTArtTacquilaParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETArtTacquilaMapcOconstsPTArtTacquilaParamUgR_Dictionary();
   static void *new_maplETArtTacquilaMapcOconstsPTArtTacquilaParamUgR(void *p = 0);
   static void *newArray_maplETArtTacquilaMapcOconstsPTArtTacquilaParamUgR(Long_t size, void *p);
   static void delete_maplETArtTacquilaMapcOconstsPTArtTacquilaParamUgR(void *p);
   static void deleteArray_maplETArtTacquilaMapcOconstsPTArtTacquilaParamUgR(void *p);
   static void destruct_maplETArtTacquilaMapcOconstsPTArtTacquilaParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<TArtTacquilaMap,const TArtTacquilaPara*>*)
   {
      map<TArtTacquilaMap,const TArtTacquilaPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TArtTacquilaMap,const TArtTacquilaPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TArtTacquilaMap,const TArtTacquilaPara*>", -2, "prec_stl/map", 63,
                  typeid(map<TArtTacquilaMap,const TArtTacquilaPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplETArtTacquilaMapcOconstsPTArtTacquilaParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<TArtTacquilaMap,const TArtTacquilaPara*>) );
      instance.SetNew(&new_maplETArtTacquilaMapcOconstsPTArtTacquilaParamUgR);
      instance.SetNewArray(&newArray_maplETArtTacquilaMapcOconstsPTArtTacquilaParamUgR);
      instance.SetDelete(&delete_maplETArtTacquilaMapcOconstsPTArtTacquilaParamUgR);
      instance.SetDeleteArray(&deleteArray_maplETArtTacquilaMapcOconstsPTArtTacquilaParamUgR);
      instance.SetDestructor(&destruct_maplETArtTacquilaMapcOconstsPTArtTacquilaParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<TArtTacquilaMap,const TArtTacquilaPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TArtTacquilaMap,const TArtTacquilaPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETArtTacquilaMapcOconstsPTArtTacquilaParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<TArtTacquilaMap,const TArtTacquilaPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplETArtTacquilaMapcOconstsPTArtTacquilaParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtTacquilaMap,const TArtTacquilaPara*> : new map<TArtTacquilaMap,const TArtTacquilaPara*>;
   }
   static void *newArray_maplETArtTacquilaMapcOconstsPTArtTacquilaParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TArtTacquilaMap,const TArtTacquilaPara*>[nElements] : new map<TArtTacquilaMap,const TArtTacquilaPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETArtTacquilaMapcOconstsPTArtTacquilaParamUgR(void *p) {
      delete ((map<TArtTacquilaMap,const TArtTacquilaPara*>*)p);
   }
   static void deleteArray_maplETArtTacquilaMapcOconstsPTArtTacquilaParamUgR(void *p) {
      delete [] ((map<TArtTacquilaMap,const TArtTacquilaPara*>*)p);
   }
   static void destruct_maplETArtTacquilaMapcOconstsPTArtTacquilaParamUgR(void *p) {
      typedef map<TArtTacquilaMap,const TArtTacquilaPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<TArtTacquilaMap,const TArtTacquilaPara*>

namespace ROOTDict {
   void maplEintcOTArtHIMEPlaParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOTArtHIMEPlaParamUgR_Dictionary();
   static void *new_maplEintcOTArtHIMEPlaParamUgR(void *p = 0);
   static void *newArray_maplEintcOTArtHIMEPlaParamUgR(Long_t size, void *p);
   static void delete_maplEintcOTArtHIMEPlaParamUgR(void *p);
   static void deleteArray_maplEintcOTArtHIMEPlaParamUgR(void *p);
   static void destruct_maplEintcOTArtHIMEPlaParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,TArtHIMEPlaPara*>*)
   {
      map<int,TArtHIMEPlaPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,TArtHIMEPlaPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,TArtHIMEPlaPara*>", -2, "prec_stl/map", 63,
                  typeid(map<int,TArtHIMEPlaPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOTArtHIMEPlaParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,TArtHIMEPlaPara*>) );
      instance.SetNew(&new_maplEintcOTArtHIMEPlaParamUgR);
      instance.SetNewArray(&newArray_maplEintcOTArtHIMEPlaParamUgR);
      instance.SetDelete(&delete_maplEintcOTArtHIMEPlaParamUgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOTArtHIMEPlaParamUgR);
      instance.SetDestructor(&destruct_maplEintcOTArtHIMEPlaParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,TArtHIMEPlaPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,TArtHIMEPlaPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOTArtHIMEPlaParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,TArtHIMEPlaPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOTArtHIMEPlaParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,TArtHIMEPlaPara*> : new map<int,TArtHIMEPlaPara*>;
   }
   static void *newArray_maplEintcOTArtHIMEPlaParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,TArtHIMEPlaPara*>[nElements] : new map<int,TArtHIMEPlaPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOTArtHIMEPlaParamUgR(void *p) {
      delete ((map<int,TArtHIMEPlaPara*>*)p);
   }
   static void deleteArray_maplEintcOTArtHIMEPlaParamUgR(void *p) {
      delete [] ((map<int,TArtHIMEPlaPara*>*)p);
   }
   static void destruct_maplEintcOTArtHIMEPlaParamUgR(void *p) {
      typedef map<int,TArtHIMEPlaPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,TArtHIMEPlaPara*>

namespace ROOTDict {
   void maplEintcOTArtNEBULAHPCParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOTArtNEBULAHPCParamUgR_Dictionary();
   static void *new_maplEintcOTArtNEBULAHPCParamUgR(void *p = 0);
   static void *newArray_maplEintcOTArtNEBULAHPCParamUgR(Long_t size, void *p);
   static void delete_maplEintcOTArtNEBULAHPCParamUgR(void *p);
   static void deleteArray_maplEintcOTArtNEBULAHPCParamUgR(void *p);
   static void destruct_maplEintcOTArtNEBULAHPCParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,TArtNEBULAHPCPara*>*)
   {
      map<int,TArtNEBULAHPCPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,TArtNEBULAHPCPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,TArtNEBULAHPCPara*>", -2, "prec_stl/map", 63,
                  typeid(map<int,TArtNEBULAHPCPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOTArtNEBULAHPCParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,TArtNEBULAHPCPara*>) );
      instance.SetNew(&new_maplEintcOTArtNEBULAHPCParamUgR);
      instance.SetNewArray(&newArray_maplEintcOTArtNEBULAHPCParamUgR);
      instance.SetDelete(&delete_maplEintcOTArtNEBULAHPCParamUgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOTArtNEBULAHPCParamUgR);
      instance.SetDestructor(&destruct_maplEintcOTArtNEBULAHPCParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,TArtNEBULAHPCPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,TArtNEBULAHPCPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOTArtNEBULAHPCParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,TArtNEBULAHPCPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOTArtNEBULAHPCParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,TArtNEBULAHPCPara*> : new map<int,TArtNEBULAHPCPara*>;
   }
   static void *newArray_maplEintcOTArtNEBULAHPCParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,TArtNEBULAHPCPara*>[nElements] : new map<int,TArtNEBULAHPCPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOTArtNEBULAHPCParamUgR(void *p) {
      delete ((map<int,TArtNEBULAHPCPara*>*)p);
   }
   static void deleteArray_maplEintcOTArtNEBULAHPCParamUgR(void *p) {
      delete [] ((map<int,TArtNEBULAHPCPara*>*)p);
   }
   static void destruct_maplEintcOTArtNEBULAHPCParamUgR(void *p) {
      typedef map<int,TArtNEBULAHPCPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,TArtNEBULAHPCPara*>

namespace ROOTDict {
   void maplEintcOTArtNEBULAPlaParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOTArtNEBULAPlaParamUgR_Dictionary();
   static void *new_maplEintcOTArtNEBULAPlaParamUgR(void *p = 0);
   static void *newArray_maplEintcOTArtNEBULAPlaParamUgR(Long_t size, void *p);
   static void delete_maplEintcOTArtNEBULAPlaParamUgR(void *p);
   static void deleteArray_maplEintcOTArtNEBULAPlaParamUgR(void *p);
   static void destruct_maplEintcOTArtNEBULAPlaParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,TArtNEBULAPlaPara*>*)
   {
      map<int,TArtNEBULAPlaPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,TArtNEBULAPlaPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,TArtNEBULAPlaPara*>", -2, "prec_stl/map", 63,
                  typeid(map<int,TArtNEBULAPlaPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOTArtNEBULAPlaParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,TArtNEBULAPlaPara*>) );
      instance.SetNew(&new_maplEintcOTArtNEBULAPlaParamUgR);
      instance.SetNewArray(&newArray_maplEintcOTArtNEBULAPlaParamUgR);
      instance.SetDelete(&delete_maplEintcOTArtNEBULAPlaParamUgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOTArtNEBULAPlaParamUgR);
      instance.SetDestructor(&destruct_maplEintcOTArtNEBULAPlaParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,TArtNEBULAPlaPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,TArtNEBULAPlaPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOTArtNEBULAPlaParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,TArtNEBULAPlaPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOTArtNEBULAPlaParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,TArtNEBULAPlaPara*> : new map<int,TArtNEBULAPlaPara*>;
   }
   static void *newArray_maplEintcOTArtNEBULAPlaParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,TArtNEBULAPlaPara*>[nElements] : new map<int,TArtNEBULAPlaPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOTArtNEBULAPlaParamUgR(void *p) {
      delete ((map<int,TArtNEBULAPlaPara*>*)p);
   }
   static void deleteArray_maplEintcOTArtNEBULAPlaParamUgR(void *p) {
      delete [] ((map<int,TArtNEBULAPlaPara*>*)p);
   }
   static void destruct_maplEintcOTArtNEBULAPlaParamUgR(void *p) {
      typedef map<int,TArtNEBULAPlaPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,TArtNEBULAPlaPara*>

namespace ROOTDict {
   void maplEintcOTArtNeuLANDPlaParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOTArtNeuLANDPlaParamUgR_Dictionary();
   static void *new_maplEintcOTArtNeuLANDPlaParamUgR(void *p = 0);
   static void *newArray_maplEintcOTArtNeuLANDPlaParamUgR(Long_t size, void *p);
   static void delete_maplEintcOTArtNeuLANDPlaParamUgR(void *p);
   static void deleteArray_maplEintcOTArtNeuLANDPlaParamUgR(void *p);
   static void destruct_maplEintcOTArtNeuLANDPlaParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,TArtNeuLANDPlaPara*>*)
   {
      map<int,TArtNeuLANDPlaPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,TArtNeuLANDPlaPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,TArtNeuLANDPlaPara*>", -2, "prec_stl/map", 63,
                  typeid(map<int,TArtNeuLANDPlaPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOTArtNeuLANDPlaParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,TArtNeuLANDPlaPara*>) );
      instance.SetNew(&new_maplEintcOTArtNeuLANDPlaParamUgR);
      instance.SetNewArray(&newArray_maplEintcOTArtNeuLANDPlaParamUgR);
      instance.SetDelete(&delete_maplEintcOTArtNeuLANDPlaParamUgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOTArtNeuLANDPlaParamUgR);
      instance.SetDestructor(&destruct_maplEintcOTArtNeuLANDPlaParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,TArtNeuLANDPlaPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,TArtNeuLANDPlaPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOTArtNeuLANDPlaParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,TArtNeuLANDPlaPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOTArtNeuLANDPlaParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,TArtNeuLANDPlaPara*> : new map<int,TArtNeuLANDPlaPara*>;
   }
   static void *newArray_maplEintcOTArtNeuLANDPlaParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,TArtNeuLANDPlaPara*>[nElements] : new map<int,TArtNeuLANDPlaPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOTArtNeuLANDPlaParamUgR(void *p) {
      delete ((map<int,TArtNeuLANDPlaPara*>*)p);
   }
   static void deleteArray_maplEintcOTArtNeuLANDPlaParamUgR(void *p) {
      delete [] ((map<int,TArtNeuLANDPlaPara*>*)p);
   }
   static void destruct_maplEintcOTArtNeuLANDPlaParamUgR(void *p) {
      typedef map<int,TArtNeuLANDPlaPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,TArtNeuLANDPlaPara*>

namespace ROOTDict {
   void maplEintcOTArtTacquilaParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOTArtTacquilaParamUgR_Dictionary();
   static void *new_maplEintcOTArtTacquilaParamUgR(void *p = 0);
   static void *newArray_maplEintcOTArtTacquilaParamUgR(Long_t size, void *p);
   static void delete_maplEintcOTArtTacquilaParamUgR(void *p);
   static void deleteArray_maplEintcOTArtTacquilaParamUgR(void *p);
   static void destruct_maplEintcOTArtTacquilaParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,TArtTacquilaPara*>*)
   {
      map<int,TArtTacquilaPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,TArtTacquilaPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,TArtTacquilaPara*>", -2, "prec_stl/map", 63,
                  typeid(map<int,TArtTacquilaPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOTArtTacquilaParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,TArtTacquilaPara*>) );
      instance.SetNew(&new_maplEintcOTArtTacquilaParamUgR);
      instance.SetNewArray(&newArray_maplEintcOTArtTacquilaParamUgR);
      instance.SetDelete(&delete_maplEintcOTArtTacquilaParamUgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOTArtTacquilaParamUgR);
      instance.SetDestructor(&destruct_maplEintcOTArtTacquilaParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,TArtTacquilaPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,TArtTacquilaPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOTArtTacquilaParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,TArtTacquilaPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOTArtTacquilaParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,TArtTacquilaPara*> : new map<int,TArtTacquilaPara*>;
   }
   static void *newArray_maplEintcOTArtTacquilaParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,TArtTacquilaPara*>[nElements] : new map<int,TArtTacquilaPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOTArtTacquilaParamUgR(void *p) {
      delete ((map<int,TArtTacquilaPara*>*)p);
   }
   static void deleteArray_maplEintcOTArtTacquilaParamUgR(void *p) {
      delete [] ((map<int,TArtTacquilaPara*>*)p);
   }
   static void destruct_maplEintcOTArtTacquilaParamUgR(void *p) {
      typedef map<int,TArtTacquilaPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,TArtTacquilaPara*>

namespace ROOTDict {
   void maplEintcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOintgR_Dictionary();
   static void *new_maplEintcOintgR(void *p = 0);
   static void *newArray_maplEintcOintgR(Long_t size, void *p);
   static void delete_maplEintcOintgR(void *p);
   static void deleteArray_maplEintcOintgR(void *p);
   static void destruct_maplEintcOintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,int>*)
   {
      map<int,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,int>", -2, "map2.dll", 0,
                  typeid(map<int,int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,int>) );
      instance.SetNew(&new_maplEintcOintgR);
      instance.SetNewArray(&newArray_maplEintcOintgR);
      instance.SetDelete(&delete_maplEintcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOintgR);
      instance.SetDestructor(&destruct_maplEintcOintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int> : new map<int,int>;
   }
   static void *newArray_maplEintcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int>[nElements] : new map<int,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOintgR(void *p) {
      delete ((map<int,int>*)p);
   }
   static void deleteArray_maplEintcOintgR(void *p) {
      delete [] ((map<int,int>*)p);
   }
   static void destruct_maplEintcOintgR(void *p) {
      typedef map<int,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,int>

namespace ROOTDict {
   void maplEunsignedsPintcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEunsignedsPintcOdoublegR_Dictionary();
   static void *new_maplEunsignedsPintcOdoublegR(void *p = 0);
   static void *newArray_maplEunsignedsPintcOdoublegR(Long_t size, void *p);
   static void delete_maplEunsignedsPintcOdoublegR(void *p);
   static void deleteArray_maplEunsignedsPintcOdoublegR(void *p);
   static void destruct_maplEunsignedsPintcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<unsigned int,double>*)
   {
      map<unsigned int,double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<unsigned int,double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<unsigned int,double>", -2, "prec_stl/map", 63,
                  typeid(map<unsigned int,double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEunsignedsPintcOdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(map<unsigned int,double>) );
      instance.SetNew(&new_maplEunsignedsPintcOdoublegR);
      instance.SetNewArray(&newArray_maplEunsignedsPintcOdoublegR);
      instance.SetDelete(&delete_maplEunsignedsPintcOdoublegR);
      instance.SetDeleteArray(&deleteArray_maplEunsignedsPintcOdoublegR);
      instance.SetDestructor(&destruct_maplEunsignedsPintcOdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<unsigned int,double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<unsigned int,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEunsignedsPintcOdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<unsigned int,double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEunsignedsPintcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned int,double> : new map<unsigned int,double>;
   }
   static void *newArray_maplEunsignedsPintcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned int,double>[nElements] : new map<unsigned int,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEunsignedsPintcOdoublegR(void *p) {
      delete ((map<unsigned int,double>*)p);
   }
   static void deleteArray_maplEunsignedsPintcOdoublegR(void *p) {
      delete [] ((map<unsigned int,double>*)p);
   }
   static void destruct_maplEunsignedsPintcOdoublegR(void *p) {
      typedef map<unsigned int,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<unsigned int,double>

namespace ROOTDict {
   void vectorlETArtCalcGlobalTrackcLcLTrackHitmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETArtCalcGlobalTrackcLcLTrackHitmUgR_Dictionary();
   static void *new_vectorlETArtCalcGlobalTrackcLcLTrackHitmUgR(void *p = 0);
   static void *newArray_vectorlETArtCalcGlobalTrackcLcLTrackHitmUgR(Long_t size, void *p);
   static void delete_vectorlETArtCalcGlobalTrackcLcLTrackHitmUgR(void *p);
   static void deleteArray_vectorlETArtCalcGlobalTrackcLcLTrackHitmUgR(void *p);
   static void destruct_vectorlETArtCalcGlobalTrackcLcLTrackHitmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TArtCalcGlobalTrack::TrackHit*>*)
   {
      vector<TArtCalcGlobalTrack::TrackHit*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TArtCalcGlobalTrack::TrackHit*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TArtCalcGlobalTrack::TrackHit*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TArtCalcGlobalTrack::TrackHit*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETArtCalcGlobalTrackcLcLTrackHitmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TArtCalcGlobalTrack::TrackHit*>) );
      instance.SetNew(&new_vectorlETArtCalcGlobalTrackcLcLTrackHitmUgR);
      instance.SetNewArray(&newArray_vectorlETArtCalcGlobalTrackcLcLTrackHitmUgR);
      instance.SetDelete(&delete_vectorlETArtCalcGlobalTrackcLcLTrackHitmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETArtCalcGlobalTrackcLcLTrackHitmUgR);
      instance.SetDestructor(&destruct_vectorlETArtCalcGlobalTrackcLcLTrackHitmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TArtCalcGlobalTrack::TrackHit*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TArtCalcGlobalTrack::TrackHit*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETArtCalcGlobalTrackcLcLTrackHitmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TArtCalcGlobalTrack::TrackHit*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETArtCalcGlobalTrackcLcLTrackHitmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtCalcGlobalTrack::TrackHit*> : new vector<TArtCalcGlobalTrack::TrackHit*>;
   }
   static void *newArray_vectorlETArtCalcGlobalTrackcLcLTrackHitmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtCalcGlobalTrack::TrackHit*>[nElements] : new vector<TArtCalcGlobalTrack::TrackHit*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETArtCalcGlobalTrackcLcLTrackHitmUgR(void *p) {
      delete ((vector<TArtCalcGlobalTrack::TrackHit*>*)p);
   }
   static void deleteArray_vectorlETArtCalcGlobalTrackcLcLTrackHitmUgR(void *p) {
      delete [] ((vector<TArtCalcGlobalTrack::TrackHit*>*)p);
   }
   static void destruct_vectorlETArtCalcGlobalTrackcLcLTrackHitmUgR(void *p) {
      typedef vector<TArtCalcGlobalTrack::TrackHit*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TArtCalcGlobalTrack::TrackHit*>

namespace ROOTDict {
   void vectorlETArtDCHitmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETArtDCHitmUgR_Dictionary();
   static void *new_vectorlETArtDCHitmUgR(void *p = 0);
   static void *newArray_vectorlETArtDCHitmUgR(Long_t size, void *p);
   static void delete_vectorlETArtDCHitmUgR(void *p);
   static void deleteArray_vectorlETArtDCHitmUgR(void *p);
   static void destruct_vectorlETArtDCHitmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TArtDCHit*>*)
   {
      vector<TArtDCHit*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TArtDCHit*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TArtDCHit*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TArtDCHit*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETArtDCHitmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TArtDCHit*>) );
      instance.SetNew(&new_vectorlETArtDCHitmUgR);
      instance.SetNewArray(&newArray_vectorlETArtDCHitmUgR);
      instance.SetDelete(&delete_vectorlETArtDCHitmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETArtDCHitmUgR);
      instance.SetDestructor(&destruct_vectorlETArtDCHitmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TArtDCHit*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TArtDCHit*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETArtDCHitmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TArtDCHit*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETArtDCHitmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtDCHit*> : new vector<TArtDCHit*>;
   }
   static void *newArray_vectorlETArtDCHitmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtDCHit*>[nElements] : new vector<TArtDCHit*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETArtDCHitmUgR(void *p) {
      delete ((vector<TArtDCHit*>*)p);
   }
   static void deleteArray_vectorlETArtDCHitmUgR(void *p) {
      delete [] ((vector<TArtDCHit*>*)p);
   }
   static void destruct_vectorlETArtDCHitmUgR(void *p) {
      typedef vector<TArtDCHit*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TArtDCHit*>

namespace ROOTDict {
   void vectorlETArtDCHitParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETArtDCHitParamUgR_Dictionary();
   static void *new_vectorlETArtDCHitParamUgR(void *p = 0);
   static void *newArray_vectorlETArtDCHitParamUgR(Long_t size, void *p);
   static void delete_vectorlETArtDCHitParamUgR(void *p);
   static void deleteArray_vectorlETArtDCHitParamUgR(void *p);
   static void destruct_vectorlETArtDCHitParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TArtDCHitPara*>*)
   {
      vector<TArtDCHitPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TArtDCHitPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TArtDCHitPara*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TArtDCHitPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETArtDCHitParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TArtDCHitPara*>) );
      instance.SetNew(&new_vectorlETArtDCHitParamUgR);
      instance.SetNewArray(&newArray_vectorlETArtDCHitParamUgR);
      instance.SetDelete(&delete_vectorlETArtDCHitParamUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETArtDCHitParamUgR);
      instance.SetDestructor(&destruct_vectorlETArtDCHitParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TArtDCHitPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TArtDCHitPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETArtDCHitParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TArtDCHitPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETArtDCHitParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtDCHitPara*> : new vector<TArtDCHitPara*>;
   }
   static void *newArray_vectorlETArtDCHitParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtDCHitPara*>[nElements] : new vector<TArtDCHitPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETArtDCHitParamUgR(void *p) {
      delete ((vector<TArtDCHitPara*>*)p);
   }
   static void deleteArray_vectorlETArtDCHitParamUgR(void *p) {
      delete [] ((vector<TArtDCHitPara*>*)p);
   }
   static void destruct_vectorlETArtDCHitParamUgR(void *p) {
      typedef vector<TArtDCHitPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TArtDCHitPara*>

namespace ROOTDict {
   void vectorlETArtHODPlaParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETArtHODPlaParamUgR_Dictionary();
   static void *new_vectorlETArtHODPlaParamUgR(void *p = 0);
   static void *newArray_vectorlETArtHODPlaParamUgR(Long_t size, void *p);
   static void delete_vectorlETArtHODPlaParamUgR(void *p);
   static void deleteArray_vectorlETArtHODPlaParamUgR(void *p);
   static void destruct_vectorlETArtHODPlaParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TArtHODPlaPara*>*)
   {
      vector<TArtHODPlaPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TArtHODPlaPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TArtHODPlaPara*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TArtHODPlaPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETArtHODPlaParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TArtHODPlaPara*>) );
      instance.SetNew(&new_vectorlETArtHODPlaParamUgR);
      instance.SetNewArray(&newArray_vectorlETArtHODPlaParamUgR);
      instance.SetDelete(&delete_vectorlETArtHODPlaParamUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETArtHODPlaParamUgR);
      instance.SetDestructor(&destruct_vectorlETArtHODPlaParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TArtHODPlaPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TArtHODPlaPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETArtHODPlaParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TArtHODPlaPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETArtHODPlaParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtHODPlaPara*> : new vector<TArtHODPlaPara*>;
   }
   static void *newArray_vectorlETArtHODPlaParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtHODPlaPara*>[nElements] : new vector<TArtHODPlaPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETArtHODPlaParamUgR(void *p) {
      delete ((vector<TArtHODPlaPara*>*)p);
   }
   static void deleteArray_vectorlETArtHODPlaParamUgR(void *p) {
      delete [] ((vector<TArtHODPlaPara*>*)p);
   }
   static void destruct_vectorlETArtHODPlaParamUgR(void *p) {
      typedef vector<TArtHODPlaPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TArtHODPlaPara*>

namespace ROOTDict {
   void vectorlETArtRPTOFPlaParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETArtRPTOFPlaParamUgR_Dictionary();
   static void *new_vectorlETArtRPTOFPlaParamUgR(void *p = 0);
   static void *newArray_vectorlETArtRPTOFPlaParamUgR(Long_t size, void *p);
   static void delete_vectorlETArtRPTOFPlaParamUgR(void *p);
   static void deleteArray_vectorlETArtRPTOFPlaParamUgR(void *p);
   static void destruct_vectorlETArtRPTOFPlaParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TArtRPTOFPlaPara*>*)
   {
      vector<TArtRPTOFPlaPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TArtRPTOFPlaPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TArtRPTOFPlaPara*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TArtRPTOFPlaPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETArtRPTOFPlaParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TArtRPTOFPlaPara*>) );
      instance.SetNew(&new_vectorlETArtRPTOFPlaParamUgR);
      instance.SetNewArray(&newArray_vectorlETArtRPTOFPlaParamUgR);
      instance.SetDelete(&delete_vectorlETArtRPTOFPlaParamUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETArtRPTOFPlaParamUgR);
      instance.SetDestructor(&destruct_vectorlETArtRPTOFPlaParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TArtRPTOFPlaPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TArtRPTOFPlaPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETArtRPTOFPlaParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TArtRPTOFPlaPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETArtRPTOFPlaParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtRPTOFPlaPara*> : new vector<TArtRPTOFPlaPara*>;
   }
   static void *newArray_vectorlETArtRPTOFPlaParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtRPTOFPlaPara*>[nElements] : new vector<TArtRPTOFPlaPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETArtRPTOFPlaParamUgR(void *p) {
      delete ((vector<TArtRPTOFPlaPara*>*)p);
   }
   static void deleteArray_vectorlETArtRPTOFPlaParamUgR(void *p) {
      delete [] ((vector<TArtRPTOFPlaPara*>*)p);
   }
   static void destruct_vectorlETArtRPTOFPlaParamUgR(void *p) {
      typedef vector<TArtRPTOFPlaPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TArtRPTOFPlaPara*>

namespace ROOTDict {
   void vectorlETArtTEDCsIParamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETArtTEDCsIParamUgR_Dictionary();
   static void *new_vectorlETArtTEDCsIParamUgR(void *p = 0);
   static void *newArray_vectorlETArtTEDCsIParamUgR(Long_t size, void *p);
   static void delete_vectorlETArtTEDCsIParamUgR(void *p);
   static void deleteArray_vectorlETArtTEDCsIParamUgR(void *p);
   static void destruct_vectorlETArtTEDCsIParamUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TArtTEDCsIPara*>*)
   {
      vector<TArtTEDCsIPara*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TArtTEDCsIPara*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TArtTEDCsIPara*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TArtTEDCsIPara*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETArtTEDCsIParamUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TArtTEDCsIPara*>) );
      instance.SetNew(&new_vectorlETArtTEDCsIParamUgR);
      instance.SetNewArray(&newArray_vectorlETArtTEDCsIParamUgR);
      instance.SetDelete(&delete_vectorlETArtTEDCsIParamUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETArtTEDCsIParamUgR);
      instance.SetDestructor(&destruct_vectorlETArtTEDCsIParamUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TArtTEDCsIPara*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TArtTEDCsIPara*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETArtTEDCsIParamUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TArtTEDCsIPara*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETArtTEDCsIParamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtTEDCsIPara*> : new vector<TArtTEDCsIPara*>;
   }
   static void *newArray_vectorlETArtTEDCsIParamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TArtTEDCsIPara*>[nElements] : new vector<TArtTEDCsIPara*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETArtTEDCsIParamUgR(void *p) {
      delete ((vector<TArtTEDCsIPara*>*)p);
   }
   static void deleteArray_vectorlETArtTEDCsIParamUgR(void *p) {
      delete [] ((vector<TArtTEDCsIPara*>*)p);
   }
   static void destruct_vectorlETArtTEDCsIParamUgR(void *p) {
      typedef vector<TArtTEDCsIPara*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TArtTEDCsIPara*>

namespace ROOTDict {
   void vectorlETStringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETStringgR_Dictionary();
   static void *new_vectorlETStringgR(void *p = 0);
   static void *newArray_vectorlETStringgR(Long_t size, void *p);
   static void delete_vectorlETStringgR(void *p);
   static void deleteArray_vectorlETStringgR(void *p);
   static void destruct_vectorlETStringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TString>*)
   {
      vector<TString> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TString>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TString>", -2, "prec_stl/vector", 49,
                  typeid(vector<TString>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETStringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TString>) );
      instance.SetNew(&new_vectorlETStringgR);
      instance.SetNewArray(&newArray_vectorlETStringgR);
      instance.SetDelete(&delete_vectorlETStringgR);
      instance.SetDeleteArray(&deleteArray_vectorlETStringgR);
      instance.SetDestructor(&destruct_vectorlETStringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TString> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TString>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETStringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TString>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETStringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TString> : new vector<TString>;
   }
   static void *newArray_vectorlETStringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TString>[nElements] : new vector<TString>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETStringgR(void *p) {
      delete ((vector<TString>*)p);
   }
   static void deleteArray_vectorlETStringgR(void *p) {
      delete [] ((vector<TString>*)p);
   }
   static void destruct_vectorlETStringgR(void *p) {
      typedef vector<TString> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TString>

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

/********************************************************
* anasamurai_dict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableanasamurai_dict();

extern "C" void G__set_cpp_environmentanasamurai_dict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("include/TArtTEDCsI.hh");
  G__add_compiledheader("include/TArtCalibS1DC1Hit.hh");
  G__add_compiledheader("include/TArtCalibSAMURAI.hh");
  G__add_compiledheader("include/TArtSAMURAIParameters.hh");
  G__add_compiledheader("include/TArtNeuLANDPlaPara.hh");
  G__add_compiledheader("include/TArtNEBULAPla.hh");
  G__add_compiledheader("include/TArtCalibNEBULAHPC.hh");
  G__add_compiledheader("include/TArtNEBULAHPCPara.hh");
  G__add_compiledheader("include/MathTools.hh");
  G__add_compiledheader("include/TArtHIMEPla.hh");
  G__add_compiledheader("include/TArtRecoNeutron.hh");
  G__add_compiledheader("include/TArtNEBULAFilter.hh");
  G__add_compiledheader("include/TArtTacquilaMap.hh");
  G__add_compiledheader("include/TArtDCHitPara.hh");
  G__add_compiledheader("include/TArtHIMEFilter.hh");
  G__add_compiledheader("include/TArtCalibFDC2Track.hh");
  G__add_compiledheader("include/TArtCalibRPDCTrack.hh");
  G__add_compiledheader("include/TArtCalibBDC2Hit.hh");
  G__add_compiledheader("include/TArtHODPla.hh");
  G__add_compiledheader("include/TArtCalibBDC1Hit.hh");
  G__add_compiledheader("include/TArtHIMEPlaPara.hh");
  G__add_compiledheader("include/TArtCalibBPCHit.hh");
  G__add_compiledheader("include/TArtCalibNeuLAND.hh");
  G__add_compiledheader("include/TArtCalibFDC0Hit.hh");
  G__add_compiledheader("include/TArtCalibFDC1Track.hh");
  G__add_compiledheader("include/TArtCalibDCHit.hh");
  G__add_compiledheader("include/TArtTEDCsIPara.hh");
  G__add_compiledheader("include/TArtCalibS1DC2Track.hh");
  G__add_compiledheader("include/TArtTZero.hh");
  G__add_compiledheader("include/TArtNeuLANDPla.hh");
  G__add_compiledheader("include/TArtCalibS1DC1Track.hh");
  G__add_compiledheader("include/SAMURAIFieldMap.hh");
  G__add_compiledheader("include/TArtNeutron.hh");
  G__add_compiledheader("include/TArtICF.hh");
  G__add_compiledheader("include/DCConfMan.hh");
  G__add_compiledheader("include/TArtNEBULAHPC.hh");
  G__add_compiledheader("include/TArtCalibRPTOFPla.hh");
  G__add_compiledheader("include/TArtRPTOFPla.hh");
  G__add_compiledheader("include/TArtCalibBDC2Track.hh");
  G__add_compiledheader("include/TArtCalibDCTrack.hh");
  G__add_compiledheader("include/TArtDCTrack.hh");
  G__add_compiledheader("include/TArtCalibNEBULA.hh");
  G__add_compiledheader("include/TArtHODPlaPara.hh");
  G__add_compiledheader("include/RungeKuttaUtilities.hh");
  G__add_compiledheader("include/TArtCalibTEDCsI.hh");
  G__add_compiledheader("include/TArtDCHit.hh");
  G__add_compiledheader("include/TArtRecoSAMURAI.hh");
  G__add_compiledheader("include/TArtCalcGlobalTrack.hh");
  G__add_compiledheader("include/TArtRPTOFPlaPara.hh");
  G__add_compiledheader("include/TArtCalibNeuLANDVETO.hh");
  G__add_compiledheader("include/TArtCalibFDC2Hit.hh");
  G__add_compiledheader("include/TArtCalibBDC1Track.hh");
  G__add_compiledheader("include/TArtFragment.hh");
  G__add_compiledheader("include/TArtCalibFDC1Hit.hh");
  G__add_compiledheader("include/TArtCalibSAMURAITZero.hh");
  G__add_compiledheader("include/TArtNEBULAPlaPara.hh");
  G__add_compiledheader("include/DCGeomRecord.hh");
  G__add_compiledheader("include/TArtCalibHIME.hh");
  G__add_compiledheader("include/FieldMan.hh");
  G__add_compiledheader("include/TArtCalibHODPla.hh");
  G__add_compiledheader("include/TArtCalibRPDCHit.hh");
  G__add_compiledheader("include/TArtRecoFragment.hh");
  G__add_compiledheader("include/TArtCalibICF.hh");
  G__add_compiledheader("include/TArtCalibS1DC2Hit.hh");
  G__add_compiledheader("include/TArtCalibFDC0Track.hh");
  G__cpp_reset_tagtableanasamurai_dict();
}
#include <new>
extern "C" int G__cpp_dllrevanasamurai_dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TArtTEDCsI */
static int G__anasamurai_dict_186_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtTEDCsI* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtTEDCsI[n];
     } else {
       p = new((void*) gvp) TArtTEDCsI[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtTEDCsI;
     } else {
       p = new((void*) gvp) TArtTEDCsI;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_186_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTEDCsI*) G__getstructoffset())->SetRow((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_186_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTEDCsI*) G__getstructoffset())->SetColumn((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_186_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtTEDCsI*) G__getstructoffset())->GetRow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_186_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtTEDCsI*) G__getstructoffset())->GetColumn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_186_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtTEDCsI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_186_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtTEDCsI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_186_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtTEDCsI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_186_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtTEDCsI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_186_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTEDCsI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_186_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtTEDCsI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_186_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtTEDCsI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_186_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtTEDCsI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_186_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtTEDCsI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_186_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtTEDCsI* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtTEDCsI(*(TArtTEDCsI*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsI));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtTEDCsI G__TTArtTEDCsI;
static int G__anasamurai_dict_186_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtTEDCsI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtTEDCsI*) (soff+(sizeof(TArtTEDCsI)*i)))->~G__TTArtTEDCsI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtTEDCsI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtTEDCsI*) (soff))->~G__TTArtTEDCsI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_186_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtTEDCsI* dest = (TArtTEDCsI*) G__getstructoffset();
   *dest = *(TArtTEDCsI*) libp->para[0].ref;
   const TArtTEDCsI& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDCHitPara */
static int G__anasamurai_dict_223_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDCHitPara* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtDCHitPara[n];
     } else {
       p = new((void*) gvp) TArtDCHitPara[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtDCHitPara;
     } else {
       p = new((void*) gvp) TArtDCHitPara;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHitPara));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_223_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDCHitPara* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 12
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtDCHitPara(
(Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11]));
   } else {
     p = new((void*) gvp) TArtDCHitPara(
(Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHitPara));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_223_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCHitPara*) G__getstructoffset())->SetPalameters(
(Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_223_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCHitPara*) G__getstructoffset())->SetMap((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_223_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtDCHitPara*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_223_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtDCHitPara*) G__getstructoffset())->GetDetectorName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_223_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtDCHitPara*) G__getstructoffset())->GetFpl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_223_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtDCHitPara*) G__getstructoffset())->GetLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_223_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtDCHitPara*) G__getstructoffset())->GetPlaneID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_223_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtDCHitPara*) G__getstructoffset())->GetWireID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_223_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtDCHitPara*) G__getstructoffset())->GetWirePosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_223_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtDCHitPara*) G__getstructoffset())->GetWireZPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_223_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtDCHitPara*) G__getstructoffset())->GetTZeroOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_223_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtDCHitPara*) G__getstructoffset())->GetSTCCoef((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_223_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtDCHitPara*) G__getstructoffset())->GetTDCMap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_223_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDCHitPara::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_223_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtDCHitPara::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_223_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtDCHitPara::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_223_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtDCHitPara::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_223_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCHitPara*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_223_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtDCHitPara::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_223_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtDCHitPara::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_223_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtDCHitPara::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_223_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtDCHitPara::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_223_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtDCHitPara* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtDCHitPara(*(TArtDCHitPara*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHitPara));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDCHitPara G__TTArtDCHitPara;
static int G__anasamurai_dict_223_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDCHitPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDCHitPara*) (soff+(sizeof(TArtDCHitPara)*i)))->~G__TTArtDCHitPara();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDCHitPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDCHitPara*) (soff))->~G__TTArtDCHitPara();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_223_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDCHitPara* dest = (TArtDCHitPara*) G__getstructoffset();
   *dest = *(TArtDCHitPara*) libp->para[0].ref;
   const TArtDCHitPara& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDCHit */
static int G__anasamurai_dict_224_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDCHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtDCHit[n];
     } else {
       p = new((void*) gvp) TArtDCHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtDCHit;
     } else {
       p = new((void*) gvp) TArtDCHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCHit*) G__getstructoffset())->SetTDC((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCHit*) G__getstructoffset())->SetTrailTDC((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDCHit*) G__getstructoffset())->GetTDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDCHit*) G__getstructoffset())->GetTrailTDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCHit*) G__getstructoffset())->SetPosition((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtDCHit*) G__getstructoffset())->GetPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCHit*) G__getstructoffset())->SetWireDirection((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCHit*) G__getstructoffset())->SetWireDirection(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCHit*) G__getstructoffset())->SetWireID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCHit*) G__getstructoffset())->SetWirePosition((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCHit*) G__getstructoffset())->SetWireZPosition((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCHit*) G__getstructoffset())->SetLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCHit*) G__getstructoffset())->SetPlaneID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCHit*) G__getstructoffset())->SetSTCCoef((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtDCHit*) G__getstructoffset())->GetWireDirection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDCHit*) G__getstructoffset())->GetWireID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtDCHit*) G__getstructoffset())->GetWirePosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtDCHit*) G__getstructoffset())->GetWireZPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDCHit*) G__getstructoffset())->GetLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDCHit*) G__getstructoffset())->GetPlaneID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtDCHit*) G__getstructoffset())->GetSTCCoef((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCHit*) G__getstructoffset())->SetHitID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDCHit*) G__getstructoffset())->GetHitID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TArtDCHit*) G__getstructoffset())->IsEqual((TObject*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDCHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtDCHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtDCHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtDCHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtDCHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtDCHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtDCHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_224_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtDCHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_224_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtDCHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtDCHit(*(TArtDCHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDCHit G__TTArtDCHit;
static int G__anasamurai_dict_224_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDCHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDCHit*) (soff+(sizeof(TArtDCHit)*i)))->~G__TTArtDCHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDCHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDCHit*) (soff))->~G__TTArtDCHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_224_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDCHit* dest = (TArtDCHit*) G__getstructoffset();
   *dest = *(TArtDCHit*) libp->para[0].ref;
   const TArtDCHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtSAMURAIParameters */
static int G__anasamurai_dict_225_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtSAMURAIParameters* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtSAMURAIParameters((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TArtSAMURAIParameters((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtSAMURAIParameters((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TArtSAMURAIParameters((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtSAMURAIParameters[n];
       } else {
         p = new((void*) gvp) TArtSAMURAIParameters[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtSAMURAIParameters;
       } else {
         p = new((void*) gvp) TArtSAMURAIParameters;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtSAMURAIParameters));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) TArtSAMURAIParameters::Instance((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) TArtSAMURAIParameters::Instance((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) TArtSAMURAIParameters::Instance());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtSAMURAIParameters::Delete();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtSAMURAIParameters*) G__getstructoffset())->LoadParameter((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtSAMURAIParameters*) G__getstructoffset())->LoadNeuLANDTCal((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtSAMURAIParameters*) G__getstructoffset())->LoadTCal((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSAMURAIParameters*) G__getstructoffset())->PrintListOfHODPlaPara();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSAMURAIParameters*) G__getstructoffset())->PrintListOfRPTOFPlaPara();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSAMURAIParameters*) G__getstructoffset())->PrintListOfTEDCsIPara();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSAMURAIParameters*) G__getstructoffset())->PrintListOfBPCHitPara();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSAMURAIParameters*) G__getstructoffset())->PrintListOfBDC1HitPara();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSAMURAIParameters*) G__getstructoffset())->PrintListOfBDC2HitPara();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSAMURAIParameters*) G__getstructoffset())->PrintListOfFDC0HitPara();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSAMURAIParameters*) G__getstructoffset())->PrintListOfFDC1HitPara();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSAMURAIParameters*) G__getstructoffset())->PrintListOfFDC2HitPara();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSAMURAIParameters*) G__getstructoffset())->PrintListOfRPDCHitPara();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSAMURAIParameters*) G__getstructoffset())->PrintListOfS1DC1HitPara();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSAMURAIParameters*) G__getstructoffset())->PrintListOfS1DC2HitPara();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TArtSAMURAIParameters*) G__getstructoffset())->PrintListOfNEBULAPlaPara();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TArtSAMURAIParameters*) G__getstructoffset())->PrintListOfHIMEPlaPara();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TArtSAMURAIParameters*) G__getstructoffset())->PrintListOfNeuLANDPlaPara();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TArtSAMURAIParameters*) G__getstructoffset())->PrintListOfNeuLANDVETOPlaPara();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtSAMURAIParameters*) G__getstructoffset())->GetListOfHODPlaPara());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtSAMURAIParameters*) G__getstructoffset())->GetListOfRPTOFPlaPara());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtSAMURAIParameters*) G__getstructoffset())->GetListOfTEDCsIPara());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtSAMURAIParameters*) G__getstructoffset())->GetListOfBPCHitPara());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtSAMURAIParameters*) G__getstructoffset())->GetListOfBDC1HitPara());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtSAMURAIParameters*) G__getstructoffset())->GetListOfBDC2HitPara());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtSAMURAIParameters*) G__getstructoffset())->GetListOfFDC0HitPara());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtSAMURAIParameters*) G__getstructoffset())->GetListOfFDC1HitPara());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtSAMURAIParameters*) G__getstructoffset())->GetListOfFDC2HitPara());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtSAMURAIParameters*) G__getstructoffset())->GetListOfRPDCHitPara());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtSAMURAIParameters*) G__getstructoffset())->GetListOfS1DC1HitPara());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtSAMURAIParameters*) G__getstructoffset())->GetListOfS1DC2HitPara());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindHODPlaPara((TArtRIDFMap*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindRPTOFPlaPara((TArtRIDFMap*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindTEDCsIPara((TArtRIDFMap*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindBPCHitPara((TArtRIDFMap*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindBDC1HitPara((TArtRIDFMap*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindBDC2HitPara((TArtRIDFMap*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindFDC0HitPara((TArtRIDFMap*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindFDC1HitPara((TArtRIDFMap*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindFDC2HitPara((TArtRIDFMap*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindRPDCHitPara((TArtRIDFMap*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindS1DC1HitPara((TArtRIDFMap*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindS1DC2HitPara((TArtRIDFMap*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindNEBULAPlaUPara(*(TArtRIDFMap*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindNEBULAPlaDPara(*(TArtRIDFMap*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindNEBULAPlaPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindHIMEPlaUPara(*(TArtRIDFMap*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindHIMEPlaDPara(*(TArtRIDFMap*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindHIMEPlaPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindNEBULAHPCPara(*(TArtRIDFMap*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindNEBULAHPCPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindNeuLANDPlaPara((TArtTacquilaMap*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindNeuLANDPlaPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindTacquilaPara((TArtTacquilaMap*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindTacquilaPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindNeuLANDVETOPlaUPara(*(TArtRIDFMap*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindNeuLANDVETOPlaDPara(*(TArtRIDFMap*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtSAMURAIParameters*) G__getstructoffset())->FindNeuLANDVETOPlaPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtSAMURAIParameters::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtSAMURAIParameters::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtSAMURAIParameters::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtSAMURAIParameters::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtSAMURAIParameters*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtSAMURAIParameters::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtSAMURAIParameters::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtSAMURAIParameters::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_225_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtSAMURAIParameters::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_225_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtSAMURAIParameters* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtSAMURAIParameters(*(TArtSAMURAIParameters*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtSAMURAIParameters));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtSAMURAIParameters G__TTArtSAMURAIParameters;
static int G__anasamurai_dict_225_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtSAMURAIParameters*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtSAMURAIParameters*) (soff+(sizeof(TArtSAMURAIParameters)*i)))->~G__TTArtSAMURAIParameters();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtSAMURAIParameters*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtSAMURAIParameters*) (soff))->~G__TTArtSAMURAIParameters();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_225_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtSAMURAIParameters* dest = (TArtSAMURAIParameters*) G__getstructoffset();
   *dest = *(TArtSAMURAIParameters*) libp->para[0].ref;
   const TArtSAMURAIParameters& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibDCHit */
static int G__anasamurai_dict_227_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibDCHit*) G__getstructoffset())->LoadData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_227_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibDCHit*) G__getstructoffset())->LoadData((TArtRawSegmentObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_227_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibDCHit*) G__getstructoffset())->GetDCHitArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_227_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibDCHit*) G__getstructoffset())->GetNumDCHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_227_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibDCHit*) G__getstructoffset())->GetDCHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_227_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibDCHit*) G__getstructoffset())->GetDCHitPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_227_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibDCHit*) G__getstructoffset())->FindDCHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_227_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibDCHit*) G__getstructoffset())->FindDCHit((TString*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_227_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibDCHit*) G__getstructoffset())->FindDCHit((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_227_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibDCHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_227_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibDCHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_227_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibDCHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_227_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibDCHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_227_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibDCHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_227_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibDCHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_227_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibDCHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_227_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibDCHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_227_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibDCHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibDCHit G__TTArtCalibDCHit;
static int G__anasamurai_dict_227_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibDCHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibDCHit*) (soff+(sizeof(TArtCalibDCHit)*i)))->~G__TTArtCalibDCHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibDCHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibDCHit*) (soff))->~G__TTArtCalibDCHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_227_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibDCHit* dest = (TArtCalibDCHit*) G__getstructoffset();
   *dest = *(TArtCalibDCHit*) libp->para[0].ref;
   const TArtCalibDCHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibS1DC1Hit */
static int G__anasamurai_dict_232_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibS1DC1Hit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibS1DC1Hit(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibS1DC1Hit(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibS1DC1Hit[n];
       } else {
         p = new((void*) gvp) TArtCalibS1DC1Hit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibS1DC1Hit;
       } else {
         p = new((void*) gvp) TArtCalibS1DC1Hit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC1Hit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_232_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibS1DC1Hit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_232_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibS1DC1Hit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_232_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibS1DC1Hit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_232_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibS1DC1Hit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_232_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibS1DC1Hit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_232_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibS1DC1Hit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_232_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibS1DC1Hit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_232_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibS1DC1Hit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_232_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibS1DC1Hit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_232_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibS1DC1Hit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibS1DC1Hit(*(TArtCalibS1DC1Hit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC1Hit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibS1DC1Hit G__TTArtCalibS1DC1Hit;
static int G__anasamurai_dict_232_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibS1DC1Hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibS1DC1Hit*) (soff+(sizeof(TArtCalibS1DC1Hit)*i)))->~G__TTArtCalibS1DC1Hit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibS1DC1Hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibS1DC1Hit*) (soff))->~G__TTArtCalibS1DC1Hit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_232_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibS1DC1Hit* dest = (TArtCalibS1DC1Hit*) G__getstructoffset();
   *dest = *(TArtCalibS1DC1Hit*) libp->para[0].ref;
   const TArtCalibS1DC1Hit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibBPCHit */
static int G__anasamurai_dict_234_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibBPCHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibBPCHit(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibBPCHit(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibBPCHit[n];
       } else {
         p = new((void*) gvp) TArtCalibBPCHit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibBPCHit;
       } else {
         p = new((void*) gvp) TArtCalibBPCHit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBPCHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_234_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibBPCHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_234_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibBPCHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_234_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibBPCHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_234_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibBPCHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_234_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibBPCHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_234_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibBPCHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_234_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibBPCHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_234_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibBPCHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_234_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibBPCHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_234_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibBPCHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibBPCHit(*(TArtCalibBPCHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBPCHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibBPCHit G__TTArtCalibBPCHit;
static int G__anasamurai_dict_234_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibBPCHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibBPCHit*) (soff+(sizeof(TArtCalibBPCHit)*i)))->~G__TTArtCalibBPCHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibBPCHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibBPCHit*) (soff))->~G__TTArtCalibBPCHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_234_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibBPCHit* dest = (TArtCalibBPCHit*) G__getstructoffset();
   *dest = *(TArtCalibBPCHit*) libp->para[0].ref;
   const TArtCalibBPCHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibBDC1Hit */
static int G__anasamurai_dict_235_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibBDC1Hit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibBDC1Hit(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibBDC1Hit(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibBDC1Hit[n];
       } else {
         p = new((void*) gvp) TArtCalibBDC1Hit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibBDC1Hit;
       } else {
         p = new((void*) gvp) TArtCalibBDC1Hit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Hit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_235_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibBDC1Hit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_235_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibBDC1Hit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_235_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibBDC1Hit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_235_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibBDC1Hit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_235_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibBDC1Hit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_235_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibBDC1Hit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_235_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibBDC1Hit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_235_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibBDC1Hit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_235_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibBDC1Hit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_235_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibBDC1Hit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibBDC1Hit(*(TArtCalibBDC1Hit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Hit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibBDC1Hit G__TTArtCalibBDC1Hit;
static int G__anasamurai_dict_235_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibBDC1Hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibBDC1Hit*) (soff+(sizeof(TArtCalibBDC1Hit)*i)))->~G__TTArtCalibBDC1Hit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibBDC1Hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibBDC1Hit*) (soff))->~G__TTArtCalibBDC1Hit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_235_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibBDC1Hit* dest = (TArtCalibBDC1Hit*) G__getstructoffset();
   *dest = *(TArtCalibBDC1Hit*) libp->para[0].ref;
   const TArtCalibBDC1Hit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibBDC2Hit */
static int G__anasamurai_dict_236_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibBDC2Hit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibBDC2Hit(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibBDC2Hit(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibBDC2Hit[n];
       } else {
         p = new((void*) gvp) TArtCalibBDC2Hit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibBDC2Hit;
       } else {
         p = new((void*) gvp) TArtCalibBDC2Hit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Hit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_236_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibBDC2Hit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_236_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibBDC2Hit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_236_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibBDC2Hit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_236_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibBDC2Hit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_236_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibBDC2Hit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_236_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibBDC2Hit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_236_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibBDC2Hit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_236_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibBDC2Hit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_236_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibBDC2Hit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_236_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibBDC2Hit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibBDC2Hit(*(TArtCalibBDC2Hit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Hit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibBDC2Hit G__TTArtCalibBDC2Hit;
static int G__anasamurai_dict_236_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibBDC2Hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibBDC2Hit*) (soff+(sizeof(TArtCalibBDC2Hit)*i)))->~G__TTArtCalibBDC2Hit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibBDC2Hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibBDC2Hit*) (soff))->~G__TTArtCalibBDC2Hit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_236_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibBDC2Hit* dest = (TArtCalibBDC2Hit*) G__getstructoffset();
   *dest = *(TArtCalibBDC2Hit*) libp->para[0].ref;
   const TArtCalibBDC2Hit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibFDC0Hit */
static int G__anasamurai_dict_237_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibFDC0Hit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibFDC0Hit(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibFDC0Hit(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibFDC0Hit[n];
       } else {
         p = new((void*) gvp) TArtCalibFDC0Hit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibFDC0Hit;
       } else {
         p = new((void*) gvp) TArtCalibFDC0Hit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Hit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_237_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibFDC0Hit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_237_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibFDC0Hit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_237_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibFDC0Hit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_237_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibFDC0Hit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_237_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibFDC0Hit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_237_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibFDC0Hit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_237_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibFDC0Hit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_237_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibFDC0Hit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_237_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibFDC0Hit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_237_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibFDC0Hit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibFDC0Hit(*(TArtCalibFDC0Hit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Hit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibFDC0Hit G__TTArtCalibFDC0Hit;
static int G__anasamurai_dict_237_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibFDC0Hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibFDC0Hit*) (soff+(sizeof(TArtCalibFDC0Hit)*i)))->~G__TTArtCalibFDC0Hit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibFDC0Hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibFDC0Hit*) (soff))->~G__TTArtCalibFDC0Hit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_237_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibFDC0Hit* dest = (TArtCalibFDC0Hit*) G__getstructoffset();
   *dest = *(TArtCalibFDC0Hit*) libp->para[0].ref;
   const TArtCalibFDC0Hit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibFDC1Hit */
static int G__anasamurai_dict_238_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibFDC1Hit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibFDC1Hit(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibFDC1Hit(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibFDC1Hit[n];
       } else {
         p = new((void*) gvp) TArtCalibFDC1Hit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibFDC1Hit;
       } else {
         p = new((void*) gvp) TArtCalibFDC1Hit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Hit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_238_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibFDC1Hit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_238_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibFDC1Hit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_238_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibFDC1Hit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_238_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibFDC1Hit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_238_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibFDC1Hit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_238_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibFDC1Hit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_238_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibFDC1Hit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_238_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibFDC1Hit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_238_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibFDC1Hit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_238_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibFDC1Hit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibFDC1Hit(*(TArtCalibFDC1Hit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Hit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibFDC1Hit G__TTArtCalibFDC1Hit;
static int G__anasamurai_dict_238_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibFDC1Hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibFDC1Hit*) (soff+(sizeof(TArtCalibFDC1Hit)*i)))->~G__TTArtCalibFDC1Hit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibFDC1Hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibFDC1Hit*) (soff))->~G__TTArtCalibFDC1Hit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_238_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibFDC1Hit* dest = (TArtCalibFDC1Hit*) G__getstructoffset();
   *dest = *(TArtCalibFDC1Hit*) libp->para[0].ref;
   const TArtCalibFDC1Hit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibFDC2Hit */
static int G__anasamurai_dict_239_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibFDC2Hit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibFDC2Hit(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibFDC2Hit(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibFDC2Hit[n];
       } else {
         p = new((void*) gvp) TArtCalibFDC2Hit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibFDC2Hit;
       } else {
         p = new((void*) gvp) TArtCalibFDC2Hit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Hit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_239_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibFDC2Hit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_239_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibFDC2Hit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_239_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibFDC2Hit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_239_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibFDC2Hit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_239_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibFDC2Hit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_239_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibFDC2Hit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_239_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibFDC2Hit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_239_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibFDC2Hit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_239_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibFDC2Hit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_239_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibFDC2Hit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibFDC2Hit(*(TArtCalibFDC2Hit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Hit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibFDC2Hit G__TTArtCalibFDC2Hit;
static int G__anasamurai_dict_239_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibFDC2Hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibFDC2Hit*) (soff+(sizeof(TArtCalibFDC2Hit)*i)))->~G__TTArtCalibFDC2Hit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibFDC2Hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibFDC2Hit*) (soff))->~G__TTArtCalibFDC2Hit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_239_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibFDC2Hit* dest = (TArtCalibFDC2Hit*) G__getstructoffset();
   *dest = *(TArtCalibFDC2Hit*) libp->para[0].ref;
   const TArtCalibFDC2Hit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibBDC1Track */
static int G__anasamurai_dict_240_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibBDC1Track* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibBDC1Track(*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) TArtCalibBDC1Track(*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibBDC1Track(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibBDC1Track(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibBDC1Track[n];
       } else {
         p = new((void*) gvp) TArtCalibBDC1Track[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibBDC1Track;
       } else {
         p = new((void*) gvp) TArtCalibBDC1Track;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Track));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_240_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibBDC1Track::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_240_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibBDC1Track::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_240_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibBDC1Track::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_240_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibBDC1Track::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_240_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibBDC1Track*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_240_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibBDC1Track::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_240_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibBDC1Track::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_240_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibBDC1Track::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_240_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibBDC1Track::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_240_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibBDC1Track* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibBDC1Track(*(TArtCalibBDC1Track*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Track));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibBDC1Track G__TTArtCalibBDC1Track;
static int G__anasamurai_dict_240_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibBDC1Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibBDC1Track*) (soff+(sizeof(TArtCalibBDC1Track)*i)))->~G__TTArtCalibBDC1Track();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibBDC1Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibBDC1Track*) (soff))->~G__TTArtCalibBDC1Track();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_240_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibBDC1Track* dest = (TArtCalibBDC1Track*) G__getstructoffset();
   *dest = *(TArtCalibBDC1Track*) libp->para[0].ref;
   const TArtCalibBDC1Track& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibBDC2Track */
static int G__anasamurai_dict_241_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibBDC2Track* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibBDC2Track(*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) TArtCalibBDC2Track(*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibBDC2Track(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibBDC2Track(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibBDC2Track[n];
       } else {
         p = new((void*) gvp) TArtCalibBDC2Track[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibBDC2Track;
       } else {
         p = new((void*) gvp) TArtCalibBDC2Track;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Track));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_241_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibBDC2Track::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_241_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibBDC2Track::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_241_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibBDC2Track::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_241_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibBDC2Track::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_241_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibBDC2Track*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_241_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibBDC2Track::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_241_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibBDC2Track::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_241_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibBDC2Track::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_241_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibBDC2Track::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_241_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibBDC2Track* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibBDC2Track(*(TArtCalibBDC2Track*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Track));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibBDC2Track G__TTArtCalibBDC2Track;
static int G__anasamurai_dict_241_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibBDC2Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibBDC2Track*) (soff+(sizeof(TArtCalibBDC2Track)*i)))->~G__TTArtCalibBDC2Track();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibBDC2Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibBDC2Track*) (soff))->~G__TTArtCalibBDC2Track();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_241_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibBDC2Track* dest = (TArtCalibBDC2Track*) G__getstructoffset();
   *dest = *(TArtCalibBDC2Track*) libp->para[0].ref;
   const TArtCalibBDC2Track& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibFDC0Track */
static int G__anasamurai_dict_242_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibFDC0Track* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibFDC0Track(*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) TArtCalibFDC0Track(*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibFDC0Track(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibFDC0Track(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibFDC0Track[n];
       } else {
         p = new((void*) gvp) TArtCalibFDC0Track[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibFDC0Track;
       } else {
         p = new((void*) gvp) TArtCalibFDC0Track;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Track));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_242_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibFDC0Track::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_242_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibFDC0Track::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_242_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibFDC0Track::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_242_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibFDC0Track::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_242_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibFDC0Track*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_242_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibFDC0Track::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_242_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibFDC0Track::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_242_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibFDC0Track::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_242_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibFDC0Track::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_242_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibFDC0Track* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibFDC0Track(*(TArtCalibFDC0Track*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Track));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibFDC0Track G__TTArtCalibFDC0Track;
static int G__anasamurai_dict_242_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibFDC0Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibFDC0Track*) (soff+(sizeof(TArtCalibFDC0Track)*i)))->~G__TTArtCalibFDC0Track();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibFDC0Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibFDC0Track*) (soff))->~G__TTArtCalibFDC0Track();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_242_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibFDC0Track* dest = (TArtCalibFDC0Track*) G__getstructoffset();
   *dest = *(TArtCalibFDC0Track*) libp->para[0].ref;
   const TArtCalibFDC0Track& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibFDC1Track */
static int G__anasamurai_dict_243_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibFDC1Track* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibFDC1Track(*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) TArtCalibFDC1Track(*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibFDC1Track(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibFDC1Track(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibFDC1Track[n];
       } else {
         p = new((void*) gvp) TArtCalibFDC1Track[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibFDC1Track;
       } else {
         p = new((void*) gvp) TArtCalibFDC1Track;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Track));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_243_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibFDC1Track::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_243_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibFDC1Track::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_243_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibFDC1Track::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_243_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibFDC1Track::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_243_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibFDC1Track*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_243_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibFDC1Track::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_243_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibFDC1Track::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_243_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibFDC1Track::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_243_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibFDC1Track::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_243_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibFDC1Track* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibFDC1Track(*(TArtCalibFDC1Track*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Track));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibFDC1Track G__TTArtCalibFDC1Track;
static int G__anasamurai_dict_243_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibFDC1Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibFDC1Track*) (soff+(sizeof(TArtCalibFDC1Track)*i)))->~G__TTArtCalibFDC1Track();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibFDC1Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibFDC1Track*) (soff))->~G__TTArtCalibFDC1Track();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_243_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibFDC1Track* dest = (TArtCalibFDC1Track*) G__getstructoffset();
   *dest = *(TArtCalibFDC1Track*) libp->para[0].ref;
   const TArtCalibFDC1Track& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibFDC2Track */
static int G__anasamurai_dict_244_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibFDC2Track* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibFDC2Track(*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) TArtCalibFDC2Track(*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibFDC2Track(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibFDC2Track(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibFDC2Track[n];
       } else {
         p = new((void*) gvp) TArtCalibFDC2Track[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibFDC2Track;
       } else {
         p = new((void*) gvp) TArtCalibFDC2Track;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Track));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_244_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibFDC2Track::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_244_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibFDC2Track::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_244_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibFDC2Track::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_244_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibFDC2Track::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_244_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibFDC2Track*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_244_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibFDC2Track::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_244_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibFDC2Track::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_244_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibFDC2Track::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_244_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibFDC2Track::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_244_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibFDC2Track* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibFDC2Track(*(TArtCalibFDC2Track*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Track));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibFDC2Track G__TTArtCalibFDC2Track;
static int G__anasamurai_dict_244_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibFDC2Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibFDC2Track*) (soff+(sizeof(TArtCalibFDC2Track)*i)))->~G__TTArtCalibFDC2Track();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibFDC2Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibFDC2Track*) (soff))->~G__TTArtCalibFDC2Track();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_244_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibFDC2Track* dest = (TArtCalibFDC2Track*) G__getstructoffset();
   *dest = *(TArtCalibFDC2Track*) libp->para[0].ref;
   const TArtCalibFDC2Track& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibHODPla */
static int G__anasamurai_dict_245_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibHODPla* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibHODPla(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibHODPla(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibHODPla[n];
       } else {
         p = new((void*) gvp) TArtCalibHODPla[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibHODPla;
       } else {
         p = new((void*) gvp) TArtCalibHODPla;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHODPla));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_245_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibHODPla*) G__getstructoffset())->LoadData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_245_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibHODPla*) G__getstructoffset())->LoadData((TArtRawSegmentObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_245_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibHODPla*) G__getstructoffset())->GetHODPlaArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_245_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibHODPla*) G__getstructoffset())->GetNumHODPla());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_245_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibHODPla*) G__getstructoffset())->GetHODPla((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_245_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibHODPla*) G__getstructoffset())->GetHODPlaPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_245_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibHODPla*) G__getstructoffset())->FindHODPla((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_245_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibHODPla*) G__getstructoffset())->FindHODPla((TString*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_245_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibHODPla*) G__getstructoffset())->FindHODPla((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_245_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibHODPla::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_245_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibHODPla::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_245_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibHODPla::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_245_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibHODPla::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_245_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibHODPla*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_245_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibHODPla::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_245_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibHODPla::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_245_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibHODPla::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_245_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibHODPla::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_245_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibHODPla* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibHODPla(*(TArtCalibHODPla*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHODPla));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibHODPla G__TTArtCalibHODPla;
static int G__anasamurai_dict_245_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibHODPla*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibHODPla*) (soff+(sizeof(TArtCalibHODPla)*i)))->~G__TTArtCalibHODPla();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibHODPla*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibHODPla*) (soff))->~G__TTArtCalibHODPla();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_245_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibHODPla* dest = (TArtCalibHODPla*) G__getstructoffset();
   *dest = *(TArtCalibHODPla*) libp->para[0].ref;
   const TArtCalibHODPla& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibSAMURAI */
static int G__anasamurai_dict_246_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibSAMURAI* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibSAMURAI[n];
     } else {
       p = new((void*) gvp) TArtCalibSAMURAI[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibSAMURAI;
     } else {
       p = new((void*) gvp) TArtCalibSAMURAI;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibSAMURAI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibSAMURAI*) G__getstructoffset())->LoadData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibSAMURAI*) G__getstructoffset())->LoadData((TArtRawSegmentObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibSAMURAI*) G__getstructoffset())->LoadDCSTC((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibSAMURAI*) G__getstructoffset())->LoadDCTDCDistribution((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetBPCHitArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetBDC1HitArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetBDC2HitArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetFDC0HitArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetFDC1HitArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetFDC2HitArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetBDC1TrackArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetBDC2TrackArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetFDC0TrackArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetFDC1TrackArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetFDC2TrackArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetHODPlaArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetCalibCoin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetCalibBPCHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetCalibBDC1Hit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetCalibBDC2Hit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetCalibFDC0Hit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetCalibFDC1Hit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetCalibFDC2Hit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetCalibBDC1Track());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetCalibBDC2Track());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetCalibFDC0Track());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetCalibFDC1Track());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetCalibFDC2Track());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAI*) G__getstructoffset())->GetCalibHODPla());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibSAMURAI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibSAMURAI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibSAMURAI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibSAMURAI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibSAMURAI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibSAMURAI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibSAMURAI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibSAMURAI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_246_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibSAMURAI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_246_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibSAMURAI* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibSAMURAI(*(TArtCalibSAMURAI*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibSAMURAI));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibSAMURAI G__TTArtCalibSAMURAI;
static int G__anasamurai_dict_246_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibSAMURAI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibSAMURAI*) (soff+(sizeof(TArtCalibSAMURAI)*i)))->~G__TTArtCalibSAMURAI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibSAMURAI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibSAMURAI*) (soff))->~G__TTArtCalibSAMURAI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_246_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibSAMURAI* dest = (TArtCalibSAMURAI*) G__getstructoffset();
   *dest = *(TArtCalibSAMURAI*) libp->para[0].ref;
   const TArtCalibSAMURAI& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtTacquilaMap */
static int G__anasamurai_dict_484_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtTacquilaMap* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtTacquilaMap[n];
     } else {
       p = new((void*) gvp) TArtTacquilaMap[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtTacquilaMap;
     } else {
       p = new((void*) gvp) TArtTacquilaMap;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaMap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_484_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtTacquilaMap* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtTacquilaMap(
(const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, (const int) G__int(libp->para[2]), (const int) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) TArtTacquilaMap(
(const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, (const int) G__int(libp->para[2]), (const int) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaMap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_484_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTacquilaMap*) G__getstructoffset())->SetMap((const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, (const int) G__int(libp->para[2]), (const int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_484_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtTacquilaMap*) G__getstructoffset())->GetSam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_484_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtTacquilaMap*) G__getstructoffset())->GetGtb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_484_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtTacquilaMap*) G__getstructoffset())->GetModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_484_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtTacquilaMap*) G__getstructoffset())->GetChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_484_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TArtTacquilaMap*) G__getstructoffset())->operator<(*(TArtTacquilaMap*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_484_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TArtTacquilaMap*) G__getstructoffset())->operator==(*(TArtTacquilaMap*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_484_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((TArtTacquilaMap*) G__getstructoffset())->GetMapInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_484_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtTacquilaMap::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_484_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtTacquilaMap::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_484_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtTacquilaMap::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_484_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtTacquilaMap::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_484_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTacquilaMap*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_484_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtTacquilaMap::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_484_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtTacquilaMap::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_484_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtTacquilaMap::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_484_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtTacquilaMap::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_484_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtTacquilaMap* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtTacquilaMap(*(TArtTacquilaMap*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaMap));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtTacquilaMap G__TTArtTacquilaMap;
static int G__anasamurai_dict_484_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtTacquilaMap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtTacquilaMap*) (soff+(sizeof(TArtTacquilaMap)*i)))->~G__TTArtTacquilaMap();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtTacquilaMap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtTacquilaMap*) (soff))->~G__TTArtTacquilaMap();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_484_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtTacquilaMap* dest = (TArtTacquilaMap*) G__getstructoffset();
   *dest = *(TArtTacquilaMap*) libp->para[0].ref;
   const TArtTacquilaMap& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtHODPlaPara */
static int G__anasamurai_dict_485_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtHODPlaPara* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHODPlaPara[n];
     } else {
       p = new((void*) gvp) TArtHODPlaPara[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHODPlaPara;
     } else {
       p = new((void*) gvp) TArtHODPlaPara;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPlaPara));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtHODPlaPara* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 20
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtHODPlaPara(
(Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19]));
   } else {
     p = new((void*) gvp) TArtHODPlaPara(
(Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPlaPara));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHODPlaPara*) G__getstructoffset())->SetPalameters(
(Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHODPlaPara*) G__getstructoffset())->SetMap(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtHODPlaPara*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtHODPlaPara*) G__getstructoffset())->GetDetectorName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtHODPlaPara*) G__getstructoffset())->GetFpl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHODPlaPara*) G__getstructoffset())->GetTCalUp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHODPlaPara*) G__getstructoffset())->GetTCalDown());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHODPlaPara*) G__getstructoffset())->GetTOffUp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHODPlaPara*) G__getstructoffset())->GetTOffDown());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHODPlaPara*) G__getstructoffset())->GetTOff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHODPlaPara*) G__getstructoffset())->GetQCalUp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHODPlaPara*) G__getstructoffset())->GetQCalDown());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHODPlaPara*) G__getstructoffset())->GetQPedUp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHODPlaPara*) G__getstructoffset())->GetQPedDown());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHODPlaPara*) G__getstructoffset())->GetTUSlewA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHODPlaPara*) G__getstructoffset())->GetTUSlewB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHODPlaPara*) G__getstructoffset())->GetTDSlewA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHODPlaPara*) G__getstructoffset())->GetTDSlewB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHODPlaPara*) G__getstructoffset())->GetZCoef0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHODPlaPara*) G__getstructoffset())->GetZCoef1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHODPlaPara*) G__getstructoffset())->GetZCoef2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHODPlaPara*) G__getstructoffset())->GetZCoef3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtHODPlaPara*) G__getstructoffset())->GetTUMap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtHODPlaPara*) G__getstructoffset())->GetTDMap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtHODPlaPara*) G__getstructoffset())->GetQUMap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtHODPlaPara*) G__getstructoffset())->GetQDMap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtHODPlaPara::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtHODPlaPara::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtHODPlaPara::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtHODPlaPara::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHODPlaPara*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtHODPlaPara::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtHODPlaPara::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtHODPlaPara::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_485_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtHODPlaPara::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_485_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtHODPlaPara* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtHODPlaPara(*(TArtHODPlaPara*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPlaPara));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtHODPlaPara G__TTArtHODPlaPara;
static int G__anasamurai_dict_485_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtHODPlaPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtHODPlaPara*) (soff+(sizeof(TArtHODPlaPara)*i)))->~G__TTArtHODPlaPara();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtHODPlaPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtHODPlaPara*) (soff))->~G__TTArtHODPlaPara();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_485_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtHODPlaPara* dest = (TArtHODPlaPara*) G__getstructoffset();
   *dest = *(TArtHODPlaPara*) libp->para[0].ref;
   const TArtHODPlaPara& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtRPTOFPlaPara */
static int G__anasamurai_dict_486_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRPTOFPlaPara* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRPTOFPlaPara[n];
     } else {
       p = new((void*) gvp) TArtRPTOFPlaPara[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRPTOFPlaPara;
     } else {
       p = new((void*) gvp) TArtRPTOFPlaPara;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPlaPara));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRPTOFPlaPara* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtRPTOFPlaPara(
(Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TArtRPTOFPlaPara(
(Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPlaPara));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRPTOFPlaPara*) G__getstructoffset())->SetTDCV775Para((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRPTOFPlaPara*) G__getstructoffset())->SetTDCV1290Para((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRPTOFPlaPara*) G__getstructoffset())->SetQDCPara((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRPTOFPlaPara*) G__getstructoffset())->SetTDCV775Map((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRPTOFPlaPara*) G__getstructoffset())->SetTDCV1290Map((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRPTOFPlaPara*) G__getstructoffset())->SetQDCMap((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtRPTOFPlaPara*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRPTOFPlaPara*) G__getstructoffset())->GetDetectorName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtRPTOFPlaPara*) G__getstructoffset())->GetFpl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtRPTOFPlaPara*) G__getstructoffset())->GetTV775CalUpLeft());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtRPTOFPlaPara*) G__getstructoffset())->GetTV775CalDownRight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtRPTOFPlaPara*) G__getstructoffset())->GetTV775OffUpLeft());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtRPTOFPlaPara*) G__getstructoffset())->GetTV775OffDownRight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtRPTOFPlaPara*) G__getstructoffset())->GetTV1290CalUpLeft());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtRPTOFPlaPara*) G__getstructoffset())->GetTV1290CalDownRight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtRPTOFPlaPara*) G__getstructoffset())->GetTV1290OffUpLeft());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtRPTOFPlaPara*) G__getstructoffset())->GetTV1290OffDownRight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtRPTOFPlaPara*) G__getstructoffset())->GetQCalUpLeft());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtRPTOFPlaPara*) G__getstructoffset())->GetQCalDownRight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtRPTOFPlaPara*) G__getstructoffset())->GetQPedUpLeft());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtRPTOFPlaPara*) G__getstructoffset())->GetQPedDownRight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRPTOFPlaPara*) G__getstructoffset())->GetTULV775Map());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRPTOFPlaPara*) G__getstructoffset())->GetTDRV775Map());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRPTOFPlaPara*) G__getstructoffset())->GetTULV1290Map());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRPTOFPlaPara*) G__getstructoffset())->GetTDRV1290Map());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRPTOFPlaPara*) G__getstructoffset())->GetQULMap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRPTOFPlaPara*) G__getstructoffset())->GetQDRMap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtRPTOFPlaPara::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRPTOFPlaPara::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtRPTOFPlaPara::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtRPTOFPlaPara::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRPTOFPlaPara*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRPTOFPlaPara::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRPTOFPlaPara::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRPTOFPlaPara::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_486_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRPTOFPlaPara::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_486_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtRPTOFPlaPara* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtRPTOFPlaPara(*(TArtRPTOFPlaPara*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPlaPara));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtRPTOFPlaPara G__TTArtRPTOFPlaPara;
static int G__anasamurai_dict_486_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtRPTOFPlaPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtRPTOFPlaPara*) (soff+(sizeof(TArtRPTOFPlaPara)*i)))->~G__TTArtRPTOFPlaPara();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtRPTOFPlaPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtRPTOFPlaPara*) (soff))->~G__TTArtRPTOFPlaPara();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_486_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRPTOFPlaPara* dest = (TArtRPTOFPlaPara*) G__getstructoffset();
   *dest = *(TArtRPTOFPlaPara*) libp->para[0].ref;
   const TArtRPTOFPlaPara& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtTEDCsIPara */
static int G__anasamurai_dict_487_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtTEDCsIPara* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtTEDCsIPara[n];
     } else {
       p = new((void*) gvp) TArtTEDCsIPara[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtTEDCsIPara;
     } else {
       p = new((void*) gvp) TArtTEDCsIPara;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsIPara));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_487_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtTEDCsIPara* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TArtTEDCsIPara(
(Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) TArtTEDCsIPara(
(Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsIPara));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_487_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTEDCsIPara*) G__getstructoffset())->SetParameters(
(Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_487_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtTEDCsIPara*) G__getstructoffset())->GetRow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_487_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtTEDCsIPara*) G__getstructoffset())->GetColumn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_487_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtTEDCsIPara::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_487_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtTEDCsIPara::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_487_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtTEDCsIPara::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_487_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtTEDCsIPara::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_487_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTEDCsIPara*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_487_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtTEDCsIPara::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_487_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtTEDCsIPara::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_487_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtTEDCsIPara::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_487_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtTEDCsIPara::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_487_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtTEDCsIPara* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtTEDCsIPara(*(TArtTEDCsIPara*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsIPara));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtTEDCsIPara G__TTArtTEDCsIPara;
static int G__anasamurai_dict_487_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtTEDCsIPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtTEDCsIPara*) (soff+(sizeof(TArtTEDCsIPara)*i)))->~G__TTArtTEDCsIPara();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtTEDCsIPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtTEDCsIPara*) (soff))->~G__TTArtTEDCsIPara();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_487_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtTEDCsIPara* dest = (TArtTEDCsIPara*) G__getstructoffset();
   *dest = *(TArtTEDCsIPara*) libp->para[0].ref;
   const TArtTEDCsIPara& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtNEBULAPlaPara */
static int G__anasamurai_dict_488_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtNEBULAPlaPara* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 29:
     //m: 29
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Double_t) G__double(libp->para[22]), (Double_t) G__double(libp->para[23])
, (Double_t) G__double(libp->para[24]), (Double_t) G__double(libp->para[25])
, (Double_t) G__double(libp->para[26]), (Double_t) G__double(libp->para[27])
, (Int_t) G__int(libp->para[28]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Double_t) G__double(libp->para[22]), (Double_t) G__double(libp->para[23])
, (Double_t) G__double(libp->para[24]), (Double_t) G__double(libp->para[25])
, (Double_t) G__double(libp->para[26]), (Double_t) G__double(libp->para[27])
, (Int_t) G__int(libp->para[28]));
     }
     break;
   case 28:
     //m: 28
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Double_t) G__double(libp->para[22]), (Double_t) G__double(libp->para[23])
, (Double_t) G__double(libp->para[24]), (Double_t) G__double(libp->para[25])
, (Double_t) G__double(libp->para[26]), (Double_t) G__double(libp->para[27]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Double_t) G__double(libp->para[22]), (Double_t) G__double(libp->para[23])
, (Double_t) G__double(libp->para[24]), (Double_t) G__double(libp->para[25])
, (Double_t) G__double(libp->para[26]), (Double_t) G__double(libp->para[27]));
     }
     break;
   case 27:
     //m: 27
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Double_t) G__double(libp->para[22]), (Double_t) G__double(libp->para[23])
, (Double_t) G__double(libp->para[24]), (Double_t) G__double(libp->para[25])
, (Double_t) G__double(libp->para[26]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Double_t) G__double(libp->para[22]), (Double_t) G__double(libp->para[23])
, (Double_t) G__double(libp->para[24]), (Double_t) G__double(libp->para[25])
, (Double_t) G__double(libp->para[26]));
     }
     break;
   case 26:
     //m: 26
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Double_t) G__double(libp->para[22]), (Double_t) G__double(libp->para[23])
, (Double_t) G__double(libp->para[24]), (Double_t) G__double(libp->para[25]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Double_t) G__double(libp->para[22]), (Double_t) G__double(libp->para[23])
, (Double_t) G__double(libp->para[24]), (Double_t) G__double(libp->para[25]));
     }
     break;
   case 25:
     //m: 25
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Double_t) G__double(libp->para[22]), (Double_t) G__double(libp->para[23])
, (Double_t) G__double(libp->para[24]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Double_t) G__double(libp->para[22]), (Double_t) G__double(libp->para[23])
, (Double_t) G__double(libp->para[24]));
     }
     break;
   case 24:
     //m: 24
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Double_t) G__double(libp->para[22]), (Double_t) G__double(libp->para[23]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Double_t) G__double(libp->para[22]), (Double_t) G__double(libp->para[23]));
     }
     break;
   case 23:
     //m: 23
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Double_t) G__double(libp->para[22]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Double_t) G__double(libp->para[22]));
     }
     break;
   case 22:
     //m: 22
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21]));
     }
     break;
   case 21:
     //m: 21
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]));
     }
     break;
   case 20:
     //m: 20
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19]));
     }
     break;
   case 19:
     //m: 19
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]));
     }
     break;
   case 18:
     //m: 18
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17]));
     }
     break;
   case 17:
     //m: 17
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]));
     }
     break;
   case 16:
     //m: 16
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15]));
     }
     break;
   case 15:
     //m: 15
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]));
     }
     break;
   case 14:
     //m: 14
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13]));
     }
     break;
   case 13:
     //m: 13
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]));
     }
     break;
   case 12:
     //m: 12
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11]));
     }
     break;
   case 11:
     //m: 11
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]));
     }
     break;
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara((Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara((Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPlaPara((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TArtNEBULAPlaPara((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtNEBULAPlaPara[n];
       } else {
         p = new((void*) gvp) TArtNEBULAPlaPara[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtNEBULAPlaPara;
       } else {
         p = new((void*) gvp) TArtNEBULAPlaPara;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPlaPara));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetDetectorName(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetFpl((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetSubLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetDetPos((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetDetPos((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetTUCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetTUOff((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetTUSlw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetTUSlwLog((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetTUSlwLog((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetQUCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetQUPed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetTDCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetTDOff((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetTDSlw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetTDSlwLog((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetTDSlwLog((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetQDCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetQDPed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetDTCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetDTOff((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetTAveOff((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetQAveCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetQAveCalAtt((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetQAveCalAtt2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetTSlwPow((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetTAveOffSlw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetTAveOffDelta((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetTAveOffLight((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->SetIgnore((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetDetectorName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetFpl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetSubLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetDetPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetDetPos((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetTUCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetTUOff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetTUSlw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetTUSlwLog());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetTUSlwLog((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetQUCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetQUPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetTDCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetTDOff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetTDSlw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetTDSlwLog());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetTDSlwLog((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetQDCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetQDPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetDTCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetDTOff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetTAveOff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetQAveCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetQAveCalAtt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetQAveCalAtt2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetTSlwPow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetTAveOffSlw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetTAveOffDelta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetTAveOffLight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetIgnore());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TArtRIDFMap& obj = ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetMapU();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TArtRIDFMap& obj = ((const TArtNEBULAPlaPara*) G__getstructoffset())->GetMapD();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtNEBULAPlaPara::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNEBULAPlaPara::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtNEBULAPlaPara::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtNEBULAPlaPara::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPlaPara*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNEBULAPlaPara::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtNEBULAPlaPara::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNEBULAPlaPara::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_488_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtNEBULAPlaPara::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_488_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtNEBULAPlaPara* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtNEBULAPlaPara(*(TArtNEBULAPlaPara*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPlaPara));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtNEBULAPlaPara G__TTArtNEBULAPlaPara;
static int G__anasamurai_dict_488_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtNEBULAPlaPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtNEBULAPlaPara*) (soff+(sizeof(TArtNEBULAPlaPara)*i)))->~G__TTArtNEBULAPlaPara();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtNEBULAPlaPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtNEBULAPlaPara*) (soff))->~G__TTArtNEBULAPlaPara();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_488_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtNEBULAPlaPara* dest = (TArtNEBULAPlaPara*) G__getstructoffset();
   *dest = *(TArtNEBULAPlaPara*) libp->para[0].ref;
   const TArtNEBULAPlaPara& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtNeuLANDPlaPara */
static int G__anasamurai_dict_489_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtNeuLANDPlaPara* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNeuLANDPlaPara[n];
     } else {
       p = new((void*) gvp) TArtNeuLANDPlaPara[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNeuLANDPlaPara;
     } else {
       p = new((void*) gvp) TArtNeuLANDPlaPara;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPlaPara));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->SetID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->SetDetectorName(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->SetFpl((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->SetDirection(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->SetLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->SetBarID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetDetectorName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetFpl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetDirection();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetBarID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->SetQCal((int) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->SetQPed((int) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->SetTDC0ns((int) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->SetTDC25ns((int) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->SetTDC0ns_t17((int) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->SetTDC25ns_t17((int) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->SetTDCTCal((int) G__int(libp->para[0]), (int *const) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (size_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->SetTac2nsPara((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetQCal((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetQPed((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetTDC0ns((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetTDC25ns((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetTDC0ns_t17((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetTDC25ns_t17((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetTac2nsPara((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TArtNeuLANDPlaPara*) G__getstructoffset())->HasTDCTCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetTDCTCal((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->SetTDiffOffset((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->SetTSyncOffset((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->SetVScint((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->SetEDiffOffset((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->SetESyncOffset((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->SetAtt((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->SetTOFZero((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->SetTOFClight((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->SetZPos((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetTDiffOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetTSyncOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetVScint());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetEDiffOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetESyncOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetAtt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetTOFZero());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetTOFClight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetZPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TArtTacquilaMap& obj = ((const TArtNeuLANDPlaPara*) G__getstructoffset())->GetMap((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtNeuLANDPlaPara::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNeuLANDPlaPara::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtNeuLANDPlaPara::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtNeuLANDPlaPara::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPlaPara*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNeuLANDPlaPara::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtNeuLANDPlaPara::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNeuLANDPlaPara::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_489_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtNeuLANDPlaPara::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_489_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtNeuLANDPlaPara* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtNeuLANDPlaPara(*(TArtNeuLANDPlaPara*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPlaPara));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtNeuLANDPlaPara G__TTArtNeuLANDPlaPara;
static int G__anasamurai_dict_489_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtNeuLANDPlaPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtNeuLANDPlaPara*) (soff+(sizeof(TArtNeuLANDPlaPara)*i)))->~G__TTArtNeuLANDPlaPara();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtNeuLANDPlaPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtNeuLANDPlaPara*) (soff))->~G__TTArtNeuLANDPlaPara();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_489_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtNeuLANDPlaPara* dest = (TArtNeuLANDPlaPara*) G__getstructoffset();
   *dest = *(TArtNeuLANDPlaPara*) libp->para[0].ref;
   const TArtNeuLANDPlaPara& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtTacquilaPara */
static int G__anasamurai_dict_490_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtTacquilaPara* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtTacquilaPara[n];
     } else {
       p = new((void*) gvp) TArtTacquilaPara[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtTacquilaPara;
     } else {
       p = new((void*) gvp) TArtTacquilaPara;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaPara));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_490_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTacquilaPara*) G__getstructoffset())->SetID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_490_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTacquilaPara*) G__getstructoffset())->SetDetectorName(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_490_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtTacquilaPara*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_490_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const TArtTacquilaPara*) G__getstructoffset())->GetDetectorName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_490_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTacquilaPara*) G__getstructoffset())->SetTac2Ns((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_490_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtTacquilaPara*) G__getstructoffset())->GetTac2Ns());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_490_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TArtTacquilaMap& obj = ((const TArtTacquilaPara*) G__getstructoffset())->GetMap();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_490_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtTacquilaPara::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_490_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtTacquilaPara::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_490_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtTacquilaPara::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_490_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtTacquilaPara::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_490_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTacquilaPara*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_490_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtTacquilaPara::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_490_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtTacquilaPara::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_490_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtTacquilaPara::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_490_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtTacquilaPara::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_490_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtTacquilaPara* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtTacquilaPara(*(TArtTacquilaPara*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaPara));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtTacquilaPara G__TTArtTacquilaPara;
static int G__anasamurai_dict_490_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtTacquilaPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtTacquilaPara*) (soff+(sizeof(TArtTacquilaPara)*i)))->~G__TTArtTacquilaPara();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtTacquilaPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtTacquilaPara*) (soff))->~G__TTArtTacquilaPara();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_490_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtTacquilaPara* dest = (TArtTacquilaPara*) G__getstructoffset();
   *dest = *(TArtTacquilaPara*) libp->para[0].ref;
   const TArtTacquilaPara& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtHIMEPlaPara */
static int G__anasamurai_dict_500_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtHIMEPlaPara* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 25:
     //m: 25
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Double_t) G__double(libp->para[22]), (Double_t) G__double(libp->para[23])
, (Int_t) G__int(libp->para[24]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Double_t) G__double(libp->para[22]), (Double_t) G__double(libp->para[23])
, (Int_t) G__int(libp->para[24]));
     }
     break;
   case 24:
     //m: 24
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Double_t) G__double(libp->para[22]), (Double_t) G__double(libp->para[23]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Double_t) G__double(libp->para[22]), (Double_t) G__double(libp->para[23]));
     }
     break;
   case 23:
     //m: 23
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Double_t) G__double(libp->para[22]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Double_t) G__double(libp->para[22]));
     }
     break;
   case 22:
     //m: 22
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Double_t) G__double(libp->para[21]));
     }
     break;
   case 21:
     //m: 21
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19])
, (Double_t) G__double(libp->para[20]));
     }
     break;
   case 20:
     //m: 20
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t) G__double(libp->para[19]));
     }
     break;
   case 19:
     //m: 19
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]));
     }
     break;
   case 18:
     //m: 18
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17]));
     }
     break;
   case 17:
     //m: 17
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15])
, (Double_t) G__double(libp->para[16]));
     }
     break;
   case 16:
     //m: 16
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t*) G__int(libp->para[15]));
     }
     break;
   case 15:
     //m: 15
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]));
     }
     break;
   case 14:
     //m: 14
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13]));
     }
     break;
   case 13:
     //m: 13
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]));
     }
     break;
   case 12:
     //m: 12
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11]));
     }
     break;
   case 11:
     //m: 11
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]));
     }
     break;
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t*) G__int(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara((Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara((Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPlaPara((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TArtHIMEPlaPara((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtHIMEPlaPara[n];
       } else {
         p = new((void*) gvp) TArtHIMEPlaPara[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtHIMEPlaPara;
       } else {
         p = new((void*) gvp) TArtHIMEPlaPara;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPlaPara));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetDetectorName(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetFpl((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetSubLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetDetDirect((TArtHIMEPlaPara::DetDirectionDef) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetDetPos((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetDetPos((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTCal((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTOff((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTSlw((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTSlwLog((UInt_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTSlwLog((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetQCal((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetQPed((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTUCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTUOff((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTUSlw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTUSlwLog((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTUSlwLog((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetQUCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetQUPed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTDCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTDOff((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTDSlw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTDSlwLog((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTDSlwLog((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetQDCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetQDPed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTLCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTLOff((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTLSlw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTLSlwLog((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTLSlwLog((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetQLCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetQLPed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTRCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTROff((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTRSlw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTRSlwLog((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTRSlwLog((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetQRCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetQRPed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetDTCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetDTOff((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetTAveOff((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetQAveCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetQAveCalAtt((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetQAveCalAtt2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->SetIgnore((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetTCal((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetTOff((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetTSlw((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TArtHIMEPlaPara*) G__getstructoffset())->GetTSlwLog((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetTSlwLog((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetQCal((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetQPed((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetTUCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetTUOff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetTUSlw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TArtHIMEPlaPara*) G__getstructoffset())->GetTUSlwLog());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetTUSlwLog((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetQUCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetQUPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetTDCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetTDOff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetTDSlw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TArtHIMEPlaPara*) G__getstructoffset())->GetTDSlwLog());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetTDSlwLog((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetQDCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetQDPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetTLCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetTLOff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetTLSlw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TArtHIMEPlaPara*) G__getstructoffset())->GetTLSlwLog());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetTLSlwLog((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetQLCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetQLPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetTRCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetTROff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetTRSlw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((TArtHIMEPlaPara*) G__getstructoffset())->GetTRSlwLog());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetTRSlwLog((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetQRCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetQRPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const TArtHIMEPlaPara*) G__getstructoffset())->GetDetectorName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetFpl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetSubLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetDetDirect());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TArtHIMEPlaPara*) G__getstructoffset())->DirectionIs((TArtHIMEPlaPara::DetDirectionDef) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetDetPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetDetPos((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetDTCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetDTOff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetTAveOff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetQAveCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetQAveCalAtt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetQAveCalAtt2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtHIMEPlaPara*) G__getstructoffset())->GetIgnore());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TArtRIDFMap& obj = ((const TArtHIMEPlaPara*) G__getstructoffset())->GetMapU();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TArtRIDFMap& obj = ((const TArtHIMEPlaPara*) G__getstructoffset())->GetMapD();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtHIMEPlaPara::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtHIMEPlaPara::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtHIMEPlaPara::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtHIMEPlaPara::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPlaPara*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtHIMEPlaPara::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtHIMEPlaPara::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtHIMEPlaPara::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_500_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtHIMEPlaPara::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_500_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtHIMEPlaPara* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtHIMEPlaPara(*(TArtHIMEPlaPara*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPlaPara));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtHIMEPlaPara G__TTArtHIMEPlaPara;
static int G__anasamurai_dict_500_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtHIMEPlaPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtHIMEPlaPara*) (soff+(sizeof(TArtHIMEPlaPara)*i)))->~G__TTArtHIMEPlaPara();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtHIMEPlaPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtHIMEPlaPara*) (soff))->~G__TTArtHIMEPlaPara();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_500_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtHIMEPlaPara* dest = (TArtHIMEPlaPara*) G__getstructoffset();
   *dest = *(TArtHIMEPlaPara*) libp->para[0].ref;
   const TArtHIMEPlaPara& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtNEBULAHPCPara */
static int G__anasamurai_dict_508_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtNEBULAHPCPara* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAHPCPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) TArtNEBULAHPCPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAHPCPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) TArtNEBULAHPCPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAHPCPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TArtNEBULAHPCPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAHPCPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TArtNEBULAHPCPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAHPCPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TArtNEBULAHPCPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAHPCPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TArtNEBULAHPCPara(
(Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAHPCPara((Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) TArtNEBULAHPCPara((Int_t) G__int(libp->para[0]), *(TString*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAHPCPara((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TArtNEBULAHPCPara((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtNEBULAHPCPara[n];
       } else {
         p = new((void*) gvp) TArtNEBULAHPCPara[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtNEBULAHPCPara;
       } else {
         p = new((void*) gvp) TArtNEBULAHPCPara;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPCPara));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAHPCPara*) G__getstructoffset())->SetID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAHPCPara*) G__getstructoffset())->SetDetectorName(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAHPCPara*) G__getstructoffset())->SetFpl((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAHPCPara*) G__getstructoffset())->SetLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAHPCPara*) G__getstructoffset())->SetSubLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAHPCPara*) G__getstructoffset())->SetDetPos((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAHPCPara*) G__getstructoffset())->SetDetPos((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAHPCPara*) G__getstructoffset())->SetTCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAHPCPara*) G__getstructoffset())->SetTOff((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNEBULAHPCPara*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const TArtNEBULAHPCPara*) G__getstructoffset())->GetDetectorName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNEBULAHPCPara*) G__getstructoffset())->GetFpl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNEBULAHPCPara*) G__getstructoffset())->GetLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNEBULAHPCPara*) G__getstructoffset())->GetSubLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TArtNEBULAHPCPara*) G__getstructoffset())->GetDetPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAHPCPara*) G__getstructoffset())->GetDetPos((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAHPCPara*) G__getstructoffset())->GetTCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAHPCPara*) G__getstructoffset())->GetTOff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TArtRIDFMap& obj = ((const TArtNEBULAHPCPara*) G__getstructoffset())->GetMap();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtNEBULAHPCPara::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNEBULAHPCPara::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtNEBULAHPCPara::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtNEBULAHPCPara::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAHPCPara*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNEBULAHPCPara::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtNEBULAHPCPara::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNEBULAHPCPara::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_508_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtNEBULAHPCPara::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_508_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtNEBULAHPCPara* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtNEBULAHPCPara(*(TArtNEBULAHPCPara*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPCPara));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtNEBULAHPCPara G__TTArtNEBULAHPCPara;
static int G__anasamurai_dict_508_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtNEBULAHPCPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtNEBULAHPCPara*) (soff+(sizeof(TArtNEBULAHPCPara)*i)))->~G__TTArtNEBULAHPCPara();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtNEBULAHPCPara*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtNEBULAHPCPara*) (soff))->~G__TTArtNEBULAHPCPara();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_508_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtNEBULAHPCPara* dest = (TArtNEBULAHPCPara*) G__getstructoffset();
   *dest = *(TArtNEBULAHPCPara*) libp->para[0].ref;
   const TArtNEBULAHPCPara& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtNEBULAPla */
static int G__anasamurai_dict_599_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtNEBULAPla* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPla[n];
     } else {
       p = new((void*) gvp) TArtNEBULAPla[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAPla;
     } else {
       p = new((void*) gvp) TArtNEBULAPla;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPla));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetSubLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetDetPos((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetDetPos((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetHit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetQURaw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetQDRaw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetQUPed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetQDPed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetQUCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetQDCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetQAvePed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetQAveCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetLogQPed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetLogQCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetIvSqrtQUPed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetIvSqrtQDPed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetIvSqrtQAvePed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetTURaw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetTDRaw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetTUCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetTDCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetTUSlw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetTDSlw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetDTRaw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetDTCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetDTSlw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetTAveRaw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetTAveCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetTAveSlw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetTUCalT0((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetTDCalT0((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetTUSlwT0((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetTDSlwT0((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetTAveCalT0((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetTAveSlwT0((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetTTOFGamma((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetTTOFNeutron((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetPosCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetPosSlw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetPos((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetPos((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetFlightLength((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->SetFlightAngle((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNEBULAPla*) G__getstructoffset())->GetLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNEBULAPla*) G__getstructoffset())->GetSubLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TArtNEBULAPla*) G__getstructoffset())->GetDetPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetDetPos((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNEBULAPla*) G__getstructoffset())->GetHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNEBULAPla*) G__getstructoffset())->GetQURaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNEBULAPla*) G__getstructoffset())->GetQDRaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetQUPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetQDPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetQUCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetQDCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetQAvePed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetQAveCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetLogQPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetLogQCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetIvSqrtQUPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetIvSqrtQDPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetIvSqrtQAvePed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNEBULAPla*) G__getstructoffset())->GetTURaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNEBULAPla*) G__getstructoffset())->GetTDRaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetTUCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetTDCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetTUSlw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetTDSlw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetDTRaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetDTCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetDTSlw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetTAveRaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetTAveCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetTAveSlw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetTUCalT0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetTDCalT0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetTUSlwT0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetTDSlwT0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetTAveCalT0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetTAveSlwT0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetTTOFGamma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetTTOFNeutron());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetPosCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetPosSlw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TArtNEBULAPla*) G__getstructoffset())->GetPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetPos((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetFlightLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAPla*) G__getstructoffset())->GetFlightAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtNEBULAPla::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNEBULAPla::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtNEBULAPla::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtNEBULAPla::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAPla*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNEBULAPla::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtNEBULAPla::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNEBULAPla::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_599_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtNEBULAPla::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_599_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtNEBULAPla* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtNEBULAPla(*(TArtNEBULAPla*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPla));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtNEBULAPla G__TTArtNEBULAPla;
static int G__anasamurai_dict_599_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtNEBULAPla*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtNEBULAPla*) (soff+(sizeof(TArtNEBULAPla)*i)))->~G__TTArtNEBULAPla();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtNEBULAPla*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtNEBULAPla*) (soff))->~G__TTArtNEBULAPla();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_599_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtNEBULAPla* dest = (TArtNEBULAPla*) G__getstructoffset();
   *dest = *(TArtNEBULAPla*) libp->para[0].ref;
   const TArtNEBULAPla& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtNEBULAHPC */
static int G__anasamurai_dict_600_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtNEBULAHPC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAHPC[n];
     } else {
       p = new((void*) gvp) TArtNEBULAHPC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNEBULAHPC;
     } else {
       p = new((void*) gvp) TArtNEBULAHPC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_600_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAHPC*) G__getstructoffset())->SetLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_600_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAHPC*) G__getstructoffset())->SetSubLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_600_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAHPC*) G__getstructoffset())->SetDetPos((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_600_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAHPC*) G__getstructoffset())->SetDetPos((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_600_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAHPC*) G__getstructoffset())->SetTRaw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_600_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAHPC*) G__getstructoffset())->SetTCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_600_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNEBULAHPC*) G__getstructoffset())->GetLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_600_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNEBULAHPC*) G__getstructoffset())->GetSubLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_600_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TArtNEBULAHPC*) G__getstructoffset())->GetDetPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_600_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAHPC*) G__getstructoffset())->GetDetPos((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_600_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNEBULAHPC*) G__getstructoffset())->GetTRaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_600_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNEBULAHPC*) G__getstructoffset())->GetTCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_600_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtNEBULAHPC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_600_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNEBULAHPC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_600_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtNEBULAHPC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_600_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtNEBULAHPC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_600_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAHPC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_600_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNEBULAHPC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_600_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtNEBULAHPC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_600_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNEBULAHPC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_600_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtNEBULAHPC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_600_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtNEBULAHPC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtNEBULAHPC(*(TArtNEBULAHPC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtNEBULAHPC G__TTArtNEBULAHPC;
static int G__anasamurai_dict_600_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtNEBULAHPC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtNEBULAHPC*) (soff+(sizeof(TArtNEBULAHPC)*i)))->~G__TTArtNEBULAHPC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtNEBULAHPC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtNEBULAHPC*) (soff))->~G__TTArtNEBULAHPC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_600_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtNEBULAHPC* dest = (TArtNEBULAHPC*) G__getstructoffset();
   *dest = *(TArtNEBULAHPC*) libp->para[0].ref;
   const TArtNEBULAHPC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibNEBULAHPC */
static int G__anasamurai_dict_601_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibNEBULAHPC* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibNEBULAHPC(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibNEBULAHPC(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibNEBULAHPC[n];
       } else {
         p = new((void*) gvp) TArtCalibNEBULAHPC[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibNEBULAHPC;
       } else {
         p = new((void*) gvp) TArtCalibNEBULAHPC;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULAHPC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_601_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibNEBULAHPC*) G__getstructoffset())->LoadRawData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_601_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtCalibNEBULAHPC*) G__getstructoffset())->GetNumNEBULAHPC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_601_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNEBULAHPC*) G__getstructoffset())->GetNEBULAHPC((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_601_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNEBULAHPC*) G__getstructoffset())->FindNEBULAHPC((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_601_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNEBULAHPC*) G__getstructoffset())->GetNEBULAHPCArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_601_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtCalibNEBULAHPC*) G__getstructoffset())->GetNumNEBULAHPCPara());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_601_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNEBULAHPC*) G__getstructoffset())->GetNEBULAHPCPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_601_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNEBULAHPC*) G__getstructoffset())->FindNEBULAHPCPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_601_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNEBULAHPC*) G__getstructoffset())->GetNEBULAHPCParaArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_601_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibNEBULAHPC*) G__getstructoffset())->SetMultiplicity((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_601_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibNEBULAHPC*) G__getstructoffset())->GetMultiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_601_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibNEBULAHPC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_601_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibNEBULAHPC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_601_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibNEBULAHPC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_601_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibNEBULAHPC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_601_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibNEBULAHPC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_601_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibNEBULAHPC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_601_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibNEBULAHPC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_601_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibNEBULAHPC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_601_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibNEBULAHPC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_601_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibNEBULAHPC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibNEBULAHPC(*(TArtCalibNEBULAHPC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULAHPC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibNEBULAHPC G__TTArtCalibNEBULAHPC;
static int G__anasamurai_dict_601_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibNEBULAHPC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibNEBULAHPC*) (soff+(sizeof(TArtCalibNEBULAHPC)*i)))->~G__TTArtCalibNEBULAHPC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibNEBULAHPC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibNEBULAHPC*) (soff))->~G__TTArtCalibNEBULAHPC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtHIMEPla */
static int G__anasamurai_dict_603_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtHIMEPla* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPla[n];
     } else {
       p = new((void*) gvp) TArtHIMEPla[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHIMEPla;
     } else {
       p = new((void*) gvp) TArtHIMEPla;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPla));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetSubLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetDetDirect((TArtHIMEPla::DetDirectionDef) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetDetPos((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetDetPos((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetHit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetQRaw((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetQPed((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetQCal((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetIvSqrtQPed((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetQURaw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetQDRaw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetQUPed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetQDPed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetQUCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetQDCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetIvSqrtQUPed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetIvSqrtQDPed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetQLRaw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetQRRaw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetQLPed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetQRPed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetQLCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetQRCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetIvSqrtQLPed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetIvSqrtQRPed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetQAvePed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetQAveCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetLogQPed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetLogQCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetIvSqrtQAvePed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTRaw((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTCal((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTSlw((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTCalT0((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTSlwT0((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTURaw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTDRaw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTUCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTDCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTUSlw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTDSlw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTUCalT0((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTDCalT0((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTUSlwT0((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTDSlwT0((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTLRaw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTRRaw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTLCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTRCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTLSlw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTRSlw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTLCalT0((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTRCalT0((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTLSlwT0((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTRSlwT0((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetDTRaw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetDTCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetDTSlw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTAveRaw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTAveCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTAveSlw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTAveCalT0((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTAveSlwT0((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTTOFGamma((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetTTOFNeutron((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetPosCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetPosSlw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetPos((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetPos((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetFlightLength((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->SetFlightAngle((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtHIMEPla*) G__getstructoffset())->GetLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtHIMEPla*) G__getstructoffset())->GetSubLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtHIMEPla*) G__getstructoffset())->GetDetDirect());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TArtHIMEPla*) G__getstructoffset())->DirectionIs((TArtHIMEPla::DetDirectionDef) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TArtHIMEPla*) G__getstructoffset())->GetDetPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetDetPos((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtHIMEPla*) G__getstructoffset())->GetHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtHIMEPla*) G__getstructoffset())->GetQRaw((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetQPed((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetQCal((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetIvSqrtQPed((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtHIMEPla*) G__getstructoffset())->GetQURaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtHIMEPla*) G__getstructoffset())->GetQDRaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetQUPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetQDPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetQUCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetQDCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetIvSqrtQUPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetIvSqrtQDPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtHIMEPla*) G__getstructoffset())->GetQLRaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtHIMEPla*) G__getstructoffset())->GetQRRaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetQLPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetQRPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetQLCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetQRCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetIvSqrtQLPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetIvSqrtQRPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetQAvePed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetQAveCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetLogQPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetLogQCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetIvSqrtQAvePed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtHIMEPla*) G__getstructoffset())->GetTRaw((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTCal((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTSlw((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTCalT0((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTSlwT0((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtHIMEPla*) G__getstructoffset())->GetTURaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtHIMEPla*) G__getstructoffset())->GetTDRaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTUCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTDCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTUSlw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTDSlw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTUCalT0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTDCalT0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTUSlwT0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTDSlwT0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtHIMEPla*) G__getstructoffset())->GetTLRaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtHIMEPla*) G__getstructoffset())->GetTRRaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTLCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTRCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTLSlw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTRSlw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTLCalT0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTRCalT0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTLSlwT0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTRSlwT0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetDTRaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetDTCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetDTSlw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTAveRaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTAveCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_136(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTAveSlw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_137(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTAveCalT0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTAveSlwT0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_139(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTTOFGamma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_140(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetTTOFNeutron());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_141(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetPosCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_142(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetPosSlw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_143(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TArtHIMEPla*) G__getstructoffset())->GetPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_144(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetPos((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_145(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetFlightLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_146(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtHIMEPla*) G__getstructoffset())->GetFlightAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_147(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtHIMEPla::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_148(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtHIMEPla::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_149(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtHIMEPla::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_150(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtHIMEPla::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_154(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEPla*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_155(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtHIMEPla::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_156(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtHIMEPla::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_157(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtHIMEPla::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_603_0_158(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtHIMEPla::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_603_0_159(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtHIMEPla* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtHIMEPla(*(TArtHIMEPla*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPla));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtHIMEPla G__TTArtHIMEPla;
static int G__anasamurai_dict_603_0_160(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtHIMEPla*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtHIMEPla*) (soff+(sizeof(TArtHIMEPla)*i)))->~G__TTArtHIMEPla();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtHIMEPla*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtHIMEPla*) (soff))->~G__TTArtHIMEPla();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_603_0_161(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtHIMEPla* dest = (TArtHIMEPla*) G__getstructoffset();
   *dest = *(TArtHIMEPla*) libp->para[0].ref;
   const TArtHIMEPla& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibNEBULA */
static int G__anasamurai_dict_605_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibNEBULA* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibNEBULA[n];
     } else {
       p = new((void*) gvp) TArtCalibNEBULA[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibNEBULA;
     } else {
       p = new((void*) gvp) TArtCalibNEBULA;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULA));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibNEBULA*) G__getstructoffset())->LoadData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibNEBULA*) G__getstructoffset())->LoadData((TArtRawSegmentObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtCalibNEBULA*) G__getstructoffset())->GetNumNEBULAPla());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNEBULA*) G__getstructoffset())->GetNEBULAPla((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNEBULA*) G__getstructoffset())->FindNEBULAPla((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNEBULA*) G__getstructoffset())->GetNEBULAPlaArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtCalibNEBULA*) G__getstructoffset())->GetNumNEBULAPlaPara());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNEBULA*) G__getstructoffset())->GetNEBULAPlaPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNEBULA*) G__getstructoffset())->FindNEBULAPlaPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNEBULA*) G__getstructoffset())->GetNEBULAPlaParaArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibNEBULA*) G__getstructoffset())->CalMultiplicity();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibNEBULA*) G__getstructoffset())->GetMultiplicity_N());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibNEBULA*) G__getstructoffset())->GetMultiplicity_N1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibNEBULA*) G__getstructoffset())->GetMultiplicity_N2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibNEBULA*) G__getstructoffset())->GetMultiplicity_V1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibNEBULA*) G__getstructoffset())->GetMultiplicity_V2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibNEBULA*) G__getstructoffset())->GetMultiplicity_N11());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibNEBULA*) G__getstructoffset())->GetMultiplicity_N12());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibNEBULA*) G__getstructoffset())->GetMultiplicity_N21());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibNEBULA*) G__getstructoffset())->GetMultiplicity_N22());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibNEBULA*) G__getstructoffset())->GetMultiplicities());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibNEBULA::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibNEBULA::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibNEBULA::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibNEBULA::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibNEBULA*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibNEBULA::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibNEBULA::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibNEBULA::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_605_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibNEBULA::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_605_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibNEBULA* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibNEBULA(*(TArtCalibNEBULA*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULA));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibNEBULA G__TTArtCalibNEBULA;
static int G__anasamurai_dict_605_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibNEBULA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibNEBULA*) (soff+(sizeof(TArtCalibNEBULA)*i)))->~G__TTArtCalibNEBULA();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibNEBULA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibNEBULA*) (soff))->~G__TTArtCalibNEBULA();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtRecoNeutron */
static int G__anasamurai_dict_606_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRecoNeutron* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRecoNeutron(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtRecoNeutron(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtRecoNeutron[n];
       } else {
         p = new((void*) gvp) TArtRecoNeutron[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtRecoNeutron;
       } else {
         p = new((void*) gvp) TArtRecoNeutron;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoNeutron));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_606_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRecoNeutron*) G__getstructoffset())->GetNeutronArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_606_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtRecoNeutron::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_606_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRecoNeutron::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_606_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtRecoNeutron::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_606_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtRecoNeutron::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_606_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRecoNeutron*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_606_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRecoNeutron::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_606_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRecoNeutron::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_606_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRecoNeutron::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_606_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRecoNeutron::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_606_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtRecoNeutron* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtRecoNeutron(*(TArtRecoNeutron*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoNeutron));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtRecoNeutron G__TTArtRecoNeutron;
static int G__anasamurai_dict_606_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtRecoNeutron*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtRecoNeutron*) (soff+(sizeof(TArtRecoNeutron)*i)))->~G__TTArtRecoNeutron();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtRecoNeutron*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtRecoNeutron*) (soff))->~G__TTArtRecoNeutron();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_606_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRecoNeutron* dest = (TArtRecoNeutron*) G__getstructoffset();
   *dest = *(TArtRecoNeutron*) libp->para[0].ref;
   const TArtRecoNeutron& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtNEBULAFilter */
static int G__anasamurai_dict_607_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtNEBULAFilter::IHitMin((TArtCalibNEBULA*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_607_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtNEBULAFilter::Threshold((TArtCalibNEBULA*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_607_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtNEBULAFilter::Threshold((TArtCalibNEBULA*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_607_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtNEBULAFilter::TOF((TArtCalibNEBULA*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_607_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtNEBULAFilter::Veto((TArtCalibNEBULA*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_607_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtNEBULAFilter::HitMinPos((TArtCalibNEBULA*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_607_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtNEBULAFilter::HitMinTime((TArtCalibNEBULA*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_607_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtNEBULAFilter::HitMinPos2((TArtCalibNEBULA*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_607_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtNEBULAFilter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_607_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNEBULAFilter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_607_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtNEBULAFilter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_607_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtNEBULAFilter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_607_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtNEBULAFilter*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_607_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAFilter*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_607_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAFilter*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_607_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNEBULAFilter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_607_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNEBULAFilter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_607_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtNEBULAFilter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_607_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNEBULAFilter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_607_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtNEBULAFilter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_607_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtNEBULAFilter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtNEBULAFilter(*(TArtNEBULAFilter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAFilter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_607_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtNEBULAFilter* dest = (TArtNEBULAFilter*) G__getstructoffset();
   *dest = *(TArtNEBULAFilter*) libp->para[0].ref;
   const TArtNEBULAFilter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibHIME */
static int G__anasamurai_dict_608_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibHIME* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibHIME[n];
     } else {
       p = new((void*) gvp) TArtCalibHIME[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibHIME;
     } else {
       p = new((void*) gvp) TArtCalibHIME;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHIME));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibHIME*) G__getstructoffset())->LoadData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibHIME*) G__getstructoffset())->LoadData((TArtRawSegmentObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtCalibHIME*) G__getstructoffset())->GetNumHIMEPla());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibHIME*) G__getstructoffset())->GetHIMEPla((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibHIME*) G__getstructoffset())->FindHIMEPla((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibHIME*) G__getstructoffset())->GetHIMEPlaArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtCalibHIME*) G__getstructoffset())->GetNumHIMEPlaPara());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibHIME*) G__getstructoffset())->GetHIMEPlaPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibHIME*) G__getstructoffset())->FindHIMEPlaPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibHIME*) G__getstructoffset())->GetHIMEPlaParaArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibHIME*) G__getstructoffset())->CalMultiplicity();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibHIME*) G__getstructoffset())->GetMultiplicity_N());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibHIME*) G__getstructoffset())->GetMultiplicity_N1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibHIME*) G__getstructoffset())->GetMultiplicity_N2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibHIME*) G__getstructoffset())->GetMultiplicity_N3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibHIME*) G__getstructoffset())->GetMultiplicity_N4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibHIME*) G__getstructoffset())->GetMultiplicity_N5());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibHIME*) G__getstructoffset())->GetMultiplicity_V());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibHIME*) G__getstructoffset())->GetMultiplicities());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibHIME::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibHIME::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibHIME::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibHIME::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibHIME*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibHIME::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibHIME::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibHIME::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_608_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibHIME::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_608_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibHIME* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibHIME(*(TArtCalibHIME*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHIME));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibHIME G__TTArtCalibHIME;
static int G__anasamurai_dict_608_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibHIME*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibHIME*) (soff+(sizeof(TArtCalibHIME)*i)))->~G__TTArtCalibHIME();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibHIME*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibHIME*) (soff))->~G__TTArtCalibHIME();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtHIMEFilter */
static int G__anasamurai_dict_609_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtHIMEFilter::IHitMin((TArtCalibHIME*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_609_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtHIMEFilter::Threshold((TArtCalibHIME*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_609_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtHIMEFilter::Threshold((TArtCalibHIME*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_609_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtHIMEFilter::TOF((TArtCalibHIME*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_609_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtHIMEFilter::Veto((TArtCalibHIME*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_609_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtHIMEFilter::HitMinPos((TArtCalibHIME*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_609_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtHIMEFilter::HitMinTime((TArtCalibHIME*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_609_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtHIMEFilter::HitMinPos2((TArtCalibHIME*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_609_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtHIMEFilter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_609_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtHIMEFilter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_609_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtHIMEFilter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_609_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtHIMEFilter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_609_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtHIMEFilter*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_609_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEFilter*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_609_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEFilter*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_609_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHIMEFilter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_609_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtHIMEFilter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_609_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtHIMEFilter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_609_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtHIMEFilter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_609_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtHIMEFilter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_609_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtHIMEFilter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtHIMEFilter(*(TArtHIMEFilter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEFilter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_609_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtHIMEFilter* dest = (TArtHIMEFilter*) G__getstructoffset();
   *dest = *(TArtHIMEFilter*) libp->para[0].ref;
   const TArtHIMEFilter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtDCTrack */
static int G__anasamurai_dict_718_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDCTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtDCTrack[n];
     } else {
       p = new((void*) gvp) TArtDCTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtDCTrack;
     } else {
       p = new((void*) gvp) TArtDCTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCTrack*) G__getstructoffset())->SetChi2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCTrack*) G__getstructoffset())->SetNDF((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCTrack*) G__getstructoffset())->SetNumHitLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TArtDCTrack*) G__getstructoffset())->SetPosition((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TArtDCTrack*) G__getstructoffset())->SetPosition((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TArtDCTrack*) G__getstructoffset())->SetAngle((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TArtDCTrack*) G__getstructoffset())->SetAngle((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCTrack*) G__getstructoffset())->AddHitID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCTrack*) G__getstructoffset())->AddDriftLength((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCTrack*) G__getstructoffset())->AddHitXPosition((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCTrack*) G__getstructoffset())->AddHitZPosition((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCTrack*) G__getstructoffset())->AddHitPlaneID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCTrack*) G__getstructoffset())->AddHitDCangle((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCTrack*) G__getstructoffset())->AddSign((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtDCTrack*) G__getstructoffset())->GetChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDCTrack*) G__getstructoffset())->GetNDF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDCTrack*) G__getstructoffset())->GetNumHitLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((TArtDCTrack*) G__getstructoffset())->GetPosition((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((TArtDCTrack*) G__getstructoffset())->GetPosition());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((TArtDCTrack*) G__getstructoffset())->GetAngle((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((TArtDCTrack*) G__getstructoffset())->GetAngle());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDCTrack*) G__getstructoffset())->GetHitPlaneID((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDCTrack*) G__getstructoffset())->GetHitID((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtDCTrack*) G__getstructoffset())->GetSign((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtDCTrack*) G__getstructoffset())->GetDriftLength((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtDCTrack*) G__getstructoffset())->GetHitXPosition((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtDCTrack*) G__getstructoffset())->GetHitZPosition((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtDCTrack*) G__getstructoffset())->CalcLocalHitPos((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtDCTrack*) G__getstructoffset())->CalcLocalTrackAngle((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCTrack*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TArtDCTrack*) G__getstructoffset())->IsEqual((TObject*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtDCTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtDCTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtDCTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtDCTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtDCTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtDCTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtDCTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtDCTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_718_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtDCTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_718_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtDCTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtDCTrack(*(TArtDCTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtDCTrack G__TTArtDCTrack;
static int G__anasamurai_dict_718_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtDCTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtDCTrack*) (soff+(sizeof(TArtDCTrack)*i)))->~G__TTArtDCTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtDCTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtDCTrack*) (soff))->~G__TTArtDCTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_718_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtDCTrack* dest = (TArtDCTrack*) G__getstructoffset();
   *dest = *(TArtDCTrack*) libp->para[0].ref;
   const TArtDCTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibDCTrack */
static int G__anasamurai_dict_719_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibDCTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibDCTrack(
*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1]))
, (const char*) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TArtCalibDCTrack(
*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1]))
, (const char*) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibDCTrack(
*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1]))
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TArtCalibDCTrack(
*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1]))
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_719_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibDCTrack*) G__getstructoffset())->SetDriftVelocity((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_719_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibDCTrack*) G__getstructoffset())->SetTDCStart((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_719_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibDCTrack*) G__getstructoffset())->SetTDCWindow((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_719_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibDCTrack*) G__getstructoffset())->SetSTC((TF1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_719_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibDCTrack*) G__getstructoffset())->SetTDCDistribution((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_719_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtCalibDCTrack*) G__getstructoffset())->STCCorrection((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_719_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibDCTrack*) G__getstructoffset())->GetDCTrackArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_719_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibDCTrack*) G__getstructoffset())->GetNumDCTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_719_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibDCTrack*) G__getstructoffset())->GetNumDCHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_719_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibDCTrack*) G__getstructoffset())->GetDCTrack((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_719_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibDCTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_719_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibDCTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_719_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibDCTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_719_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibDCTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_719_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibDCTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_719_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibDCTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_719_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibDCTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_719_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibDCTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_719_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibDCTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_719_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibDCTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibDCTrack(*(TArtCalibDCTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibDCTrack G__TTArtCalibDCTrack;
static int G__anasamurai_dict_719_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibDCTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibDCTrack*) (soff+(sizeof(TArtCalibDCTrack)*i)))->~G__TTArtCalibDCTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibDCTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibDCTrack*) (soff))->~G__TTArtCalibDCTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_719_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibDCTrack* dest = (TArtCalibDCTrack*) G__getstructoffset();
   *dest = *(TArtCalibDCTrack*) libp->para[0].ref;
   const TArtCalibDCTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibRPDCTrack */
static int G__anasamurai_dict_729_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibRPDCTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibRPDCTrack(*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) TArtCalibRPDCTrack(*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibRPDCTrack(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibRPDCTrack(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibRPDCTrack[n];
       } else {
         p = new((void*) gvp) TArtCalibRPDCTrack[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibRPDCTrack;
       } else {
         p = new((void*) gvp) TArtCalibRPDCTrack;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPDCTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_729_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibRPDCTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_729_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibRPDCTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_729_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibRPDCTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_729_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibRPDCTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_729_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibRPDCTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_729_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibRPDCTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_729_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibRPDCTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_729_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibRPDCTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_729_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibRPDCTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_729_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibRPDCTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibRPDCTrack(*(TArtCalibRPDCTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPDCTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibRPDCTrack G__TTArtCalibRPDCTrack;
static int G__anasamurai_dict_729_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibRPDCTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibRPDCTrack*) (soff+(sizeof(TArtCalibRPDCTrack)*i)))->~G__TTArtCalibRPDCTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibRPDCTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibRPDCTrack*) (soff))->~G__TTArtCalibRPDCTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_729_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibRPDCTrack* dest = (TArtCalibRPDCTrack*) G__getstructoffset();
   *dest = *(TArtCalibRPDCTrack*) libp->para[0].ref;
   const TArtCalibRPDCTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtHODPla */
static int G__anasamurai_dict_730_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtHODPla* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHODPla[n];
     } else {
       p = new((void*) gvp) TArtHODPla[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtHODPla;
     } else {
       p = new((void*) gvp) TArtHODPla;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPla));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHODPla*) G__getstructoffset())->SetTURaw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHODPla*) G__getstructoffset())->SetTDRaw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHODPla*) G__getstructoffset())->SetQURaw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHODPla*) G__getstructoffset())->SetQDRaw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHODPla*) G__getstructoffset())->SetQUPed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHODPla*) G__getstructoffset())->SetQDPed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHODPla*) G__getstructoffset())->SetQUCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHODPla*) G__getstructoffset())->SetQDCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHODPla*) G__getstructoffset())->SetQAveRaw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHODPla*) G__getstructoffset())->SetQAvePed((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHODPla*) G__getstructoffset())->SetQAveCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtHODPla*) G__getstructoffset())->GetTURaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtHODPla*) G__getstructoffset())->GetTDRaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtHODPla*) G__getstructoffset())->GetQURaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtHODPla*) G__getstructoffset())->GetQDRaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtHODPla*) G__getstructoffset())->GetQUPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtHODPla*) G__getstructoffset())->GetQDPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtHODPla*) G__getstructoffset())->GetQUCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtHODPla*) G__getstructoffset())->GetQDCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtHODPla*) G__getstructoffset())->GetQAveRaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtHODPla*) G__getstructoffset())->GetQAvePed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtHODPla*) G__getstructoffset())->GetQAveCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHODPla*) G__getstructoffset())->SetTAveCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHODPla*) G__getstructoffset())->SetTUCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHODPla*) G__getstructoffset())->SetTDCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHODPla*) G__getstructoffset())->SetTUSlw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHODPla*) G__getstructoffset())->SetTDSlw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHODPla*) G__getstructoffset())->SetTAveSlw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHODPla*) G__getstructoffset())->SetZCoef((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtHODPla*) G__getstructoffset())->GetTAveCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtHODPla*) G__getstructoffset())->GetTUCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtHODPla*) G__getstructoffset())->GetTDCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtHODPla*) G__getstructoffset())->GetTUSlw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtHODPla*) G__getstructoffset())->GetTDSlw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtHODPla*) G__getstructoffset())->GetTAveSlw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtHODPla*) G__getstructoffset())->GetZet((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TArtHODPla*) G__getstructoffset())->IsEqual((TObject*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtHODPla::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtHODPla::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtHODPla::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtHODPla::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtHODPla*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtHODPla::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtHODPla::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtHODPla::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_730_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtHODPla::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_730_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtHODPla* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtHODPla(*(TArtHODPla*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPla));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtHODPla G__TTArtHODPla;
static int G__anasamurai_dict_730_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtHODPla*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtHODPla*) (soff+(sizeof(TArtHODPla)*i)))->~G__TTArtHODPla();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtHODPla*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtHODPla*) (soff))->~G__TTArtHODPla();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_730_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtHODPla* dest = (TArtHODPla*) G__getstructoffset();
   *dest = *(TArtHODPla*) libp->para[0].ref;
   const TArtHODPla& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtNeuLANDPla */
static int G__anasamurai_dict_818_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtNeuLANDPla* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNeuLANDPla[n];
     } else {
       p = new((void*) gvp) TArtNeuLANDPla[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNeuLANDPla;
     } else {
       p = new((void*) gvp) TArtNeuLANDPla;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPla));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPla*) G__getstructoffset())->SetLayer((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPla*) G__getstructoffset())->SetBarID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPla*) G__getstructoffset())->SetQRaw((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPla*) G__getstructoffset())->SetQCal((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPla*) G__getstructoffset())->SetTCycle((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPla*) G__getstructoffset())->SetTac((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPla*) G__getstructoffset())->SetTacRef((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPla*) G__getstructoffset())->SetTRaw((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPla*) G__getstructoffset())->SetTCal((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPla*) G__getstructoffset())->SetTacquilaID((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPla*) G__getstructoffset())->SetFired((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPla*) G__getstructoffset())->SetPos((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPla*) G__getstructoffset())->SetZPos((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNeuLANDPla*) G__getstructoffset())->GetLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNeuLANDPla*) G__getstructoffset())->GetBarID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNeuLANDPla*) G__getstructoffset())->GetQRaw((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeuLANDPla*) G__getstructoffset())->GetQCal((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNeuLANDPla*) G__getstructoffset())->GetTCycle((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNeuLANDPla*) G__getstructoffset())->GetTac((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtNeuLANDPla*) G__getstructoffset())->GetTacRef((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeuLANDPla*) G__getstructoffset())->GetTRaw((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeuLANDPla*) G__getstructoffset())->GetTCal((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPla*) G__getstructoffset())->GetTacquilaID(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]), *(Int_t*) G__Intref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TArtNeuLANDPla*) G__getstructoffset())->GetFired((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TArtNeuLANDPla*) G__getstructoffset())->GetBothFired());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeuLANDPla*) G__getstructoffset())->GetPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeuLANDPla*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeuLANDPla*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeuLANDPla*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPla*) G__getstructoffset())->PrintData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtNeuLANDPla::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNeuLANDPla::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtNeuLANDPla::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtNeuLANDPla::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeuLANDPla*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNeuLANDPla::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtNeuLANDPla::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNeuLANDPla::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_818_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtNeuLANDPla::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_818_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtNeuLANDPla* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtNeuLANDPla(*(TArtNeuLANDPla*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPla));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtNeuLANDPla G__TTArtNeuLANDPla;
static int G__anasamurai_dict_818_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtNeuLANDPla*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtNeuLANDPla*) (soff+(sizeof(TArtNeuLANDPla)*i)))->~G__TTArtNeuLANDPla();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtNeuLANDPla*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtNeuLANDPla*) (soff))->~G__TTArtNeuLANDPla();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_818_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtNeuLANDPla* dest = (TArtNeuLANDPla*) G__getstructoffset();
   *dest = *(TArtNeuLANDPla*) libp->para[0].ref;
   const TArtNeuLANDPla& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibNeuLAND */
static int G__anasamurai_dict_820_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibNeuLAND* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibNeuLAND[n];
     } else {
       p = new((void*) gvp) TArtCalibNeuLAND[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibNeuLAND;
     } else {
       p = new((void*) gvp) TArtCalibNeuLAND;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNeuLAND));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_820_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibNeuLAND*) G__getstructoffset())->LoadData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_820_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibNeuLAND*) G__getstructoffset())->LoadData((TArtRawSegmentObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_820_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtCalibNeuLAND*) G__getstructoffset())->GetNumNeuLANDPla());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_820_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNeuLAND*) G__getstructoffset())->GetNeuLANDPla((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_820_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNeuLAND*) G__getstructoffset())->FindNeuLANDPla((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_820_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNeuLAND*) G__getstructoffset())->GetNeuLANDPlaArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_820_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNeuLAND*) G__getstructoffset())->GetNeuLANDMasterStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_820_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtCalibNeuLAND*) G__getstructoffset())->GetNumNeuLANDPlaPara());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_820_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNeuLAND*) G__getstructoffset())->GetNeuLANDPlaPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_820_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNeuLAND*) G__getstructoffset())->FindNeuLANDPlaPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_820_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNeuLAND*) G__getstructoffset())->GetNeuLANDPlaParaArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_820_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibNeuLAND::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_820_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibNeuLAND::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_820_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibNeuLAND::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_820_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibNeuLAND::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_820_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibNeuLAND*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_820_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibNeuLAND::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_820_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibNeuLAND::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_820_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibNeuLAND::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_820_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibNeuLAND::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_820_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibNeuLAND* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibNeuLAND(*(TArtCalibNeuLAND*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNeuLAND));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibNeuLAND G__TTArtCalibNeuLAND;
static int G__anasamurai_dict_820_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibNeuLAND*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibNeuLAND*) (soff+(sizeof(TArtCalibNeuLAND)*i)))->~G__TTArtCalibNeuLAND();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibNeuLAND*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibNeuLAND*) (soff))->~G__TTArtCalibNeuLAND();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibS1DC2Track */
static int G__anasamurai_dict_830_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibS1DC2Track* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibS1DC2Track(*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) TArtCalibS1DC2Track(*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibS1DC2Track(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibS1DC2Track(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibS1DC2Track[n];
       } else {
         p = new((void*) gvp) TArtCalibS1DC2Track[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibS1DC2Track;
       } else {
         p = new((void*) gvp) TArtCalibS1DC2Track;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC2Track));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_830_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibS1DC2Track::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_830_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibS1DC2Track::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_830_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibS1DC2Track::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_830_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibS1DC2Track::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_830_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibS1DC2Track*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_830_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibS1DC2Track::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_830_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibS1DC2Track::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_830_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibS1DC2Track::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_830_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibS1DC2Track::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_830_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibS1DC2Track* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibS1DC2Track(*(TArtCalibS1DC2Track*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC2Track));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibS1DC2Track G__TTArtCalibS1DC2Track;
static int G__anasamurai_dict_830_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibS1DC2Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibS1DC2Track*) (soff+(sizeof(TArtCalibS1DC2Track)*i)))->~G__TTArtCalibS1DC2Track();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibS1DC2Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibS1DC2Track*) (soff))->~G__TTArtCalibS1DC2Track();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_830_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibS1DC2Track* dest = (TArtCalibS1DC2Track*) G__getstructoffset();
   *dest = *(TArtCalibS1DC2Track*) libp->para[0].ref;
   const TArtCalibS1DC2Track& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtTZero */
static int G__anasamurai_dict_831_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtTZero* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtTZero[n];
     } else {
       p = new((void*) gvp) TArtTZero[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtTZero;
     } else {
       p = new((void*) gvp) TArtTZero;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTZero));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_831_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTZero*) G__getstructoffset())->SetT0Cal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_831_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTZero*) G__getstructoffset())->SetT0Slw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_831_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTZero*) G__getstructoffset())->SetTZeroCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_831_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTZero*) G__getstructoffset())->SetTZeroSlw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_831_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtTZero*) G__getstructoffset())->GetT0Cal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_831_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtTZero*) G__getstructoffset())->GetT0Slw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_831_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtTZero*) G__getstructoffset())->GetTZeroCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_831_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtTZero*) G__getstructoffset())->GetTZeroSlw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_831_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtTZero::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_831_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtTZero::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_831_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtTZero::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_831_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtTZero::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_831_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtTZero*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_831_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtTZero::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_831_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtTZero::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_831_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtTZero::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_831_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtTZero::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_831_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtTZero* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtTZero(*(TArtTZero*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTZero));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtTZero G__TTArtTZero;
static int G__anasamurai_dict_831_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtTZero*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtTZero*) (soff+(sizeof(TArtTZero)*i)))->~G__TTArtTZero();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtTZero*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtTZero*) (soff))->~G__TTArtTZero();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_831_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtTZero* dest = (TArtTZero*) G__getstructoffset();
   *dest = *(TArtTZero*) libp->para[0].ref;
   const TArtTZero& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibS1DC1Track */
static int G__anasamurai_dict_832_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibS1DC1Track* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibS1DC1Track(*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) TArtCalibS1DC1Track(*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibS1DC1Track(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibS1DC1Track(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibS1DC1Track[n];
       } else {
         p = new((void*) gvp) TArtCalibS1DC1Track[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibS1DC1Track;
       } else {
         p = new((void*) gvp) TArtCalibS1DC1Track;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC1Track));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_832_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibS1DC1Track::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_832_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibS1DC1Track::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_832_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibS1DC1Track::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_832_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibS1DC1Track::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_832_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibS1DC1Track*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_832_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibS1DC1Track::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_832_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibS1DC1Track::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_832_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibS1DC1Track::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_832_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibS1DC1Track::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_832_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibS1DC1Track* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibS1DC1Track(*(TArtCalibS1DC1Track*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC1Track));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibS1DC1Track G__TTArtCalibS1DC1Track;
static int G__anasamurai_dict_832_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibS1DC1Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibS1DC1Track*) (soff+(sizeof(TArtCalibS1DC1Track)*i)))->~G__TTArtCalibS1DC1Track();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibS1DC1Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibS1DC1Track*) (soff))->~G__TTArtCalibS1DC1Track();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_832_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibS1DC1Track* dest = (TArtCalibS1DC1Track*) G__getstructoffset();
   *dest = *(TArtCalibS1DC1Track*) libp->para[0].ref;
   const TArtCalibS1DC1Track& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtNeutron */
static int G__anasamurai_dict_835_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtNeutron* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNeutron[n];
     } else {
       p = new((void*) gvp) TArtNeutron[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtNeutron;
     } else {
       p = new((void*) gvp) TArtNeutron;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeutron));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeutron*) G__getstructoffset())->SetMass((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeutron*) G__getstructoffset())->SetTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeutron*) G__getstructoffset())->SetMeVee((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeutron*) G__getstructoffset())->SetPos((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeutron*) G__getstructoffset())->SetPos((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeutron*) G__getstructoffset())->SetBeta((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeutron*) G__getstructoffset())->SetBeta((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeutron*) G__getstructoffset())->SetGamma((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeutron*) G__getstructoffset())->SetP((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeutron*) G__getstructoffset())->SetP((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeutron*) G__getstructoffset())->SetPAbs((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeutron*) G__getstructoffset())->SetEnergy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeutron*) G__getstructoffset())->SetTheta((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeutron*) G__getstructoffset())->SetPhi((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtNeutron*) G__getstructoffset())->GetMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtNeutron*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeutron*) G__getstructoffset())->GetMeVee());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TArtNeutron*) G__getstructoffset())->GetPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeutron*) G__getstructoffset())->GetPos((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TArtNeutron*) G__getstructoffset())->GetBeta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeutron*) G__getstructoffset())->GetBeta((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeutron*) G__getstructoffset())->GetGamma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const TArtNeutron*) G__getstructoffset())->GetP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeutron*) G__getstructoffset())->GetP((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeutron*) G__getstructoffset())->GetPAbs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeutron*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeutron*) G__getstructoffset())->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtNeutron*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TArtNeutron*) G__getstructoffset())->IsEqual((TObject*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtNeutron::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNeutron::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtNeutron::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtNeutron::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtNeutron*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNeutron::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtNeutron::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtNeutron::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_835_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtNeutron::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_835_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtNeutron* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtNeutron(*(TArtNeutron*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeutron));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtNeutron G__TTArtNeutron;
static int G__anasamurai_dict_835_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtNeutron*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtNeutron*) (soff+(sizeof(TArtNeutron)*i)))->~G__TTArtNeutron();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtNeutron*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtNeutron*) (soff))->~G__TTArtNeutron();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_835_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtNeutron* dest = (TArtNeutron*) G__getstructoffset();
   *dest = *(TArtNeutron*) libp->para[0].ref;
   const TArtNeutron& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtICF */
static int G__anasamurai_dict_837_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtICF* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtICF[n];
     } else {
       p = new((void*) gvp) TArtICF[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtICF;
     } else {
       p = new((void*) gvp) TArtICF;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtICF));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_837_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtICF*) G__getstructoffset())->SetIonPair((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_837_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtICF*) G__getstructoffset())->SetZCoef((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_837_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtICF*) G__getstructoffset())->GetIonPair());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_837_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtICF*) G__getstructoffset())->GetZCoef((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_837_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtICF*) G__getstructoffset())->GetIC((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_837_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtICF*) G__getstructoffset())->SetNumHit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_837_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtICF*) G__getstructoffset())->SetEnergySqSum((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_837_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtICF*) G__getstructoffset())->SetEnergyAvSum((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_837_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtICF*) G__getstructoffset())->GetNumHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_837_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtICF*) G__getstructoffset())->GetEnergySqSum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_837_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtICF*) G__getstructoffset())->GetEnergyAvSum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_837_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtICF*) G__getstructoffset())->GetZet((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_837_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtICF::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_837_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtICF::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_837_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtICF::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_837_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtICF::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_837_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtICF*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_837_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtICF::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_837_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtICF::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_837_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtICF::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_837_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtICF::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_837_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtICF* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtICF(*(TArtICF*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtICF));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtICF G__TTArtICF;
static int G__anasamurai_dict_837_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtICF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtICF*) (soff+(sizeof(TArtICF)*i)))->~G__TTArtICF();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtICF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtICF*) (soff))->~G__TTArtICF();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_837_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtICF* dest = (TArtICF*) G__getstructoffset();
   *dest = *(TArtICF*) libp->para[0].ref;
   const TArtICF& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtRPTOFPla */
static int G__anasamurai_dict_858_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRPTOFPla* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRPTOFPla[n];
     } else {
       p = new((void*) gvp) TArtRPTOFPla[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRPTOFPla;
     } else {
       p = new((void*) gvp) TArtRPTOFPla;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPla));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRPTOFPla*) G__getstructoffset())->SetTULV775Raw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRPTOFPla*) G__getstructoffset())->SetTDRV775Raw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRPTOFPla*) G__getstructoffset())->SetTULV1290Raw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRPTOFPla*) G__getstructoffset())->SetTDRV1290Raw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRPTOFPla*) G__getstructoffset())->SetQULRaw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRPTOFPla*) G__getstructoffset())->SetQDRRaw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRPTOFPla*) G__getstructoffset())->SetQAveRaw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRPTOFPla*) G__getstructoffset())->SetQAveCal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRPTOFPla*) G__getstructoffset())->GetTULV775Raw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRPTOFPla*) G__getstructoffset())->GetTDRV775Raw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRPTOFPla*) G__getstructoffset())->GetTULV1290Raw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRPTOFPla*) G__getstructoffset())->GetTDRV1290Raw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRPTOFPla*) G__getstructoffset())->GetQULRaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtRPTOFPla*) G__getstructoffset())->GetQDRRaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRPTOFPla*) G__getstructoffset())->GetQULPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRPTOFPla*) G__getstructoffset())->GetQDRPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRPTOFPla*) G__getstructoffset())->GetQULCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRPTOFPla*) G__getstructoffset())->GetQDRCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRPTOFPla*) G__getstructoffset())->GetQAveRaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRPTOFPla*) G__getstructoffset())->GetQAvePed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRPTOFPla*) G__getstructoffset())->GetQAveCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRPTOFPla*) G__getstructoffset())->SetV775Time((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRPTOFPla*) G__getstructoffset())->SetV775TimeUL((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRPTOFPla*) G__getstructoffset())->SetV775TimeDR((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRPTOFPla*) G__getstructoffset())->SetV1290Time((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRPTOFPla*) G__getstructoffset())->SetV1290TimeUL((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRPTOFPla*) G__getstructoffset())->SetV1290TimeDR((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRPTOFPla*) G__getstructoffset())->GetV775Time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRPTOFPla*) G__getstructoffset())->GetV775TimeUL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRPTOFPla*) G__getstructoffset())->GetV775TimeDR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRPTOFPla*) G__getstructoffset())->GetV1290Time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRPTOFPla*) G__getstructoffset())->GetV1290TimeUL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRPTOFPla*) G__getstructoffset())->GetV1290TimeDR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TArtRPTOFPla*) G__getstructoffset())->IsEqual((TObject*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtRPTOFPla::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRPTOFPla::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtRPTOFPla::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtRPTOFPla::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRPTOFPla*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRPTOFPla::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRPTOFPla::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRPTOFPla::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_858_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRPTOFPla::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_858_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtRPTOFPla* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtRPTOFPla(*(TArtRPTOFPla*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPla));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtRPTOFPla G__TTArtRPTOFPla;
static int G__anasamurai_dict_858_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtRPTOFPla*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtRPTOFPla*) (soff+(sizeof(TArtRPTOFPla)*i)))->~G__TTArtRPTOFPla();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtRPTOFPla*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtRPTOFPla*) (soff))->~G__TTArtRPTOFPla();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_858_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRPTOFPla* dest = (TArtRPTOFPla*) G__getstructoffset();
   *dest = *(TArtRPTOFPla*) libp->para[0].ref;
   const TArtRPTOFPla& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibRPTOFPla */
static int G__anasamurai_dict_859_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibRPTOFPla* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibRPTOFPla(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibRPTOFPla(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibRPTOFPla[n];
       } else {
         p = new((void*) gvp) TArtCalibRPTOFPla[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibRPTOFPla;
       } else {
         p = new((void*) gvp) TArtCalibRPTOFPla;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPTOFPla));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibRPTOFPla*) G__getstructoffset())->LoadData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibRPTOFPla*) G__getstructoffset())->LoadData((TArtRawSegmentObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibRPTOFPla*) G__getstructoffset())->ReconstructData((TClonesArray*) G__int(libp->para[0]), *((vector<TArtRPTOFPlaPara*>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibRPTOFPla*) G__getstructoffset())->GetRPTOFPlaArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibRPTOFPla*) G__getstructoffset())->GetNumRPTOFPla());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibRPTOFPla*) G__getstructoffset())->GetRPTOFPla((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibRPTOFPla*) G__getstructoffset())->GetRPTOFPlaPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibRPTOFPla*) G__getstructoffset())->FindRPTOFPla((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibRPTOFPla*) G__getstructoffset())->FindRPTOFPla((TString*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibRPTOFPla*) G__getstructoffset())->FindRPTOFPla((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibRPTOFPla*) G__getstructoffset())->GetRPTOFWPlaArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibRPTOFPla*) G__getstructoffset())->GetNumRPTOFWPla());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibRPTOFPla*) G__getstructoffset())->GetRPTOFWPla((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibRPTOFPla*) G__getstructoffset())->GetRPTOFWPlaPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibRPTOFPla*) G__getstructoffset())->FindRPTOFWPla((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibRPTOFPla*) G__getstructoffset())->FindRPTOFWPla((TString*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibRPTOFPla*) G__getstructoffset())->FindRPTOFWPla((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibRPTOFPla::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibRPTOFPla::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibRPTOFPla::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibRPTOFPla::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibRPTOFPla*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibRPTOFPla::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibRPTOFPla::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibRPTOFPla::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_859_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibRPTOFPla::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_859_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibRPTOFPla* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibRPTOFPla(*(TArtCalibRPTOFPla*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPTOFPla));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibRPTOFPla G__TTArtCalibRPTOFPla;
static int G__anasamurai_dict_859_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibRPTOFPla*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibRPTOFPla*) (soff+(sizeof(TArtCalibRPTOFPla)*i)))->~G__TTArtCalibRPTOFPla();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibRPTOFPla*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibRPTOFPla*) (soff))->~G__TTArtCalibRPTOFPla();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_859_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibRPTOFPla* dest = (TArtCalibRPTOFPla*) G__getstructoffset();
   *dest = *(TArtCalibRPTOFPla*) libp->para[0].ref;
   const TArtCalibRPTOFPla& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibNEBULAMult */
static int G__anasamurai_dict_864_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibNEBULAMult* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibNEBULAMult[n];
     } else {
       p = new((void*) gvp) TArtCalibNEBULAMult[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibNEBULAMult;
     } else {
       p = new((void*) gvp) TArtCalibNEBULAMult;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULAMult));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_864_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibNEBULAMult*) G__getstructoffset())->ClearData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_864_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibNEBULAMult::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_864_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibNEBULAMult::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_864_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibNEBULAMult::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_864_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibNEBULAMult::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_864_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibNEBULAMult*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_864_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibNEBULAMult::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_864_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibNEBULAMult::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_864_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibNEBULAMult::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_864_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibNEBULAMult::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_864_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibNEBULAMult* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibNEBULAMult(*(TArtCalibNEBULAMult*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULAMult));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibNEBULAMult G__TTArtCalibNEBULAMult;
static int G__anasamurai_dict_864_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibNEBULAMult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibNEBULAMult*) (soff+(sizeof(TArtCalibNEBULAMult)*i)))->~G__TTArtCalibNEBULAMult();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibNEBULAMult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibNEBULAMult*) (soff))->~G__TTArtCalibNEBULAMult();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_864_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibNEBULAMult* dest = (TArtCalibNEBULAMult*) G__getstructoffset();
   *dest = *(TArtCalibNEBULAMult*) libp->para[0].ref;
   const TArtCalibNEBULAMult& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibTEDCsI */
static int G__anasamurai_dict_876_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibTEDCsI* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibTEDCsI(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibTEDCsI(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibTEDCsI[n];
       } else {
         p = new((void*) gvp) TArtCalibTEDCsI[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibTEDCsI;
       } else {
         p = new((void*) gvp) TArtCalibTEDCsI;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibTEDCsI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_876_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibTEDCsI*) G__getstructoffset())->LoadData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_876_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibTEDCsI*) G__getstructoffset())->LoadData((TArtRawSegmentObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_876_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibTEDCsI*) G__getstructoffset())->GetTEDCsIArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_876_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtCalibTEDCsI*) G__getstructoffset())->GetNumTEDCsI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_876_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibTEDCsI*) G__getstructoffset())->GetTEDCsI((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_876_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibTEDCsI*) G__getstructoffset())->GetTEDCsIPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_876_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibTEDCsI*) G__getstructoffset())->FindTEDCsI((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_876_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibTEDCsI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_876_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibTEDCsI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_876_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibTEDCsI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_876_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibTEDCsI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_876_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibTEDCsI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_876_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibTEDCsI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_876_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibTEDCsI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_876_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibTEDCsI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_876_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibTEDCsI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_876_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibTEDCsI* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibTEDCsI(*(TArtCalibTEDCsI*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibTEDCsI));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibTEDCsI G__TTArtCalibTEDCsI;
static int G__anasamurai_dict_876_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibTEDCsI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibTEDCsI*) (soff+(sizeof(TArtCalibTEDCsI)*i)))->~G__TTArtCalibTEDCsI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibTEDCsI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibTEDCsI*) (soff))->~G__TTArtCalibTEDCsI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_876_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibTEDCsI* dest = (TArtCalibTEDCsI*) G__getstructoffset();
   *dest = *(TArtCalibTEDCsI*) libp->para[0].ref;
   const TArtCalibTEDCsI& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtRecoFragment */
static int G__anasamurai_dict_885_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRecoFragment* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRecoFragment(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtRecoFragment(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtRecoFragment[n];
       } else {
         p = new((void*) gvp) TArtRecoFragment[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtRecoFragment;
       } else {
         p = new((void*) gvp) TArtRecoFragment;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoFragment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_885_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRecoFragment*) G__getstructoffset())->SetCenterBrho((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_885_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRecoFragment*) G__getstructoffset())->SetTOFOffSet((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_885_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRecoFragment*) G__getstructoffset())->SetPla2TargetLength((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_885_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRecoFragment*) G__getstructoffset())->GetCenterBrho());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_885_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRecoFragment*) G__getstructoffset())->GetTOFOffSet((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_885_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRecoFragment*) G__getstructoffset())->GetPla2TargetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_885_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRecoFragment*) G__getstructoffset())->GetRigidityFitResult((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_885_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtRecoFragment*) G__getstructoffset())->GetPathLengthFitResult((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_885_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRecoFragment*) G__getstructoffset())->GetFragmentArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_885_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtRecoFragment*) G__getstructoffset())->GetFragment((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_885_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtRecoFragment*) G__getstructoffset())->LoadParameter((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_885_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRecoFragment*) G__getstructoffset())->ParseParaList((TXMLNode*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_885_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtRecoFragment::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_885_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRecoFragment::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_885_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtRecoFragment::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_885_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtRecoFragment::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_885_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRecoFragment*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_885_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRecoFragment::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_885_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRecoFragment::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_885_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRecoFragment::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_885_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRecoFragment::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_885_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtRecoFragment* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtRecoFragment(*(TArtRecoFragment*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoFragment));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtRecoFragment G__TTArtRecoFragment;
static int G__anasamurai_dict_885_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtRecoFragment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtRecoFragment*) (soff+(sizeof(TArtRecoFragment)*i)))->~G__TTArtRecoFragment();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtRecoFragment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtRecoFragment*) (soff))->~G__TTArtRecoFragment();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtRecoSAMURAI */
static int G__anasamurai_dict_886_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRecoSAMURAI* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRecoSAMURAI[n];
     } else {
       p = new((void*) gvp) TArtRecoSAMURAI[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtRecoSAMURAI;
     } else {
       p = new((void*) gvp) TArtRecoSAMURAI;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoSAMURAI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_886_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtRecoSAMURAI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_886_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRecoSAMURAI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_886_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtRecoSAMURAI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_886_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtRecoSAMURAI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_886_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtRecoSAMURAI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_886_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRecoSAMURAI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_886_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRecoSAMURAI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_886_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtRecoSAMURAI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_886_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtRecoSAMURAI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_886_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtRecoSAMURAI* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtRecoSAMURAI(*(TArtRecoSAMURAI*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoSAMURAI));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtRecoSAMURAI G__TTArtRecoSAMURAI;
static int G__anasamurai_dict_886_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtRecoSAMURAI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtRecoSAMURAI*) (soff+(sizeof(TArtRecoSAMURAI)*i)))->~G__TTArtRecoSAMURAI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtRecoSAMURAI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtRecoSAMURAI*) (soff))->~G__TTArtRecoSAMURAI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_886_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtRecoSAMURAI* dest = (TArtRecoSAMURAI*) G__getstructoffset();
   *dest = *(TArtRecoSAMURAI*) libp->para[0].ref;
   const TArtRecoSAMURAI& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalcGlobalTrack */
static int G__anasamurai_dict_887_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalcGlobalTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalcGlobalTrack(
(TArtDCTrack*) G__int(libp->para[0]), (TArtDCTrack*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) TArtCalcGlobalTrack(
(TArtDCTrack*) G__int(libp->para[0]), (TArtDCTrack*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalcGlobalTrack(
(TArtDCTrack*) G__int(libp->para[0]), (TArtDCTrack*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) TArtCalcGlobalTrack(
(TArtDCTrack*) G__int(libp->para[0]), (TArtDCTrack*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalcGlobalTrack((TArtDCTrack*) G__int(libp->para[0]), (TArtDCTrack*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TArtCalcGlobalTrack((TArtDCTrack*) G__int(libp->para[0]), (TArtDCTrack*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalcGlobalTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalcGlobalTrack*) G__getstructoffset())->GetLocalTrackIn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalcGlobalTrack*) G__getstructoffset())->GetLocalTrackOut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtCalcGlobalTrack*) G__getstructoffset())->doTrace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtCalcGlobalTrack*) G__getstructoffset())->doFit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TArtCalcGlobalTrack*) G__getstructoffset())->Status());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtCalcGlobalTrack*) G__getstructoffset())->Niteration());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalcGlobalTrack*) G__getstructoffset())->SetInitialMomentum((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const TArtCalcGlobalTrack*) G__getstructoffset())->PrimaryPosition();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const TArtCalcGlobalTrack*) G__getstructoffset())->PrimaryMomentum();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtCalcGlobalTrack*) G__getstructoffset())->PathLengthToTOF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtCalcGlobalTrack*) G__getstructoffset())->PathLengthTotal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtCalcGlobalTrack*) G__getstructoffset())->chisqr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtCalcGlobalTrack*) G__getstructoffset())->diff((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const TArtCalcGlobalTrack*) G__getstructoffset())->GetNHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RKcalcHitPoint& obj = ((const TArtCalcGlobalTrack*) G__getstructoffset())->GetHitPoint((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TArtCalcGlobalTrack*) G__getstructoffset())->GetLocalHitPos((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const TArtCalcGlobalTrack*) G__getstructoffset())->GetGlobalHitPos((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalcGlobalTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalcGlobalTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalcGlobalTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalcGlobalTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalcGlobalTrack*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalcGlobalTrack*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalcGlobalTrack*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalcGlobalTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalcGlobalTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalcGlobalTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalcGlobalTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_887_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalcGlobalTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalcGlobalTrack G__TTArtCalcGlobalTrack;
static int G__anasamurai_dict_887_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalcGlobalTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalcGlobalTrack*) (soff+(sizeof(TArtCalcGlobalTrack)*i)))->~G__TTArtCalcGlobalTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalcGlobalTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalcGlobalTrack*) (soff))->~G__TTArtCalcGlobalTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibNeuLANDVETO */
static int G__anasamurai_dict_893_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibNeuLANDVETO* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibNeuLANDVETO[n];
     } else {
       p = new((void*) gvp) TArtCalibNeuLANDVETO[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibNeuLANDVETO;
     } else {
       p = new((void*) gvp) TArtCalibNeuLANDVETO;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNeuLANDVETO));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_893_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibNeuLANDVETO*) G__getstructoffset())->LoadData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_893_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibNeuLANDVETO*) G__getstructoffset())->LoadData((TArtRawSegmentObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_893_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtCalibNeuLANDVETO*) G__getstructoffset())->GetNumNeuLANDVETOPla());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_893_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNeuLANDVETO*) G__getstructoffset())->GetNeuLANDVETOPla((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_893_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNeuLANDVETO*) G__getstructoffset())->FindNeuLANDVETOPla((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_893_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNeuLANDVETO*) G__getstructoffset())->GetNeuLANDVETOPlaArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_893_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TArtCalibNeuLANDVETO*) G__getstructoffset())->GetNumNeuLANDVETOPlaPara());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_893_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNeuLANDVETO*) G__getstructoffset())->GetNeuLANDVETOPlaPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_893_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNeuLANDVETO*) G__getstructoffset())->FindNeuLANDVETOPlaPara((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_893_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TArtCalibNeuLANDVETO*) G__getstructoffset())->GetNeuLANDVETOPlaParaArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_893_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibNeuLANDVETO::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_893_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibNeuLANDVETO::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_893_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibNeuLANDVETO::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_893_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibNeuLANDVETO::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_893_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibNeuLANDVETO*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_893_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibNeuLANDVETO::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_893_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibNeuLANDVETO::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_893_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibNeuLANDVETO::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_893_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibNeuLANDVETO::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_893_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibNeuLANDVETO* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibNeuLANDVETO(*(TArtCalibNeuLANDVETO*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNeuLANDVETO));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibNeuLANDVETO G__TTArtCalibNeuLANDVETO;
static int G__anasamurai_dict_893_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibNeuLANDVETO*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibNeuLANDVETO*) (soff+(sizeof(TArtCalibNeuLANDVETO)*i)))->~G__TTArtCalibNeuLANDVETO();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibNeuLANDVETO*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibNeuLANDVETO*) (soff))->~G__TTArtCalibNeuLANDVETO();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtFragment */
static int G__anasamurai_dict_894_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtFragment* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtFragment[n];
     } else {
       p = new((void*) gvp) TArtFragment[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtFragment;
     } else {
       p = new((void*) gvp) TArtFragment;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtFragment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFragment*) G__getstructoffset())->SetDelta((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFragment*) G__getstructoffset())->SetRKtraceStatus((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFragment*) G__getstructoffset())->SetPrimaryPosition(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFragment*) G__getstructoffset())->SetPrimaryMomentum(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFragment*) G__getstructoffset())->SetPathLengthToHOD((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFragment*) G__getstructoffset())->SetChi2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFragment*) G__getstructoffset())->SetNHit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFragment*) G__getstructoffset())->SetNIteration((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFragment*) G__getstructoffset())->SetDiff((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFragment*) G__getstructoffset())->SetTzero((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFragment*) G__getstructoffset())->SetTzeroQ((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFragment*) G__getstructoffset())->SetHODTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFragment*) G__getstructoffset())->SetHODQ((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFragment*) G__getstructoffset())->SetTOF((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFragment*) G__getstructoffset())->SetBrho((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFragment*) G__getstructoffset())->SetBeta((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFragment*) G__getstructoffset())->SetAoQ((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFragment*) G__getstructoffset())->SetZ((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtFragment*) G__getstructoffset())->GetDelta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TArtFragment*) G__getstructoffset())->GetRKtraceStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtFragment*) G__getstructoffset())->CalcBrho());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtFragment*) G__getstructoffset())->GetBrho());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((TArtFragment*) G__getstructoffset())->GetPrimaryPosition();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((TArtFragment*) G__getstructoffset())->GetPrimaryMomentum();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtFragment*) G__getstructoffset())->GetPathLengthToHOD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtFragment*) G__getstructoffset())->GetChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtFragment*) G__getstructoffset())->GetNHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TArtFragment*) G__getstructoffset())->GetNIteration());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtFragment*) G__getstructoffset())->GetDiff((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtFragment*) G__getstructoffset())->GetTzero());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtFragment*) G__getstructoffset())->GetTzeroQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtFragment*) G__getstructoffset())->GetHODTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtFragment*) G__getstructoffset())->GetHODQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtFragment*) G__getstructoffset())->GetTOF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtFragment*) G__getstructoffset())->GetBeta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtFragment*) G__getstructoffset())->GetAoQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TArtFragment*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtFragment::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtFragment::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtFragment::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtFragment::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtFragment*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtFragment::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtFragment::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtFragment::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_894_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtFragment::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_894_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtFragment* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtFragment(*(TArtFragment*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtFragment));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtFragment G__TTArtFragment;
static int G__anasamurai_dict_894_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtFragment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtFragment*) (soff+(sizeof(TArtFragment)*i)))->~G__TTArtFragment();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtFragment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtFragment*) (soff))->~G__TTArtFragment();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_894_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtFragment* dest = (TArtFragment*) G__getstructoffset();
   *dest = *(TArtFragment*) libp->para[0].ref;
   const TArtFragment& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibSAMURAITZero */
static int G__anasamurai_dict_895_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibSAMURAITZero* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibSAMURAITZero(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibSAMURAITZero(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibSAMURAITZero[n];
       } else {
         p = new((void*) gvp) TArtCalibSAMURAITZero[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibSAMURAITZero;
       } else {
         p = new((void*) gvp) TArtCalibSAMURAITZero;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibSAMURAITZero));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_895_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibSAMURAITZero*) G__getstructoffset())->GetTZeroArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_895_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibSAMURAITZero::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_895_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibSAMURAITZero::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_895_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibSAMURAITZero::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_895_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibSAMURAITZero::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_895_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibSAMURAITZero*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_895_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibSAMURAITZero::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_895_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibSAMURAITZero::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_895_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibSAMURAITZero::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_895_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibSAMURAITZero::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_895_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibSAMURAITZero* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibSAMURAITZero(*(TArtCalibSAMURAITZero*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibSAMURAITZero));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibSAMURAITZero G__TTArtCalibSAMURAITZero;
static int G__anasamurai_dict_895_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibSAMURAITZero*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibSAMURAITZero*) (soff+(sizeof(TArtCalibSAMURAITZero)*i)))->~G__TTArtCalibSAMURAITZero();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibSAMURAITZero*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibSAMURAITZero*) (soff))->~G__TTArtCalibSAMURAITZero();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_895_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibSAMURAITZero* dest = (TArtCalibSAMURAITZero*) G__getstructoffset();
   *dest = *(TArtCalibSAMURAITZero*) libp->para[0].ref;
   const TArtCalibSAMURAITZero& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibHIMEMult */
static int G__anasamurai_dict_898_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibHIMEMult* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibHIMEMult[n];
     } else {
       p = new((void*) gvp) TArtCalibHIMEMult[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibHIMEMult;
     } else {
       p = new((void*) gvp) TArtCalibHIMEMult;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHIMEMult));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_898_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibHIMEMult*) G__getstructoffset())->ClearData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_898_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibHIMEMult::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_898_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibHIMEMult::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_898_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibHIMEMult::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_898_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibHIMEMult::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_898_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibHIMEMult*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_898_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibHIMEMult::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_898_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibHIMEMult::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_898_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibHIMEMult::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_898_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibHIMEMult::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_898_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibHIMEMult* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibHIMEMult(*(TArtCalibHIMEMult*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHIMEMult));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibHIMEMult G__TTArtCalibHIMEMult;
static int G__anasamurai_dict_898_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibHIMEMult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibHIMEMult*) (soff+(sizeof(TArtCalibHIMEMult)*i)))->~G__TTArtCalibHIMEMult();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibHIMEMult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibHIMEMult*) (soff))->~G__TTArtCalibHIMEMult();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_898_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibHIMEMult* dest = (TArtCalibHIMEMult*) G__getstructoffset();
   *dest = *(TArtCalibHIMEMult*) libp->para[0].ref;
   const TArtCalibHIMEMult& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibRPDCHit */
static int G__anasamurai_dict_904_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibRPDCHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibRPDCHit(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibRPDCHit(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibRPDCHit[n];
       } else {
         p = new((void*) gvp) TArtCalibRPDCHit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibRPDCHit;
       } else {
         p = new((void*) gvp) TArtCalibRPDCHit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPDCHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_904_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibRPDCHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_904_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibRPDCHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_904_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibRPDCHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_904_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibRPDCHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_904_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibRPDCHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_904_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibRPDCHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_904_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibRPDCHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_904_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibRPDCHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_904_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibRPDCHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_904_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibRPDCHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibRPDCHit(*(TArtCalibRPDCHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPDCHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibRPDCHit G__TTArtCalibRPDCHit;
static int G__anasamurai_dict_904_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibRPDCHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibRPDCHit*) (soff+(sizeof(TArtCalibRPDCHit)*i)))->~G__TTArtCalibRPDCHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibRPDCHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibRPDCHit*) (soff))->~G__TTArtCalibRPDCHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_904_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibRPDCHit* dest = (TArtCalibRPDCHit*) G__getstructoffset();
   *dest = *(TArtCalibRPDCHit*) libp->para[0].ref;
   const TArtCalibRPDCHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibICF */
static int G__anasamurai_dict_928_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibICF* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibICF(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibICF(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibICF[n];
       } else {
         p = new((void*) gvp) TArtCalibICF[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibICF;
       } else {
         p = new((void*) gvp) TArtCalibICF;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibICF));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_928_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibICF*) G__getstructoffset())->LoadData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_928_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibICF*) G__getstructoffset())->LoadData((TArtRawSegmentObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_928_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibICF*) G__getstructoffset())->GetICArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_928_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TArtCalibICF*) G__getstructoffset())->GetCalibIC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_928_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibICF::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_928_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibICF::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_928_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibICF::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_928_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibICF::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_928_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibICF*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_928_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibICF::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_928_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibICF::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_928_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibICF::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_928_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibICF::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_928_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibICF* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibICF(*(TArtCalibICF*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibICF));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibICF G__TTArtCalibICF;
static int G__anasamurai_dict_928_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibICF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibICF*) (soff+(sizeof(TArtCalibICF)*i)))->~G__TTArtCalibICF();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibICF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibICF*) (soff))->~G__TTArtCalibICF();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_928_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibICF* dest = (TArtCalibICF*) G__getstructoffset();
   *dest = *(TArtCalibICF*) libp->para[0].ref;
   const TArtCalibICF& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TArtCalibS1DC2Hit */
static int G__anasamurai_dict_929_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibS1DC2Hit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TArtCalibS1DC2Hit(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) TArtCalibS1DC2Hit(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibS1DC2Hit[n];
       } else {
         p = new((void*) gvp) TArtCalibS1DC2Hit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TArtCalibS1DC2Hit;
       } else {
         p = new((void*) gvp) TArtCalibS1DC2Hit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC2Hit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_929_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TArtCalibS1DC2Hit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_929_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibS1DC2Hit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_929_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TArtCalibS1DC2Hit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_929_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TArtCalibS1DC2Hit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_929_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TArtCalibS1DC2Hit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_929_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibS1DC2Hit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_929_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibS1DC2Hit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_929_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TArtCalibS1DC2Hit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__anasamurai_dict_929_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TArtCalibS1DC2Hit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__anasamurai_dict_929_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TArtCalibS1DC2Hit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TArtCalibS1DC2Hit(*(TArtCalibS1DC2Hit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC2Hit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TArtCalibS1DC2Hit G__TTArtCalibS1DC2Hit;
static int G__anasamurai_dict_929_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TArtCalibS1DC2Hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TArtCalibS1DC2Hit*) (soff+(sizeof(TArtCalibS1DC2Hit)*i)))->~G__TTArtCalibS1DC2Hit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TArtCalibS1DC2Hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TArtCalibS1DC2Hit*) (soff))->~G__TTArtCalibS1DC2Hit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__anasamurai_dict_929_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TArtCalibS1DC2Hit* dest = (TArtCalibS1DC2Hit*) G__getstructoffset();
   *dest = *(TArtCalibS1DC2Hit*) libp->para[0].ref;
   const TArtCalibS1DC2Hit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TArtTEDCsI */

/* TArtDCHitPara */

/* TArtDCHit */

/* TArtSAMURAIParameters */

/* TArtCalibDCHit */

/* TArtCalibS1DC1Hit */

/* TArtCalibBPCHit */

/* TArtCalibBDC1Hit */

/* TArtCalibBDC2Hit */

/* TArtCalibFDC0Hit */

/* TArtCalibFDC1Hit */

/* TArtCalibFDC2Hit */

/* TArtCalibBDC1Track */

/* TArtCalibBDC2Track */

/* TArtCalibFDC0Track */

/* TArtCalibFDC1Track */

/* TArtCalibFDC2Track */

/* TArtCalibHODPla */

/* TArtCalibSAMURAI */

/* TArtTacquilaMap */

/* TArtHODPlaPara */

/* TArtRPTOFPlaPara */

/* TArtTEDCsIPara */

/* TArtNEBULAPlaPara */

/* TArtNeuLANDPlaPara */

/* TArtTacquilaPara */

/* TArtHIMEPlaPara */

/* TArtNEBULAHPCPara */

/* TArtNEBULAPla */

/* TArtNEBULAHPC */

/* TArtCalibNEBULAHPC */

/* TArtHIMEPla */

/* TArtCalibNEBULA */

/* TArtRecoNeutron */

/* TArtNEBULAFilter */

/* TArtCalibHIME */

/* TArtHIMEFilter */

/* TArtDCTrack */

/* TArtCalibDCTrack */

/* TArtCalibRPDCTrack */

/* TArtHODPla */

/* TArtNeuLANDPla */

/* TArtCalibNeuLAND */

/* TArtCalibS1DC2Track */

/* TArtTZero */

/* TArtCalibS1DC1Track */

/* TArtNeutron */

/* TArtICF */

/* TArtRPTOFPla */

/* TArtCalibRPTOFPla */

/* TArtCalibNEBULAMult */

/* TArtCalibTEDCsI */

/* TArtRecoFragment */

/* TArtRecoSAMURAI */

/* TArtCalcGlobalTrack */

/* TArtCalibNeuLANDVETO */

/* TArtFragment */

/* TArtCalibSAMURAITZero */

/* TArtCalibHIMEMult */

/* TArtCalibRPDCHit */

/* TArtCalibICF */

/* TArtCalibS1DC2Hit */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncanasamurai_dict {
 public:
  G__Sizep2memfuncanasamurai_dict(): p(&G__Sizep2memfuncanasamurai_dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncanasamurai_dict::*p)();
};

size_t G__get_sizep2memfuncanasamurai_dict()
{
  G__Sizep2memfuncanasamurai_dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceanasamurai_dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsI))) {
     TArtTEDCsI *G__Lderived;
     G__Lderived=(TArtTEDCsI*)0x1000;
     {
       TArtTKE *G__Lpbase=(TArtTKE*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsI),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTKE),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TArtDataObject *G__Lpbase=(TArtDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsI),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDataObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsI),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHitPara))) {
     TArtDCHitPara *G__Lderived;
     G__Lderived=(TArtDCHitPara*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHitPara),G__get_linked_tagnum(&G__anasamurai_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHitPara),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHit))) {
     TArtDCHit *G__Lderived;
     G__Lderived=(TArtDCHit*)0x1000;
     {
       TArtDataObject *G__Lpbase=(TArtDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHit),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHit),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtSAMURAIParameters))) {
     TArtSAMURAIParameters *G__Lderived;
     G__Lderived=(TArtSAMURAIParameters*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtSAMURAIParameters),G__get_linked_tagnum(&G__anasamurai_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtSAMURAIParameters),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCHit))) {
     TArtCalibDCHit *G__Lderived;
     G__Lderived=(TArtCalibDCHit*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCHit),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC1Hit))) {
     TArtCalibS1DC1Hit *G__Lderived;
     G__Lderived=(TArtCalibS1DC1Hit*)0x1000;
     {
       TArtCalibDCHit *G__Lpbase=(TArtCalibDCHit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC1Hit),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCHit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC1Hit),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBPCHit))) {
     TArtCalibBPCHit *G__Lderived;
     G__Lderived=(TArtCalibBPCHit*)0x1000;
     {
       TArtCalibDCHit *G__Lpbase=(TArtCalibDCHit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBPCHit),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCHit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBPCHit),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Hit))) {
     TArtCalibBDC1Hit *G__Lderived;
     G__Lderived=(TArtCalibBDC1Hit*)0x1000;
     {
       TArtCalibDCHit *G__Lpbase=(TArtCalibDCHit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Hit),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCHit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Hit),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Hit))) {
     TArtCalibBDC2Hit *G__Lderived;
     G__Lderived=(TArtCalibBDC2Hit*)0x1000;
     {
       TArtCalibDCHit *G__Lpbase=(TArtCalibDCHit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Hit),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCHit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Hit),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Hit))) {
     TArtCalibFDC0Hit *G__Lderived;
     G__Lderived=(TArtCalibFDC0Hit*)0x1000;
     {
       TArtCalibDCHit *G__Lpbase=(TArtCalibDCHit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Hit),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCHit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Hit),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Hit))) {
     TArtCalibFDC1Hit *G__Lderived;
     G__Lderived=(TArtCalibFDC1Hit*)0x1000;
     {
       TArtCalibDCHit *G__Lpbase=(TArtCalibDCHit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Hit),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCHit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Hit),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Hit))) {
     TArtCalibFDC2Hit *G__Lderived;
     G__Lderived=(TArtCalibFDC2Hit*)0x1000;
     {
       TArtCalibDCHit *G__Lpbase=(TArtCalibDCHit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Hit),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCHit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Hit),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Track))) {
     TArtCalibBDC1Track *G__Lderived;
     G__Lderived=(TArtCalibBDC1Track*)0x1000;
     {
       TArtCalibDCTrack *G__Lpbase=(TArtCalibDCTrack*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Track),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCTrack),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Track),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Track))) {
     TArtCalibBDC2Track *G__Lderived;
     G__Lderived=(TArtCalibBDC2Track*)0x1000;
     {
       TArtCalibDCTrack *G__Lpbase=(TArtCalibDCTrack*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Track),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCTrack),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Track),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Track))) {
     TArtCalibFDC0Track *G__Lderived;
     G__Lderived=(TArtCalibFDC0Track*)0x1000;
     {
       TArtCalibDCTrack *G__Lpbase=(TArtCalibDCTrack*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Track),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCTrack),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Track),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Track))) {
     TArtCalibFDC1Track *G__Lderived;
     G__Lderived=(TArtCalibFDC1Track*)0x1000;
     {
       TArtCalibDCTrack *G__Lpbase=(TArtCalibDCTrack*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Track),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCTrack),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Track),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Track))) {
     TArtCalibFDC2Track *G__Lderived;
     G__Lderived=(TArtCalibFDC2Track*)0x1000;
     {
       TArtCalibDCTrack *G__Lpbase=(TArtCalibDCTrack*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Track),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCTrack),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Track),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHODPla))) {
     TArtCalibHODPla *G__Lderived;
     G__Lderived=(TArtCalibHODPla*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHODPla),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibSAMURAI))) {
     TArtCalibSAMURAI *G__Lderived;
     G__Lderived=(TArtCalibSAMURAI*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibSAMURAI),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaMap))) {
     TArtTacquilaMap *G__Lderived;
     G__Lderived=(TArtTacquilaMap*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaMap),G__get_linked_tagnum(&G__anasamurai_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaMap),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPlaPara))) {
     TArtHODPlaPara *G__Lderived;
     G__Lderived=(TArtHODPlaPara*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPlaPara),G__get_linked_tagnum(&G__anasamurai_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPlaPara),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPlaPara))) {
     TArtRPTOFPlaPara *G__Lderived;
     G__Lderived=(TArtRPTOFPlaPara*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPlaPara),G__get_linked_tagnum(&G__anasamurai_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPlaPara),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsIPara))) {
     TArtTEDCsIPara *G__Lderived;
     G__Lderived=(TArtTEDCsIPara*)0x1000;
     {
       TArtTKEPara *G__Lpbase=(TArtTKEPara*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsIPara),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTKEPara),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsIPara),G__get_linked_tagnum(&G__anasamurai_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsIPara),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPlaPara))) {
     TArtNEBULAPlaPara *G__Lderived;
     G__Lderived=(TArtNEBULAPlaPara*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPlaPara),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPlaPara))) {
     TArtNeuLANDPlaPara *G__Lderived;
     G__Lderived=(TArtNeuLANDPlaPara*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPlaPara),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaPara))) {
     TArtTacquilaPara *G__Lderived;
     G__Lderived=(TArtTacquilaPara*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaPara),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPlaPara))) {
     TArtHIMEPlaPara *G__Lderived;
     G__Lderived=(TArtHIMEPlaPara*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPlaPara),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPCPara))) {
     TArtNEBULAHPCPara *G__Lderived;
     G__Lderived=(TArtNEBULAHPCPara*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPCPara),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPla))) {
     TArtNEBULAPla *G__Lderived;
     G__Lderived=(TArtNEBULAPla*)0x1000;
     {
       TArtDataObject *G__Lpbase=(TArtDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPla),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPla),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPC))) {
     TArtNEBULAHPC *G__Lderived;
     G__Lderived=(TArtNEBULAHPC*)0x1000;
     {
       TArtDataObject *G__Lpbase=(TArtDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPC),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPC),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULAHPC))) {
     TArtCalibNEBULAHPC *G__Lderived;
     G__Lderived=(TArtCalibNEBULAHPC*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULAHPC),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPla))) {
     TArtHIMEPla *G__Lderived;
     G__Lderived=(TArtHIMEPla*)0x1000;
     {
       TArtDataObject *G__Lpbase=(TArtDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPla),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPla),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULA))) {
     TArtCalibNEBULA *G__Lderived;
     G__Lderived=(TArtCalibNEBULA*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULA),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoNeutron))) {
     TArtRecoNeutron *G__Lderived;
     G__Lderived=(TArtRecoNeutron*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoNeutron),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHIME))) {
     TArtCalibHIME *G__Lderived;
     G__Lderived=(TArtCalibHIME*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHIME),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCTrack))) {
     TArtDCTrack *G__Lderived;
     G__Lderived=(TArtDCTrack*)0x1000;
     {
       TArtDataObject *G__Lpbase=(TArtDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCTrack),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCTrack),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCTrack))) {
     TArtCalibDCTrack *G__Lderived;
     G__Lderived=(TArtCalibDCTrack*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCTrack),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPDCTrack))) {
     TArtCalibRPDCTrack *G__Lderived;
     G__Lderived=(TArtCalibRPDCTrack*)0x1000;
     {
       TArtCalibDCTrack *G__Lpbase=(TArtCalibDCTrack*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPDCTrack),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCTrack),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPDCTrack),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPla))) {
     TArtHODPla *G__Lderived;
     G__Lderived=(TArtHODPla*)0x1000;
     {
       TArtDataObject *G__Lpbase=(TArtDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPla),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPla),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPla))) {
     TArtNeuLANDPla *G__Lderived;
     G__Lderived=(TArtNeuLANDPla*)0x1000;
     {
       TArtDataObject *G__Lpbase=(TArtDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPla),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPla),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNeuLAND))) {
     TArtCalibNeuLAND *G__Lderived;
     G__Lderived=(TArtCalibNeuLAND*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNeuLAND),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTKEPara))) {
     TArtTKEPara *G__Lderived;
     G__Lderived=(TArtTKEPara*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTKEPara),G__get_linked_tagnum(&G__anasamurai_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTKEPara),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC2Track))) {
     TArtCalibS1DC2Track *G__Lderived;
     G__Lderived=(TArtCalibS1DC2Track*)0x1000;
     {
       TArtCalibDCTrack *G__Lpbase=(TArtCalibDCTrack*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC2Track),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCTrack),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC2Track),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTZero))) {
     TArtTZero *G__Lderived;
     G__Lderived=(TArtTZero*)0x1000;
     {
       TArtDataObject *G__Lpbase=(TArtDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTZero),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTZero),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC1Track))) {
     TArtCalibS1DC1Track *G__Lderived;
     G__Lderived=(TArtCalibS1DC1Track*)0x1000;
     {
       TArtCalibDCTrack *G__Lpbase=(TArtCalibDCTrack*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC1Track),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCTrack),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC1Track),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeutron))) {
     TArtNeutron *G__Lderived;
     G__Lderived=(TArtNeutron*)0x1000;
     {
       TArtDataObject *G__Lpbase=(TArtDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeutron),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeutron),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtICF))) {
     TArtICF *G__Lderived;
     G__Lderived=(TArtICF*)0x1000;
     {
       TArtDataObject *G__Lpbase=(TArtDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtICF),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtICF),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPla))) {
     TArtRPTOFPla *G__Lderived;
     G__Lderived=(TArtRPTOFPla*)0x1000;
     {
       TArtDataObject *G__Lpbase=(TArtDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPla),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPla),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPTOFPla))) {
     TArtCalibRPTOFPla *G__Lderived;
     G__Lderived=(TArtCalibRPTOFPla*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPTOFPla),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULAMult))) {
     TArtCalibNEBULAMult *G__Lderived;
     G__Lderived=(TArtCalibNEBULAMult*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULAMult),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibTEDCsI))) {
     TArtCalibTEDCsI *G__Lderived;
     G__Lderived=(TArtCalibTEDCsI*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibTEDCsI),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoFragment))) {
     TArtRecoFragment *G__Lderived;
     G__Lderived=(TArtRecoFragment*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoFragment),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoSAMURAI))) {
     TArtRecoSAMURAI *G__Lderived;
     G__Lderived=(TArtRecoSAMURAI*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoSAMURAI),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNeuLANDVETO))) {
     TArtCalibNeuLANDVETO *G__Lderived;
     G__Lderived=(TArtCalibNeuLANDVETO*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNeuLANDVETO),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtFragment))) {
     TArtFragment *G__Lderived;
     G__Lderived=(TArtFragment*)0x1000;
     {
       TArtDataObject *G__Lpbase=(TArtDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtFragment),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtFragment),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibSAMURAITZero))) {
     TArtCalibSAMURAITZero *G__Lderived;
     G__Lderived=(TArtCalibSAMURAITZero*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibSAMURAITZero),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHIMEMult))) {
     TArtCalibHIMEMult *G__Lderived;
     G__Lderived=(TArtCalibHIMEMult*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHIMEMult),G__get_linked_tagnum(&G__anasamurai_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPDCHit))) {
     TArtCalibRPDCHit *G__Lderived;
     G__Lderived=(TArtCalibRPDCHit*)0x1000;
     {
       TArtCalibDCHit *G__Lpbase=(TArtCalibDCHit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPDCHit),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCHit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPDCHit),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibICF))) {
     TArtCalibICF *G__Lderived;
     G__Lderived=(TArtCalibICF*)0x1000;
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibICF),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC2Hit))) {
     TArtCalibS1DC2Hit *G__Lderived;
     G__Lderived=(TArtCalibS1DC2Hit*)0x1000;
     {
       TArtCalibDCHit *G__Lpbase=(TArtCalibDCHit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC2Hit),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCHit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TArtReconstruction *G__Lpbase=(TArtReconstruction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC2Hit),G__get_linked_tagnum(&G__anasamurai_dictLN_TArtReconstruction),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableanasamurai_dict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtDCHitPara*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtDCHitParamUcOallocatorlETArtDCHitParamUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtDCHitParamUcOallocatorlETArtDCHitParamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtDCHitParamUcOallocatorlETArtDCHitParamUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtDCHitParamUcOallocatorlETArtDCHitParamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtDCHitParamUcOallocatorlETArtDCHitParamUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,const TArtNEBULAPlaPara*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOconstsPTArtNEBULAPlaParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,const TArtNEBULAPlaPara*,less<TArtRIDFMap> >",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOconstsPTArtNEBULAPlaParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,const TArtHIMEPlaPara*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOconstsPTArtHIMEPlaParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,const TArtHIMEPlaPara*,less<TArtRIDFMap> >",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOconstsPTArtHIMEPlaParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,const TArtNEBULAHPCPara*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOconstsPTArtNEBULAHPCParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,const TArtNEBULAHPCPara*,less<TArtRIDFMap> >",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOconstsPTArtNEBULAHPCParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtTacquilaMap,const TArtNeuLANDPlaPara*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUcOlesslETArtTacquilaMapgRcOallocatorlEpairlEconstsPTArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtTacquilaMap,const TArtNeuLANDPlaPara*,less<TArtTacquilaMap> >",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUcOlesslETArtTacquilaMapgRcOallocatorlEpairlEconstsPTArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtTacquilaMap,const TArtTacquilaPara*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtTacquilaMapcOconstsPTArtTacquilaParamUcOlesslETArtTacquilaMapgRcOallocatorlEpairlEconstsPTArtTacquilaMapcOconstsPTArtTacquilaParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtTacquilaMap,const TArtTacquilaPara*,less<TArtTacquilaMap> >",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtTacquilaMapcOconstsPTArtTacquilaParamUcOlesslETArtTacquilaMapgRcOallocatorlEpairlEconstsPTArtTacquilaMapcOconstsPTArtTacquilaParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,TArtDCHitPara*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtDCHitParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtDCHitParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,TArtDCHitPara*,less<TArtRIDFMap> >",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtDCHitParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtDCHitParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,TArtHODPlaPara*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtHODPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtHODPlaParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,TArtHODPlaPara*,less<TArtRIDFMap> >",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtHODPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtHODPlaParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,TArtRPTOFPlaPara*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtRPTOFPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtRPTOFPlaParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,TArtRPTOFPlaPara*,less<TArtRIDFMap> >",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtRPTOFPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtRPTOFPlaParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,TArtTEDCsIPara*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtTEDCsIParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtTEDCsIParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,TArtTEDCsIPara*,less<TArtRIDFMap> >",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtTEDCsIParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtTEDCsIParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TArtNEBULAPlaPara*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOTArtNEBULAPlaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtNEBULAPlaParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TArtNEBULAPlaPara*,less<int> >",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOTArtNEBULAPlaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtNEBULAPlaParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TArtHIMEPlaPara*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOTArtHIMEPlaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtHIMEPlaParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TArtHIMEPlaPara*,less<int> >",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOTArtHIMEPlaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtHIMEPlaParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TArtNEBULAHPCPara*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOTArtNEBULAHPCParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtNEBULAHPCParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TArtNEBULAHPCPara*,less<int> >",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOTArtNEBULAHPCParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtNEBULAHPCParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TArtNeuLANDPlaPara*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOTArtNeuLANDPlaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtNeuLANDPlaParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TArtNeuLANDPlaPara*,less<int> >",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOTArtNeuLANDPlaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtNeuLANDPlaParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TArtTacquilaPara*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOTArtTacquilaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtTacquilaParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TArtTacquilaPara*,less<int> >",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOTArtTacquilaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtTacquilaParamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArtNEBULAHPCArray",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArtNEBULAHPCParaArray",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtDCHit*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtDCHitmUcOallocatorlETArtDCHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtDCHitmUcOallocatorlETArtDCHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtDCHitmUcOallocatorlETArtDCHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtDCHitmUcOallocatorlETArtDCHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtDCHitmUcOallocatorlETArtDCHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtRawDataObject*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtRawFADCDataObject*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtRawTacquilaDataObject*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtRawTacquilaDataObjectmUcOallocatorlETArtRawTacquilaDataObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawTacquilaDataObjectmUcOallocatorlETArtRawTacquilaDataObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtRawTacquilaDataObjectmUcOallocatorlETArtRawTacquilaDataObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawTacquilaDataObjectmUcOallocatorlETArtRawTacquilaDataObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtRawTacquilaDataObjectmUcOallocatorlETArtRawTacquilaDataObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtRawSegmentObject*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtRawScalerObject*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArtNeuLANDPlaArray",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArtNeuLANDPlaParaArray",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,int>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOintcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TArtRIDFMap,int,less<TArtRIDFMap> >",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOintcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,DCGeomRecord*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcODCGeomRecordmUcOlesslEintgRcOallocatorlEpairlEconstsPintcODCGeomRecordmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,DCGeomRecord*,less<int> >",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcODCGeomRecordmUcOlesslEintgRcOallocatorlEpairlEconstsPintcODCGeomRecordmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtRPTOFPlaPara*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtRPTOFPlaParamUcOallocatorlETArtRPTOFPlaParamUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRPTOFPlaParamUcOallocatorlETArtRPTOFPlaParamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtRPTOFPlaParamUcOallocatorlETArtRPTOFPlaParamUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRPTOFPlaParamUcOallocatorlETArtRPTOFPlaParamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtRPTOFPlaParamUcOallocatorlETArtRPTOFPlaParamUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArtNEBULAPlaArray",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArtNEBULAPlaParaArray",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<int,RKcalcHitPoint> >",117,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEpairlEintcORKcalcHitPointgRcOallocatorlEpairlEintcORKcalcHitPointgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<int,RKcalcHitPoint> >",117,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEpairlEintcORKcalcHitPointgRcOallocatorlEpairlEintcORKcalcHitPointgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlEpairlEintcORKcalcHitPointgRcOallocatorlEpairlEintcORKcalcHitPointgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEpairlEintcORKcalcHitPointgRcOallocatorlEpairlEintcORKcalcHitPointgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlEpairlEintcORKcalcHitPointgRcOallocatorlEpairlEintcORKcalcHitPointgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEpairlEintcORKcalcHitPointgRcOallocatorlEpairlEintcORKcalcHitPointgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<int,RKcalcHitPoint> >",117,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEpairlEintcORKcalcHitPointgRcOallocatorlEpairlEintcORKcalcHitPointgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtTEDCsIPara*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtTEDCsIParamUcOallocatorlETArtTEDCsIParamUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtTEDCsIParamUcOallocatorlETArtTEDCsIParamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtTEDCsIParamUcOallocatorlETArtTEDCsIParamUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtTEDCsIParamUcOallocatorlETArtTEDCsIParamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtTEDCsIParamUcOallocatorlETArtTEDCsIParamUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TrackHit*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtCalcGlobalTrackcLcLTrackHitmUcOallocatorlETArtCalcGlobalTrackcLcLTrackHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtCalcGlobalTrackcLcLTrackHitmUcOallocatorlETArtCalcGlobalTrackcLcLTrackHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtCalcGlobalTrackcLcLTrackHitmUcOallocatorlETArtCalcGlobalTrackcLcLTrackHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtCalcGlobalTrackcLcLTrackHitmUcOallocatorlETArtCalcGlobalTrackcLcLTrackHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtCalcGlobalTrackcLcLTrackHitmUcOallocatorlETArtCalcGlobalTrackcLcLTrackHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtCalcGlobalTrack::TrackHit*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtCalcGlobalTrackcLcLTrackHitmUcOallocatorlETArtCalcGlobalTrackcLcLTrackHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArtHIMEPlaArray",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TArtHIMEPlaParaArray",117,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArtHODPlaPara*>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtHODPlaParamUcOallocatorlETArtHODPlaParamUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtHODPlaParamUcOallocatorlETArtHODPlaParamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtHODPlaParamUcOallocatorlETArtHODPlaParamUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtHODPlaParamUcOallocatorlETArtHODPlaParamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtHODPlaParamUcOallocatorlETArtHODPlaParamUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<UInt_t,Double_t>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,double>",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,double,less<unsigned int> >",117,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TArtTEDCsI */
static void G__setup_memvarTArtTEDCsI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsI));
   { TArtTEDCsI *p; p=(TArtTEDCsI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"row=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"column=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDCHitPara */
static void G__setup_memvarTArtDCHitPara(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHitPara));
   { TArtDCHitPara *p; p=(TArtDCHitPara*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TString),-1,-1,4,"detname=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"layer=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"id_plane=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"wireid=",0,"wire id");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"wirepos=",0,"wire position in a layer");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"wirez=",0,"wire z position");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"tzero_offset=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"coef0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"coef1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"coef2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap),-1,-1,4,"map=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDCHit */
static void G__setup_memvarTArtDCHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHit));
   { TArtDCHit *p; p=(TArtDCHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"layer=",0,"n-th layer");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"id_plane=",0,"plane id");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TString),-1,-1,4,"anodedir=",0,"wire direction ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"wirepos=",0,"wire-x position");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"wirez=",0,"wire-y position");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"wireid=",0,"wire-id");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"coef[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"id_hit=",0,"hit id in array");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTDC=",0,"leading edge tdc");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTrailTDC=",0,"trailing edge tdc");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPosition=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtSAMURAIParameters */
static void G__setup_memvarTArtSAMURAIParameters(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtSAMURAIParameters));
   { TArtSAMURAIParameters *p; p=(TArtSAMURAIParameters*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtHODPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtHODPlaParamUgRsPgRsPgR),G__defined_typename("map<TArtRIDFMap,TArtHODPlaPara*>"),-1,4,"hod_pmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtRPTOFPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtRPTOFPlaParamUgRsPgRsPgR),G__defined_typename("map<TArtRIDFMap,TArtRPTOFPlaPara*>"),-1,4,"rptof_pmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtTEDCsIParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtTEDCsIParamUgRsPgRsPgR),G__defined_typename("map<TArtRIDFMap,TArtTEDCsIPara*>"),-1,4,"ted_pmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtDCHitParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtDCHitParamUgRsPgRsPgR),G__defined_typename("map<TArtRIDFMap,TArtDCHitPara*>"),-1,4,"bpc_pmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtDCHitParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtDCHitParamUgRsPgRsPgR),G__defined_typename("map<TArtRIDFMap,TArtDCHitPara*>"),-1,4,"bdc1_pmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtDCHitParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtDCHitParamUgRsPgRsPgR),G__defined_typename("map<TArtRIDFMap,TArtDCHitPara*>"),-1,4,"bdc2_pmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtDCHitParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtDCHitParamUgRsPgRsPgR),G__defined_typename("map<TArtRIDFMap,TArtDCHitPara*>"),-1,4,"fdc0_pmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtDCHitParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtDCHitParamUgRsPgRsPgR),G__defined_typename("map<TArtRIDFMap,TArtDCHitPara*>"),-1,4,"fdc1_pmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtDCHitParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtDCHitParamUgRsPgRsPgR),G__defined_typename("map<TArtRIDFMap,TArtDCHitPara*>"),-1,4,"fdc2_pmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtDCHitParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtDCHitParamUgRsPgRsPgR),G__defined_typename("map<TArtRIDFMap,TArtDCHitPara*>"),-1,4,"rpdc_pmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtDCHitParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtDCHitParamUgRsPgRsPgR),G__defined_typename("map<TArtRIDFMap,TArtDCHitPara*>"),-1,4,"s1dc1_pmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtDCHitParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtDCHitParamUgRsPgRsPgR),G__defined_typename("map<TArtRIDFMap,TArtDCHitPara*>"),-1,4,"s1dc2_pmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOconstsPTArtNEBULAPlaParamUgRsPgRsPgR),G__defined_typename("TArtNEBULAPlaParaMap"),-1,4,"fNEBULAPlaUParaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOconstsPTArtNEBULAPlaParamUgRsPgRsPgR),G__defined_typename("TArtNEBULAPlaParaMap"),-1,4,"fNEBULAPlaDParaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOconstsPTArtHIMEPlaParamUgRsPgRsPgR),G__defined_typename("TArtHIMEPlaParaMap"),-1,4,"fHIMEPlaUParaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOconstsPTArtHIMEPlaParamUgRsPgRsPgR),G__defined_typename("TArtHIMEPlaParaMap"),-1,4,"fHIMEPlaDParaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOconstsPTArtNEBULAHPCParamUgRsPgRsPgR),G__defined_typename("TArtNEBULAHPCParaMap"),-1,4,"fNEBULAHPCParaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUcOlesslETArtTacquilaMapgRcOallocatorlEpairlEconstsPTArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgRsPgRsPgR),G__defined_typename("TArtNeuLANDPlaParaMap"),-1,4,"fNeuLANDPlaParaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtTacquilaMapcOconstsPTArtTacquilaParamUcOlesslETArtTacquilaMapgRcOallocatorlEpairlEconstsPTArtTacquilaMapcOconstsPTArtTacquilaParamUgRsPgRsPgR),G__defined_typename("TArtTacquilaParaMap"),-1,4,"fTacquilaParaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOconstsPTArtNEBULAPlaParamUgRsPgRsPgR),G__defined_typename("TArtNEBULAPlaParaMap"),-1,4,"fNeuLANDVETOPlaUParaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOconstsPTArtNEBULAPlaParamUgRsPgRsPgR),G__defined_typename("TArtNEBULAPlaParaMap"),-1,4,"fNeuLANDVETOPlaDParaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TList),-1,-1,4,"listOfHODPlaPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TList),-1,-1,4,"listOfRPTOFPlaPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TList),-1,-1,4,"listOfTEDCsIPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TList),-1,-1,4,"listOfBPCHitPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TList),-1,-1,4,"listOfBDC1HitPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TList),-1,-1,4,"listOfBDC2HitPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TList),-1,-1,4,"listOfFDC0HitPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TList),-1,-1,4,"listOfFDC1HitPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TList),-1,-1,4,"listOfFDC2HitPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TList),-1,-1,4,"listOfRPDCHitPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TList),-1,-1,4,"listOfS1DC1HitPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TList),-1,-1,4,"listOfS1DC2HitPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOTArtNEBULAPlaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtNEBULAPlaParamUgRsPgRsPgR),G__defined_typename("map<int,TArtNEBULAPlaPara*>"),-1,4,"fIDNEBULAPlaParaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOTArtHIMEPlaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtHIMEPlaParamUgRsPgRsPgR),G__defined_typename("map<int,TArtHIMEPlaPara*>"),-1,4,"fIDHIMEPlaParaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOTArtNEBULAHPCParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtNEBULAHPCParamUgRsPgRsPgR),G__defined_typename("map<int,TArtNEBULAHPCPara*>"),-1,4,"fIDNEBULAHPCParaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOTArtNeuLANDPlaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtNeuLANDPlaParamUgRsPgRsPgR),G__defined_typename("map<int,TArtNeuLANDPlaPara*>"),-1,4,"fIDNeuLANDPlaParaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOTArtTacquilaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtTacquilaParamUgRsPgRsPgR),G__defined_typename("map<int,TArtTacquilaPara*>"),-1,4,"fIDTacquilaParaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOTArtNEBULAPlaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtNEBULAPlaParamUgRsPgRsPgR),G__defined_typename("map<int,TArtNEBULAPlaPara*>"),-1,4,"fIDNeuLANDVETOPlaParaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtStoreManager),-1,-1,4,"fStoreManager=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtSAMURAIParameters),-1,-2,4,"fSAMURAIParameters=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibDCHit */
static void G__setup_memvarTArtCalibDCHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCHit));
   { TArtCalibDCHit *p; p=(TArtCalibDCHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"detectorid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),-1,-1,2,"fDCHitArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtDCHitParamUcOallocatorlETArtDCHitParamUgRsPgR),G__defined_typename("vector<TArtDCHitPara*>"),-1,2,"fDCHitParaArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtSAMURAIParameters),-1,-1,2,"setup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtStoreManager),-1,-1,2,"sman=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibS1DC1Hit */
static void G__setup_memvarTArtCalibS1DC1Hit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC1Hit));
   { TArtCalibS1DC1Hit *p; p=(TArtCalibS1DC1Hit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibBPCHit */
static void G__setup_memvarTArtCalibBPCHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBPCHit));
   { TArtCalibBPCHit *p; p=(TArtCalibBPCHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibBDC1Hit */
static void G__setup_memvarTArtCalibBDC1Hit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Hit));
   { TArtCalibBDC1Hit *p; p=(TArtCalibBDC1Hit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibBDC2Hit */
static void G__setup_memvarTArtCalibBDC2Hit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Hit));
   { TArtCalibBDC2Hit *p; p=(TArtCalibBDC2Hit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibFDC0Hit */
static void G__setup_memvarTArtCalibFDC0Hit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Hit));
   { TArtCalibFDC0Hit *p; p=(TArtCalibFDC0Hit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibFDC1Hit */
static void G__setup_memvarTArtCalibFDC1Hit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Hit));
   { TArtCalibFDC1Hit *p; p=(TArtCalibFDC1Hit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibFDC2Hit */
static void G__setup_memvarTArtCalibFDC2Hit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Hit));
   { TArtCalibFDC2Hit *p; p=(TArtCalibFDC2Hit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibBDC1Track */
static void G__setup_memvarTArtCalibBDC1Track(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Track));
   { TArtCalibBDC1Track *p; p=(TArtCalibBDC1Track*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibBDC2Track */
static void G__setup_memvarTArtCalibBDC2Track(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Track));
   { TArtCalibBDC2Track *p; p=(TArtCalibBDC2Track*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibFDC0Track */
static void G__setup_memvarTArtCalibFDC0Track(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Track));
   { TArtCalibFDC0Track *p; p=(TArtCalibFDC0Track*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibFDC1Track */
static void G__setup_memvarTArtCalibFDC1Track(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Track));
   { TArtCalibFDC1Track *p; p=(TArtCalibFDC1Track*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibFDC2Track */
static void G__setup_memvarTArtCalibFDC2Track(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Track));
   { TArtCalibFDC2Track *p; p=(TArtCalibFDC2Track*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibHODPla */
static void G__setup_memvarTArtCalibHODPla(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHODPla));
   { TArtCalibHODPla *p; p=(TArtCalibHODPla*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),-1,-1,4,"fHODPlaArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtHODPlaParamUcOallocatorlETArtHODPlaParamUgRsPgR),G__defined_typename("vector<TArtHODPlaPara*>"),-1,4,"fHODPlaParaArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtSAMURAIParameters),-1,-1,4,"setup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtStoreManager),-1,-1,4,"sman=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibSAMURAI */
static void G__setup_memvarTArtCalibSAMURAI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibSAMURAI));
   { TArtCalibSAMURAI *p; p=(TArtCalibSAMURAI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibCoin),-1,-1,4,"fCalibCoin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBPCHit),-1,-1,4,"fCalibBPCHit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Hit),-1,-1,4,"fCalibBDC1Hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Hit),-1,-1,4,"fCalibBDC2Hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Hit),-1,-1,4,"fCalibFDC0Hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Hit),-1,-1,4,"fCalibFDC1Hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Hit),-1,-1,4,"fCalibFDC2Hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Track),-1,-1,4,"fCalibBDC1Track=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Track),-1,-1,4,"fCalibBDC2Track=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Track),-1,-1,4,"fCalibFDC0Track=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Track),-1,-1,4,"fCalibFDC1Track=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Track),-1,-1,4,"fCalibFDC2Track=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHODPla),-1,-1,4,"fCalibHODPla=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtStoreManager),-1,-1,4,"sman=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtTacquilaMap */
static void G__setup_memvarTArtTacquilaMap(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaMap));
   { TArtTacquilaMap *p; p=(TArtTacquilaMap*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"sam=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"gtb=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"mod=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"ch=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"mapinfo[64]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtHODPlaPara */
static void G__setup_memvarTArtHODPlaPara(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPlaPara));
   { TArtHODPlaPara *p; p=(TArtHODPlaPara*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TString),-1,-1,4,"detname=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"tcal_up=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"tcal_down=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"toff_up=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"toff_down=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"t_off=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"qcal_up=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"qcal_down=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"qped_up=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"qped_down=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"tslew_up_a=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"tslew_up_b=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"tslew_down_a=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"tslew_down_b=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"zcoef_0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"zcoef_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"zcoef_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"zcoef_3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap),-1,-1,4,"map_tup=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap),-1,-1,4,"map_tdown=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap),-1,-1,4,"map_qup=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap),-1,-1,4,"map_qdown=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtRPTOFPlaPara */
static void G__setup_memvarTArtRPTOFPlaPara(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPlaPara));
   { TArtRPTOFPlaPara *p; p=(TArtRPTOFPlaPara*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TString),-1,-1,4,"detname=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"tcal_v775_ul=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"tcal_v775_dr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"toff_v775_ul=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"toff_v775_dr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"tcal_v1290_ul=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"tcal_v1290_dr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"toff_v1290_ul=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"toff_v1290_dr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"qcal_ul=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"qcal_dr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"qped_ul=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"qped_dr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap),-1,-1,4,"map_v775_tul=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap),-1,-1,4,"map_v775_tdr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap),-1,-1,4,"map_v1290_tul=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap),-1,-1,4,"map_v1290_tdr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap),-1,-1,4,"map_qul=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap),-1,-1,4,"map_qdr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtTEDCsIPara */
static void G__setup_memvarTArtTEDCsIPara(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsIPara));
   { TArtTEDCsIPara *p; p=(TArtTEDCsIPara*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"row=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"column=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtNEBULAPlaPara */
static void G__setup_memvarTArtNEBULAPlaPara(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPlaPara));
   { TArtNEBULAPlaPara *p; p=(TArtNEBULAPlaPara*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TString),-1,-1,4,"fDetName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSubLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDetPos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTUCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTUOff=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTUSlw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTUSlwLog[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQUCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQUPed=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTDCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTDOff=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTDSlw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTDSlwLog[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQDCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQDPed=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDTCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDTOff=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTAveOff=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQAveCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQAveCalAtt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQAveCalAtt2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTSlwPow=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTAveOffSlw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTAveOffDelta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTAveOffLight=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIgnore=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap),-1,-1,4,"fMapU=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap),-1,-1,4,"fMapD=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtNeuLANDPlaPara */
static void G__setup_memvarTArtNeuLANDPlaPara(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPlaPara));
   { TArtNeuLANDPlaPara *p; p=(TArtNeuLANDPlaPara*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TString),-1,-1,4,"fDetName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TString),-1,-1,4,"fDirection=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fBarID=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQCal[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQPed[2]=",0,"qdc pedestal");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTDC0ns[2]=",0,"tdc correspoinding to 0ns (calibration)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTDC25ns[2]=",0,"tdc correspoinding to 25ns:1clk (calibration)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTDC0ns_t17[2]=",0,"tdc correspoinding to 0ns of common stop (calibration)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTDC25ns_t17[2]=",0,"tdc correspoinding to 25ns:1clk of common stop (calibration)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTac2nsPara[2][2][4]=",0,"first index: U/D or L/R, second index: Tac or TacRef, third index: parameter index");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"fTCalChannel[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fTCalNs[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fTCalYep[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"tdiff_offset=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"tsync_offset=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"vscint=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ediff_offset=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"esync_offset=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"att=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"tof_zero=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"tof_clight=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaMap),-1,-1,4,"fMap[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtTacquilaPara */
static void G__setup_memvarTArtTacquilaPara(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaPara));
   { TArtTacquilaPara *p; p=(TArtTacquilaPara*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TString),-1,-1,4,"fDetName=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTac2Ns=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaMap),-1,-1,4,"fMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtHIMEPlaPara */
static void G__setup_memvarTArtHIMEPlaPara(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPlaPara));
   { TArtHIMEPlaPara *p; p=(TArtHIMEPlaPara*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPlaParacLcLDetDirectionDef),-1,-2,1,G__FastAllocString(2048).Format("Vert=%lldLL",(long long)TArtHIMEPlaPara::Vert).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPlaParacLcLDetDirectionDef),-1,-2,1,G__FastAllocString(2048).Format("Horiz=%lldLL",(long long)TArtHIMEPlaPara::Horiz).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TString),-1,-1,4,"fDetName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSubLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDetPos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTCal[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTOff[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTSlw[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTSlwLog[2][5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQCal[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQPed[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDTCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDTOff=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTAveOff=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQAveCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQAveCalAtt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQAveCalAtt2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIgnore=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPlaParacLcLDetDirectionDef),-1,-1,4,"fDetDirect=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap),-1,-1,4,"fMapU=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap),-1,-1,4,"fMapD=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtNEBULAHPCPara */
static void G__setup_memvarTArtNEBULAHPCPara(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPCPara));
   { TArtNEBULAHPCPara *p; p=(TArtNEBULAHPCPara*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TString),-1,-1,4,"fDetName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSubLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDetPos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTOff=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap),-1,-1,4,"fRIDFMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtNEBULAPla */
static void G__setup_memvarTArtNEBULAPla(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPla));
   { TArtNEBULAPla *p; p=(TArtNEBULAPla*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSubLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDetPos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fQURaw=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fQDRaw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQUPed=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQDPed=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQUCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQDCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQAvePed=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQAveCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLogQPed=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLogQCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fIvSqrtQUPed=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fIvSqrtQDPed=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fIvSqrtQAvePed=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTURaw=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTDRaw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTUCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTDCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTUSlw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTDSlw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDTRaw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDTCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDTSlw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTAveRaw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTAveCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTAveSlw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTUCalT0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTDCalT0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTUSlwT0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTDSlwT0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTAveCalT0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTAveSlwT0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTTOFGamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTTOFNeutron=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPosCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPosSlw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fFlightLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fFlightAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtNEBULAHPC */
static void G__setup_memvarTArtNEBULAHPC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPC));
   { TArtNEBULAHPC *p; p=(TArtNEBULAHPC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSubLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDetPos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTRaw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibNEBULAHPC */
static void G__setup_memvarTArtCalibNEBULAHPC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULAHPC));
   { TArtCalibNEBULAHPC *p; p=(TArtCalibNEBULAHPC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),G__defined_typename("TArtNEBULAHPCArray"),-1,4,"fNEBULAHPCArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),G__defined_typename("TArtNEBULAHPCParaArray"),-1,4,"fNEBULAHPCParaArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtSAMURAIParameters),-1,-1,4,"fSAMURAIParameters=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtStoreManager),-1,-1,4,"fStoreManager=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,4,"fIDNHPCMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,4,"fIDNHPCParaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMultiplicity=",0,"temporal member variable");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtHIMEPla */
static void G__setup_memvarTArtHIMEPla(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPla));
   { TArtHIMEPla *p; p=(TArtHIMEPla*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPlacLcLDetDirectionDef),-1,-2,1,G__FastAllocString(2048).Format("Vert=%lldLL",(long long)TArtHIMEPla::Vert).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPlacLcLDetDirectionDef),-1,-2,1,G__FastAllocString(2048).Format("Horiz=%lldLL",(long long)TArtHIMEPla::Horiz).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSubLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDetPos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHit=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fQRaw[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQPed[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQCal[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQAvePed=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQAveCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLogQPed=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLogQCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fIvSqrtQPed[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fIvSqrtQAvePed=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTRaw[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTCal[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTSlw[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDTRaw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDTCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDTSlw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTAveRaw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTAveCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTAveSlw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTCalT0[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTSlwT0[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTAveCalT0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTAveSlwT0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTTOFGamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTTOFNeutron=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPosCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPosSlw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fFlightLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fFlightAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPlacLcLDetDirectionDef),-1,-1,4,"fDetDirect=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibNEBULA */
static void G__setup_memvarTArtCalibNEBULA(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULA));
   { TArtCalibNEBULA *p; p=(TArtCalibNEBULA*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),-1,-1,4,"fT0Array=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),G__defined_typename("TArtNEBULAPlaArray"),-1,4,"fNEBULAPlaArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),G__defined_typename("TArtNEBULAPlaParaArray"),-1,4,"fNEBULAPlaParaArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtSAMURAIParameters),-1,-1,4,"fSAMURAIParameters=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtStoreManager),-1,-1,4,"fStoreManager=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULAMult),-1,-1,4,"fMult=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,4,"fIDNPlaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,4,"fIDNPlaParaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtRecoNeutron */
static void G__setup_memvarTArtRecoNeutron(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoNeutron));
   { TArtRecoNeutron *p; p=(TArtRecoNeutron*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),-1,-1,4,"nebulaplaarray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),-1,-1,4,"fNeutronArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtStoreManager),-1,-1,4,"fStoreManager=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtNEBULAFilter */
static void G__setup_memvarTArtNEBULAFilter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAFilter));
   { TArtNEBULAFilter *p; p=(TArtNEBULAFilter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibHIME */
static void G__setup_memvarTArtCalibHIME(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHIME));
   { TArtCalibHIME *p; p=(TArtCalibHIME*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),-1,-1,4,"fT0Array=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),G__defined_typename("TArtHIMEPlaArray"),-1,4,"fHIMEPlaArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),G__defined_typename("TArtHIMEPlaParaArray"),-1,4,"fHIMEPlaParaArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtSAMURAIParameters),-1,-1,4,"fSAMURAIParameters=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtStoreManager),-1,-1,4,"fStoreManager=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHIMEMult),-1,-1,4,"fMult=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,4,"fIDNPlaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,4,"fIDNPlaParaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtHIMEFilter */
static void G__setup_memvarTArtHIMEFilter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEFilter));
   { TArtHIMEFilter *p; p=(TArtHIMEFilter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtDCTrack */
static void G__setup_memvarTArtDCTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCTrack));
   { TArtDCTrack *p; p=(TArtDCTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nhitlayer=",0,"number of hit layer");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"chi2=",0,"track fit chi2 ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ndf=",0,"track fit ndf");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"cx[2]=",0,"track center position, 0: x, 1: y ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ca[2]=",0,"track center angle,  0: x, 1: y ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"hitid=",0,"local hit id. i.e. hit = hitarray->At(hitid) ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"dl=",0,"local drift length");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"lx=",0,"local hit x-position");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"lz=",0,"local hit z-position");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"plane_id=",0,"hit plane id");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"dcangle=",0,"DC angle");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"fsign=",0,"DC angle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibDCTrack */
static void G__setup_memvarTArtCalibDCTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCTrack));
   { TArtCalibDCTrack *p; p=(TArtCalibDCTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TString),-1,-1,2,"indataname=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,2,"layerdirs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"tdczero=",0,"tdczero for dl calculation: dl=(tdczero-tdc)*driftv");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"driftv=",0,"mm/tdcch");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"pitch[14]=",0,"mm");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TF1),-1,-1,2,"stcfunc[14]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"minhitlayer=",0,"number of required hit layer ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"tdcwindow[2]=",0,"tdc bin window for dl calc.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"tdcint[14]=",0,"tdc integral for dl calc.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"tdc2mm[14][5000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TString),-1,-1,4,"layer_pattern=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nlayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nlayer_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nlayer_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nlayer_u=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nlayer_v=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fyDCangle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fuDCangle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fvDCangle=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"layer_map=",0,"map for global layer -> local (x,y,u or v) layer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),-1,-1,4,"fDCTrackArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtStoreManager),-1,-1,4,"sman=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtDCHitmUcOallocatorlETArtDCHitmUgRsPgR),G__defined_typename("vector<TArtDCHit*>"),-1,4,"hits_buffer=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtDCHitmUcOallocatorlETArtDCHitmUgRsPgR),G__defined_typename("vector<TArtDCHit*>"),-1,4,"hits_buffer_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtDCHitmUcOallocatorlETArtDCHitmUgRsPgR),G__defined_typename("vector<TArtDCHit*>"),-1,4,"hits_buffer_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtDCHitmUcOallocatorlETArtDCHitmUgRsPgR),G__defined_typename("vector<TArtDCHit*>"),-1,4,"hits_buffer_u=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtDCHitmUcOallocatorlETArtDCHitmUgRsPgR),G__defined_typename("vector<TArtDCHit*>"),-1,4,"hits_buffer_v=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibRPDCTrack */
static void G__setup_memvarTArtCalibRPDCTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPDCTrack));
   { TArtCalibRPDCTrack *p; p=(TArtCalibRPDCTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtHODPla */
static void G__setup_memvarTArtHODPla(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPla));
   { TArtHODPla *p; p=(TArtHODPla*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTURaw=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTDRaw=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fQURaw=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fQDRaw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQUPed=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQDPed=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQUCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQDCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQAveRaw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQAvePed=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQAveCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTAveCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTUCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTDCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTUSlw=",0,"after slewing correction");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTDSlw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTAveSlw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"zcoef[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtNeuLANDPla */
static void G__setup_memvarTArtNeuLANDPla(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPla));
   { TArtNeuLANDPla *p; p=(TArtNeuLANDPla*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fBarID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fQRaw[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQCal[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTac[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTacRef[2]=",0,"reference tac, Tac 16");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTCycle[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTRaw[2]=",0,"traw = tac1 (calibrated in ns) + 25*cnt - t17 (calibrated in ns)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTCal[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isFired[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fsam=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fgtb=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fmod=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fch=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibNeuLAND */
static void G__setup_memvarTArtCalibNeuLAND(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNeuLAND));
   { TArtCalibNeuLAND *p; p=(TArtCalibNeuLAND*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),-1,-1,4,"fT0Array=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),G__defined_typename("TArtNeuLANDPlaArray"),-1,4,"fNeuLANDPlaArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPla),-1,-1,4,"fNeuLANDMasterStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),G__defined_typename("TArtNeuLANDPlaParaArray"),-1,4,"fNeuLANDPlaParaArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtSAMURAIParameters),-1,-1,4,"fSAMURAIParameters=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtStoreManager),-1,-1,4,"fStoreManager=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,4,"fIDNPlaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,4,"fIDNPlaParaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TList),-1,-1,4,"tac16_array=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibS1DC2Track */
static void G__setup_memvarTArtCalibS1DC2Track(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC2Track));
   { TArtCalibS1DC2Track *p; p=(TArtCalibS1DC2Track*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtTZero */
static void G__setup_memvarTArtTZero(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTZero));
   { TArtTZero *p; p=(TArtTZero*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fT0Cal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fT0Slw=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibS1DC1Track */
static void G__setup_memvarTArtCalibS1DC1Track(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC1Track));
   { TArtCalibS1DC1Track *p; p=(TArtCalibS1DC1Track*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtNeutron */
static void G__setup_memvarTArtNeutron(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeutron));
   { TArtNeutron *p; p=(TArtNeutron*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMass=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMeVee=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPos[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBeta[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fGamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fP[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPAbs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTheta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtICF */
static void G__setup_memvarTArtICF(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtICF));
   { TArtICF *p; p=(TArtICF*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"zcoef[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ionpair=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nhitchannel=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtIC),-1,-1,4,"ic[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalMeVSqSum=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalMeVAvSum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtRPTOFPla */
static void G__setup_memvarTArtRPTOFPla(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPla));
   { TArtRPTOFPla *p; p=(TArtRPTOFPla*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTULV775Raw=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTDRV775Raw=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTULV1290Raw=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTDRV1290Raw=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fQULRaw=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fQDRRaw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQULPed=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQDRPed=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQULCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQDRCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQAveRaw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQAvePed=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fQAveCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fV775Time=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fV775TimeUL=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fV775TimeDR=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fV1290Time=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fV1290TimeUL=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fV1290TimeDR=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibRPTOFPla */
static void G__setup_memvarTArtCalibRPTOFPla(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPTOFPla));
   { TArtCalibRPTOFPla *p; p=(TArtCalibRPTOFPla*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),-1,-1,4,"fRPTOFPlaArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),-1,-1,4,"fRPTOFWPlaArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtRPTOFPlaParamUcOallocatorlETArtRPTOFPlaParamUgRsPgR),G__defined_typename("vector<TArtRPTOFPlaPara*>"),-1,4,"fRPTOFPlaParaArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtRPTOFPlaParamUcOallocatorlETArtRPTOFPlaParamUgRsPgR),G__defined_typename("vector<TArtRPTOFPlaPara*>"),-1,4,"fRPTOFWPlaParaArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtSAMURAIParameters),-1,-1,4,"setup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtStoreManager),-1,-1,4,"sman=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibNEBULAMult */
static void G__setup_memvarTArtCalibNEBULAMult(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULAMult));
   { TArtCalibNEBULAMult *p; p=(TArtCalibNEBULAMult*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fMultiplicity_N)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMultiplicity_N=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMultiplicity_N1)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMultiplicity_N1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMultiplicity_N2)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMultiplicity_N2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMultiplicity_V1)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMultiplicity_V1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMultiplicity_V2)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMultiplicity_V2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMultiplicity_N11)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMultiplicity_N11=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMultiplicity_N12)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMultiplicity_N12=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMultiplicity_N21)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMultiplicity_N21=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMultiplicity_N22)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMultiplicity_N22=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibTEDCsI */
static void G__setup_memvarTArtCalibTEDCsI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibTEDCsI));
   { TArtCalibTEDCsI *p; p=(TArtCalibTEDCsI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),-1,-1,4,"fTEDCsIArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtTEDCsIParamUcOallocatorlETArtTEDCsIParamUgRsPgR),G__defined_typename("vector<TArtTEDCsIPara*>"),-1,4,"fTEDCsIParaArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtSAMURAIParameters),-1,-1,4,"setup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtStoreManager),-1,-1,4,"sman=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtRecoFragment */
static void G__setup_memvarTArtRecoFragment(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoFragment));
   { TArtRecoFragment *p; p=(TArtRecoFragment*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),-1,-1,4,"fFragmentArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),-1,-1,4,"hod_array=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtStoreManager),-1,-1,4,"sman=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtPlastic),-1,-1,4,"pla_tzero=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"l_pla2target=",0,"distance of tzero-pla to target");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR),G__defined_typename("map<UInt_t,Double_t>"),-1,4,"tof_offset=",0,"tof offset");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"BDCs_dist=",0,"distance between BDC centers");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"BDC1_Tgt_dist=",0,"distance between center of BDC1 and Target");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"Tgt_FDC1_dist=",0,"- TargetThickness/2*/ ; // measured");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"BDC2X0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"BDC2Y0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"QtoZ_a=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"QtoZ_b=",0,"Z = Q *a + b ");
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-1,4,"clight=",0,"speed of light mm/nsec");
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-1,4,"mnucleon=",0,"nucleon mass in MeV");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"mat0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"mat1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"mat2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"inv_mat2=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fMatReady=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fRKtraceReady=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fMultDimReady=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"center_brho=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"r_gNVariables=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"r_gNCoefficients=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"r_gDMean=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"r_gXMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"r_gXMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"r_gCoefficient=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"r_gPower=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"l_gNVariables=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"l_gNCoefficients=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"l_gDMean=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"l_gXMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"l_gXMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"l_gCoefficient=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"l_gPower=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtRecoSAMURAI */
static void G__setup_memvarTArtRecoSAMURAI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoSAMURAI));
   { TArtRecoSAMURAI *p; p=(TArtRecoSAMURAI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIPS),-1,-1,4,"rips=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoRIPS),-1,-1,4,"fRecoRIPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoTOF),-1,-1,4,"fRecoTOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoBeam),-1,-1,4,"fRecoBeam=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoFragment),-1,-1,4,"fRecoFragment=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtStoreManager),-1,-1,4,"sman=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalcGlobalTrack */
static void G__setup_memvarTArtCalcGlobalTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalcGlobalTrack));
   { TArtCalcGlobalTrack *p; p=(TArtCalcGlobalTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCTrack),-1,-1,4,"In_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCTrack),-1,-1,4,"Out_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"iniP_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"l_FDC2HOD_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_RKHitPointContainer),-1,-1,4,"hPntCont_=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"status_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nIteration_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"chisqr_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"diff_[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TVector3),-1,-1,4,"priPos_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TVector3),-1,-1,4,"priMom_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"pLenTtoT_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"pLenTot_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_RKCordParameter),-1,-1,4,"CPval_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_vectorlETArtCalcGlobalTrackcLcLTrackHitmUcOallocatorlETArtCalcGlobalTrackcLcLTrackHitmUgRsPgR),G__defined_typename("vector<TrackHit*>"),-1,4,"hitArray_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"MaxIteraction=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"MaxChiSqr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"MinDeltaChiSqrR=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"InitialChiSqr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibNeuLANDVETO */
static void G__setup_memvarTArtCalibNeuLANDVETO(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNeuLANDVETO));
   { TArtCalibNeuLANDVETO *p; p=(TArtCalibNeuLANDVETO*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),-1,-1,4,"fT0Array=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),-1,-1,4,"fNeuLANDVETOPlaArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),-1,-1,4,"fNeuLANDVETOPlaParaArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtSAMURAIParameters),-1,-1,4,"fSAMURAIParameters=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtStoreManager),-1,-1,4,"fStoreManager=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,4,"fIDNPlaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,4,"fIDNPlaParaMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPla),-1,-1,4,"fNeuLANDVETOPlaMasterStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtFragment */
static void G__setup_memvarTArtFragment(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtFragment));
   { TArtFragment *p; p=(TArtFragment*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDelta=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"rktrace_status=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TVector3),-1,-1,4,"primary_position=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TVector3),-1,-1,4,"primary_momentum=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"path_length2hod=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fChi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fnHit=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fnIter=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDiff[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTof=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBeta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAoQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBrho=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTzero=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTzeroQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fHODT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fHODQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibSAMURAITZero */
static void G__setup_memvarTArtCalibSAMURAITZero(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibSAMURAITZero));
   { TArtCalibSAMURAITZero *p; p=(TArtCalibSAMURAITZero*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),-1,-1,4,"fT0Array=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray),-1,-1,4,"pla_array=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtStoreManager),-1,-1,4,"fStoreManager=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibHIMEMult */
static void G__setup_memvarTArtCalibHIMEMult(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHIMEMult));
   { TArtCalibHIMEMult *p; p=(TArtCalibHIMEMult*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fMultiplicity_N)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMultiplicity_N[6]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMultiplicity_V)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMultiplicity_V=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibRPDCHit */
static void G__setup_memvarTArtCalibRPDCHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPDCHit));
   { TArtCalibRPDCHit *p; p=(TArtCalibRPDCHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibICF */
static void G__setup_memvarTArtCalibICF(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibICF));
   { TArtCalibICF *p; p=(TArtCalibICF*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibIC),-1,-1,4,"fCalibIC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TArtCalibS1DC2Hit */
static void G__setup_memvarTArtCalibS1DC2Hit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC2Hit));
   { TArtCalibS1DC2Hit *p; p=(TArtCalibS1DC2Hit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__anasamurai_dictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvaranasamurai_dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTArtTEDCsI(void) {
   /* TArtTEDCsI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsI));
   G__memfunc_setup("TArtTEDCsI",855,G__anasamurai_dict_186_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsI), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRow",612,G__anasamurai_dict_186_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetColumn",922,G__anasamurai_dict_186_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRow",600,G__anasamurai_dict_186_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetColumn",910,G__anasamurai_dict_186_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_186_0_6, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtTEDCsI::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_186_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtTEDCsI::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_186_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtTEDCsI::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_186_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtTEDCsI::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_186_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_186_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtTEDCsI::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_186_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtTEDCsI::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_186_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtTEDCsI::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_186_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtTEDCsI::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtTEDCsI", 855, G__anasamurai_dict_186_0_18, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsI), -1, 0, 1, 1, 1, 0, "u 'TArtTEDCsI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtTEDCsI", 981, G__anasamurai_dict_186_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_186_0_20, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsI), -1, 1, 1, 1, 1, 0, "u 'TArtTEDCsI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDCHitPara(void) {
   /* TArtDCHitPara */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHitPara));
   G__memfunc_setup("TArtDCHitPara",1195,G__anasamurai_dict_223_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHitPara), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtDCHitPara",1195,G__anasamurai_dict_223_0_2, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHitPara), -1, 0, 12, 1, 1, 0, 
"i - 'Int_t' 0 - i u 'TString' - 0 - n "
"i - 'Int_t' 0 - f i - 'Int_t' 0 - l "
"i - 'Int_t' 0 - idp i - 'Int_t' 0 - wid "
"d - 'Double_t' 0 - wp d - 'Double_t' 0 - wz "
"d - 'Double_t' 0 - tz d - 'Double_t' 0 - c0 "
"d - 'Double_t' 0 - c1 d - 'Double_t' 0 - c2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPalameters",1338,G__anasamurai_dict_223_0_3, 121, -1, -1, 0, 12, 1, 1, 0, 
"i - 'Int_t' 0 - i u 'TString' - 0 - n "
"i - 'Int_t' 0 - f i - 'Int_t' 0 - l "
"i - 'Int_t' 0 - idp i - 'Int_t' 0 - wid "
"d - 'Double_t' 0 - wp d - 'Double_t' 0 - wz "
"d - 'Double_t' 0 - tz d - 'Double_t' 0 - c0 "
"d - 'Double_t' 0 - c1 d - 'Double_t' 0 - c2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMap",586,G__anasamurai_dict_223_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - dt i - 'Int_t' 0 - tg "
"i - 'Int_t' 0 - tc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__anasamurai_dict_223_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorName",1499,G__anasamurai_dict_223_0_6, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFpl",578,G__anasamurai_dict_223_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLayer",797,G__anasamurai_dict_223_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlaneID",925,G__anasamurai_dict_223_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWireID",836,G__anasamurai_dict_223_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWirePosition",1548,G__anasamurai_dict_223_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWireZPosition",1638,G__anasamurai_dict_223_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTZeroOffset",1403,G__anasamurai_dict_223_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSTCCoef",903,G__anasamurai_dict_223_0_14, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDCMap",793,G__anasamurai_dict_223_0_15, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_223_0_16, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtDCHitPara::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_223_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtDCHitPara::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_223_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtDCHitPara::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_223_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtDCHitPara::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_223_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_223_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtDCHitPara::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_223_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtDCHitPara::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_223_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtDCHitPara::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_223_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtDCHitPara::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtDCHitPara", 1195, G__anasamurai_dict_223_0_28, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHitPara), -1, 0, 1, 1, 1, 0, "u 'TArtDCHitPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtDCHitPara", 1321, G__anasamurai_dict_223_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_223_0_30, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHitPara), -1, 1, 1, 1, 1, 0, "u 'TArtDCHitPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDCHit(void) {
   /* TArtDCHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHit));
   G__memfunc_setup("TArtDCHit",807,G__anasamurai_dict_224_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDC",519,G__anasamurai_dict_224_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrailTDC",1027,G__anasamurai_dict_224_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDC",507,G__anasamurai_dict_224_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrailTDC",1015,G__anasamurai_dict_224_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosition",1153,G__anasamurai_dict_224_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", "position w.r.t. wire", (void*) NULL, 1);
   G__memfunc_setup("GetPosition",1141,G__anasamurai_dict_224_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetWireDirection",1636,G__anasamurai_dict_224_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetWireDirection",1636,G__anasamurai_dict_224_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - str", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetWireID",848,G__anasamurai_dict_224_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetWirePosition",1560,G__anasamurai_dict_224_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetWireZPosition",1650,G__anasamurai_dict_224_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLayer",809,G__anasamurai_dict_224_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPlaneID",937,G__anasamurai_dict_224_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSTCCoef",915,G__anasamurai_dict_224_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetWireDirection",1624,G__anasamurai_dict_224_0_16, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetWireID",836,G__anasamurai_dict_224_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetWirePosition",1548,G__anasamurai_dict_224_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetWireZPosition",1638,G__anasamurai_dict_224_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLayer",797,G__anasamurai_dict_224_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPlaneID",925,G__anasamurai_dict_224_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSTCCoef",903,G__anasamurai_dict_224_0_22, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHitID",734,G__anasamurai_dict_224_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHitID",722,G__anasamurai_dict_224_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsEqual",692,G__anasamurai_dict_224_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_224_0_28, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtDCHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_224_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtDCHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_224_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtDCHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_224_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtDCHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_224_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_224_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtDCHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_224_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtDCHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_224_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtDCHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_224_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtDCHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtDCHit", 807, G__anasamurai_dict_224_0_40, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHit), -1, 0, 1, 1, 1, 0, "u 'TArtDCHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtDCHit", 933, G__anasamurai_dict_224_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_224_0_42, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHit), -1, 1, 1, 1, 1, 0, "u 'TArtDCHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtSAMURAIParameters(void) {
   /* TArtSAMURAIParameters */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtSAMURAIParameters));
   G__memfunc_setup("TArtSAMURAIParameters",1953,G__anasamurai_dict_225_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtSAMURAIParameters), -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"SAMURAIParameters\"' name C - - 10 '\"SAMURAIParameters\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__anasamurai_dict_225_0_2, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtSAMURAIParameters), -1, 0, 2, 3, 1, 0, 
"C - - 10 '\"SAMURAIParameters\"' name C - - 10 '\"SAMURAIParameters\"' title", (char*)NULL, (void*) G__func2void( (TArtSAMURAIParameters* (*)(const char*, const char*))(&TArtSAMURAIParameters::Instance) ), 0);
   G__memfunc_setup("Delete",595,G__anasamurai_dict_225_0_3, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtSAMURAIParameters::Delete) ), 0);
   G__memfunc_setup("LoadParameter",1313,G__anasamurai_dict_225_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - xmlfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadNeuLANDTCal",1323,G__anasamurai_dict_225_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - csvfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadTCal",740,G__anasamurai_dict_225_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - cfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListOfHODPlaPara",2010,G__anasamurai_dict_225_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListOfRPTOFPlaPara",2186,G__anasamurai_dict_225_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListOfTEDCsIPara",1982,G__anasamurai_dict_225_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListOfBPCHitPara",2012,G__anasamurai_dict_225_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListOfBDC1HitPara",2049,G__anasamurai_dict_225_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListOfBDC2HitPara",2050,G__anasamurai_dict_225_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListOfFDC0HitPara",2052,G__anasamurai_dict_225_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListOfFDC1HitPara",2053,G__anasamurai_dict_225_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListOfFDC2HitPara",2054,G__anasamurai_dict_225_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListOfRPDCHitPara",2096,G__anasamurai_dict_225_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListOfS1DC1HitPara",2115,G__anasamurai_dict_225_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListOfS1DC2HitPara",2116,G__anasamurai_dict_225_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListOfNEBULAPlaPara",2230,G__anasamurai_dict_225_0_19, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListOfHIMEPlaPara",2082,G__anasamurai_dict_225_0_20, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListOfNeuLANDPlaPara",2374,G__anasamurai_dict_225_0_21, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListOfNeuLANDVETOPlaPara",2692,G__anasamurai_dict_225_0_22, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfHODPlaPara",1773,G__anasamurai_dict_225_0_23, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfRPTOFPlaPara",1949,G__anasamurai_dict_225_0_24, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfTEDCsIPara",1745,G__anasamurai_dict_225_0_25, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfBPCHitPara",1775,G__anasamurai_dict_225_0_26, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfBDC1HitPara",1812,G__anasamurai_dict_225_0_27, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfBDC2HitPara",1813,G__anasamurai_dict_225_0_28, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfFDC0HitPara",1815,G__anasamurai_dict_225_0_29, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfFDC1HitPara",1816,G__anasamurai_dict_225_0_30, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfFDC2HitPara",1817,G__anasamurai_dict_225_0_31, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfRPDCHitPara",1859,G__anasamurai_dict_225_0_32, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfS1DC1HitPara",1878,G__anasamurai_dict_225_0_33, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfS1DC2HitPara",1879,G__anasamurai_dict_225_0_34, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindHODPlaPara",1277,G__anasamurai_dict_225_0_35, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPlaPara), -1, 0, 1, 1, 1, 9, "U 'TArtRIDFMap' - 0 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindRPTOFPlaPara",1453,G__anasamurai_dict_225_0_36, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPlaPara), -1, 0, 1, 1, 1, 9, "U 'TArtRIDFMap' - 0 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindTEDCsIPara",1249,G__anasamurai_dict_225_0_37, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsIPara), -1, 0, 1, 1, 1, 9, "U 'TArtRIDFMap' - 0 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindBPCHitPara",1279,G__anasamurai_dict_225_0_38, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHitPara), -1, 0, 1, 1, 1, 9, "U 'TArtRIDFMap' - 0 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindBDC1HitPara",1316,G__anasamurai_dict_225_0_39, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHitPara), -1, 0, 1, 1, 1, 9, "U 'TArtRIDFMap' - 0 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindBDC2HitPara",1317,G__anasamurai_dict_225_0_40, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHitPara), -1, 0, 1, 1, 1, 9, "U 'TArtRIDFMap' - 0 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindFDC0HitPara",1319,G__anasamurai_dict_225_0_41, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHitPara), -1, 0, 1, 1, 1, 9, "U 'TArtRIDFMap' - 0 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindFDC1HitPara",1320,G__anasamurai_dict_225_0_42, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHitPara), -1, 0, 1, 1, 1, 9, "U 'TArtRIDFMap' - 0 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindFDC2HitPara",1321,G__anasamurai_dict_225_0_43, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHitPara), -1, 0, 1, 1, 1, 9, "U 'TArtRIDFMap' - 0 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindRPDCHitPara",1363,G__anasamurai_dict_225_0_44, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHitPara), -1, 0, 1, 1, 1, 9, "U 'TArtRIDFMap' - 0 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindS1DC1HitPara",1382,G__anasamurai_dict_225_0_45, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHitPara), -1, 0, 1, 1, 1, 9, "U 'TArtRIDFMap' - 0 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindS1DC2HitPara",1383,G__anasamurai_dict_225_0_46, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHitPara), -1, 0, 1, 1, 1, 9, "U 'TArtRIDFMap' - 0 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNEBULAPlaUPara",1582,G__anasamurai_dict_225_0_47, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPlaPara), -1, 0, 1, 1, 1, 9, "u 'TArtRIDFMap' - 11 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNEBULAPlaDPara",1565,G__anasamurai_dict_225_0_48, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPlaPara), -1, 0, 1, 1, 1, 9, "u 'TArtRIDFMap' - 11 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNEBULAPlaPara",1497,G__anasamurai_dict_225_0_49, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPlaPara), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - id", "find by id", (void*) NULL, 0);
   G__memfunc_setup("FindHIMEPlaUPara",1434,G__anasamurai_dict_225_0_50, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPlaPara), -1, 0, 1, 1, 1, 9, "u 'TArtRIDFMap' - 11 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindHIMEPlaDPara",1417,G__anasamurai_dict_225_0_51, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPlaPara), -1, 0, 1, 1, 1, 9, "u 'TArtRIDFMap' - 11 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindHIMEPlaPara",1349,G__anasamurai_dict_225_0_52, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPlaPara), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - id", "find by id", (void*) NULL, 0);
   G__memfunc_setup("FindNEBULAHPCPara",1431,G__anasamurai_dict_225_0_53, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPCPara), -1, 0, 1, 1, 1, 9, "u 'TArtRIDFMap' - 11 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNEBULAHPCPara",1431,G__anasamurai_dict_225_0_54, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPCPara), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - id", "find by id", (void*) NULL, 0);
   G__memfunc_setup("FindNeuLANDPlaPara",1641,G__anasamurai_dict_225_0_55, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPlaPara), -1, 0, 1, 1, 1, 9, "U 'TArtTacquilaMap' - 10 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNeuLANDPlaPara",1641,G__anasamurai_dict_225_0_56, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPlaPara), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - id", "find by id", (void*) NULL, 0);
   G__memfunc_setup("FindTacquilaPara",1593,G__anasamurai_dict_225_0_57, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaPara), -1, 0, 1, 1, 1, 9, "U 'TArtTacquilaMap' - 10 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindTacquilaPara",1593,G__anasamurai_dict_225_0_58, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaPara), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - id", "find by id", (void*) NULL, 0);
   G__memfunc_setup("FindNeuLANDVETOPlaUPara",2044,G__anasamurai_dict_225_0_59, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPlaPara), -1, 0, 1, 1, 1, 9, "u 'TArtRIDFMap' - 11 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNeuLANDVETOPlaDPara",2027,G__anasamurai_dict_225_0_60, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPlaPara), -1, 0, 1, 1, 1, 9, "u 'TArtRIDFMap' - 11 - rmap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNeuLANDVETOPlaPara",1959,G__anasamurai_dict_225_0_61, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPlaPara), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - id", "find by id", (void*) NULL, 0);
   G__memfunc_setup("ParseParaList",1307,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TXMLNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseDCHitPara",1323,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHitPara), -1, 0, 2, 1, 4, 0, 
"U 'TXMLNode' - 0 - node U 'map<TArtRIDFMap,TArtDCHitPara*,less<TArtRIDFMap>,allocator<pair<const TArtRIDFMap,TArtDCHitPara*> > >' 'map<TArtRIDFMap,TArtDCHitPara*>' 0 - map", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseHODPlaPara",1399,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPlaPara), -1, 0, 1, 1, 4, 0, "U 'TXMLNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseRPTOFPlaPara",1575,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPlaPara), -1, 0, 1, 1, 4, 0, "U 'TXMLNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseTEDCsIPara",1371,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsIPara), -1, 0, 1, 1, 4, 0, "U 'TXMLNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseNEBULAPlaPara",1619,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPlaPara), -1, 0, 1, 1, 4, 0, "U 'TXMLNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseHIMEPlaPara",1471,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPlaPara), -1, 0, 1, 1, 4, 0, "U 'TXMLNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseNEBULAHPCPara",1553,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPCPara), -1, 0, 1, 1, 4, 0, "U 'TXMLNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseNeuLANDPlaPara",1763,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPlaPara), -1, 0, 1, 1, 4, 0, "U 'TXMLNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseTacquilaPara",1715,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaPara), -1, 0, 1, 1, 4, 0, "U 'TXMLNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseNeuLANDVETOPlaPara",2081,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPlaPara), -1, 0, 1, 1, 4, 0, "U 'TXMLNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_225_0_73, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtSAMURAIParameters::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_225_0_74, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtSAMURAIParameters::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_225_0_75, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtSAMURAIParameters::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_225_0_76, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtSAMURAIParameters::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_225_0_80, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_225_0_81, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtSAMURAIParameters::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_225_0_82, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtSAMURAIParameters::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_225_0_83, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtSAMURAIParameters::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_225_0_84, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtSAMURAIParameters::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtSAMURAIParameters", 1953, G__anasamurai_dict_225_0_85, (int) ('i'), 
G__get_linked_tagnum(&G__anasamurai_dictLN_TArtSAMURAIParameters), -1, 0, 1, 1, 1, 0, "u 'TArtSAMURAIParameters' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtSAMURAIParameters", 2079, G__anasamurai_dict_225_0_86, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_225_0_87, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtSAMURAIParameters), -1, 1, 1, 1, 1, 0, "u 'TArtSAMURAIParameters' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibDCHit(void) {
   /* TArtCalibDCHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCHit));
   G__memfunc_setup("LoadData",762,G__anasamurai_dict_227_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadData",762,G__anasamurai_dict_227_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDCHitArray",1227,G__anasamurai_dict_227_0_6, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumDCHit",1020,G__anasamurai_dict_227_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDCHit",716,G__anasamurai_dict_227_0_8, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHit), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDCHitPara",1104,G__anasamurai_dict_227_0_9, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHitPara), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindDCHit",813,G__anasamurai_dict_227_0_10, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHit), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindDCHit",813,G__anasamurai_dict_227_0_11, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHit), -1, 0, 1, 1, 1, 0, "U 'TString' - 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindDCHit",813,G__anasamurai_dict_227_0_12, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCHit), -1, 0, 1, 1, 1, 0, "C - - 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_227_0_13, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibDCHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_227_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibDCHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_227_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibDCHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_227_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibDCHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_227_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_227_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibDCHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_227_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibDCHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_227_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibDCHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_227_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibDCHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibDCHit", 1408, G__anasamurai_dict_227_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_227_0_26, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCHit), -1, 1, 1, 1, 1, 0, "u 'TArtCalibDCHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibS1DC1Hit(void) {
   /* TArtCalibS1DC1Hit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC1Hit));
   G__memfunc_setup("TArtCalibS1DC1Hit",1463,G__anasamurai_dict_232_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC1Hit), -1, 0, 1, 1, 1, 0, "u 'TString' - 10 '\"SAMURAIS1DC1Hit\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_232_0_3, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibS1DC1Hit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_232_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibS1DC1Hit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_232_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibS1DC1Hit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_232_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibS1DC1Hit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_232_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_232_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibS1DC1Hit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_232_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibS1DC1Hit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_232_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibS1DC1Hit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_232_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibS1DC1Hit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibS1DC1Hit", 1463, G__anasamurai_dict_232_0_15, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC1Hit), -1, 0, 1, 1, 1, 0, "u 'TArtCalibS1DC1Hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibS1DC1Hit", 1589, G__anasamurai_dict_232_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_232_0_17, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC1Hit), -1, 1, 1, 1, 1, 0, "u 'TArtCalibS1DC1Hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibBPCHit(void) {
   /* TArtCalibBPCHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBPCHit));
   G__memfunc_setup("TArtCalibBPCHit",1360,G__anasamurai_dict_234_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBPCHit), -1, 0, 1, 1, 1, 0, "u 'TString' - 10 '\"SAMURAIBPCHit\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_234_0_3, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibBPCHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_234_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibBPCHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_234_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibBPCHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_234_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibBPCHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_234_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_234_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibBPCHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_234_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibBPCHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_234_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibBPCHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_234_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibBPCHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibBPCHit", 1360, G__anasamurai_dict_234_0_15, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBPCHit), -1, 0, 1, 1, 1, 0, "u 'TArtCalibBPCHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibBPCHit", 1486, G__anasamurai_dict_234_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_234_0_17, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBPCHit), -1, 1, 1, 1, 1, 0, "u 'TArtCalibBPCHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibBDC1Hit(void) {
   /* TArtCalibBDC1Hit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Hit));
   G__memfunc_setup("TArtCalibBDC1Hit",1397,G__anasamurai_dict_235_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Hit), -1, 0, 1, 1, 1, 0, "u 'TString' - 10 '\"SAMURAIBDC1Hit\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_235_0_3, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibBDC1Hit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_235_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibBDC1Hit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_235_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibBDC1Hit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_235_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibBDC1Hit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_235_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_235_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibBDC1Hit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_235_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibBDC1Hit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_235_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibBDC1Hit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_235_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibBDC1Hit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibBDC1Hit", 1397, G__anasamurai_dict_235_0_15, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Hit), -1, 0, 1, 1, 1, 0, "u 'TArtCalibBDC1Hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibBDC1Hit", 1523, G__anasamurai_dict_235_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_235_0_17, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Hit), -1, 1, 1, 1, 1, 0, "u 'TArtCalibBDC1Hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibBDC2Hit(void) {
   /* TArtCalibBDC2Hit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Hit));
   G__memfunc_setup("TArtCalibBDC2Hit",1398,G__anasamurai_dict_236_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Hit), -1, 0, 1, 1, 1, 0, "u 'TString' - 10 '\"SAMURAIBDC2Hit\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_236_0_3, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibBDC2Hit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_236_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibBDC2Hit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_236_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibBDC2Hit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_236_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibBDC2Hit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_236_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_236_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibBDC2Hit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_236_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibBDC2Hit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_236_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibBDC2Hit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_236_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibBDC2Hit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibBDC2Hit", 1398, G__anasamurai_dict_236_0_15, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Hit), -1, 0, 1, 1, 1, 0, "u 'TArtCalibBDC2Hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibBDC2Hit", 1524, G__anasamurai_dict_236_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_236_0_17, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Hit), -1, 1, 1, 1, 1, 0, "u 'TArtCalibBDC2Hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibFDC0Hit(void) {
   /* TArtCalibFDC0Hit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Hit));
   G__memfunc_setup("TArtCalibFDC0Hit",1400,G__anasamurai_dict_237_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Hit), -1, 0, 1, 1, 1, 0, "u 'TString' - 10 '\"SAMURAIFDC0Hit\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_237_0_3, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibFDC0Hit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_237_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibFDC0Hit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_237_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibFDC0Hit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_237_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibFDC0Hit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_237_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_237_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibFDC0Hit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_237_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibFDC0Hit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_237_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibFDC0Hit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_237_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibFDC0Hit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibFDC0Hit", 1400, G__anasamurai_dict_237_0_15, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Hit), -1, 0, 1, 1, 1, 0, "u 'TArtCalibFDC0Hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibFDC0Hit", 1526, G__anasamurai_dict_237_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_237_0_17, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Hit), -1, 1, 1, 1, 1, 0, "u 'TArtCalibFDC0Hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibFDC1Hit(void) {
   /* TArtCalibFDC1Hit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Hit));
   G__memfunc_setup("TArtCalibFDC1Hit",1401,G__anasamurai_dict_238_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Hit), -1, 0, 1, 1, 1, 0, "u 'TString' - 10 '\"SAMURAIFDC1Hit\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_238_0_3, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibFDC1Hit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_238_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibFDC1Hit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_238_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibFDC1Hit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_238_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibFDC1Hit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_238_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_238_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibFDC1Hit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_238_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibFDC1Hit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_238_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibFDC1Hit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_238_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibFDC1Hit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibFDC1Hit", 1401, G__anasamurai_dict_238_0_15, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Hit), -1, 0, 1, 1, 1, 0, "u 'TArtCalibFDC1Hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibFDC1Hit", 1527, G__anasamurai_dict_238_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_238_0_17, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Hit), -1, 1, 1, 1, 1, 0, "u 'TArtCalibFDC1Hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibFDC2Hit(void) {
   /* TArtCalibFDC2Hit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Hit));
   G__memfunc_setup("TArtCalibFDC2Hit",1402,G__anasamurai_dict_239_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Hit), -1, 0, 1, 1, 1, 0, "u 'TString' - 10 '\"SAMURAIFDC2Hit\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_239_0_3, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibFDC2Hit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_239_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibFDC2Hit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_239_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibFDC2Hit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_239_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibFDC2Hit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_239_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_239_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibFDC2Hit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_239_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibFDC2Hit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_239_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibFDC2Hit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_239_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibFDC2Hit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibFDC2Hit", 1402, G__anasamurai_dict_239_0_15, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Hit), -1, 0, 1, 1, 1, 0, "u 'TArtCalibFDC2Hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibFDC2Hit", 1528, G__anasamurai_dict_239_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_239_0_17, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Hit), -1, 1, 1, 1, 1, 0, "u 'TArtCalibFDC2Hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibBDC1Track(void) {
   /* TArtCalibBDC1Track */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Track));
   G__memfunc_setup("TArtCalibBDC1Track",1605,G__anasamurai_dict_240_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Track), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 10 '\"SAMURAIBDC1Hit\"' indataname u 'TString' - 10 '\"SAMURAIBDC1Track\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_240_0_2, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibBDC1Track::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_240_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibBDC1Track::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_240_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibBDC1Track::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_240_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibBDC1Track::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_240_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_240_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibBDC1Track::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_240_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibBDC1Track::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_240_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibBDC1Track::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_240_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibBDC1Track::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibBDC1Track", 1605, G__anasamurai_dict_240_0_14, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Track), -1, 0, 1, 1, 1, 0, "u 'TArtCalibBDC1Track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibBDC1Track", 1731, G__anasamurai_dict_240_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_240_0_16, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Track), -1, 1, 1, 1, 1, 0, "u 'TArtCalibBDC1Track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibBDC2Track(void) {
   /* TArtCalibBDC2Track */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Track));
   G__memfunc_setup("TArtCalibBDC2Track",1606,G__anasamurai_dict_241_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Track), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 10 '\"SAMURAIBDC2Hit\"' indataname u 'TString' - 10 '\"SAMURAIBDC2Track\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_241_0_2, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibBDC2Track::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_241_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibBDC2Track::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_241_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibBDC2Track::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_241_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibBDC2Track::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_241_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_241_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibBDC2Track::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_241_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibBDC2Track::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_241_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibBDC2Track::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_241_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibBDC2Track::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibBDC2Track", 1606, G__anasamurai_dict_241_0_14, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Track), -1, 0, 1, 1, 1, 0, "u 'TArtCalibBDC2Track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibBDC2Track", 1732, G__anasamurai_dict_241_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_241_0_16, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Track), -1, 1, 1, 1, 1, 0, "u 'TArtCalibBDC2Track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibFDC0Track(void) {
   /* TArtCalibFDC0Track */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Track));
   G__memfunc_setup("TArtCalibFDC0Track",1608,G__anasamurai_dict_242_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Track), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 10 '\"SAMURAIFDC0Hit\"' indataname u 'TString' - 10 '\"SAMURAIFDC0Track\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_242_0_2, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibFDC0Track::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_242_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibFDC0Track::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_242_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibFDC0Track::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_242_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibFDC0Track::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_242_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_242_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibFDC0Track::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_242_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibFDC0Track::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_242_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibFDC0Track::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_242_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibFDC0Track::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibFDC0Track", 1608, G__anasamurai_dict_242_0_14, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Track), -1, 0, 1, 1, 1, 0, "u 'TArtCalibFDC0Track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibFDC0Track", 1734, G__anasamurai_dict_242_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_242_0_16, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Track), -1, 1, 1, 1, 1, 0, "u 'TArtCalibFDC0Track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibFDC1Track(void) {
   /* TArtCalibFDC1Track */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Track));
   G__memfunc_setup("TArtCalibFDC1Track",1609,G__anasamurai_dict_243_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Track), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 10 '\"SAMURAIFDC1Hit\"' indataname u 'TString' - 10 '\"SAMURAIFDC1Track\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_243_0_2, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibFDC1Track::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_243_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibFDC1Track::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_243_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibFDC1Track::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_243_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibFDC1Track::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_243_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_243_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibFDC1Track::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_243_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibFDC1Track::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_243_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibFDC1Track::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_243_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibFDC1Track::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibFDC1Track", 1609, G__anasamurai_dict_243_0_14, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Track), -1, 0, 1, 1, 1, 0, "u 'TArtCalibFDC1Track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibFDC1Track", 1735, G__anasamurai_dict_243_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_243_0_16, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Track), -1, 1, 1, 1, 1, 0, "u 'TArtCalibFDC1Track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibFDC2Track(void) {
   /* TArtCalibFDC2Track */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Track));
   G__memfunc_setup("TArtCalibFDC2Track",1610,G__anasamurai_dict_244_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Track), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 10 '\"SAMURAIFDC2Hit\"' indataname u 'TString' - 10 '\"SAMURAIFDC2Track\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_244_0_2, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibFDC2Track::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_244_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibFDC2Track::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_244_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibFDC2Track::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_244_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibFDC2Track::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_244_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_244_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibFDC2Track::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_244_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibFDC2Track::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_244_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibFDC2Track::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_244_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibFDC2Track::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibFDC2Track", 1610, G__anasamurai_dict_244_0_14, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Track), -1, 0, 1, 1, 1, 0, "u 'TArtCalibFDC2Track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibFDC2Track", 1736, G__anasamurai_dict_244_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_244_0_16, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Track), -1, 1, 1, 1, 1, 0, "u 'TArtCalibFDC2Track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibHODPla(void) {
   /* TArtCalibHODPla */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHODPla));
   G__memfunc_setup("TArtCalibHODPla",1358,G__anasamurai_dict_245_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHODPla), -1, 0, 1, 1, 1, 0, "u 'TString' - 10 '\"SAMURAIHODPla\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anasamurai_dict_245_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anasamurai_dict_245_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHODPlaArray",1303,G__anasamurai_dict_245_0_6, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumHODPla",1096,G__anasamurai_dict_245_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHODPla",792,G__anasamurai_dict_245_0_8, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPla), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHODPlaPara",1180,G__anasamurai_dict_245_0_9, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPlaPara), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindHODPla",889,G__anasamurai_dict_245_0_10, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPla), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindHODPla",889,G__anasamurai_dict_245_0_11, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPla), -1, 0, 1, 1, 1, 0, "U 'TString' - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindHODPla",889,G__anasamurai_dict_245_0_12, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPla), -1, 0, 1, 1, 1, 0, "C - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_245_0_13, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibHODPla::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_245_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibHODPla::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_245_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibHODPla::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_245_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibHODPla::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_245_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_245_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibHODPla::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_245_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibHODPla::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_245_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibHODPla::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_245_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibHODPla::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibHODPla", 1358, G__anasamurai_dict_245_0_25, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHODPla), -1, 0, 1, 1, 1, 0, "u 'TArtCalibHODPla' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibHODPla", 1484, G__anasamurai_dict_245_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_245_0_27, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHODPla), -1, 1, 1, 1, 1, 0, "u 'TArtCalibHODPla' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibSAMURAI(void) {
   /* TArtCalibSAMURAI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibSAMURAI));
   G__memfunc_setup("TArtCalibSAMURAI",1384,G__anasamurai_dict_246_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibSAMURAI), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anasamurai_dict_246_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anasamurai_dict_246_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - seg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadDCSTC",753,G__anasamurai_dict_246_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadDCTDCDistribution",2018,G__anasamurai_dict_246_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBPCHitArray",1305,G__anasamurai_dict_246_0_8, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBDC1HitArray",1342,G__anasamurai_dict_246_0_9, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBDC2HitArray",1343,G__anasamurai_dict_246_0_10, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFDC0HitArray",1345,G__anasamurai_dict_246_0_11, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFDC1HitArray",1346,G__anasamurai_dict_246_0_12, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFDC2HitArray",1347,G__anasamurai_dict_246_0_13, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBDC1TrackArray",1550,G__anasamurai_dict_246_0_14, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBDC2TrackArray",1551,G__anasamurai_dict_246_0_15, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFDC0TrackArray",1553,G__anasamurai_dict_246_0_16, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFDC1TrackArray",1554,G__anasamurai_dict_246_0_17, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFDC2TrackArray",1555,G__anasamurai_dict_246_0_18, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHODPlaArray",1303,G__anasamurai_dict_246_0_19, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibCoin",1156,G__anasamurai_dict_246_0_20, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibCoin), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibBPCHit",1269,G__anasamurai_dict_246_0_21, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBPCHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibBDC1Hit",1306,G__anasamurai_dict_246_0_22, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Hit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibBDC2Hit",1307,G__anasamurai_dict_246_0_23, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Hit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibFDC0Hit",1309,G__anasamurai_dict_246_0_24, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Hit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibFDC1Hit",1310,G__anasamurai_dict_246_0_25, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Hit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibFDC2Hit",1311,G__anasamurai_dict_246_0_26, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Hit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibBDC1Track",1514,G__anasamurai_dict_246_0_27, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC1Track), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibBDC2Track",1515,G__anasamurai_dict_246_0_28, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibBDC2Track), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibFDC0Track",1517,G__anasamurai_dict_246_0_29, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC0Track), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibFDC1Track",1518,G__anasamurai_dict_246_0_30, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC1Track), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibFDC2Track",1519,G__anasamurai_dict_246_0_31, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibFDC2Track), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibHODPla",1267,G__anasamurai_dict_246_0_32, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHODPla), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_246_0_33, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibSAMURAI::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_246_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibSAMURAI::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_246_0_35, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibSAMURAI::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_246_0_36, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibSAMURAI::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_246_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_246_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibSAMURAI::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_246_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibSAMURAI::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_246_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibSAMURAI::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_246_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibSAMURAI::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibSAMURAI", 1384, G__anasamurai_dict_246_0_45, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibSAMURAI), -1, 0, 1, 1, 1, 0, "u 'TArtCalibSAMURAI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibSAMURAI", 1510, G__anasamurai_dict_246_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_246_0_47, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibSAMURAI), -1, 1, 1, 1, 1, 0, "u 'TArtCalibSAMURAI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtTacquilaMap(void) {
   /* TArtTacquilaMap */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaMap));
   G__memfunc_setup("TArtTacquilaMap",1485,G__anasamurai_dict_484_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtTacquilaMap",1485,G__anasamurai_dict_484_0_2, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaMap), -1, 0, 4, 1, 1, 0, 
"i - - 10 - insam i - - 10 - ingtb "
"i - - 10 - inmod i - - 10 - inch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMap",586,G__anasamurai_dict_484_0_3, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 10 - insam i - - 10 - ingtb "
"i - - 10 - inmod i - - 10 - inch", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSam",577,G__anasamurai_dict_484_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGtb",573,G__anasamurai_dict_484_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModule",902,G__anasamurai_dict_484_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChannel",985,G__anasamurai_dict_484_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator<",936,G__anasamurai_dict_484_0_8, 103, -1, -1, 0, 1, 1, 1, 8, "u 'TArtTacquilaMap' - 11 - m", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator==",998,G__anasamurai_dict_484_0_9, 103, -1, -1, 0, 1, 1, 1, 8, "u 'TArtTacquilaMap' - 11 - m", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMapInfo",970,G__anasamurai_dict_484_0_10, 67, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_484_0_11, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtTacquilaMap::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_484_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtTacquilaMap::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_484_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtTacquilaMap::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_484_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtTacquilaMap::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_484_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_484_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtTacquilaMap::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_484_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtTacquilaMap::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_484_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtTacquilaMap::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_484_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtTacquilaMap::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtTacquilaMap", 1485, G__anasamurai_dict_484_0_23, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaMap), -1, 0, 1, 1, 1, 0, "u 'TArtTacquilaMap' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtTacquilaMap", 1611, G__anasamurai_dict_484_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_484_0_25, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaMap), -1, 1, 1, 1, 1, 0, "u 'TArtTacquilaMap' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtHODPlaPara(void) {
   /* TArtHODPlaPara */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPlaPara));
   G__memfunc_setup("TArtHODPlaPara",1271,G__anasamurai_dict_485_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPlaPara), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtHODPlaPara",1271,G__anasamurai_dict_485_0_2, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPlaPara), -1, 0, 20, 1, 1, 0, 
"i - 'Int_t' 0 - i u 'TString' - 0 - n "
"i - 'Int_t' 0 - f d - 'Double_t' 0 - tcu "
"d - 'Double_t' 0 - tcd d - 'Double_t' 0 - tou "
"d - 'Double_t' 0 - tod d - 'Double_t' 0 - to "
"d - 'Double_t' 0 - qcalu d - 'Double_t' 0 - qcald "
"d - 'Double_t' 0 - qpedu d - 'Double_t' 0 - qpedd "
"d - 'Double_t' 0 - ts_au d - 'Double_t' 0 - ts_bu "
"d - 'Double_t' 0 - ts_ad d - 'Double_t' 0 - ts_bd "
"d - 'Double_t' 0 - zc0 d - 'Double_t' 0 - zc1 "
"d - 'Double_t' 0 - zc2 d - 'Double_t' 0 - zc3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPalameters",1338,G__anasamurai_dict_485_0_3, 121, -1, -1, 0, 18, 1, 1, 0, 
"i - 'Int_t' 0 - i u 'TString' - 0 - n "
"i - 'Int_t' 0 - f d - 'Double_t' 0 - tcu "
"d - 'Double_t' 0 - tcd d - 'Double_t' 0 - tou "
"d - 'Double_t' 0 - tod d - 'Double_t' 0 - to "
"d - 'Double_t' 0 - qpedu d - 'Double_t' 0 - qpedd "
"d - 'Double_t' 0 - ts_au d - 'Double_t' 0 - ts_bu "
"d - 'Double_t' 0 - ts_ad d - 'Double_t' 0 - ts_bd "
"d - 'Double_t' 0 - zc0 d - 'Double_t' 0 - zc1 "
"d - 'Double_t' 0 - zc2 d - 'Double_t' 0 - zc3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMap",586,G__anasamurai_dict_485_0_4, 121, -1, -1, 0, 10, 1, 1, 0, 
"i - 'Int_t' 0 - dt i - 'Int_t' 0 - tug "
"i - 'Int_t' 0 - tuc i - 'Int_t' 0 - tdg "
"i - 'Int_t' 0 - tdc i - 'Int_t' 0 - dq "
"i - 'Int_t' 0 - qug i - 'Int_t' 0 - quc "
"i - 'Int_t' 0 - qdg i - 'Int_t' 0 - qdc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__anasamurai_dict_485_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorName",1499,G__anasamurai_dict_485_0_6, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFpl",578,G__anasamurai_dict_485_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTCalUp",841,G__anasamurai_dict_485_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTCalDown",1052,G__anasamurai_dict_485_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOffUp",852,G__anasamurai_dict_485_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOffDown",1063,G__anasamurai_dict_485_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOff",655,G__anasamurai_dict_485_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQCalUp",838,G__anasamurai_dict_485_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQCalDown",1049,G__anasamurai_dict_485_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQPedUp",847,G__anasamurai_dict_485_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQPedDown",1058,G__anasamurai_dict_485_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTUSlewA",933,G__anasamurai_dict_485_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTUSlewB",934,G__anasamurai_dict_485_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDSlewA",916,G__anasamurai_dict_485_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDSlewB",917,G__anasamurai_dict_485_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZCoef0",807,G__anasamurai_dict_485_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZCoef1",808,G__anasamurai_dict_485_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZCoef2",809,G__anasamurai_dict_485_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZCoef3",810,G__anasamurai_dict_485_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTUMap",743,G__anasamurai_dict_485_0_25, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDMap",726,G__anasamurai_dict_485_0_26, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQUMap",740,G__anasamurai_dict_485_0_27, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQDMap",723,G__anasamurai_dict_485_0_28, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_485_0_29, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtHODPlaPara::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_485_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtHODPlaPara::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_485_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtHODPlaPara::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_485_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtHODPlaPara::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_485_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_485_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtHODPlaPara::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_485_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtHODPlaPara::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_485_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtHODPlaPara::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_485_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtHODPlaPara::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtHODPlaPara", 1271, G__anasamurai_dict_485_0_41, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPlaPara), -1, 0, 1, 1, 1, 0, "u 'TArtHODPlaPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtHODPlaPara", 1397, G__anasamurai_dict_485_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_485_0_43, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPlaPara), -1, 1, 1, 1, 1, 0, "u 'TArtHODPlaPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtRPTOFPlaPara(void) {
   /* TArtRPTOFPlaPara */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPlaPara));
   G__memfunc_setup("TArtRPTOFPlaPara",1447,G__anasamurai_dict_486_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPlaPara), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtRPTOFPlaPara",1447,G__anasamurai_dict_486_0_2, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPlaPara), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - i u 'TString' - 0 - n "
"i - 'Int_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDCV775Para",1156,G__anasamurai_dict_486_0_3, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - ch2ns_ul d - 'Double_t' 0 - ch2ns_dr "
"d - 'Double_t' 0 - offset_ul d - 'Double_t' 0 - offset_dr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDCV1290Para",1197,G__anasamurai_dict_486_0_4, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - ch2ns_ul d - 'Double_t' 0 - ch2ns_dr "
"d - 'Double_t' 0 - offset_ul d - 'Double_t' 0 - offset_dr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQDCPara",904,G__anasamurai_dict_486_0_5, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - calib_ul d - 'Double_t' 0 - calib_dr "
"d - 'Double_t' 0 - pedestal_ul d - 'Double_t' 0 - pedestal_dr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDCV775Map",1054,G__anasamurai_dict_486_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - ulg i - 'Int_t' 0 - ulc "
"i - 'Int_t' 0 - drg i - 'Int_t' 0 - drc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDCV1290Map",1095,G__anasamurai_dict_486_0_7, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - ulg i - 'Int_t' 0 - ulc "
"i - 'Int_t' 0 - drg i - 'Int_t' 0 - drc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQDCMap",802,G__anasamurai_dict_486_0_8, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - ulg i - 'Int_t' 0 - ulc "
"i - 'Int_t' 0 - drg i - 'Int_t' 0 - drc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__anasamurai_dict_486_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorName",1499,G__anasamurai_dict_486_0_10, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFpl",578,G__anasamurai_dict_486_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTV775CalUpLeft",1485,G__anasamurai_dict_486_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTV775CalDownRight",1811,G__anasamurai_dict_486_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTV775OffUpLeft",1496,G__anasamurai_dict_486_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTV775OffDownRight",1822,G__anasamurai_dict_486_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTV1290CalUpLeft",1526,G__anasamurai_dict_486_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTV1290CalDownRight",1852,G__anasamurai_dict_486_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTV1290OffUpLeft",1537,G__anasamurai_dict_486_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTV1290OffDownRight",1863,G__anasamurai_dict_486_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQCalUpLeft",1233,G__anasamurai_dict_486_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQCalDownRight",1559,G__anasamurai_dict_486_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQPedUpLeft",1242,G__anasamurai_dict_486_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQPedDownRight",1568,G__anasamurai_dict_486_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTULV775Map",1068,G__anasamurai_dict_486_0_24, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDRV775Map",1057,G__anasamurai_dict_486_0_25, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTULV1290Map",1109,G__anasamurai_dict_486_0_26, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDRV1290Map",1098,G__anasamurai_dict_486_0_27, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQULMap",816,G__anasamurai_dict_486_0_28, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQDRMap",805,G__anasamurai_dict_486_0_29, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_486_0_30, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtRPTOFPlaPara::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_486_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRPTOFPlaPara::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_486_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtRPTOFPlaPara::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_486_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtRPTOFPlaPara::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_486_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_486_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRPTOFPlaPara::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_486_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRPTOFPlaPara::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_486_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRPTOFPlaPara::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_486_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRPTOFPlaPara::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtRPTOFPlaPara", 1447, G__anasamurai_dict_486_0_42, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPlaPara), -1, 0, 1, 1, 1, 0, "u 'TArtRPTOFPlaPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtRPTOFPlaPara", 1573, G__anasamurai_dict_486_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_486_0_44, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPlaPara), -1, 1, 1, 1, 1, 0, "u 'TArtRPTOFPlaPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtTEDCsIPara(void) {
   /* TArtTEDCsIPara */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsIPara));
   G__memfunc_setup("TArtTEDCsIPara",1243,G__anasamurai_dict_487_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsIPara), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TArtTEDCsIPara",1243,G__anasamurai_dict_487_0_2, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsIPara), -1, 0, 7, 1, 1, 0, 
"i - 'Int_t' 0 - i u 'TString' - 0 - n "
"i - 'Int_t' 0 - f i - 'Int_t' 0 - r "
"i - 'Int_t' 0 - c d - 'Double_t' 0 - qc "
"d - 'Double_t' 0 - qp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameters",1344,G__anasamurai_dict_487_0_3, 121, -1, -1, 0, 7, 1, 1, 0, 
"i - 'Int_t' 0 - i u 'TString' - 0 - n "
"i - 'Int_t' 0 - f i - 'Int_t' 0 - r "
"i - 'Int_t' 0 - c d - 'Double_t' 0 - qc "
"d - 'Double_t' 0 - qp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRow",600,G__anasamurai_dict_487_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetColumn",910,G__anasamurai_dict_487_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_487_0_6, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtTEDCsIPara::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_487_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtTEDCsIPara::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_487_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtTEDCsIPara::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_487_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtTEDCsIPara::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_487_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_487_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtTEDCsIPara::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_487_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtTEDCsIPara::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_487_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtTEDCsIPara::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_487_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtTEDCsIPara::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtTEDCsIPara", 1243, G__anasamurai_dict_487_0_18, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsIPara), -1, 0, 1, 1, 1, 0, "u 'TArtTEDCsIPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtTEDCsIPara", 1369, G__anasamurai_dict_487_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_487_0_20, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsIPara), -1, 1, 1, 1, 1, 0, "u 'TArtTEDCsIPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtNEBULAPlaPara(void) {
   /* TArtNEBULAPlaPara */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPlaPara));
   G__memfunc_setup("TArtNEBULAPlaPara",1491,G__anasamurai_dict_488_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPlaPara), -1, 0, 29, 1, 1, 0, 
"i - 'Int_t' 0 '-1' id u 'TString' - 11 '\"\"' detname "
"i - 'Int_t' 0 '-1' fpl i - 'Int_t' 0 '-1' layer "
"i - 'Int_t' 0 '-1' sublayer D - 'Double_t' 10 '0' detpos "
"d - 'Double_t' 0 '1' tucal d - 'Double_t' 0 '0' tuoff "
"d - 'Double_t' 0 '0' tuslw D - 'Double_t' 10 '0' tuslwlog "
"d - 'Double_t' 0 '1' qucal d - 'Double_t' 0 '0' quped "
"d - 'Double_t' 0 '1' tdcal d - 'Double_t' 0 '0' tdoff "
"d - 'Double_t' 0 '0' tdslw D - 'Double_t' 10 '0' tdslwlog "
"d - 'Double_t' 0 '1' qdcal d - 'Double_t' 0 '0' qdped "
"d - 'Double_t' 0 '1' dtcal d - 'Double_t' 0 '0' dtoff "
"d - 'Double_t' 0 '0' taveoff d - 'Double_t' 0 '1' qavecal "
"d - 'Double_t' 0 '0' qavecalatt d - 'Double_t' 0 '0' qavecalatt2 "
"d - 'Double_t' 0 '-0.5' tslwpow d - 'Double_t' 0 '0' taveoffslw "
"d - 'Double_t' 0 '0' taveoffdelta d - 'Double_t' 0 '0' taveofflight "
"i - 'Int_t' 0 '0' ignore", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetID",441,G__anasamurai_dict_488_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetectorName",1511,G__anasamurai_dict_488_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFpl",590,G__anasamurai_dict_488_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLayer",809,G__anasamurai_dict_488_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSubLayer",1107,G__anasamurai_dict_488_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetPos",891,G__anasamurai_dict_488_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetPos",891,G__anasamurai_dict_488_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - val i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTUCal",741,G__anasamurai_dict_488_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTUOff",752,G__anasamurai_dict_488_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTUSlw",779,G__anasamurai_dict_488_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTUSlwLog",1069,G__anasamurai_dict_488_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTUSlwLog",1069,G__anasamurai_dict_488_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - val i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQUCal",738,G__anasamurai_dict_488_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQUPed",747,G__anasamurai_dict_488_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDCal",724,G__anasamurai_dict_488_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDOff",735,G__anasamurai_dict_488_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDSlw",762,G__anasamurai_dict_488_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDSlwLog",1052,G__anasamurai_dict_488_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDSlwLog",1052,G__anasamurai_dict_488_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - val i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQDCal",721,G__anasamurai_dict_488_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQDPed",730,G__anasamurai_dict_488_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDTCal",724,G__anasamurai_dict_488_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDTOff",735,G__anasamurai_dict_488_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTAveOff",951,G__anasamurai_dict_488_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQAveCal",937,G__anasamurai_dict_488_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQAveCalAtt",1234,G__anasamurai_dict_488_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQAveCalAtt2",1284,G__anasamurai_dict_488_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTSlwPow",1004,G__anasamurai_dict_488_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTAveOffSlw",1261,G__anasamurai_dict_488_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTAveOffDelta",1441,G__anasamurai_dict_488_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTAveOffLight",1455,G__anasamurai_dict_488_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIgnore",912,G__anasamurai_dict_488_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__anasamurai_dict_488_0_34, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorName",1499,G__anasamurai_dict_488_0_35, 117, G__get_linked_tagnum(&G__anasamurai_dictLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFpl",578,G__anasamurai_dict_488_0_36, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLayer",797,G__anasamurai_dict_488_0_37, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSubLayer",1095,G__anasamurai_dict_488_0_38, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetPos",879,G__anasamurai_dict_488_0_39, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetPos",879,G__anasamurai_dict_488_0_40, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTUCal",729,G__anasamurai_dict_488_0_41, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTUOff",740,G__anasamurai_dict_488_0_42, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTUSlw",767,G__anasamurai_dict_488_0_43, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTUSlwLog",1057,G__anasamurai_dict_488_0_44, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTUSlwLog",1057,G__anasamurai_dict_488_0_45, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQUCal",726,G__anasamurai_dict_488_0_46, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQUPed",735,G__anasamurai_dict_488_0_47, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDCal",712,G__anasamurai_dict_488_0_48, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDOff",723,G__anasamurai_dict_488_0_49, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDSlw",750,G__anasamurai_dict_488_0_50, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDSlwLog",1040,G__anasamurai_dict_488_0_51, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDSlwLog",1040,G__anasamurai_dict_488_0_52, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQDCal",709,G__anasamurai_dict_488_0_53, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQDPed",718,G__anasamurai_dict_488_0_54, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDTCal",712,G__anasamurai_dict_488_0_55, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDTOff",723,G__anasamurai_dict_488_0_56, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTAveOff",939,G__anasamurai_dict_488_0_57, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQAveCal",925,G__anasamurai_dict_488_0_58, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQAveCalAtt",1222,G__anasamurai_dict_488_0_59, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQAveCalAtt2",1272,G__anasamurai_dict_488_0_60, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTSlwPow",992,G__anasamurai_dict_488_0_61, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTAveOffSlw",1249,G__anasamurai_dict_488_0_62, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTAveOffDelta",1429,G__anasamurai_dict_488_0_63, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTAveOffLight",1443,G__anasamurai_dict_488_0_64, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIgnore",900,G__anasamurai_dict_488_0_65, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMapU",659,G__anasamurai_dict_488_0_66, 117, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMapD",642,G__anasamurai_dict_488_0_67, 117, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMapU",671,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"i - 'Int_t' 0 - detector i - 'Int_t' 0 - tu_geo "
"i - 'Int_t' 0 - tu_ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMapD",654,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"i - 'Int_t' 0 - detector i - 'Int_t' 0 - td_geo "
"i - 'Int_t' 0 - td_ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_488_0_70, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtNEBULAPlaPara::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_488_0_71, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNEBULAPlaPara::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_488_0_72, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtNEBULAPlaPara::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_488_0_73, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtNEBULAPlaPara::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_488_0_77, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_488_0_78, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNEBULAPlaPara::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_488_0_79, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtNEBULAPlaPara::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_488_0_80, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNEBULAPlaPara::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_488_0_81, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtNEBULAPlaPara::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtNEBULAPlaPara", 1491, G__anasamurai_dict_488_0_82, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPlaPara), -1, 0, 1, 1, 1, 0, "u 'TArtNEBULAPlaPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtNEBULAPlaPara", 1617, G__anasamurai_dict_488_0_83, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_488_0_84, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPlaPara), -1, 1, 1, 1, 1, 0, "u 'TArtNEBULAPlaPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtNeuLANDPlaPara(void) {
   /* TArtNeuLANDPlaPara */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPlaPara));
   G__memfunc_setup("TArtNeuLANDPlaPara",1635,G__anasamurai_dict_489_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPlaPara), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetID",441,G__anasamurai_dict_489_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetectorName",1511,G__anasamurai_dict_489_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFpl",590,G__anasamurai_dict_489_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDirection",1229,G__anasamurai_dict_489_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLayer",809,G__anasamurai_dict_489_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBarID",718,G__anasamurai_dict_489_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__anasamurai_dict_489_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorName",1499,G__anasamurai_dict_489_0_9, 117, G__get_linked_tagnum(&G__anasamurai_dictLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFpl",578,G__anasamurai_dict_489_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirection",1217,G__anasamurai_dict_489_0_11, 117, G__get_linked_tagnum(&G__anasamurai_dictLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLayer",797,G__anasamurai_dict_489_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBarID",706,G__anasamurai_dict_489_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQCal",653,G__anasamurai_dict_489_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQPed",662,G__anasamurai_dict_489_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDC0ns",792,G__anasamurai_dict_489_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDC25ns",847,G__anasamurai_dict_489_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDC0ns_t17",1107,G__anasamurai_dict_489_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDC25ns_t17",1162,G__anasamurai_dict_489_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDCTCal",875,G__anasamurai_dict_489_0_20, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 40 - t_type I - - 40 - channel "
"D - 'Double_t' 40 - ns k - 'size_t' 40 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTac2nsPara",1243,G__anasamurai_dict_489_0_21, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 40 - i i - - 40 - is_tref "
"i - - 40 - j d - - 40 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQCal",641,G__anasamurai_dict_489_0_22, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQPed",650,G__anasamurai_dict_489_0_23, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDC0ns",780,G__anasamurai_dict_489_0_24, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDC25ns",835,G__anasamurai_dict_489_0_25, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDC0ns_t17",1095,G__anasamurai_dict_489_0_26, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDC25ns_t17",1150,G__anasamurai_dict_489_0_27, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTac2nsPara",1231,G__anasamurai_dict_489_0_28, 68, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 9, 
"i - - 40 - i i - - 40 - is_tref", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasTDCTCal",859,G__anasamurai_dict_489_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDCTCal",863,G__anasamurai_dict_489_0_30, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - - 40 - i i - - 40 - channel "
"g - - 40 - is_tref", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDiffOffset",1376,G__anasamurai_dict_489_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTSyncOffset",1412,G__anasamurai_dict_489_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVScint",899,G__anasamurai_dict_489_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEDiffOffset",1361,G__anasamurai_dict_489_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetESyncOffset",1397,G__anasamurai_dict_489_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAtt",597,G__anasamurai_dict_489_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOFZero",949,G__anasamurai_dict_489_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOFClight",1136,G__anasamurai_dict_489_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZPos",696,G__anasamurai_dict_489_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDiffOffset",1364,G__anasamurai_dict_489_0_40, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTSyncOffset",1400,G__anasamurai_dict_489_0_41, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVScint",887,G__anasamurai_dict_489_0_42, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEDiffOffset",1349,G__anasamurai_dict_489_0_43, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetESyncOffset",1385,G__anasamurai_dict_489_0_44, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAtt",585,G__anasamurai_dict_489_0_45, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOFZero",937,G__anasamurai_dict_489_0_46, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOFClight",1124,G__anasamurai_dict_489_0_47, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZPos",684,G__anasamurai_dict_489_0_48, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMap",574,G__anasamurai_dict_489_0_49, 117, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaMap), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMap",586,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 4, 0, 
"i - 'Int_t' 0 - pmtid i - 'Int_t' 0 - sam "
"i - 'Int_t' 0 - gtb i - 'Int_t' 0 - mod "
"i - 'Int_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_489_0_51, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtNeuLANDPlaPara::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_489_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNeuLANDPlaPara::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_489_0_53, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtNeuLANDPlaPara::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_489_0_54, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtNeuLANDPlaPara::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_489_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_489_0_59, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNeuLANDPlaPara::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_489_0_60, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtNeuLANDPlaPara::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_489_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNeuLANDPlaPara::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_489_0_62, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtNeuLANDPlaPara::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtNeuLANDPlaPara", 1635, G__anasamurai_dict_489_0_63, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPlaPara), -1, 0, 1, 1, 1, 0, "u 'TArtNeuLANDPlaPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtNeuLANDPlaPara", 1761, G__anasamurai_dict_489_0_64, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_489_0_65, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPlaPara), -1, 1, 1, 1, 1, 0, "u 'TArtNeuLANDPlaPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtTacquilaPara(void) {
   /* TArtTacquilaPara */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaPara));
   G__memfunc_setup("TArtTacquilaPara",1587,G__anasamurai_dict_490_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaPara), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetID",441,G__anasamurai_dict_490_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetectorName",1511,G__anasamurai_dict_490_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__anasamurai_dict_490_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorName",1499,G__anasamurai_dict_490_0_5, 117, G__get_linked_tagnum(&G__anasamurai_dictLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTac2Ns",823,G__anasamurai_dict_490_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTac2Ns",811,G__anasamurai_dict_490_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMap",574,G__anasamurai_dict_490_0_8, 117, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaMap), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMap",586,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"i - 'Int_t' 0 - sam i - 'Int_t' 0 - gtb "
"i - 'Int_t' 0 - mod i - 'Int_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_490_0_10, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtTacquilaPara::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_490_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtTacquilaPara::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_490_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtTacquilaPara::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_490_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtTacquilaPara::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_490_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_490_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtTacquilaPara::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_490_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtTacquilaPara::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_490_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtTacquilaPara::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_490_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtTacquilaPara::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtTacquilaPara", 1587, G__anasamurai_dict_490_0_22, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaPara), -1, 0, 1, 1, 1, 0, "u 'TArtTacquilaPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtTacquilaPara", 1713, G__anasamurai_dict_490_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_490_0_24, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTacquilaPara), -1, 1, 1, 1, 1, 0, "u 'TArtTacquilaPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtHIMEPlaPara(void) {
   /* TArtHIMEPlaPara */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPlaPara));
   G__memfunc_setup("TArtHIMEPlaPara",1343,G__anasamurai_dict_500_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPlaPara), -1, 0, 25, 1, 1, 0, 
"i - 'Int_t' 0 '-1' id u 'TString' - 11 '\"\"' detname "
"i - 'Int_t' 0 '-1' fpl i - 'Int_t' 0 '-1' layer "
"i - 'Int_t' 0 '-1' sublayer D - 'Double_t' 10 '0' detpos "
"d - 'Double_t' 0 '1' tucal d - 'Double_t' 0 '0' tuoff "
"d - 'Double_t' 0 '0' tuslw D - 'Double_t' 10 '0' tuslwlog "
"d - 'Double_t' 0 '1' qucal d - 'Double_t' 0 '0' quped "
"d - 'Double_t' 0 '1' tdcal d - 'Double_t' 0 '0' tdoff "
"d - 'Double_t' 0 '0' tdslw D - 'Double_t' 10 '0' tdslwlog "
"d - 'Double_t' 0 '1' qdcal d - 'Double_t' 0 '0' qdped "
"d - 'Double_t' 0 '1' dtcal d - 'Double_t' 0 '0' dtoff "
"d - 'Double_t' 0 '0' taveoff d - 'Double_t' 0 '1' qavecal "
"d - 'Double_t' 0 '0' qavecalatt d - 'Double_t' 0 '0' qavecalatt2 "
"i - 'Int_t' 0 '0' ignore", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetID",441,G__anasamurai_dict_500_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetectorName",1511,G__anasamurai_dict_500_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFpl",590,G__anasamurai_dict_500_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLayer",809,G__anasamurai_dict_500_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSubLayer",1107,G__anasamurai_dict_500_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetDirect",1188,G__anasamurai_dict_500_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i 'TArtHIMEPlaPara::DetDirectionDef' - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetPos",891,G__anasamurai_dict_500_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetPos",891,G__anasamurai_dict_500_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - val i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTCal",656,G__anasamurai_dict_500_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOff",667,G__anasamurai_dict_500_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTSlw",694,G__anasamurai_dict_500_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTSlwLog",984,G__anasamurai_dict_500_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - i D - 'Double_t' 10 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTSlwLog",984,G__anasamurai_dict_500_0_14, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - i d - 'Double_t' 0 - val "
"i - 'Int_t' 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQCal",653,G__anasamurai_dict_500_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQPed",662,G__anasamurai_dict_500_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTUCal",741,G__anasamurai_dict_500_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTUOff",752,G__anasamurai_dict_500_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTUSlw",779,G__anasamurai_dict_500_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTUSlwLog",1069,G__anasamurai_dict_500_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTUSlwLog",1069,G__anasamurai_dict_500_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - val i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQUCal",738,G__anasamurai_dict_500_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQUPed",747,G__anasamurai_dict_500_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDCal",724,G__anasamurai_dict_500_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDOff",735,G__anasamurai_dict_500_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDSlw",762,G__anasamurai_dict_500_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDSlwLog",1052,G__anasamurai_dict_500_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDSlwLog",1052,G__anasamurai_dict_500_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - val i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQDCal",721,G__anasamurai_dict_500_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQDPed",730,G__anasamurai_dict_500_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTLCal",732,G__anasamurai_dict_500_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTLOff",743,G__anasamurai_dict_500_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTLSlw",770,G__anasamurai_dict_500_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTLSlwLog",1060,G__anasamurai_dict_500_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTLSlwLog",1060,G__anasamurai_dict_500_0_35, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - val i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQLCal",729,G__anasamurai_dict_500_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQLPed",738,G__anasamurai_dict_500_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTRCal",738,G__anasamurai_dict_500_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTROff",749,G__anasamurai_dict_500_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTRSlw",776,G__anasamurai_dict_500_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTRSlwLog",1066,G__anasamurai_dict_500_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTRSlwLog",1066,G__anasamurai_dict_500_0_42, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - val i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQRCal",735,G__anasamurai_dict_500_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQRPed",744,G__anasamurai_dict_500_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDTCal",724,G__anasamurai_dict_500_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDTOff",735,G__anasamurai_dict_500_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTAveOff",951,G__anasamurai_dict_500_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQAveCal",937,G__anasamurai_dict_500_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQAveCalAtt",1234,G__anasamurai_dict_500_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQAveCalAtt2",1284,G__anasamurai_dict_500_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIgnore",912,G__anasamurai_dict_500_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTCal",644,G__anasamurai_dict_500_0_52, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOff",655,G__anasamurai_dict_500_0_53, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTSlw",682,G__anasamurai_dict_500_0_54, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTSlwLog",972,G__anasamurai_dict_500_0_55, 68, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 1, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTSlwLog",972,G__anasamurai_dict_500_0_56, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - i i - 'Int_t' 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQCal",641,G__anasamurai_dict_500_0_57, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQPed",650,G__anasamurai_dict_500_0_58, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTUCal",729,G__anasamurai_dict_500_0_59, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTUOff",740,G__anasamurai_dict_500_0_60, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTUSlw",767,G__anasamurai_dict_500_0_61, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTUSlwLog",1057,G__anasamurai_dict_500_0_62, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTUSlwLog",1057,G__anasamurai_dict_500_0_63, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQUCal",726,G__anasamurai_dict_500_0_64, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQUPed",735,G__anasamurai_dict_500_0_65, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDCal",712,G__anasamurai_dict_500_0_66, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDOff",723,G__anasamurai_dict_500_0_67, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDSlw",750,G__anasamurai_dict_500_0_68, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDSlwLog",1040,G__anasamurai_dict_500_0_69, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDSlwLog",1040,G__anasamurai_dict_500_0_70, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQDCal",709,G__anasamurai_dict_500_0_71, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQDPed",718,G__anasamurai_dict_500_0_72, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTLCal",720,G__anasamurai_dict_500_0_73, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTLOff",731,G__anasamurai_dict_500_0_74, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTLSlw",758,G__anasamurai_dict_500_0_75, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTLSlwLog",1048,G__anasamurai_dict_500_0_76, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTLSlwLog",1048,G__anasamurai_dict_500_0_77, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQLCal",717,G__anasamurai_dict_500_0_78, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQLPed",726,G__anasamurai_dict_500_0_79, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTRCal",726,G__anasamurai_dict_500_0_80, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTROff",737,G__anasamurai_dict_500_0_81, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTRSlw",764,G__anasamurai_dict_500_0_82, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTRSlwLog",1054,G__anasamurai_dict_500_0_83, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTRSlwLog",1054,G__anasamurai_dict_500_0_84, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQRCal",723,G__anasamurai_dict_500_0_85, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQRPed",732,G__anasamurai_dict_500_0_86, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__anasamurai_dict_500_0_87, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorName",1499,G__anasamurai_dict_500_0_88, 117, G__get_linked_tagnum(&G__anasamurai_dictLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFpl",578,G__anasamurai_dict_500_0_89, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLayer",797,G__anasamurai_dict_500_0_90, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSubLayer",1095,G__anasamurai_dict_500_0_91, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetDirect",1176,G__anasamurai_dict_500_0_92, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPlaParacLcLDetDirectionDef), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DirectionIs",1117,G__anasamurai_dict_500_0_93, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i 'TArtHIMEPlaPara::DetDirectionDef' - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetPos",879,G__anasamurai_dict_500_0_94, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetPos",879,G__anasamurai_dict_500_0_95, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDTCal",712,G__anasamurai_dict_500_0_96, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDTOff",723,G__anasamurai_dict_500_0_97, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTAveOff",939,G__anasamurai_dict_500_0_98, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQAveCal",925,G__anasamurai_dict_500_0_99, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQAveCalAtt",1222,G__anasamurai_dict_500_0_100, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQAveCalAtt2",1272,G__anasamurai_dict_500_0_101, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIgnore",900,G__anasamurai_dict_500_0_102, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMapU",659,G__anasamurai_dict_500_0_103, 117, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMapD",642,G__anasamurai_dict_500_0_104, 117, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMapU",671,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"i - 'Int_t' 0 - detector i - 'Int_t' 0 - tu_geo "
"i - 'Int_t' 0 - tu_ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMapD",654,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"i - 'Int_t' 0 - detector i - 'Int_t' 0 - td_geo "
"i - 'Int_t' 0 - td_ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_500_0_107, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtHIMEPlaPara::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_500_0_108, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtHIMEPlaPara::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_500_0_109, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtHIMEPlaPara::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_500_0_110, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtHIMEPlaPara::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_500_0_114, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_500_0_115, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtHIMEPlaPara::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_500_0_116, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtHIMEPlaPara::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_500_0_117, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtHIMEPlaPara::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_500_0_118, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtHIMEPlaPara::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtHIMEPlaPara", 1343, G__anasamurai_dict_500_0_119, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPlaPara), -1, 0, 1, 1, 1, 0, "u 'TArtHIMEPlaPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtHIMEPlaPara", 1469, G__anasamurai_dict_500_0_120, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_500_0_121, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPlaPara), -1, 1, 1, 1, 1, 0, "u 'TArtHIMEPlaPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtNEBULAHPCPara(void) {
   /* TArtNEBULAHPCPara */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPCPara));
   G__memfunc_setup("TArtNEBULAHPCPara",1425,G__anasamurai_dict_508_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPCPara), -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 '-1' id u 'TString' - 11 '\"\"' detname "
"i - 'Int_t' 0 '-1' fpl i - 'Int_t' 0 '-1' layer "
"i - 'Int_t' 0 '-1' sublayer D - 'Double_t' 10 '0' detpos "
"d - 'Double_t' 0 '1' tcal d - 'Double_t' 0 '0' toff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetID",441,G__anasamurai_dict_508_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetectorName",1511,G__anasamurai_dict_508_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFpl",590,G__anasamurai_dict_508_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLayer",809,G__anasamurai_dict_508_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSubLayer",1107,G__anasamurai_dict_508_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetPos",891,G__anasamurai_dict_508_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetPos",891,G__anasamurai_dict_508_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - val i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTCal",656,G__anasamurai_dict_508_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOff",667,G__anasamurai_dict_508_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__anasamurai_dict_508_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorName",1499,G__anasamurai_dict_508_0_12, 117, G__get_linked_tagnum(&G__anasamurai_dictLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFpl",578,G__anasamurai_dict_508_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLayer",797,G__anasamurai_dict_508_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSubLayer",1095,G__anasamurai_dict_508_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetPos",879,G__anasamurai_dict_508_0_16, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetPos",879,G__anasamurai_dict_508_0_17, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTCal",644,G__anasamurai_dict_508_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOff",655,G__anasamurai_dict_508_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMap",574,G__anasamurai_dict_508_0_20, 117, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRIDFMap), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMap",586,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - tdc_geo i - 'Int_t' 0 - tdc_ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_508_0_22, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtNEBULAHPCPara::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_508_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNEBULAHPCPara::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_508_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtNEBULAHPCPara::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_508_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtNEBULAHPCPara::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_508_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_508_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNEBULAHPCPara::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_508_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtNEBULAHPCPara::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_508_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNEBULAHPCPara::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_508_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtNEBULAHPCPara::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtNEBULAHPCPara", 1425, G__anasamurai_dict_508_0_34, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPCPara), -1, 0, 1, 1, 1, 0, "u 'TArtNEBULAHPCPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtNEBULAHPCPara", 1551, G__anasamurai_dict_508_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_508_0_36, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPCPara), -1, 1, 1, 1, 1, 0, "u 'TArtNEBULAHPCPara' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtNEBULAPla(void) {
   /* TArtNEBULAPla */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPla));
   G__memfunc_setup("TArtNEBULAPla",1103,G__anasamurai_dict_599_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPla), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLayer",809,G__anasamurai_dict_599_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSubLayer",1107,G__anasamurai_dict_599_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDetPos",891,G__anasamurai_dict_599_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDetPos",891,G__anasamurai_dict_599_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - val i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHit",593,G__anasamurai_dict_599_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQURaw",764,G__anasamurai_dict_599_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQDRaw",747,G__anasamurai_dict_599_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQUPed",747,G__anasamurai_dict_599_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQDPed",730,G__anasamurai_dict_599_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQUCal",738,G__anasamurai_dict_599_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQDCal",721,G__anasamurai_dict_599_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQAvePed",946,G__anasamurai_dict_599_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQAveCal",937,G__anasamurai_dict_599_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLogQPed",952,G__anasamurai_dict_599_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLogQCal",943,G__anasamurai_dict_599_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIvSqrtQUPed",1364,G__anasamurai_dict_599_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIvSqrtQDPed",1347,G__anasamurai_dict_599_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIvSqrtQAvePed",1563,G__anasamurai_dict_599_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTURaw",767,G__anasamurai_dict_599_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTDRaw",750,G__anasamurai_dict_599_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTUCal",741,G__anasamurai_dict_599_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTDCal",724,G__anasamurai_dict_599_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTUSlw",779,G__anasamurai_dict_599_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTDSlw",762,G__anasamurai_dict_599_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDTRaw",750,G__anasamurai_dict_599_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDTCal",724,G__anasamurai_dict_599_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDTSlw",762,G__anasamurai_dict_599_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTAveRaw",966,G__anasamurai_dict_599_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTAveCal",940,G__anasamurai_dict_599_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTAveSlw",978,G__anasamurai_dict_599_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTUCalT0",873,G__anasamurai_dict_599_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTDCalT0",856,G__anasamurai_dict_599_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTUSlwT0",911,G__anasamurai_dict_599_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTDSlwT0",894,G__anasamurai_dict_599_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTAveCalT0",1072,G__anasamurai_dict_599_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTAveSlwT0",1110,G__anasamurai_dict_599_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTTOFGamma",1100,G__anasamurai_dict_599_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTTOFNeutron",1364,G__anasamurai_dict_599_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosCal",878,G__anasamurai_dict_599_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosSlw",916,G__anasamurai_dict_599_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPos",606,G__anasamurai_dict_599_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPos",606,G__anasamurai_dict_599_0_43, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - val i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFlightLength",1516,G__anasamurai_dict_599_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFlightAngle",1393,G__anasamurai_dict_599_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLayer",797,G__anasamurai_dict_599_0_46, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSubLayer",1095,G__anasamurai_dict_599_0_47, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDetPos",879,G__anasamurai_dict_599_0_48, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDetPos",879,G__anasamurai_dict_599_0_49, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHit",581,G__anasamurai_dict_599_0_50, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQURaw",752,G__anasamurai_dict_599_0_51, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQDRaw",735,G__anasamurai_dict_599_0_52, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQUPed",735,G__anasamurai_dict_599_0_53, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQDPed",718,G__anasamurai_dict_599_0_54, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQUCal",726,G__anasamurai_dict_599_0_55, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQDCal",709,G__anasamurai_dict_599_0_56, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQAvePed",934,G__anasamurai_dict_599_0_57, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQAveCal",925,G__anasamurai_dict_599_0_58, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLogQPed",940,G__anasamurai_dict_599_0_59, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLogQCal",931,G__anasamurai_dict_599_0_60, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIvSqrtQUPed",1352,G__anasamurai_dict_599_0_61, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIvSqrtQDPed",1335,G__anasamurai_dict_599_0_62, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIvSqrtQAvePed",1551,G__anasamurai_dict_599_0_63, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTURaw",755,G__anasamurai_dict_599_0_64, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDRaw",738,G__anasamurai_dict_599_0_65, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTUCal",729,G__anasamurai_dict_599_0_66, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDCal",712,G__anasamurai_dict_599_0_67, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTUSlw",767,G__anasamurai_dict_599_0_68, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDSlw",750,G__anasamurai_dict_599_0_69, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDTRaw",738,G__anasamurai_dict_599_0_70, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDTCal",712,G__anasamurai_dict_599_0_71, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDTSlw",750,G__anasamurai_dict_599_0_72, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTAveRaw",954,G__anasamurai_dict_599_0_73, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTAveCal",928,G__anasamurai_dict_599_0_74, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTAveSlw",966,G__anasamurai_dict_599_0_75, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTUCalT0",861,G__anasamurai_dict_599_0_76, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDCalT0",844,G__anasamurai_dict_599_0_77, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTUSlwT0",899,G__anasamurai_dict_599_0_78, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDSlwT0",882,G__anasamurai_dict_599_0_79, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTAveCalT0",1060,G__anasamurai_dict_599_0_80, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTAveSlwT0",1098,G__anasamurai_dict_599_0_81, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTTOFGamma",1088,G__anasamurai_dict_599_0_82, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTTOFNeutron",1352,G__anasamurai_dict_599_0_83, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosCal",866,G__anasamurai_dict_599_0_84, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosSlw",904,G__anasamurai_dict_599_0_85, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPos",594,G__anasamurai_dict_599_0_86, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPos",594,G__anasamurai_dict_599_0_87, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFlightLength",1504,G__anasamurai_dict_599_0_88, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFlightAngle",1381,G__anasamurai_dict_599_0_89, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_599_0_90, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtNEBULAPla::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_599_0_91, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNEBULAPla::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_599_0_92, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtNEBULAPla::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_599_0_93, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtNEBULAPla::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_599_0_97, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_599_0_98, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNEBULAPla::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_599_0_99, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtNEBULAPla::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_599_0_100, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNEBULAPla::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_599_0_101, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtNEBULAPla::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtNEBULAPla", 1103, G__anasamurai_dict_599_0_102, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPla), -1, 0, 1, 1, 1, 0, "u 'TArtNEBULAPla' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtNEBULAPla", 1229, G__anasamurai_dict_599_0_103, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_599_0_104, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPla), -1, 1, 1, 1, 1, 0, "u 'TArtNEBULAPla' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtNEBULAHPC(void) {
   /* TArtNEBULAHPC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPC));
   G__memfunc_setup("TArtNEBULAHPC",1037,G__anasamurai_dict_600_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLayer",809,G__anasamurai_dict_600_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSubLayer",1107,G__anasamurai_dict_600_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDetPos",891,G__anasamurai_dict_600_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDetPos",891,G__anasamurai_dict_600_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - val i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTRaw",682,G__anasamurai_dict_600_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTCal",656,G__anasamurai_dict_600_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLayer",797,G__anasamurai_dict_600_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSubLayer",1095,G__anasamurai_dict_600_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDetPos",879,G__anasamurai_dict_600_0_10, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDetPos",879,G__anasamurai_dict_600_0_11, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTRaw",670,G__anasamurai_dict_600_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTCal",644,G__anasamurai_dict_600_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_600_0_14, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtNEBULAHPC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_600_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNEBULAHPC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_600_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtNEBULAHPC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_600_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtNEBULAHPC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_600_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_600_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNEBULAHPC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_600_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtNEBULAHPC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_600_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNEBULAHPC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_600_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtNEBULAHPC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtNEBULAHPC", 1037, G__anasamurai_dict_600_0_26, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPC), -1, 0, 1, 1, 1, 0, "u 'TArtNEBULAHPC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtNEBULAHPC", 1163, G__anasamurai_dict_600_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_600_0_28, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPC), -1, 1, 1, 1, 1, 0, "u 'TArtNEBULAHPC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibNEBULAHPC(void) {
   /* TArtCalibNEBULAHPC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULAHPC));
   G__memfunc_setup("TArtCalibNEBULAHPC",1512,G__anasamurai_dict_601_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULAHPC), -1, 0, 1, 1, 1, 0, "u 'TString' - 10 '\"NEBULAHPC\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadRawData",1060,G__anasamurai_dict_601_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumNEBULAHPC",1250,G__anasamurai_dict_601_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNEBULAHPC",946,G__anasamurai_dict_601_0_6, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPC), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNEBULAHPC",1043,G__anasamurai_dict_601_0_7, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPC), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - id", "find by id", (void*) NULL, 0);
   G__memfunc_setup("GetNEBULAHPCArray",1457,G__anasamurai_dict_601_0_8, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), G__defined_typename("TArtNEBULAHPCArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumNEBULAHPCPara",1638,G__anasamurai_dict_601_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNEBULAHPCPara",1334,G__anasamurai_dict_601_0_10, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPCPara), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNEBULAHPCPara",1431,G__anasamurai_dict_601_0_11, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAHPCPara), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - id", "find by id", (void*) NULL, 0);
   G__memfunc_setup("GetNEBULAHPCParaArray",1845,G__anasamurai_dict_601_0_12, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), G__defined_typename("TArtNEBULAHPCParaArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMultiplicity",1589,G__anasamurai_dict_601_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - multiplicity", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicity",1577,G__anasamurai_dict_601_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_601_0_15, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibNEBULAHPC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_601_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibNEBULAHPC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_601_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibNEBULAHPC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_601_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibNEBULAHPC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_601_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_601_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibNEBULAHPC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_601_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibNEBULAHPC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_601_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibNEBULAHPC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_601_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibNEBULAHPC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibNEBULAHPC", 1512, G__anasamurai_dict_601_0_27, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULAHPC), -1, 0, 1, 1, 1, 0, "u 'TArtCalibNEBULAHPC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibNEBULAHPC", 1638, G__anasamurai_dict_601_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtHIMEPla(void) {
   /* TArtHIMEPla */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPla));
   G__memfunc_setup("TArtHIMEPla",955,G__anasamurai_dict_603_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPla), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLayer",809,G__anasamurai_dict_603_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSubLayer",1107,G__anasamurai_dict_603_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDetDirect",1188,G__anasamurai_dict_603_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i 'TArtHIMEPla::DetDirectionDef' - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDetPos",891,G__anasamurai_dict_603_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDetPos",891,G__anasamurai_dict_603_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - val i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHit",593,G__anasamurai_dict_603_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQRaw",679,G__anasamurai_dict_603_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - i i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQPed",662,G__anasamurai_dict_603_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQCal",653,G__anasamurai_dict_603_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIvSqrtQPed",1279,G__anasamurai_dict_603_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQURaw",764,G__anasamurai_dict_603_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQDRaw",747,G__anasamurai_dict_603_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQUPed",747,G__anasamurai_dict_603_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQDPed",730,G__anasamurai_dict_603_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQUCal",738,G__anasamurai_dict_603_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQDCal",721,G__anasamurai_dict_603_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIvSqrtQUPed",1364,G__anasamurai_dict_603_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIvSqrtQDPed",1347,G__anasamurai_dict_603_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQLRaw",755,G__anasamurai_dict_603_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQRRaw",761,G__anasamurai_dict_603_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQLPed",738,G__anasamurai_dict_603_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQRPed",744,G__anasamurai_dict_603_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQLCal",729,G__anasamurai_dict_603_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQRCal",735,G__anasamurai_dict_603_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIvSqrtQLPed",1355,G__anasamurai_dict_603_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIvSqrtQRPed",1361,G__anasamurai_dict_603_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQAvePed",946,G__anasamurai_dict_603_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQAveCal",937,G__anasamurai_dict_603_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLogQPed",952,G__anasamurai_dict_603_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLogQCal",943,G__anasamurai_dict_603_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIvSqrtQAvePed",1563,G__anasamurai_dict_603_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTRaw",682,G__anasamurai_dict_603_0_33, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - i i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTCal",656,G__anasamurai_dict_603_0_34, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTSlw",694,G__anasamurai_dict_603_0_35, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTCalT0",788,G__anasamurai_dict_603_0_36, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTSlwT0",826,G__anasamurai_dict_603_0_37, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTURaw",767,G__anasamurai_dict_603_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTDRaw",750,G__anasamurai_dict_603_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTUCal",741,G__anasamurai_dict_603_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTDCal",724,G__anasamurai_dict_603_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTUSlw",779,G__anasamurai_dict_603_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTDSlw",762,G__anasamurai_dict_603_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTUCalT0",873,G__anasamurai_dict_603_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTDCalT0",856,G__anasamurai_dict_603_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTUSlwT0",911,G__anasamurai_dict_603_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTDSlwT0",894,G__anasamurai_dict_603_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTLRaw",758,G__anasamurai_dict_603_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTRRaw",764,G__anasamurai_dict_603_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTLCal",732,G__anasamurai_dict_603_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTRCal",738,G__anasamurai_dict_603_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTLSlw",770,G__anasamurai_dict_603_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTRSlw",776,G__anasamurai_dict_603_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTLCalT0",864,G__anasamurai_dict_603_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTRCalT0",870,G__anasamurai_dict_603_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTLSlwT0",902,G__anasamurai_dict_603_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTRSlwT0",908,G__anasamurai_dict_603_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDTRaw",750,G__anasamurai_dict_603_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDTCal",724,G__anasamurai_dict_603_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDTSlw",762,G__anasamurai_dict_603_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTAveRaw",966,G__anasamurai_dict_603_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTAveCal",940,G__anasamurai_dict_603_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTAveSlw",978,G__anasamurai_dict_603_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTAveCalT0",1072,G__anasamurai_dict_603_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTAveSlwT0",1110,G__anasamurai_dict_603_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTTOFGamma",1100,G__anasamurai_dict_603_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTTOFNeutron",1364,G__anasamurai_dict_603_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosCal",878,G__anasamurai_dict_603_0_68, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosSlw",916,G__anasamurai_dict_603_0_69, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPos",606,G__anasamurai_dict_603_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPos",606,G__anasamurai_dict_603_0_71, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - val i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFlightLength",1516,G__anasamurai_dict_603_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFlightAngle",1393,G__anasamurai_dict_603_0_73, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLayer",797,G__anasamurai_dict_603_0_74, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSubLayer",1095,G__anasamurai_dict_603_0_75, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDetDirect",1176,G__anasamurai_dict_603_0_76, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPlacLcLDetDirectionDef), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DirectionIs",1117,G__anasamurai_dict_603_0_77, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i 'TArtHIMEPla::DetDirectionDef' - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDetPos",879,G__anasamurai_dict_603_0_78, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDetPos",879,G__anasamurai_dict_603_0_79, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHit",581,G__anasamurai_dict_603_0_80, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQRaw",667,G__anasamurai_dict_603_0_81, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQPed",650,G__anasamurai_dict_603_0_82, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQCal",641,G__anasamurai_dict_603_0_83, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIvSqrtQPed",1267,G__anasamurai_dict_603_0_84, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQURaw",752,G__anasamurai_dict_603_0_85, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQDRaw",735,G__anasamurai_dict_603_0_86, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQUPed",735,G__anasamurai_dict_603_0_87, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQDPed",718,G__anasamurai_dict_603_0_88, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQUCal",726,G__anasamurai_dict_603_0_89, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQDCal",709,G__anasamurai_dict_603_0_90, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIvSqrtQUPed",1352,G__anasamurai_dict_603_0_91, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIvSqrtQDPed",1335,G__anasamurai_dict_603_0_92, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQLRaw",743,G__anasamurai_dict_603_0_93, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQRRaw",749,G__anasamurai_dict_603_0_94, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQLPed",726,G__anasamurai_dict_603_0_95, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQRPed",732,G__anasamurai_dict_603_0_96, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQLCal",717,G__anasamurai_dict_603_0_97, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQRCal",723,G__anasamurai_dict_603_0_98, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIvSqrtQLPed",1343,G__anasamurai_dict_603_0_99, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIvSqrtQRPed",1349,G__anasamurai_dict_603_0_100, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQAvePed",934,G__anasamurai_dict_603_0_101, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQAveCal",925,G__anasamurai_dict_603_0_102, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLogQPed",940,G__anasamurai_dict_603_0_103, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLogQCal",931,G__anasamurai_dict_603_0_104, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIvSqrtQAvePed",1551,G__anasamurai_dict_603_0_105, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTRaw",670,G__anasamurai_dict_603_0_106, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTCal",644,G__anasamurai_dict_603_0_107, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTSlw",682,G__anasamurai_dict_603_0_108, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTCalT0",776,G__anasamurai_dict_603_0_109, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTSlwT0",814,G__anasamurai_dict_603_0_110, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTURaw",755,G__anasamurai_dict_603_0_111, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDRaw",738,G__anasamurai_dict_603_0_112, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTUCal",729,G__anasamurai_dict_603_0_113, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDCal",712,G__anasamurai_dict_603_0_114, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTUSlw",767,G__anasamurai_dict_603_0_115, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDSlw",750,G__anasamurai_dict_603_0_116, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTUCalT0",861,G__anasamurai_dict_603_0_117, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDCalT0",844,G__anasamurai_dict_603_0_118, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTUSlwT0",899,G__anasamurai_dict_603_0_119, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDSlwT0",882,G__anasamurai_dict_603_0_120, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTLRaw",746,G__anasamurai_dict_603_0_121, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTRRaw",752,G__anasamurai_dict_603_0_122, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTLCal",720,G__anasamurai_dict_603_0_123, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTRCal",726,G__anasamurai_dict_603_0_124, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTLSlw",758,G__anasamurai_dict_603_0_125, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTRSlw",764,G__anasamurai_dict_603_0_126, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTLCalT0",852,G__anasamurai_dict_603_0_127, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTRCalT0",858,G__anasamurai_dict_603_0_128, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTLSlwT0",890,G__anasamurai_dict_603_0_129, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTRSlwT0",896,G__anasamurai_dict_603_0_130, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDTRaw",738,G__anasamurai_dict_603_0_131, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDTCal",712,G__anasamurai_dict_603_0_132, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDTSlw",750,G__anasamurai_dict_603_0_133, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTAveRaw",954,G__anasamurai_dict_603_0_134, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTAveCal",928,G__anasamurai_dict_603_0_135, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTAveSlw",966,G__anasamurai_dict_603_0_136, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTAveCalT0",1060,G__anasamurai_dict_603_0_137, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTAveSlwT0",1098,G__anasamurai_dict_603_0_138, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTTOFGamma",1088,G__anasamurai_dict_603_0_139, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTTOFNeutron",1352,G__anasamurai_dict_603_0_140, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosCal",866,G__anasamurai_dict_603_0_141, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosSlw",904,G__anasamurai_dict_603_0_142, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPos",594,G__anasamurai_dict_603_0_143, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPos",594,G__anasamurai_dict_603_0_144, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFlightLength",1504,G__anasamurai_dict_603_0_145, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFlightAngle",1381,G__anasamurai_dict_603_0_146, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_603_0_147, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtHIMEPla::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_603_0_148, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtHIMEPla::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_603_0_149, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtHIMEPla::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_603_0_150, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtHIMEPla::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_603_0_154, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_603_0_155, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtHIMEPla::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_603_0_156, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtHIMEPla::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_603_0_157, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtHIMEPla::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_603_0_158, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtHIMEPla::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtHIMEPla", 955, G__anasamurai_dict_603_0_159, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPla), -1, 0, 1, 1, 1, 0, "u 'TArtHIMEPla' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtHIMEPla", 1081, G__anasamurai_dict_603_0_160, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_603_0_161, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPla), -1, 1, 1, 1, 1, 0, "u 'TArtHIMEPla' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibNEBULA(void) {
   /* TArtCalibNEBULA */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULA));
   G__memfunc_setup("TArtCalibNEBULA",1293,G__anasamurai_dict_605_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULA), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anasamurai_dict_605_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anasamurai_dict_605_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumNEBULAPla",1316,G__anasamurai_dict_605_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNEBULAPla",1012,G__anasamurai_dict_605_0_7, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPla), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNEBULAPla",1109,G__anasamurai_dict_605_0_8, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPla), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - id", "find by id", (void*) NULL, 0);
   G__memfunc_setup("GetNEBULAPlaArray",1523,G__anasamurai_dict_605_0_9, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), G__defined_typename("TArtNEBULAPlaArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumNEBULAPlaPara",1704,G__anasamurai_dict_605_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNEBULAPlaPara",1400,G__anasamurai_dict_605_0_11, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPlaPara), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNEBULAPlaPara",1497,G__anasamurai_dict_605_0_12, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPlaPara), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - id", "find by id", (void*) NULL, 0);
   G__memfunc_setup("GetNEBULAPlaParaArray",1911,G__anasamurai_dict_605_0_13, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), G__defined_typename("TArtNEBULAPlaParaArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalMultiplicity",1561,G__anasamurai_dict_605_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", "calculate multiplicity", (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicity_N",1750,G__anasamurai_dict_605_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicity_N1",1799,G__anasamurai_dict_605_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicity_N2",1800,G__anasamurai_dict_605_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicity_V1",1807,G__anasamurai_dict_605_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicity_V2",1808,G__anasamurai_dict_605_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicity_N11",1848,G__anasamurai_dict_605_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicity_N12",1849,G__anasamurai_dict_605_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicity_N21",1849,G__anasamurai_dict_605_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicity_N22",1850,G__anasamurai_dict_605_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicities",1777,G__anasamurai_dict_605_0_24, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULAMult), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_605_0_25, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibNEBULA::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_605_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibNEBULA::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_605_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibNEBULA::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_605_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibNEBULA::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_605_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_605_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibNEBULA::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_605_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibNEBULA::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_605_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibNEBULA::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_605_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibNEBULA::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibNEBULA", 1293, G__anasamurai_dict_605_0_37, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULA), -1, 0, 1, 1, 1, 0, "u 'TArtCalibNEBULA' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibNEBULA", 1419, G__anasamurai_dict_605_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtRecoNeutron(void) {
   /* TArtRecoNeutron */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoNeutron));
   G__memfunc_setup("TArtRecoNeutron",1519,G__anasamurai_dict_606_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoNeutron), -1, 0, 1, 1, 1, 0, "u 'TString' - 10 '\"Neutron\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNeutronArray",1546,G__anasamurai_dict_606_0_4, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_606_0_5, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtRecoNeutron::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_606_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRecoNeutron::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_606_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtRecoNeutron::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_606_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtRecoNeutron::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_606_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_606_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRecoNeutron::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_606_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRecoNeutron::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_606_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRecoNeutron::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_606_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRecoNeutron::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtRecoNeutron", 1519, G__anasamurai_dict_606_0_17, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoNeutron), -1, 0, 1, 1, 1, 0, "u 'TArtRecoNeutron' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtRecoNeutron", 1645, G__anasamurai_dict_606_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_606_0_19, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoNeutron), -1, 1, 1, 1, 1, 0, "u 'TArtRecoNeutron' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtNEBULAFilter(void) {
   /* TArtNEBULAFilter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAFilter));
   G__memfunc_setup("IHitMin",658,G__anasamurai_dict_607_0_1, 121, -1, -1, 0, 3, 3, 1, 0, 
"U 'TArtCalibNEBULA' - 0 - fCalibNEBULA i - 'Int_t' 0 - ihitmin_n "
"i - 'Int_t' 0 - ihitmin_v", (char*)NULL, (void*) G__func2void( (void (*)(TArtCalibNEBULA*, Int_t, Int_t))(&TArtNEBULAFilter::IHitMin) ), 0);
   G__memfunc_setup("Threshold",941,G__anasamurai_dict_607_0_2, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TArtCalibNEBULA' - 0 - fCalibNEBULA", (char*)NULL, (void*) G__func2void( (void (*)(TArtCalibNEBULA*))(&TArtNEBULAFilter::Threshold) ), 0);
   G__memfunc_setup("Threshold",941,G__anasamurai_dict_607_0_3, 121, -1, -1, 0, 3, 3, 1, 0, 
"U 'TArtCalibNEBULA' - 0 - fCalibNEBULA d - 'Double_t' 0 - threshold_n "
"d - 'Double_t' 0 - threshold_v", (char*)NULL, (void*) G__func2void( (void (*)(TArtCalibNEBULA*, Double_t, Double_t))(&TArtNEBULAFilter::Threshold) ), 0);
   G__memfunc_setup("TOF",233,G__anasamurai_dict_607_0_4, 121, -1, -1, 0, 3, 3, 1, 0, 
"U 'TArtCalibNEBULA' - 0 - fCalibNEBULA d - 'Double_t' 0 - min "
"d - 'Double_t' 0 - max", (char*)NULL, (void*) G__func2void( (void (*)(TArtCalibNEBULA*, Double_t, Double_t))(&TArtNEBULAFilter::TOF) ), 0);
   G__memfunc_setup("Veto",414,G__anasamurai_dict_607_0_5, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TArtCalibNEBULA' - 0 - fCalibNEBULA i - 'Int_t' 0 - VetoNum", (char*)NULL, (void*) G__func2void( (void (*)(TArtCalibNEBULA*, Int_t))(&TArtNEBULAFilter::Veto) ), 0);
   G__memfunc_setup("HitMinPos",891,G__anasamurai_dict_607_0_6, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TArtCalibNEBULA' - 0 - fCalibNEBULA", (char*)NULL, (void*) G__func2void( (void (*)(TArtCalibNEBULA*))(&TArtNEBULAFilter::HitMinPos) ), 0);
   G__memfunc_setup("HitMinTime",984,G__anasamurai_dict_607_0_7, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TArtCalibNEBULA' - 0 - fCalibNEBULA", (char*)NULL, (void*) G__func2void( (void (*)(TArtCalibNEBULA*))(&TArtNEBULAFilter::HitMinTime) ), 0);
   G__memfunc_setup("HitMinPos2",941,G__anasamurai_dict_607_0_8, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TArtCalibNEBULA' - 0 - fCalibNEBULA", (char*)NULL, (void*) G__func2void( (void (*)(TArtCalibNEBULA*))(&TArtNEBULAFilter::HitMinPos2) ), 0);
   G__memfunc_setup("TArtNEBULAFilter",1432,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAFilter), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_607_0_10, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtNEBULAFilter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_607_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNEBULAFilter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_607_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtNEBULAFilter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_607_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtNEBULAFilter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__anasamurai_dict_607_0_14, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__anasamurai_dict_607_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__anasamurai_dict_607_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_607_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_607_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNEBULAFilter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_607_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtNEBULAFilter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_607_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNEBULAFilter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_607_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtNEBULAFilter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtNEBULAFilter", 1432, G__anasamurai_dict_607_0_22, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAFilter), -1, 0, 1, 1, 1, 0, "u 'TArtNEBULAFilter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_607_0_23, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAFilter), -1, 1, 1, 1, 1, 0, "u 'TArtNEBULAFilter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibHIME(void) {
   /* TArtCalibHIME */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHIME));
   G__memfunc_setup("TArtCalibHIME",1145,G__anasamurai_dict_608_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHIME), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anasamurai_dict_608_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anasamurai_dict_608_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumHIMEPla",1168,G__anasamurai_dict_608_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHIMEPla",864,G__anasamurai_dict_608_0_7, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPla), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindHIMEPla",961,G__anasamurai_dict_608_0_8, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPla), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - id", "find by id", (void*) NULL, 0);
   G__memfunc_setup("GetHIMEPlaArray",1375,G__anasamurai_dict_608_0_9, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), G__defined_typename("TArtHIMEPlaArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumHIMEPlaPara",1556,G__anasamurai_dict_608_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHIMEPlaPara",1252,G__anasamurai_dict_608_0_11, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPlaPara), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindHIMEPlaPara",1349,G__anasamurai_dict_608_0_12, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEPlaPara), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - id", "find by id", (void*) NULL, 0);
   G__memfunc_setup("GetHIMEPlaParaArray",1763,G__anasamurai_dict_608_0_13, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), G__defined_typename("TArtHIMEPlaParaArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalMultiplicity",1561,G__anasamurai_dict_608_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", "calculate multiplicity", (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicity_N",1750,G__anasamurai_dict_608_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicity_N1",1799,G__anasamurai_dict_608_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicity_N2",1800,G__anasamurai_dict_608_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicity_N3",1801,G__anasamurai_dict_608_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicity_N4",1802,G__anasamurai_dict_608_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicity_N5",1803,G__anasamurai_dict_608_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicity_V",1758,G__anasamurai_dict_608_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicities",1777,G__anasamurai_dict_608_0_22, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHIMEMult), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_608_0_23, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibHIME::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_608_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibHIME::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_608_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibHIME::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_608_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibHIME::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_608_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_608_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibHIME::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_608_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibHIME::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_608_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibHIME::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_608_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibHIME::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibHIME", 1145, G__anasamurai_dict_608_0_35, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHIME), -1, 0, 1, 1, 1, 0, "u 'TArtCalibHIME' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibHIME", 1271, G__anasamurai_dict_608_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtHIMEFilter(void) {
   /* TArtHIMEFilter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEFilter));
   G__memfunc_setup("IHitMin",658,G__anasamurai_dict_609_0_1, 121, -1, -1, 0, 3, 3, 1, 0, 
"U 'TArtCalibHIME' - 0 - fCalibHIME i - 'Int_t' 0 - ihitmin_n "
"i - 'Int_t' 0 - ihitmin_v", (char*)NULL, (void*) G__func2void( (void (*)(TArtCalibHIME*, Int_t, Int_t))(&TArtHIMEFilter::IHitMin) ), 0);
   G__memfunc_setup("Threshold",941,G__anasamurai_dict_609_0_2, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TArtCalibHIME' - 0 - fCalibHIME", (char*)NULL, (void*) G__func2void( (void (*)(TArtCalibHIME*))(&TArtHIMEFilter::Threshold) ), 0);
   G__memfunc_setup("Threshold",941,G__anasamurai_dict_609_0_3, 121, -1, -1, 0, 3, 3, 1, 0, 
"U 'TArtCalibHIME' - 0 - fCalibHIME d - 'Double_t' 0 - threshold_n "
"d - 'Double_t' 0 - threshold_v", (char*)NULL, (void*) G__func2void( (void (*)(TArtCalibHIME*, Double_t, Double_t))(&TArtHIMEFilter::Threshold) ), 0);
   G__memfunc_setup("TOF",233,G__anasamurai_dict_609_0_4, 121, -1, -1, 0, 3, 3, 1, 0, 
"U 'TArtCalibHIME' - 0 - fCalibHIME d - 'Double_t' 0 - min "
"d - 'Double_t' 0 - max", (char*)NULL, (void*) G__func2void( (void (*)(TArtCalibHIME*, Double_t, Double_t))(&TArtHIMEFilter::TOF) ), 0);
   G__memfunc_setup("Veto",414,G__anasamurai_dict_609_0_5, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TArtCalibHIME' - 0 - fCalibHIME i - 'Int_t' 0 - VetoNum", (char*)NULL, (void*) G__func2void( (void (*)(TArtCalibHIME*, Int_t))(&TArtHIMEFilter::Veto) ), 0);
   G__memfunc_setup("HitMinPos",891,G__anasamurai_dict_609_0_6, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TArtCalibHIME' - 0 - fCalibHIME", (char*)NULL, (void*) G__func2void( (void (*)(TArtCalibHIME*))(&TArtHIMEFilter::HitMinPos) ), 0);
   G__memfunc_setup("HitMinTime",984,G__anasamurai_dict_609_0_7, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TArtCalibHIME' - 0 - fCalibHIME", (char*)NULL, (void*) G__func2void( (void (*)(TArtCalibHIME*))(&TArtHIMEFilter::HitMinTime) ), 0);
   G__memfunc_setup("HitMinPos2",941,G__anasamurai_dict_609_0_8, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TArtCalibHIME' - 0 - fCalibHIME", (char*)NULL, (void*) G__func2void( (void (*)(TArtCalibHIME*))(&TArtHIMEFilter::HitMinPos2) ), 0);
   G__memfunc_setup("TArtHIMEFilter",1284,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEFilter), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_609_0_10, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtHIMEFilter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_609_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtHIMEFilter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_609_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtHIMEFilter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_609_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtHIMEFilter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__anasamurai_dict_609_0_14, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__anasamurai_dict_609_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__anasamurai_dict_609_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_609_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_609_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtHIMEFilter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_609_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtHIMEFilter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_609_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtHIMEFilter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_609_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtHIMEFilter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtHIMEFilter", 1284, G__anasamurai_dict_609_0_22, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEFilter), -1, 0, 1, 1, 1, 0, "u 'TArtHIMEFilter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_609_0_23, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHIMEFilter), -1, 1, 1, 1, 1, 0, "u 'TArtHIMEFilter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtDCTrack(void) {
   /* TArtDCTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCTrack));
   G__memfunc_setup("TArtDCTrack",1015,G__anasamurai_dict_718_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChi2",626,G__anasamurai_dict_718_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNDF",516,G__anasamurai_dict_718_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNumHitLayer",1406,G__anasamurai_dict_718_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosition",1153,G__anasamurai_dict_718_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - val i - 'Int_t' 0 '0' i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAngle",787,G__anasamurai_dict_718_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - val i - 'Int_t' 0 '0' i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddHitID",699,G__anasamurai_dict_718_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddDriftLength",1380,G__anasamurai_dict_718_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddHitXPosition",1499,G__anasamurai_dict_718_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddHitZPosition",1501,G__anasamurai_dict_718_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddHitPlaneID",1195,G__anasamurai_dict_718_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddHitDCangle",1212,G__anasamurai_dict_718_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddSign",666,G__anasamurai_dict_718_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChi2",614,G__anasamurai_dict_718_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNDF",504,G__anasamurai_dict_718_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumHitLayer",1394,G__anasamurai_dict_718_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosition",1141,G__anasamurai_dict_718_0_17, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' i", "i=0 for x, i=1 for y", (void*) NULL, 1);
   G__memfunc_setup("GetAngle",775,G__anasamurai_dict_718_0_18, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' i", "i=0 for a, i=1 for b", (void*) NULL, 1);
   G__memfunc_setup("GetHitPlaneID",1218,G__anasamurai_dict_718_0_19, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHitID",722,G__anasamurai_dict_718_0_20, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSign",689,G__anasamurai_dict_718_0_21, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - hitid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDriftLength",1403,G__anasamurai_dict_718_0_22, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHitXPosition",1522,G__anasamurai_dict_718_0_23, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHitZPosition",1524,G__anasamurai_dict_718_0_24, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcLocalHitPos",1461,G__anasamurai_dict_718_0_25, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcLocalTrackAngle",1850,G__anasamurai_dict_718_0_26, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__anasamurai_dict_718_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' o", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsEqual",692,G__anasamurai_dict_718_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_718_0_32, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtDCTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_718_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtDCTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_718_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtDCTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_718_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtDCTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_718_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_718_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtDCTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_718_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtDCTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_718_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtDCTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_718_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtDCTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtDCTrack", 1015, G__anasamurai_dict_718_0_44, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCTrack), -1, 0, 1, 1, 1, 0, "u 'TArtDCTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtDCTrack", 1141, G__anasamurai_dict_718_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_718_0_46, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCTrack), -1, 1, 1, 1, 1, 0, "u 'TArtDCTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibDCTrack(void) {
   /* TArtCalibDCTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCTrack));
   G__memfunc_setup("TArtCalibDCTrack",1490,G__anasamurai_dict_719_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCTrack), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 10 - indata u 'TString' - 10 - outdata "
"C - - 10 - lpattern i - 'Int_t' 10 '-1' minnumhitlayer", "number of required hit layer for each direction", (void*) NULL, 0);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDriftVelocity",1652,G__anasamurai_dict_719_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTDCStart",1045,G__anasamurai_dict_719_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTDCWindow",1151,G__anasamurai_dict_719_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - sval i - 'Int_t' 0 - eval", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSTC",534,G__anasamurai_dict_719_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TF1' - 0 - inf i - 'Int_t' 0 - layer_id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTDCDistribution",1799,G__anasamurai_dict_719_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH1' - 0 - inhtdc i - 'Int_t' 0 - layer_id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("STCCorrection",1282,G__anasamurai_dict_719_0_9, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - pitch "
"D - 'Double_t' 0 - c", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDCTrackArray",1435,G__anasamurai_dict_719_0_10, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumDCTrack",1228,G__anasamurai_dict_719_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumDCHit",1020,G__anasamurai_dict_719_0_12, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDCTrack",924,G__anasamurai_dict_719_0_13, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCTrack), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcDriftLength",1486,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 2, 0, 
"i - 'Int_t' 0 - tdc i - 'Int_t' 0 - layer_id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitsBuffer",1310,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RecoSimpleTrack",1512,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"U 'vector<TArtDCHit*,allocator<TArtDCHit*> >' 'vector<TArtDCHit*>' 0 - hits i - 'Int_t' 0 - nl "
"i - 'Int_t' 0 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcSimpleTrack",1490,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"d - 'Double_t' 0 - pos[][2] i - 'Int_t' 0 - nl "
"U 'TArtDCTrack' - 0 - tr i - 'Int_t' 0 - dir", "dir=0 means tracking for x and 1 means for y ", (void*) NULL, 0);
   G__memfunc_setup("FindAssociatePos",1615,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"U 'TArtDCTrack' - 0 - tr U 'vector<TArtDCHit*,allocator<TArtDCHit*> >' 'vector<TArtDCHit*>' 0 - hits "
"D - 'Double_t' 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RecoTrack",894,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcTrack",872,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"U 'vector<TArtDCHit*,allocator<TArtDCHit*> >' 'vector<TArtDCHit*>' 0 - hits i - 'Int_t' 0 - numlayer "
"U 'TObjArray' - 0 - trs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcTrack1D",989,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCTrackcLcLTrack1D), -1, 0, 1, 1, 2, 0, "U 'vector<TArtDCHit*,allocator<TArtDCHit*> >' 'vector<TArtDCHit*>' 0 - hits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcTrackWith1DTracks",2017,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCTrack), -1, 0, 3, 1, 2, 0, 
"U 'TArtCalibDCTrack::Track1D' - 0 - tx U 'TArtCalibDCTrack::Track1D' - 0 - tu "
"U 'TArtCalibDCTrack::Track1D' - 0 - tv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_719_0_23, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibDCTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_719_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibDCTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_719_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibDCTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_719_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibDCTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_719_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_719_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibDCTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_719_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibDCTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_719_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibDCTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_719_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibDCTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibDCTrack", 1490, G__anasamurai_dict_719_0_35, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCTrack), -1, 0, 1, 1, 1, 0, "u 'TArtCalibDCTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibDCTrack", 1616, G__anasamurai_dict_719_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_719_0_37, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibDCTrack), -1, 1, 1, 1, 1, 0, "u 'TArtCalibDCTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibRPDCTrack(void) {
   /* TArtCalibRPDCTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPDCTrack));
   G__memfunc_setup("TArtCalibRPDCTrack",1652,G__anasamurai_dict_729_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPDCTrack), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 10 '\"SAMURAIRPDCHit\"' indataname u 'TString' - 10 '\"SAMURAIRPDCTrack\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_729_0_2, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibRPDCTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_729_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibRPDCTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_729_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibRPDCTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_729_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibRPDCTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_729_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_729_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibRPDCTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_729_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibRPDCTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_729_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibRPDCTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_729_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibRPDCTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibRPDCTrack", 1652, G__anasamurai_dict_729_0_14, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPDCTrack), -1, 0, 1, 1, 1, 0, "u 'TArtCalibRPDCTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibRPDCTrack", 1778, G__anasamurai_dict_729_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_729_0_16, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPDCTrack), -1, 1, 1, 1, 1, 0, "u 'TArtCalibRPDCTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtHODPla(void) {
   /* TArtHODPla */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPla));
   G__memfunc_setup("TArtHODPla",883,G__anasamurai_dict_730_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPla), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTURaw",767,G__anasamurai_dict_730_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDRaw",750,G__anasamurai_dict_730_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQURaw",764,G__anasamurai_dict_730_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQDRaw",747,G__anasamurai_dict_730_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQUPed",747,G__anasamurai_dict_730_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQDPed",730,G__anasamurai_dict_730_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQUCal",738,G__anasamurai_dict_730_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQDCal",721,G__anasamurai_dict_730_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQAveRaw",963,G__anasamurai_dict_730_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQAvePed",946,G__anasamurai_dict_730_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQAveCal",937,G__anasamurai_dict_730_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTURaw",755,G__anasamurai_dict_730_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDRaw",738,G__anasamurai_dict_730_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQURaw",752,G__anasamurai_dict_730_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQDRaw",735,G__anasamurai_dict_730_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQUPed",735,G__anasamurai_dict_730_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQDPed",718,G__anasamurai_dict_730_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQUCal",726,G__anasamurai_dict_730_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQDCal",709,G__anasamurai_dict_730_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQAveRaw",951,G__anasamurai_dict_730_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQAvePed",934,G__anasamurai_dict_730_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQAveCal",925,G__anasamurai_dict_730_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTAveCal",940,G__anasamurai_dict_730_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTUCal",741,G__anasamurai_dict_730_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTDCal",724,G__anasamurai_dict_730_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTUSlw",779,G__anasamurai_dict_730_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTDSlw",762,G__anasamurai_dict_730_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTAveSlw",978,G__anasamurai_dict_730_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetZCoef",771,G__anasamurai_dict_730_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i d - 'Double_t' 0 - val", "i=0-2", (void*) NULL, 1);
   G__memfunc_setup("GetTAveCal",928,G__anasamurai_dict_730_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTUCal",729,G__anasamurai_dict_730_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDCal",712,G__anasamurai_dict_730_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTUSlw",767,G__anasamurai_dict_730_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDSlw",750,G__anasamurai_dict_730_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTAveSlw",966,G__anasamurai_dict_730_0_36, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZet",595,G__anasamurai_dict_730_0_37, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - - 0 - beta", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsEqual",692,G__anasamurai_dict_730_0_38, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_730_0_41, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtHODPla::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_730_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtHODPla::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_730_0_43, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtHODPla::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_730_0_44, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtHODPla::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_730_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_730_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtHODPla::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_730_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtHODPla::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_730_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtHODPla::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_730_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtHODPla::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtHODPla", 883, G__anasamurai_dict_730_0_53, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPla), -1, 0, 1, 1, 1, 0, "u 'TArtHODPla' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtHODPla", 1009, G__anasamurai_dict_730_0_54, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_730_0_55, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtHODPla), -1, 1, 1, 1, 1, 0, "u 'TArtHODPla' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtNeuLANDPla(void) {
   /* TArtNeuLANDPla */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPla));
   G__memfunc_setup("TArtNeuLANDPla",1247,G__anasamurai_dict_818_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPla), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLayer",809,G__anasamurai_dict_818_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBarID",718,G__anasamurai_dict_818_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQRaw",679,G__anasamurai_dict_818_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetQCal",653,G__anasamurai_dict_818_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTCycle",880,G__anasamurai_dict_818_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTac",580,G__anasamurai_dict_818_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTacRef",865,G__anasamurai_dict_818_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTRaw",682,G__anasamurai_dict_818_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTCal",656,G__anasamurai_dict_818_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTacquilaID",1261,G__anasamurai_dict_818_0_11, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - sam i - 'Int_t' 0 - gtb "
"i - 'Int_t' 0 - mod i - 'Int_t' 0 - ch", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFired",790,G__anasamurai_dict_818_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPos",606,G__anasamurai_dict_818_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetZPos",696,G__anasamurai_dict_818_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLayer",797,G__anasamurai_dict_818_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBarID",706,G__anasamurai_dict_818_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQRaw",667,G__anasamurai_dict_818_0_17, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQCal",641,G__anasamurai_dict_818_0_18, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTCycle",868,G__anasamurai_dict_818_0_19, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTac",568,G__anasamurai_dict_818_0_20, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTacRef",853,G__anasamurai_dict_818_0_21, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTRaw",670,G__anasamurai_dict_818_0_22, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTCal",644,G__anasamurai_dict_818_0_23, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTacquilaID",1249,G__anasamurai_dict_818_0_24, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 1 - sam i - 'Int_t' 1 - gtb "
"i - 'Int_t' 1 - mod i - 'Int_t' 1 - ch", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFired",778,G__anasamurai_dict_818_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBothFired",1175,G__anasamurai_dict_818_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPos",594,G__anasamurai_dict_818_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetX",376,G__anasamurai_dict_818_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetY",377,G__anasamurai_dict_818_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZ",378,G__anasamurai_dict_818_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintData",903,G__anasamurai_dict_818_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_818_0_32, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtNeuLANDPla::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_818_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNeuLANDPla::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_818_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtNeuLANDPla::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_818_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtNeuLANDPla::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_818_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_818_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNeuLANDPla::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_818_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtNeuLANDPla::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_818_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNeuLANDPla::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_818_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtNeuLANDPla::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtNeuLANDPla", 1247, G__anasamurai_dict_818_0_44, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPla), -1, 0, 1, 1, 1, 0, "u 'TArtNeuLANDPla' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtNeuLANDPla", 1373, G__anasamurai_dict_818_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_818_0_46, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPla), -1, 1, 1, 1, 1, 0, "u 'TArtNeuLANDPla' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibNeuLAND(void) {
   /* TArtCalibNeuLAND */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNeuLAND));
   G__memfunc_setup("TArtCalibNeuLAND",1437,G__anasamurai_dict_820_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNeuLAND), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anasamurai_dict_820_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anasamurai_dict_820_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumNeuLANDPla",1460,G__anasamurai_dict_820_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNeuLANDPla",1156,G__anasamurai_dict_820_0_7, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPla), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNeuLANDPla",1253,G__anasamurai_dict_820_0_8, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPla), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - id", "find by id", (void*) NULL, 0);
   G__memfunc_setup("GetNeuLANDPlaArray",1667,G__anasamurai_dict_820_0_9, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), G__defined_typename("TArtNeuLANDPlaArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNeuLANDMasterStart",2017,G__anasamurai_dict_820_0_10, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPla), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumNeuLANDPlaPara",1848,G__anasamurai_dict_820_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNeuLANDPlaPara",1544,G__anasamurai_dict_820_0_12, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPlaPara), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNeuLANDPlaPara",1641,G__anasamurai_dict_820_0_13, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeuLANDPlaPara), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - id", "find by id", (void*) NULL, 0);
   G__memfunc_setup("GetNeuLANDPlaParaArray",2055,G__anasamurai_dict_820_0_14, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), G__defined_typename("TArtNeuLANDPlaParaArray"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTac16",671,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 8, 
"i - 'Int_t' 0 - sam i - 'Int_t' 0 - gtb "
"i - 'Int_t' 0 - mod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("QDC2Energy",884,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 4, 0, "d - 'Double_t' 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WalkCorrection",1447,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 4, 0, "d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Tac2ns",555,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - x D - 'Double_t' 40 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_820_0_19, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibNeuLAND::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_820_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibNeuLAND::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_820_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibNeuLAND::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_820_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibNeuLAND::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_820_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_820_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibNeuLAND::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_820_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibNeuLAND::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_820_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibNeuLAND::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_820_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibNeuLAND::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibNeuLAND", 1437, G__anasamurai_dict_820_0_31, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNeuLAND), -1, 0, 1, 1, 1, 0, "u 'TArtCalibNeuLAND' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibNeuLAND", 1563, G__anasamurai_dict_820_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibS1DC2Track(void) {
   /* TArtCalibS1DC2Track */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC2Track));
   G__memfunc_setup("TArtCalibS1DC2Track",1672,G__anasamurai_dict_830_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC2Track), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 10 '\"SAMURAIS1DC2Hit\"' indataname u 'TString' - 10 '\"SAMURAIS1DC2Track\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_830_0_2, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibS1DC2Track::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_830_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibS1DC2Track::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_830_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibS1DC2Track::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_830_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibS1DC2Track::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_830_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_830_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibS1DC2Track::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_830_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibS1DC2Track::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_830_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibS1DC2Track::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_830_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibS1DC2Track::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibS1DC2Track", 1672, G__anasamurai_dict_830_0_14, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC2Track), -1, 0, 1, 1, 1, 0, "u 'TArtCalibS1DC2Track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibS1DC2Track", 1798, G__anasamurai_dict_830_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_830_0_16, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC2Track), -1, 1, 1, 1, 1, 0, "u 'TArtCalibS1DC2Track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtTZero(void) {
   /* TArtTZero */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTZero));
   G__memfunc_setup("TArtTZero",879,G__anasamurai_dict_831_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTZero), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetT0Cal",704,G__anasamurai_dict_831_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetT0Slw",742,G__anasamurai_dict_831_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTZeroCal",1072,G__anasamurai_dict_831_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTZeroSlw",1110,G__anasamurai_dict_831_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetT0Cal",692,G__anasamurai_dict_831_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetT0Slw",730,G__anasamurai_dict_831_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTZeroCal",1060,G__anasamurai_dict_831_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTZeroSlw",1098,G__anasamurai_dict_831_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_831_0_10, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtTZero::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_831_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtTZero::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_831_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtTZero::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_831_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtTZero::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_831_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_831_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtTZero::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_831_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtTZero::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_831_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtTZero::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_831_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtTZero::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtTZero", 879, G__anasamurai_dict_831_0_22, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTZero), -1, 0, 1, 1, 1, 0, "u 'TArtTZero' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtTZero", 1005, G__anasamurai_dict_831_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_831_0_24, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTZero), -1, 1, 1, 1, 1, 0, "u 'TArtTZero' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibS1DC1Track(void) {
   /* TArtCalibS1DC1Track */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC1Track));
   G__memfunc_setup("TArtCalibS1DC1Track",1671,G__anasamurai_dict_832_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC1Track), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 10 '\"SAMURAIS1DC1Hit\"' indataname u 'TString' - 10 '\"SAMURAIS1DC1Track\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_832_0_2, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibS1DC1Track::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_832_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibS1DC1Track::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_832_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibS1DC1Track::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_832_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibS1DC1Track::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_832_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_832_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibS1DC1Track::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_832_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibS1DC1Track::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_832_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibS1DC1Track::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_832_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibS1DC1Track::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibS1DC1Track", 1671, G__anasamurai_dict_832_0_14, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC1Track), -1, 0, 1, 1, 1, 0, "u 'TArtCalibS1DC1Track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibS1DC1Track", 1797, G__anasamurai_dict_832_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_832_0_16, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC1Track), -1, 1, 1, 1, 1, 0, "u 'TArtCalibS1DC1Track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtNeutron(void) {
   /* TArtNeutron */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeutron));
   G__memfunc_setup("TArtNeutron",1126,G__anasamurai_dict_835_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeutron), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMass",704,G__anasamurai_dict_835_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__anasamurai_dict_835_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMeVee",766,G__anasamurai_dict_835_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPos",606,G__anasamurai_dict_835_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPos",606,G__anasamurai_dict_835_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - val i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBeta",680,G__anasamurai_dict_835_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBeta",680,G__anasamurai_dict_835_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - val i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGamma",783,G__anasamurai_dict_835_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP",380,G__anasamurai_dict_835_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP",380,G__anasamurai_dict_835_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - val i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPAbs",658,G__anasamurai_dict_835_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergy",918,G__anasamurai_dict_835_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTheta",802,G__anasamurai_dict_835_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhi",589,G__anasamurai_dict_835_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMass",692,G__anasamurai_dict_835_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__anasamurai_dict_835_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeVee",754,G__anasamurai_dict_835_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPos",594,G__anasamurai_dict_835_0_19, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPos",594,G__anasamurai_dict_835_0_20, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBeta",668,G__anasamurai_dict_835_0_21, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBeta",668,G__anasamurai_dict_835_0_22, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGamma",771,G__anasamurai_dict_835_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP",368,G__anasamurai_dict_835_0_24, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP",368,G__anasamurai_dict_835_0_25, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPAbs",646,G__anasamurai_dict_835_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__anasamurai_dict_835_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTheta",790,G__anasamurai_dict_835_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__anasamurai_dict_835_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEqual",692,G__anasamurai_dict_835_0_30, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_835_0_33, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtNeutron::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_835_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNeutron::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_835_0_35, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtNeutron::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_835_0_36, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtNeutron::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_835_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_835_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNeutron::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_835_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtNeutron::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_835_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtNeutron::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_835_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtNeutron::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtNeutron", 1126, G__anasamurai_dict_835_0_45, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeutron), -1, 0, 1, 1, 1, 0, "u 'TArtNeutron' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtNeutron", 1252, G__anasamurai_dict_835_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_835_0_47, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNeutron), -1, 1, 1, 1, 1, 0, "u 'TArtNeutron' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtICF(void) {
   /* TArtICF */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtICF));
   G__memfunc_setup("TArtICF",589,G__anasamurai_dict_837_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtICF), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIonPair",990,G__anasamurai_dict_837_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetZCoef",771,G__anasamurai_dict_837_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - n d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIonPair",978,G__anasamurai_dict_837_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZCoef",759,G__anasamurai_dict_837_0_5, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIC",428,G__anasamurai_dict_837_0_6, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtIC), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNumHit",897,G__anasamurai_dict_837_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nch", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEnergySqSum",1423,G__anasamurai_dict_837_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEnergyAvSum",1410,G__anasamurai_dict_837_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumHit",885,G__anasamurai_dict_837_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergySqSum",1411,G__anasamurai_dict_837_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergyAvSum",1398,G__anasamurai_dict_837_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZet",595,G__anasamurai_dict_837_0_13, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - - 0 - beta", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_837_0_14, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtICF::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_837_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtICF::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_837_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtICF::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_837_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtICF::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_837_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_837_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtICF::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_837_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtICF::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_837_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtICF::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_837_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtICF::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtICF", 589, G__anasamurai_dict_837_0_26, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtICF), -1, 0, 1, 1, 1, 0, "u 'TArtICF' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtICF", 715, G__anasamurai_dict_837_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_837_0_28, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtICF), -1, 1, 1, 1, 1, 0, "u 'TArtICF' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtRPTOFPla(void) {
   /* TArtRPTOFPla */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPla));
   G__memfunc_setup("TArtRPTOFPla",1059,G__anasamurai_dict_858_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPla), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTULV775Raw",1092,G__anasamurai_dict_858_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDRV775Raw",1081,G__anasamurai_dict_858_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTULV1290Raw",1133,G__anasamurai_dict_858_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDRV1290Raw",1122,G__anasamurai_dict_858_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQULRaw",840,G__anasamurai_dict_858_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQDRRaw",829,G__anasamurai_dict_858_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQAveRaw",963,G__anasamurai_dict_858_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQAveCal",937,G__anasamurai_dict_858_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTULV775Raw",1080,G__anasamurai_dict_858_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDRV775Raw",1069,G__anasamurai_dict_858_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTULV1290Raw",1121,G__anasamurai_dict_858_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDRV1290Raw",1110,G__anasamurai_dict_858_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQULRaw",828,G__anasamurai_dict_858_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQDRRaw",817,G__anasamurai_dict_858_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQULPed",811,G__anasamurai_dict_858_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQDRPed",800,G__anasamurai_dict_858_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQULCal",802,G__anasamurai_dict_858_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQDRCal",791,G__anasamurai_dict_858_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQAveRaw",951,G__anasamurai_dict_858_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQAvePed",934,G__anasamurai_dict_858_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQAveCal",925,G__anasamurai_dict_858_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetV775Time",948,G__anasamurai_dict_858_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetV775TimeUL",1109,G__anasamurai_dict_858_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetV775TimeDR",1098,G__anasamurai_dict_858_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetV1290Time",989,G__anasamurai_dict_858_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetV1290TimeUL",1150,G__anasamurai_dict_858_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetV1290TimeDR",1139,G__anasamurai_dict_858_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetV775Time",936,G__anasamurai_dict_858_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV775TimeUL",1097,G__anasamurai_dict_858_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV775TimeDR",1086,G__anasamurai_dict_858_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1290Time",977,G__anasamurai_dict_858_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1290TimeUL",1138,G__anasamurai_dict_858_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV1290TimeDR",1127,G__anasamurai_dict_858_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEqual",692,G__anasamurai_dict_858_0_35, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_858_0_38, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtRPTOFPla::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_858_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRPTOFPla::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_858_0_40, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtRPTOFPla::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_858_0_41, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtRPTOFPla::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_858_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_858_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRPTOFPla::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_858_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRPTOFPla::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_858_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRPTOFPla::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_858_0_49, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRPTOFPla::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtRPTOFPla", 1059, G__anasamurai_dict_858_0_50, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPla), -1, 0, 1, 1, 1, 0, "u 'TArtRPTOFPla' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtRPTOFPla", 1185, G__anasamurai_dict_858_0_51, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_858_0_52, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPla), -1, 1, 1, 1, 1, 0, "u 'TArtRPTOFPla' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibRPTOFPla(void) {
   /* TArtCalibRPTOFPla */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPTOFPla));
   G__memfunc_setup("TArtCalibRPTOFPla",1534,G__anasamurai_dict_859_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPTOFPla), -1, 0, 1, 1, 1, 0, "u 'TString' - 10 '\"SAMURAIRPTOFPla\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anasamurai_dict_859_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anasamurai_dict_859_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructData",1558,G__anasamurai_dict_859_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TClonesArray' - 0 - plas u 'vector<TArtRPTOFPlaPara*,allocator<TArtRPTOFPlaPara*> >' 'vector<TArtRPTOFPlaPara*>' 0 - plaparas", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRPTOFPlaArray",1479,G__anasamurai_dict_859_0_7, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumRPTOFPla",1272,G__anasamurai_dict_859_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRPTOFPla",968,G__anasamurai_dict_859_0_9, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPla), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRPTOFPlaPara",1356,G__anasamurai_dict_859_0_10, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPlaPara), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindRPTOFPla",1065,G__anasamurai_dict_859_0_11, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPla), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindRPTOFPla",1065,G__anasamurai_dict_859_0_12, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPla), -1, 0, 1, 1, 1, 0, "U 'TString' - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindRPTOFPla",1065,G__anasamurai_dict_859_0_13, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPla), -1, 0, 1, 1, 1, 0, "C - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRPTOFWPlaArray",1566,G__anasamurai_dict_859_0_14, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumRPTOFWPla",1359,G__anasamurai_dict_859_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRPTOFWPla",1055,G__anasamurai_dict_859_0_16, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPla), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRPTOFWPlaPara",1443,G__anasamurai_dict_859_0_17, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPlaPara), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindRPTOFWPla",1152,G__anasamurai_dict_859_0_18, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPla), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindRPTOFWPla",1152,G__anasamurai_dict_859_0_19, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPla), -1, 0, 1, 1, 1, 0, "U 'TString' - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindRPTOFWPla",1152,G__anasamurai_dict_859_0_20, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRPTOFPla), -1, 0, 1, 1, 1, 0, "C - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_859_0_21, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibRPTOFPla::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_859_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibRPTOFPla::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_859_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibRPTOFPla::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_859_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibRPTOFPla::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_859_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_859_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibRPTOFPla::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_859_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibRPTOFPla::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_859_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibRPTOFPla::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_859_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibRPTOFPla::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibRPTOFPla", 1534, G__anasamurai_dict_859_0_33, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPTOFPla), -1, 0, 1, 1, 1, 0, "u 'TArtCalibRPTOFPla' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibRPTOFPla", 1660, G__anasamurai_dict_859_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_859_0_35, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPTOFPla), -1, 1, 1, 1, 1, 0, "u 'TArtCalibRPTOFPla' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibNEBULAMult(void) {
   /* TArtCalibNEBULAMult */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULAMult));
   G__memfunc_setup("TArtCalibNEBULAMult",1711,G__anasamurai_dict_864_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULAMult), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearData",865,G__anasamurai_dict_864_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_864_0_3, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibNEBULAMult::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_864_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibNEBULAMult::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_864_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibNEBULAMult::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_864_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibNEBULAMult::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_864_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_864_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibNEBULAMult::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_864_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibNEBULAMult::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_864_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibNEBULAMult::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_864_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibNEBULAMult::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibNEBULAMult", 1711, G__anasamurai_dict_864_0_15, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULAMult), -1, 0, 1, 1, 1, 0, "u 'TArtCalibNEBULAMult' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibNEBULAMult", 1837, G__anasamurai_dict_864_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_864_0_17, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNEBULAMult), -1, 1, 1, 1, 1, 0, "u 'TArtCalibNEBULAMult' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibTEDCsI(void) {
   /* TArtCalibTEDCsI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibTEDCsI));
   G__memfunc_setup("TArtCalibTEDCsI",1330,G__anasamurai_dict_876_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibTEDCsI), -1, 0, 1, 1, 1, 0, "u 'TString' - 10 '\"SAMURAITEDCsI\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anasamurai_dict_876_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anasamurai_dict_876_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTEDCsIArray",1275,G__anasamurai_dict_876_0_6, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumTEDCsI",1068,G__anasamurai_dict_876_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTEDCsI",764,G__anasamurai_dict_876_0_8, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsI), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTEDCsIPara",1152,G__anasamurai_dict_876_0_9, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsIPara), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindTEDCsI",861,G__anasamurai_dict_876_0_10, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtTEDCsI), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_876_0_11, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibTEDCsI::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_876_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibTEDCsI::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_876_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibTEDCsI::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_876_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibTEDCsI::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_876_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_876_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibTEDCsI::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_876_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibTEDCsI::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_876_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibTEDCsI::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_876_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibTEDCsI::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibTEDCsI", 1330, G__anasamurai_dict_876_0_23, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibTEDCsI), -1, 0, 1, 1, 1, 0, "u 'TArtCalibTEDCsI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibTEDCsI", 1456, G__anasamurai_dict_876_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_876_0_25, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibTEDCsI), -1, 1, 1, 1, 1, 0, "u 'TArtCalibTEDCsI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtRecoFragment(void) {
   /* TArtRecoFragment */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoFragment));
   G__memfunc_setup("TArtRecoFragment",1592,G__anasamurai_dict_885_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoFragment), -1, 0, 1, 1, 1, 0, "u 'TString' - 10 '\"SAMURAIFragment\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCenterBrho",1304,G__anasamurai_dict_885_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTOFOffSet",1116,G__anasamurai_dict_885_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - i d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPla2TargetLength",1860,G__anasamurai_dict_885_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCenterBrho",1292,G__anasamurai_dict_885_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTOFOffSet",1104,G__anasamurai_dict_885_0_8, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPla2TargetLength",1848,G__anasamurai_dict_885_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRigidityFitResult",2055,G__anasamurai_dict_885_0_10, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "D - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPathLengthFitResult",2225,G__anasamurai_dict_885_0_11, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "D - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFragmentArray",1619,G__anasamurai_dict_885_0_12, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFragment",1108,G__anasamurai_dict_885_0_13, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtFragment), -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadParameter",1313,G__anasamurai_dict_885_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ParseParaList",1307,G__anasamurai_dict_885_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TXMLNode' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadParameterMultiDimFit",2405,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadParameters",1424,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - - u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - - "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - res", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadParameters",1424,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - - u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - - "
"d - 'Double_t' 1 - res", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadParameters",1424,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - - u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - - "
"u 'vector<int,allocator<int> >' 'vector<Int_t>' 1 - res", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadParameters",1424,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - - u 'basic_ifstream<char,char_traits<char> >' 'ifstream' 1 - - "
"i - 'Int_t' 1 - res", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParameters",1569,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"u 'string' - 0 - - u 'vector<int,allocator<int> >' 'vector<Int_t>' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParameters",1569,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"u 'string' - 0 - - u 'vector<double,allocator<double> >' 'vector<Double_t>' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_885_0_23, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtRecoFragment::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_885_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRecoFragment::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_885_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtRecoFragment::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_885_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtRecoFragment::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_885_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_885_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRecoFragment::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_885_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRecoFragment::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_885_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRecoFragment::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_885_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRecoFragment::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtRecoFragment", 1592, G__anasamurai_dict_885_0_35, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoFragment), -1, 0, 1, 1, 1, 0, "u 'TArtRecoFragment' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtRecoFragment", 1718, G__anasamurai_dict_885_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtRecoSAMURAI(void) {
   /* TArtRecoSAMURAI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoSAMURAI));
   G__memfunc_setup("TArtRecoSAMURAI",1302,G__anasamurai_dict_886_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoSAMURAI), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_886_0_4, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtRecoSAMURAI::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_886_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRecoSAMURAI::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_886_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtRecoSAMURAI::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_886_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtRecoSAMURAI::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_886_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_886_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRecoSAMURAI::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_886_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRecoSAMURAI::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_886_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtRecoSAMURAI::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_886_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtRecoSAMURAI::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtRecoSAMURAI", 1302, G__anasamurai_dict_886_0_16, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoSAMURAI), -1, 0, 1, 1, 1, 0, "u 'TArtRecoSAMURAI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtRecoSAMURAI", 1428, G__anasamurai_dict_886_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_886_0_18, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtRecoSAMURAI), -1, 1, 1, 1, 1, 0, "u 'TArtRecoSAMURAI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalcGlobalTrack(void) {
   /* TArtCalcGlobalTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalcGlobalTrack));
   G__memfunc_setup("TArtCalcGlobalTrack",1844,G__anasamurai_dict_887_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalcGlobalTrack), -1, 0, 4, 1, 1, 0, 
"U 'TArtDCTrack' - 0 - In U 'TArtDCTrack' - 0 - Out "
"d - 'Double_t' 0 '0.8' DefPini d - 'Double_t' 0 '915.44' l_FDC2HOD", "distance between center of FDC2 and HOD // default: SAMURAI dayone", (void*) NULL, 0);
   G__memfunc_setup("TArtCalcGlobalTrack",1844,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalcGlobalTrack), -1, 0, 1, 1, 4, 0, "u 'TArtCalcGlobalTrack' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalcGlobalTrack), -1, 1, 1, 1, 4, 0, "u 'TArtCalcGlobalTrack' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLocalTrackIn",1463,G__anasamurai_dict_887_0_4, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLocalTrackOut",1592,G__anasamurai_dict_887_0_5, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtDCTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doTrace",706,G__anasamurai_dict_887_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doFit",502,G__anasamurai_dict_887_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Status",644,G__anasamurai_dict_887_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Niteration",1053,G__anasamurai_dict_887_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitialMomentum",1864,G__anasamurai_dict_887_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - Pini", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrimaryPosition",1593,G__anasamurai_dict_887_0_11, 117, G__get_linked_tagnum(&G__anasamurai_dictLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrimaryMomentum",1590,G__anasamurai_dict_887_0_12, 117, G__get_linked_tagnum(&G__anasamurai_dictLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PathLengthToTOF",1435,G__anasamurai_dict_887_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PathLengthTotal",1523,G__anasamurai_dict_887_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chisqr",650,G__anasamurai_dict_887_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("diff",409,G__anasamurai_dict_887_0_16, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNHits",774,G__anasamurai_dict_887_0_17, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitPoint",1103,G__anasamurai_dict_887_0_18, 117, G__get_linked_tagnum(&G__anasamurai_dictLN_RKcalcHitPoint), -1, 1, 1, 1, 1, 9, "i - - 0 - lnum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLocalHitPos",1378,G__anasamurai_dict_887_0_19, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - lnum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGlobalHitPos",1480,G__anasamurai_dict_887_0_20, 117, G__get_linked_tagnum(&G__anasamurai_dictLN_TVector3), -1, 1, 1, 1, 1, 9, "i - - 0 - lnum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHitArray",1227,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearHitArray",1323,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calcChiSqr",989,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 4, 8, 
"u 'RKHitPointContainer' - 11 - hpCont D - 'Double_t' 0 - Diff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("guessNextParameters",2010,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 5, 1, 4, 8, 
"u 'RKHitPointContainer' - 11 - hpCont u 'RKCordParameter' - 1 - Cord "
"d - 'Double_t' 1 - estDeltaChisqr d - 'Double_t' 1 - lambdaCri "
"d - 'Double_t' 0 '0.0' dmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveCalcPosition",1655,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'RKHitPointContainer' - 11 - hpCont", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCalcHits",1304,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 8, 
"u 'RKHitPointContainer' - 11 - hpCont u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - ost", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveTrackParameters",1976,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "u 'RKCordParameter' - 11 - cp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_887_0_28, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalcGlobalTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_887_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalcGlobalTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_887_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalcGlobalTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_887_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalcGlobalTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__anasamurai_dict_887_0_32, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__anasamurai_dict_887_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__anasamurai_dict_887_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_887_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_887_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalcGlobalTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_887_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalcGlobalTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_887_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalcGlobalTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_887_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalcGlobalTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalcGlobalTrack", 1970, G__anasamurai_dict_887_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibNeuLANDVETO(void) {
   /* TArtCalibNeuLANDVETO */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNeuLANDVETO));
   G__memfunc_setup("TArtCalibNeuLANDVETO",1755,G__anasamurai_dict_893_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNeuLANDVETO), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anasamurai_dict_893_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anasamurai_dict_893_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumNeuLANDVETOPla",1778,G__anasamurai_dict_893_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNeuLANDVETOPla",1474,G__anasamurai_dict_893_0_7, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPla), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNeuLANDVETOPla",1571,G__anasamurai_dict_893_0_8, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPla), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - id", "find by id", (void*) NULL, 0);
   G__memfunc_setup("GetNeuLANDVETOPlaArray",1985,G__anasamurai_dict_893_0_9, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumNeuLANDVETOPlaPara",2166,G__anasamurai_dict_893_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNeuLANDVETOPlaPara",1862,G__anasamurai_dict_893_0_11, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPlaPara), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNeuLANDVETOPlaPara",1959,G__anasamurai_dict_893_0_12, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtNEBULAPlaPara), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - id", "find by id", (void*) NULL, 0);
   G__memfunc_setup("GetNeuLANDVETOPlaParaArray",2373,G__anasamurai_dict_893_0_13, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_893_0_14, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibNeuLANDVETO::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_893_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibNeuLANDVETO::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_893_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibNeuLANDVETO::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_893_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibNeuLANDVETO::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_893_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_893_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibNeuLANDVETO::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_893_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibNeuLANDVETO::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_893_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibNeuLANDVETO::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_893_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibNeuLANDVETO::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibNeuLANDVETO", 1755, G__anasamurai_dict_893_0_26, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibNeuLANDVETO), -1, 0, 1, 1, 1, 0, "u 'TArtCalibNeuLANDVETO' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibNeuLANDVETO", 1881, G__anasamurai_dict_893_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtFragment(void) {
   /* TArtFragment */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtFragment));
   G__memfunc_setup("TArtFragment",1199,G__anasamurai_dict_894_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtFragment), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDelta",790,G__anasamurai_dict_894_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRKtraceStatus",1628,G__anasamurai_dict_894_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPrimaryPosition",1893,G__anasamurai_dict_894_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPrimaryMomentum",1890,G__anasamurai_dict_894_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPathLengthToHOD",1721,G__anasamurai_dict_894_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetChi2",626,G__anasamurai_dict_894_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNHit",671,G__anasamurai_dict_894_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNIteration",1321,G__anasamurai_dict_894_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDiff",677,G__anasamurai_dict_894_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTzero",832,G__anasamurai_dict_894_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTzeroQ",913,G__anasamurai_dict_894_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHODTime",918,G__anasamurai_dict_894_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHODQ",600,G__anasamurai_dict_894_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTOF",533,G__anasamurai_dict_894_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBrho",695,G__anasamurai_dict_894_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBeta",680,G__anasamurai_dict_894_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAoQ",557,G__anasamurai_dict_894_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetZ",390,G__anasamurai_dict_894_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDelta",778,G__anasamurai_dict_894_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRKtraceStatus",1616,G__anasamurai_dict_894_0_21, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcBrho",766,G__anasamurai_dict_894_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBrho",683,G__anasamurai_dict_894_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPrimaryPosition",1881,G__anasamurai_dict_894_0_24, 117, G__get_linked_tagnum(&G__anasamurai_dictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPrimaryMomentum",1878,G__anasamurai_dict_894_0_25, 117, G__get_linked_tagnum(&G__anasamurai_dictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPathLengthToHOD",1709,G__anasamurai_dict_894_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChi2",614,G__anasamurai_dict_894_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNHit",659,G__anasamurai_dict_894_0_28, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNIteration",1309,G__anasamurai_dict_894_0_29, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDiff",665,G__anasamurai_dict_894_0_30, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTzero",820,G__anasamurai_dict_894_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTzeroQ",901,G__anasamurai_dict_894_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHODTime",906,G__anasamurai_dict_894_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHODQ",588,G__anasamurai_dict_894_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTOF",521,G__anasamurai_dict_894_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBeta",668,G__anasamurai_dict_894_0_36, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAoQ",545,G__anasamurai_dict_894_0_37, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZ",378,G__anasamurai_dict_894_0_38, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_894_0_39, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtFragment::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_894_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtFragment::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_894_0_41, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtFragment::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_894_0_42, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtFragment::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_894_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_894_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtFragment::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_894_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtFragment::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_894_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtFragment::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_894_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtFragment::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtFragment", 1199, G__anasamurai_dict_894_0_51, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtFragment), -1, 0, 1, 1, 1, 0, "u 'TArtFragment' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtFragment", 1325, G__anasamurai_dict_894_0_52, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_894_0_53, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtFragment), -1, 1, 1, 1, 1, 0, "u 'TArtFragment' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibSAMURAITZero(void) {
   /* TArtCalibSAMURAITZero */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibSAMURAITZero));
   G__memfunc_setup("TArtCalibSAMURAITZero",1884,G__anasamurai_dict_895_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibSAMURAITZero), -1, 0, 1, 1, 1, 0, "u 'TString' - 10 '\"SAMURAIT0\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTZeroArray",1299,G__anasamurai_dict_895_0_4, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_895_0_5, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibSAMURAITZero::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_895_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibSAMURAITZero::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_895_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibSAMURAITZero::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_895_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibSAMURAITZero::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_895_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_895_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibSAMURAITZero::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_895_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibSAMURAITZero::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_895_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibSAMURAITZero::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_895_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibSAMURAITZero::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibSAMURAITZero", 1884, G__anasamurai_dict_895_0_17, (int) ('i'), 
G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibSAMURAITZero), -1, 0, 1, 1, 1, 0, "u 'TArtCalibSAMURAITZero' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibSAMURAITZero", 2010, G__anasamurai_dict_895_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_895_0_19, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibSAMURAITZero), -1, 1, 1, 1, 1, 0, "u 'TArtCalibSAMURAITZero' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibHIMEMult(void) {
   /* TArtCalibHIMEMult */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHIMEMult));
   G__memfunc_setup("TArtCalibHIMEMult",1563,G__anasamurai_dict_898_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHIMEMult), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearData",865,G__anasamurai_dict_898_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_898_0_3, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibHIMEMult::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_898_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibHIMEMult::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_898_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibHIMEMult::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_898_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibHIMEMult::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_898_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_898_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibHIMEMult::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_898_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibHIMEMult::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_898_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibHIMEMult::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_898_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibHIMEMult::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibHIMEMult", 1563, G__anasamurai_dict_898_0_15, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHIMEMult), -1, 0, 1, 1, 1, 0, "u 'TArtCalibHIMEMult' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibHIMEMult", 1689, G__anasamurai_dict_898_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_898_0_17, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibHIMEMult), -1, 1, 1, 1, 1, 0, "u 'TArtCalibHIMEMult' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibRPDCHit(void) {
   /* TArtCalibRPDCHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPDCHit));
   G__memfunc_setup("TArtCalibRPDCHit",1444,G__anasamurai_dict_904_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPDCHit), -1, 0, 1, 1, 1, 0, "u 'TString' - 10 '\"SAMURAIRPDCHit\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_904_0_3, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibRPDCHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_904_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibRPDCHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_904_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibRPDCHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_904_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibRPDCHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_904_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_904_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibRPDCHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_904_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibRPDCHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_904_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibRPDCHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_904_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibRPDCHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibRPDCHit", 1444, G__anasamurai_dict_904_0_15, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPDCHit), -1, 0, 1, 1, 1, 0, "u 'TArtCalibRPDCHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibRPDCHit", 1570, G__anasamurai_dict_904_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_904_0_17, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibRPDCHit), -1, 1, 1, 1, 1, 0, "u 'TArtCalibRPDCHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibICF(void) {
   /* TArtCalibICF */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibICF));
   G__memfunc_setup("TArtCalibICF",1064,G__anasamurai_dict_928_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibICF), -1, 0, 1, 1, 1, 0, "u 'TString' - 10 '\"SAMURAIICF\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anasamurai_dict_928_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__anasamurai_dict_928_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - seg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearData",865,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReconstructData",1558,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetICArray",939,G__anasamurai_dict_928_0_6, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalibIC",903,G__anasamurai_dict_928_0_7, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibIC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__anasamurai_dict_928_0_8, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibICF::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_928_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibICF::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_928_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibICF::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_928_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibICF::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_928_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_928_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibICF::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_928_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibICF::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_928_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibICF::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_928_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibICF::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibICF", 1064, G__anasamurai_dict_928_0_20, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibICF), -1, 0, 1, 1, 1, 0, "u 'TArtCalibICF' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibICF", 1190, G__anasamurai_dict_928_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_928_0_22, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibICF), -1, 1, 1, 1, 1, 0, "u 'TArtCalibICF' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTArtCalibS1DC2Hit(void) {
   /* TArtCalibS1DC2Hit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC2Hit));
   G__memfunc_setup("TArtCalibS1DC2Hit",1464,G__anasamurai_dict_929_0_1, 105, G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC2Hit), -1, 0, 1, 1, 1, 0, "u 'TString' - 10 '\"SAMURAIS1DC2Hit\"' outdataname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TArtRawSegmentObject' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__anasamurai_dict_929_0_3, 85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TArtCalibS1DC2Hit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__anasamurai_dict_929_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibS1DC2Hit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__anasamurai_dict_929_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TArtCalibS1DC2Hit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__anasamurai_dict_929_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TArtCalibS1DC2Hit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__anasamurai_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__anasamurai_dict_929_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__anasamurai_dict_929_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibS1DC2Hit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__anasamurai_dict_929_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibS1DC2Hit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__anasamurai_dict_929_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TArtCalibS1DC2Hit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__anasamurai_dict_929_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TArtCalibS1DC2Hit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TArtCalibS1DC2Hit", 1464, G__anasamurai_dict_929_0_15, (int) ('i'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC2Hit), -1, 0, 1, 1, 1, 0, "u 'TArtCalibS1DC2Hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TArtCalibS1DC2Hit", 1590, G__anasamurai_dict_929_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__anasamurai_dict_929_0_17, (int) ('u'), G__get_linked_tagnum(&G__anasamurai_dictLN_TArtCalibS1DC2Hit), -1, 1, 1, 1, 1, 0, "u 'TArtCalibS1DC2Hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncanasamurai_dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalanasamurai_dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {
}

static void G__cpp_setup_func36() {
}

static void G__cpp_setup_func37() {
}

static void G__cpp_setup_func38() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcanasamurai_dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
  G__cpp_setup_func36();
  G__cpp_setup_func37();
  G__cpp_setup_func38();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__anasamurai_dictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ifstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtDataObject = { "TArtDataObject" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtTKE = { "TArtTKE" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtTEDCsI = { "TArtTEDCsI" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtReconstruction = { "TArtReconstruction" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtRawSegmentObject = { "TArtRawSegmentObject" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtDCHitPara = { "TArtDCHitPara" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtDCHit = { "TArtDCHit" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtSAMURAIParameters = { "TArtSAMURAIParameters" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtStoreManager = { "TArtStoreManager" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibDCHit = { "TArtCalibDCHit" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_vectorlETArtDCHitParamUcOallocatorlETArtDCHitParamUgRsPgR = { "vector<TArtDCHitPara*,allocator<TArtDCHitPara*> >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtDCHitParamUcOallocatorlETArtDCHitParamUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtDCHitPara*,allocator<TArtDCHitPara*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibS1DC1Hit = { "TArtCalibS1DC1Hit" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibCoin = { "TArtCalibCoin" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibBPCHit = { "TArtCalibBPCHit" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibBDC1Hit = { "TArtCalibBDC1Hit" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibBDC2Hit = { "TArtCalibBDC2Hit" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibFDC0Hit = { "TArtCalibFDC0Hit" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibFDC1Hit = { "TArtCalibFDC1Hit" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibFDC2Hit = { "TArtCalibFDC2Hit" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibBDC1Track = { "TArtCalibBDC1Track" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibBDC2Track = { "TArtCalibBDC2Track" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibFDC0Track = { "TArtCalibFDC0Track" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibFDC1Track = { "TArtCalibFDC1Track" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibFDC2Track = { "TArtCalibFDC2Track" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibHODPla = { "TArtCalibHODPla" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibSAMURAI = { "TArtCalibSAMURAI" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR = { "map<int,int,less<int>,allocator<pair<const int,int> > >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TXMLNode = { "TXMLNode" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtRIDFMap = { "TArtRIDFMap" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtTacquilaMap = { "TArtTacquilaMap" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtHODPlaPara = { "TArtHODPlaPara" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtRPTOFPlaPara = { "TArtRPTOFPlaPara" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtTEDCsIPara = { "TArtTEDCsIPara" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtNEBULAPlaPara = { "TArtNEBULAPlaPara" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtNeuLANDPlaPara = { "TArtNeuLANDPlaPara" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtTacquilaPara = { "TArtTacquilaPara" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOconstsPTArtNEBULAPlaParamUgRsPgRsPgR = { "map<TArtRIDFMap,const TArtNEBULAPlaPara*,less<TArtRIDFMap>,allocator<pair<const TArtRIDFMap,const TArtNEBULAPlaPara*> > >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtHIMEPlaPara = { "TArtHIMEPlaPara" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOconstsPTArtHIMEPlaParamUgRsPgRsPgR = { "map<TArtRIDFMap,const TArtHIMEPlaPara*,less<TArtRIDFMap>,allocator<pair<const TArtRIDFMap,const TArtHIMEPlaPara*> > >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtNEBULAHPCPara = { "TArtNEBULAHPCPara" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOconstsPTArtNEBULAHPCParamUgRsPgRsPgR = { "map<TArtRIDFMap,const TArtNEBULAHPCPara*,less<TArtRIDFMap>,allocator<pair<const TArtRIDFMap,const TArtNEBULAHPCPara*> > >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUcOlesslETArtTacquilaMapgRcOallocatorlEpairlEconstsPTArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgRsPgRsPgR = { "map<TArtTacquilaMap,const TArtNeuLANDPlaPara*,less<TArtTacquilaMap>,allocator<pair<const TArtTacquilaMap,const TArtNeuLANDPlaPara*> > >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_maplETArtTacquilaMapcOconstsPTArtTacquilaParamUcOlesslETArtTacquilaMapgRcOallocatorlEpairlEconstsPTArtTacquilaMapcOconstsPTArtTacquilaParamUgRsPgRsPgR = { "map<TArtTacquilaMap,const TArtTacquilaPara*,less<TArtTacquilaMap>,allocator<pair<const TArtTacquilaMap,const TArtTacquilaPara*> > >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_maplETArtRIDFMapcOTArtDCHitParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtDCHitParamUgRsPgRsPgR = { "map<TArtRIDFMap,TArtDCHitPara*,less<TArtRIDFMap>,allocator<pair<const TArtRIDFMap,TArtDCHitPara*> > >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_maplETArtRIDFMapcOTArtHODPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtHODPlaParamUgRsPgRsPgR = { "map<TArtRIDFMap,TArtHODPlaPara*,less<TArtRIDFMap>,allocator<pair<const TArtRIDFMap,TArtHODPlaPara*> > >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_maplETArtRIDFMapcOTArtRPTOFPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtRPTOFPlaParamUgRsPgRsPgR = { "map<TArtRIDFMap,TArtRPTOFPlaPara*,less<TArtRIDFMap>,allocator<pair<const TArtRIDFMap,TArtRPTOFPlaPara*> > >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_maplETArtRIDFMapcOTArtTEDCsIParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtTEDCsIParamUgRsPgRsPgR = { "map<TArtRIDFMap,TArtTEDCsIPara*,less<TArtRIDFMap>,allocator<pair<const TArtRIDFMap,TArtTEDCsIPara*> > >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_maplEintcOTArtNEBULAPlaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtNEBULAPlaParamUgRsPgRsPgR = { "map<int,TArtNEBULAPlaPara*,less<int>,allocator<pair<const int,TArtNEBULAPlaPara*> > >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_maplEintcOTArtHIMEPlaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtHIMEPlaParamUgRsPgRsPgR = { "map<int,TArtHIMEPlaPara*,less<int>,allocator<pair<const int,TArtHIMEPlaPara*> > >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_maplEintcOTArtNEBULAHPCParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtNEBULAHPCParamUgRsPgRsPgR = { "map<int,TArtNEBULAHPCPara*,less<int>,allocator<pair<const int,TArtNEBULAHPCPara*> > >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_maplEintcOTArtNeuLANDPlaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtNeuLANDPlaParamUgRsPgRsPgR = { "map<int,TArtNeuLANDPlaPara*,less<int>,allocator<pair<const int,TArtNeuLANDPlaPara*> > >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_maplEintcOTArtTacquilaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtTacquilaParamUgRsPgRsPgR = { "map<int,TArtTacquilaPara*,less<int>,allocator<pair<const int,TArtTacquilaPara*> > >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtNEBULAPla = { "TArtNEBULAPla" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtNEBULAHPC = { "TArtNEBULAHPC" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibNEBULAHPC = { "TArtCalibNEBULAHPC" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtHIMEPla = { "TArtHIMEPla" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtHIMEPlacLcLDetDirectionDef = { "TArtHIMEPla::DetDirectionDef" , 101 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibNEBULA = { "TArtCalibNEBULA" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtRecoNeutron = { "TArtRecoNeutron" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtNEBULAFilter = { "TArtNEBULAFilter" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibHIME = { "TArtCalibHIME" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtHIMEFilter = { "TArtHIMEFilter" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtDCTrack = { "TArtDCTrack" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibDCTrack = { "TArtCalibDCTrack" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibDCTrackcLcLTrack1D = { "TArtCalibDCTrack::Track1D" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_vectorlETArtDCHitmUcOallocatorlETArtDCHitmUgRsPgR = { "vector<TArtDCHit*,allocator<TArtDCHit*> >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtDCHitmUcOallocatorlETArtDCHitmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtDCHit*,allocator<TArtDCHit*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibRPDCTrack = { "TArtCalibRPDCTrack" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtHODPla = { "TArtHODPla" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtHIMEPlaParacLcLDetDirectionDef = { "TArtHIMEPlaPara::DetDirectionDef" , 101 , -1 };
G__linked_taginfo G__anasamurai_dictLN_vectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgR = { "vector<TArtRawDataObject*,allocator<TArtRawDataObject*> >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtRawDataObject*,allocator<TArtRawDataObject*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_vectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgR = { "vector<TArtRawFADCDataObject*,allocator<TArtRawFADCDataObject*> >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtRawFADCDataObject*,allocator<TArtRawFADCDataObject*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_vectorlETArtRawTacquilaDataObjectmUcOallocatorlETArtRawTacquilaDataObjectmUgRsPgR = { "vector<TArtRawTacquilaDataObject*,allocator<TArtRawTacquilaDataObject*> >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawTacquilaDataObjectmUcOallocatorlETArtRawTacquilaDataObjectmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtRawTacquilaDataObject*,allocator<TArtRawTacquilaDataObject*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_vectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgR = { "vector<TArtRawSegmentObject*,allocator<TArtRawSegmentObject*> >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtRawSegmentObject*,allocator<TArtRawSegmentObject*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_vectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgR = { "vector<TArtRawScalerObject*,allocator<TArtRawScalerObject*> >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtRawScalerObject*,allocator<TArtRawScalerObject*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtNeuLANDPla = { "TArtNeuLANDPla" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibNeuLAND = { "TArtCalibNeuLAND" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtTKEPara = { "TArtTKEPara" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_maplETArtRIDFMapcOintcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOintgRsPgRsPgR = { "map<TArtRIDFMap,int,less<TArtRIDFMap>,allocator<pair<const TArtRIDFMap,int> > >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibS1DC2Track = { "TArtCalibS1DC2Track" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtTZero = { "TArtTZero" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibS1DC1Track = { "TArtCalibS1DC1Track" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtNeutron = { "TArtNeutron" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtIC = { "TArtIC" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtICF = { "TArtICF" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_maplEintcODCGeomRecordmUcOlesslEintgRcOallocatorlEpairlEconstsPintcODCGeomRecordmUgRsPgRsPgR = { "map<int,DCGeomRecord*,less<int>,allocator<pair<const int,DCGeomRecord*> > >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtRPTOFPla = { "TArtRPTOFPla" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibRPTOFPla = { "TArtCalibRPTOFPla" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_vectorlETArtRPTOFPlaParamUcOallocatorlETArtRPTOFPlaParamUgRsPgR = { "vector<TArtRPTOFPlaPara*,allocator<TArtRPTOFPlaPara*> >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRPTOFPlaParamUcOallocatorlETArtRPTOFPlaParamUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtRPTOFPlaPara*,allocator<TArtRPTOFPlaPara*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibNEBULAMult = { "TArtCalibNEBULAMult" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_RKcalcHitPoint = { "RKcalcHitPoint" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_RKCordParameter = { "RKCordParameter" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_RKHitPointContainer = { "RKHitPointContainer" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_vectorlEpairlEintcORKcalcHitPointgRcOallocatorlEpairlEintcORKcalcHitPointgRsPgRsPgR = { "vector<pair<int,RKcalcHitPoint>,allocator<pair<int,RKcalcHitPoint> > >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_reverse_iteratorlEvectorlEpairlEintcORKcalcHitPointgRcOallocatorlEpairlEintcORKcalcHitPointgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<int,RKcalcHitPoint>,allocator<pair<int,RKcalcHitPoint> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibTEDCsI = { "TArtCalibTEDCsI" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_vectorlETArtTEDCsIParamUcOallocatorlETArtTEDCsIParamUgRsPgR = { "vector<TArtTEDCsIPara*,allocator<TArtTEDCsIPara*> >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtTEDCsIParamUcOallocatorlETArtTEDCsIParamUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtTEDCsIPara*,allocator<TArtTEDCsIPara*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtRIPS = { "TArtRIPS" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtRecoRIPS = { "TArtRecoRIPS" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtRecoTOF = { "TArtRecoTOF" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtRecoBeam = { "TArtRecoBeam" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtRecoFragment = { "TArtRecoFragment" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtRecoSAMURAI = { "TArtRecoSAMURAI" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalcGlobalTrack = { "TArtCalcGlobalTrack" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_vectorlETArtCalcGlobalTrackcLcLTrackHitmUcOallocatorlETArtCalcGlobalTrackcLcLTrackHitmUgRsPgR = { "vector<TArtCalcGlobalTrack::TrackHit*,allocator<TArtCalcGlobalTrack::TrackHit*> >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtCalcGlobalTrackcLcLTrackHitmUcOallocatorlETArtCalcGlobalTrackcLcLTrackHitmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtCalcGlobalTrack::TrackHit*,allocator<TArtCalcGlobalTrack::TrackHit*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibNeuLANDVETO = { "TArtCalibNeuLANDVETO" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtFragment = { "TArtFragment" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibSAMURAITZero = { "TArtCalibSAMURAITZero" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibHIMEMult = { "TArtCalibHIMEMult" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_vectorlETArtHODPlaParamUcOallocatorlETArtHODPlaParamUgRsPgR = { "vector<TArtHODPlaPara*,allocator<TArtHODPlaPara*> >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtHODPlaParamUcOallocatorlETArtHODPlaParamUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArtHODPlaPara*,allocator<TArtHODPlaPara*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibRPDCHit = { "TArtCalibRPDCHit" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtPlastic = { "TArtPlastic" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR = { "map<unsigned int,double,less<unsigned int>,allocator<pair<const unsigned int,double> > >" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibIC = { "TArtCalibIC" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibICF = { "TArtCalibICF" , 99 , -1 };
G__linked_taginfo G__anasamurai_dictLN_TArtCalibS1DC2Hit = { "TArtCalibS1DC2Hit" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableanasamurai_dict() {
  G__anasamurai_dictLN_TClass.tagnum = -1 ;
  G__anasamurai_dictLN_TBuffer.tagnum = -1 ;
  G__anasamurai_dictLN_TMemberInspector.tagnum = -1 ;
  G__anasamurai_dictLN_TObject.tagnum = -1 ;
  G__anasamurai_dictLN_TNamed.tagnum = -1 ;
  G__anasamurai_dictLN_TString.tagnum = -1 ;
  G__anasamurai_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_string.tagnum = -1 ;
  G__anasamurai_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anasamurai_dictLN_TList.tagnum = -1 ;
  G__anasamurai_dictLN_TObjArray.tagnum = -1 ;
  G__anasamurai_dictLN_TClonesArray.tagnum = -1 ;
  G__anasamurai_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anasamurai_dictLN_TArtDataObject.tagnum = -1 ;
  G__anasamurai_dictLN_TArtTKE.tagnum = -1 ;
  G__anasamurai_dictLN_TArtTEDCsI.tagnum = -1 ;
  G__anasamurai_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__anasamurai_dictLN_TArtReconstruction.tagnum = -1 ;
  G__anasamurai_dictLN_TArtRawSegmentObject.tagnum = -1 ;
  G__anasamurai_dictLN_TArtDCHitPara.tagnum = -1 ;
  G__anasamurai_dictLN_TArtDCHit.tagnum = -1 ;
  G__anasamurai_dictLN_TArtSAMURAIParameters.tagnum = -1 ;
  G__anasamurai_dictLN_TArtStoreManager.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibDCHit.tagnum = -1 ;
  G__anasamurai_dictLN_vectorlETArtDCHitParamUcOallocatorlETArtDCHitParamUgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtDCHitParamUcOallocatorlETArtDCHitParamUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibS1DC1Hit.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibCoin.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibBPCHit.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibBDC1Hit.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibBDC2Hit.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibFDC0Hit.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibFDC1Hit.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibFDC2Hit.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibBDC1Track.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibBDC2Track.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibFDC0Track.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibFDC1Track.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibFDC2Track.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibHODPla.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibSAMURAI.tagnum = -1 ;
  G__anasamurai_dictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_TXMLNode.tagnum = -1 ;
  G__anasamurai_dictLN_TArtRIDFMap.tagnum = -1 ;
  G__anasamurai_dictLN_TArtTacquilaMap.tagnum = -1 ;
  G__anasamurai_dictLN_TArtHODPlaPara.tagnum = -1 ;
  G__anasamurai_dictLN_TArtRPTOFPlaPara.tagnum = -1 ;
  G__anasamurai_dictLN_TArtTEDCsIPara.tagnum = -1 ;
  G__anasamurai_dictLN_TArtNEBULAPlaPara.tagnum = -1 ;
  G__anasamurai_dictLN_TArtNeuLANDPlaPara.tagnum = -1 ;
  G__anasamurai_dictLN_TArtTacquilaPara.tagnum = -1 ;
  G__anasamurai_dictLN_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOconstsPTArtNEBULAPlaParamUgRsPgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_TArtHIMEPlaPara.tagnum = -1 ;
  G__anasamurai_dictLN_maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOconstsPTArtHIMEPlaParamUgRsPgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_TArtNEBULAHPCPara.tagnum = -1 ;
  G__anasamurai_dictLN_maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOconstsPTArtNEBULAHPCParamUgRsPgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUcOlesslETArtTacquilaMapgRcOallocatorlEpairlEconstsPTArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgRsPgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_maplETArtTacquilaMapcOconstsPTArtTacquilaParamUcOlesslETArtTacquilaMapgRcOallocatorlEpairlEconstsPTArtTacquilaMapcOconstsPTArtTacquilaParamUgRsPgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_maplETArtRIDFMapcOTArtDCHitParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtDCHitParamUgRsPgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_maplETArtRIDFMapcOTArtHODPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtHODPlaParamUgRsPgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_maplETArtRIDFMapcOTArtRPTOFPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtRPTOFPlaParamUgRsPgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_maplETArtRIDFMapcOTArtTEDCsIParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtTEDCsIParamUgRsPgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_maplEintcOTArtNEBULAPlaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtNEBULAPlaParamUgRsPgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_maplEintcOTArtHIMEPlaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtHIMEPlaParamUgRsPgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_maplEintcOTArtNEBULAHPCParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtNEBULAHPCParamUgRsPgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_maplEintcOTArtNeuLANDPlaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtNeuLANDPlaParamUgRsPgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_maplEintcOTArtTacquilaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtTacquilaParamUgRsPgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anasamurai_dictLN_TArtNEBULAPla.tagnum = -1 ;
  G__anasamurai_dictLN_TArtNEBULAHPC.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibNEBULAHPC.tagnum = -1 ;
  G__anasamurai_dictLN_TArtHIMEPla.tagnum = -1 ;
  G__anasamurai_dictLN_TArtHIMEPlacLcLDetDirectionDef.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibNEBULA.tagnum = -1 ;
  G__anasamurai_dictLN_TArtRecoNeutron.tagnum = -1 ;
  G__anasamurai_dictLN_TArtNEBULAFilter.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibHIME.tagnum = -1 ;
  G__anasamurai_dictLN_TArtHIMEFilter.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__anasamurai_dictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__anasamurai_dictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__anasamurai_dictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__anasamurai_dictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__anasamurai_dictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__anasamurai_dictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__anasamurai_dictLN_TF1.tagnum = -1 ;
  G__anasamurai_dictLN_TH1.tagnum = -1 ;
  G__anasamurai_dictLN_TArtDCTrack.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibDCTrack.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibDCTrackcLcLTrack1D.tagnum = -1 ;
  G__anasamurai_dictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anasamurai_dictLN_vectorlETArtDCHitmUcOallocatorlETArtDCHitmUgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtDCHitmUcOallocatorlETArtDCHitmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibRPDCTrack.tagnum = -1 ;
  G__anasamurai_dictLN_TArtHODPla.tagnum = -1 ;
  G__anasamurai_dictLN_TArtHIMEPlaParacLcLDetDirectionDef.tagnum = -1 ;
  G__anasamurai_dictLN_vectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anasamurai_dictLN_vectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anasamurai_dictLN_vectorlETArtRawTacquilaDataObjectmUcOallocatorlETArtRawTacquilaDataObjectmUgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawTacquilaDataObjectmUcOallocatorlETArtRawTacquilaDataObjectmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anasamurai_dictLN_vectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anasamurai_dictLN_vectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anasamurai_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_TArtNeuLANDPla.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibNeuLAND.tagnum = -1 ;
  G__anasamurai_dictLN_TArtTKEPara.tagnum = -1 ;
  G__anasamurai_dictLN_maplETArtRIDFMapcOintcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOintgRsPgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibS1DC2Track.tagnum = -1 ;
  G__anasamurai_dictLN_TArtTZero.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibS1DC1Track.tagnum = -1 ;
  G__anasamurai_dictLN_TArtNeutron.tagnum = -1 ;
  G__anasamurai_dictLN_TArtIC.tagnum = -1 ;
  G__anasamurai_dictLN_TArtICF.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__anasamurai_dictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__anasamurai_dictLN_TVector3.tagnum = -1 ;
  G__anasamurai_dictLN_maplEintcODCGeomRecordmUcOlesslEintgRcOallocatorlEpairlEconstsPintcODCGeomRecordmUgRsPgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_TArtRPTOFPla.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibRPTOFPla.tagnum = -1 ;
  G__anasamurai_dictLN_vectorlETArtRPTOFPlaParamUcOallocatorlETArtRPTOFPlaParamUgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRPTOFPlaParamUcOallocatorlETArtRPTOFPlaParamUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibNEBULAMult.tagnum = -1 ;
  G__anasamurai_dictLN_RKcalcHitPoint.tagnum = -1 ;
  G__anasamurai_dictLN_RKCordParameter.tagnum = -1 ;
  G__anasamurai_dictLN_RKHitPointContainer.tagnum = -1 ;
  G__anasamurai_dictLN_vectorlEpairlEintcORKcalcHitPointgRcOallocatorlEpairlEintcORKcalcHitPointgRsPgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_reverse_iteratorlEvectorlEpairlEintcORKcalcHitPointgRcOallocatorlEpairlEintcORKcalcHitPointgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibTEDCsI.tagnum = -1 ;
  G__anasamurai_dictLN_vectorlETArtTEDCsIParamUcOallocatorlETArtTEDCsIParamUgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtTEDCsIParamUcOallocatorlETArtTEDCsIParamUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anasamurai_dictLN_TArtRIPS.tagnum = -1 ;
  G__anasamurai_dictLN_TArtRecoRIPS.tagnum = -1 ;
  G__anasamurai_dictLN_TArtRecoTOF.tagnum = -1 ;
  G__anasamurai_dictLN_TArtRecoBeam.tagnum = -1 ;
  G__anasamurai_dictLN_TArtRecoFragment.tagnum = -1 ;
  G__anasamurai_dictLN_TArtRecoSAMURAI.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalcGlobalTrack.tagnum = -1 ;
  G__anasamurai_dictLN_vectorlETArtCalcGlobalTrackcLcLTrackHitmUcOallocatorlETArtCalcGlobalTrackcLcLTrackHitmUgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtCalcGlobalTrackcLcLTrackHitmUcOallocatorlETArtCalcGlobalTrackcLcLTrackHitmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibNeuLANDVETO.tagnum = -1 ;
  G__anasamurai_dictLN_TArtFragment.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibSAMURAITZero.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibHIMEMult.tagnum = -1 ;
  G__anasamurai_dictLN_vectorlETArtHODPlaParamUcOallocatorlETArtHODPlaParamUgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtHODPlaParamUcOallocatorlETArtHODPlaParamUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibRPDCHit.tagnum = -1 ;
  G__anasamurai_dictLN_TArtPlastic.tagnum = -1 ;
  G__anasamurai_dictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibIC.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibICF.tagnum = -1 ;
  G__anasamurai_dictLN_TArtCalibS1DC2Hit.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableanasamurai_dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TClass);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TObject);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TString);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_string);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TList);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtDataObject);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtTKE);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtTEDCsI),sizeof(TArtTEDCsI),-1,292096,(char*)NULL,G__setup_memvarTArtTEDCsI,G__setup_memfuncTArtTEDCsI);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtReconstruction);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtRawSegmentObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtDCHitPara),sizeof(TArtDCHitPara),-1,324864,(char*)NULL,G__setup_memvarTArtDCHitPara,G__setup_memfuncTArtDCHitPara);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtDCHit),sizeof(TArtDCHit),-1,292096,(char*)NULL,G__setup_memvarTArtDCHit,G__setup_memfuncTArtDCHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtSAMURAIParameters),sizeof(TArtSAMURAIParameters),-1,324864,(char*)NULL,G__setup_memvarTArtSAMURAIParameters,G__setup_memfuncTArtSAMURAIParameters);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtStoreManager);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibDCHit),sizeof(TArtCalibDCHit),-1,295937,(char*)NULL,G__setup_memvarTArtCalibDCHit,G__setup_memfuncTArtCalibDCHit);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_vectorlETArtDCHitParamUcOallocatorlETArtDCHitParamUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtDCHitParamUcOallocatorlETArtDCHitParamUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibS1DC1Hit),sizeof(TArtCalibS1DC1Hit),-1,296192,(char*)NULL,G__setup_memvarTArtCalibS1DC1Hit,G__setup_memfuncTArtCalibS1DC1Hit);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibCoin);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibBPCHit),sizeof(TArtCalibBPCHit),-1,296192,(char*)NULL,G__setup_memvarTArtCalibBPCHit,G__setup_memfuncTArtCalibBPCHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibBDC1Hit),sizeof(TArtCalibBDC1Hit),-1,296192,(char*)NULL,G__setup_memvarTArtCalibBDC1Hit,G__setup_memfuncTArtCalibBDC1Hit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibBDC2Hit),sizeof(TArtCalibBDC2Hit),-1,296192,(char*)NULL,G__setup_memvarTArtCalibBDC2Hit,G__setup_memfuncTArtCalibBDC2Hit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibFDC0Hit),sizeof(TArtCalibFDC0Hit),-1,296192,(char*)NULL,G__setup_memvarTArtCalibFDC0Hit,G__setup_memfuncTArtCalibFDC0Hit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibFDC1Hit),sizeof(TArtCalibFDC1Hit),-1,296192,(char*)NULL,G__setup_memvarTArtCalibFDC1Hit,G__setup_memfuncTArtCalibFDC1Hit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibFDC2Hit),sizeof(TArtCalibFDC2Hit),-1,296192,(char*)NULL,G__setup_memvarTArtCalibFDC2Hit,G__setup_memfuncTArtCalibFDC2Hit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibBDC1Track),sizeof(TArtCalibBDC1Track),-1,296192,(char*)NULL,G__setup_memvarTArtCalibBDC1Track,G__setup_memfuncTArtCalibBDC1Track);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibBDC2Track),sizeof(TArtCalibBDC2Track),-1,296192,(char*)NULL,G__setup_memvarTArtCalibBDC2Track,G__setup_memfuncTArtCalibBDC2Track);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibFDC0Track),sizeof(TArtCalibFDC0Track),-1,296192,(char*)NULL,G__setup_memvarTArtCalibFDC0Track,G__setup_memfuncTArtCalibFDC0Track);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibFDC1Track),sizeof(TArtCalibFDC1Track),-1,296192,(char*)NULL,G__setup_memvarTArtCalibFDC1Track,G__setup_memfuncTArtCalibFDC1Track);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibFDC2Track),sizeof(TArtCalibFDC2Track),-1,296192,(char*)NULL,G__setup_memvarTArtCalibFDC2Track,G__setup_memfuncTArtCalibFDC2Track);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibHODPla),sizeof(TArtCalibHODPla),-1,263424,(char*)NULL,G__setup_memvarTArtCalibHODPla,G__setup_memfuncTArtCalibHODPla);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibSAMURAI),sizeof(TArtCalibSAMURAI),-1,263424,(char*)NULL,G__setup_memvarTArtCalibSAMURAI,G__setup_memfuncTArtCalibSAMURAI);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TXMLNode);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtRIDFMap);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtTacquilaMap),sizeof(TArtTacquilaMap),-1,324864,(char*)NULL,G__setup_memvarTArtTacquilaMap,G__setup_memfuncTArtTacquilaMap);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtHODPlaPara),sizeof(TArtHODPlaPara),-1,324864,(char*)NULL,G__setup_memvarTArtHODPlaPara,G__setup_memfuncTArtHODPlaPara);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtRPTOFPlaPara),sizeof(TArtRPTOFPlaPara),-1,324864,(char*)NULL,G__setup_memvarTArtRPTOFPlaPara,G__setup_memfuncTArtRPTOFPlaPara);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtTEDCsIPara),sizeof(TArtTEDCsIPara),-1,324864,(char*)NULL,G__setup_memvarTArtTEDCsIPara,G__setup_memfuncTArtTEDCsIPara);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtNEBULAPlaPara),sizeof(TArtNEBULAPlaPara),-1,292096,(char*)NULL,G__setup_memvarTArtNEBULAPlaPara,G__setup_memfuncTArtNEBULAPlaPara);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtNeuLANDPlaPara),sizeof(TArtNeuLANDPlaPara),-1,292096,(char*)NULL,G__setup_memvarTArtNeuLANDPlaPara,G__setup_memfuncTArtNeuLANDPlaPara);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtTacquilaPara),sizeof(TArtTacquilaPara),-1,292096,(char*)NULL,G__setup_memvarTArtTacquilaPara,G__setup_memfuncTArtTacquilaPara);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_maplETArtRIDFMapcOconstsPTArtNEBULAPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOconstsPTArtNEBULAPlaParamUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtHIMEPlaPara),sizeof(TArtHIMEPlaPara),-1,292096,(char*)NULL,G__setup_memvarTArtHIMEPlaPara,G__setup_memfuncTArtHIMEPlaPara);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_maplETArtRIDFMapcOconstsPTArtHIMEPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOconstsPTArtHIMEPlaParamUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtNEBULAHPCPara),sizeof(TArtNEBULAHPCPara),-1,292096,(char*)NULL,G__setup_memvarTArtNEBULAHPCPara,G__setup_memfuncTArtNEBULAHPCPara);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_maplETArtRIDFMapcOconstsPTArtNEBULAHPCParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOconstsPTArtNEBULAHPCParamUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_maplETArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUcOlesslETArtTacquilaMapgRcOallocatorlEpairlEconstsPTArtTacquilaMapcOconstsPTArtNeuLANDPlaParamUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_maplETArtTacquilaMapcOconstsPTArtTacquilaParamUcOlesslETArtTacquilaMapgRcOallocatorlEpairlEconstsPTArtTacquilaMapcOconstsPTArtTacquilaParamUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtDCHitParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtDCHitParamUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtHODPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtHODPlaParamUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtRPTOFPlaParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtRPTOFPlaParamUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_maplETArtRIDFMapcOTArtTEDCsIParamUcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOTArtTEDCsIParamUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_maplEintcOTArtNEBULAPlaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtNEBULAPlaParamUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_maplEintcOTArtHIMEPlaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtHIMEPlaParamUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_maplEintcOTArtNEBULAHPCParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtNEBULAHPCParamUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_maplEintcOTArtNeuLANDPlaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtNeuLANDPlaParamUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_maplEintcOTArtTacquilaParamUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTArtTacquilaParamUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtNEBULAPla),sizeof(TArtNEBULAPla),-1,292096,(char*)NULL,G__setup_memvarTArtNEBULAPla,G__setup_memfuncTArtNEBULAPla);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtNEBULAHPC),sizeof(TArtNEBULAHPC),-1,292096,(char*)NULL,G__setup_memvarTArtNEBULAHPC,G__setup_memfuncTArtNEBULAHPC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibNEBULAHPC),sizeof(TArtCalibNEBULAHPC),-1,263424,(char*)NULL,G__setup_memvarTArtCalibNEBULAHPC,G__setup_memfuncTArtCalibNEBULAHPC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtHIMEPla),sizeof(TArtHIMEPla),-1,292096,(char*)NULL,G__setup_memvarTArtHIMEPla,G__setup_memfuncTArtHIMEPla);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtHIMEPlacLcLDetDirectionDef);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibNEBULA),sizeof(TArtCalibNEBULA),-1,263424,(char*)NULL,G__setup_memvarTArtCalibNEBULA,G__setup_memfuncTArtCalibNEBULA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtRecoNeutron),sizeof(TArtRecoNeutron),-1,263424,(char*)NULL,G__setup_memvarTArtRecoNeutron,G__setup_memfuncTArtRecoNeutron);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtNEBULAFilter),sizeof(TArtNEBULAFilter),-1,263424,(char*)NULL,G__setup_memvarTArtNEBULAFilter,G__setup_memfuncTArtNEBULAFilter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibHIME),sizeof(TArtCalibHIME),-1,263424,(char*)NULL,G__setup_memvarTArtCalibHIME,G__setup_memfuncTArtCalibHIME);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtHIMEFilter),sizeof(TArtHIMEFilter),-1,263424,(char*)NULL,G__setup_memvarTArtHIMEFilter,G__setup_memfuncTArtHIMEFilter);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TF1);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TH1);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtDCTrack),sizeof(TArtDCTrack),-1,292096,(char*)NULL,G__setup_memvarTArtDCTrack,G__setup_memfuncTArtDCTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibDCTrack),sizeof(TArtCalibDCTrack),-1,295936,(char*)NULL,G__setup_memvarTArtCalibDCTrack,G__setup_memfuncTArtCalibDCTrack);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibDCTrackcLcLTrack1D);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_vectorlETArtDCHitmUcOallocatorlETArtDCHitmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtDCHitmUcOallocatorlETArtDCHitmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibRPDCTrack),sizeof(TArtCalibRPDCTrack),-1,296192,(char*)NULL,G__setup_memvarTArtCalibRPDCTrack,G__setup_memfuncTArtCalibRPDCTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtHODPla),sizeof(TArtHODPla),-1,292096,(char*)NULL,G__setup_memvarTArtHODPla,G__setup_memfuncTArtHODPla);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtHIMEPlaParacLcLDetDirectionDef);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_vectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawDataObjectmUcOallocatorlETArtRawDataObjectmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_vectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawFADCDataObjectmUcOallocatorlETArtRawFADCDataObjectmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_vectorlETArtRawTacquilaDataObjectmUcOallocatorlETArtRawTacquilaDataObjectmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawTacquilaDataObjectmUcOallocatorlETArtRawTacquilaDataObjectmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_vectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawSegmentObjectmUcOallocatorlETArtRawSegmentObjectmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_vectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRawScalerObjectmUcOallocatorlETArtRawScalerObjectmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtNeuLANDPla),sizeof(TArtNeuLANDPla),-1,292096,(char*)NULL,G__setup_memvarTArtNeuLANDPla,G__setup_memfuncTArtNeuLANDPla);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibNeuLAND),sizeof(TArtCalibNeuLAND),-1,263424,(char*)NULL,G__setup_memvarTArtCalibNeuLAND,G__setup_memfuncTArtCalibNeuLAND);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtTKEPara);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_maplETArtRIDFMapcOintcOlesslETArtRIDFMapgRcOallocatorlEpairlEconstsPTArtRIDFMapcOintgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibS1DC2Track),sizeof(TArtCalibS1DC2Track),-1,296192,(char*)NULL,G__setup_memvarTArtCalibS1DC2Track,G__setup_memfuncTArtCalibS1DC2Track);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtTZero),sizeof(TArtTZero),-1,292096,(char*)NULL,G__setup_memvarTArtTZero,G__setup_memfuncTArtTZero);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibS1DC1Track),sizeof(TArtCalibS1DC1Track),-1,296192,(char*)NULL,G__setup_memvarTArtCalibS1DC1Track,G__setup_memfuncTArtCalibS1DC1Track);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtNeutron),sizeof(TArtNeutron),-1,292096,(char*)NULL,G__setup_memvarTArtNeutron,G__setup_memfuncTArtNeutron);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtIC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtICF),sizeof(TArtICF),-1,292096,(char*)NULL,G__setup_memvarTArtICF,G__setup_memfuncTArtICF);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_maplEintcODCGeomRecordmUcOlesslEintgRcOallocatorlEpairlEconstsPintcODCGeomRecordmUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtRPTOFPla),sizeof(TArtRPTOFPla),-1,292096,(char*)NULL,G__setup_memvarTArtRPTOFPla,G__setup_memfuncTArtRPTOFPla);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibRPTOFPla),sizeof(TArtCalibRPTOFPla),-1,263424,(char*)NULL,G__setup_memvarTArtCalibRPTOFPla,G__setup_memfuncTArtCalibRPTOFPla);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_vectorlETArtRPTOFPlaParamUcOallocatorlETArtRPTOFPlaParamUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtRPTOFPlaParamUcOallocatorlETArtRPTOFPlaParamUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibNEBULAMult),sizeof(TArtCalibNEBULAMult),-1,292096,(char*)NULL,G__setup_memvarTArtCalibNEBULAMult,G__setup_memfuncTArtCalibNEBULAMult);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_RKcalcHitPoint);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_RKCordParameter);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_RKHitPointContainer);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_vectorlEpairlEintcORKcalcHitPointgRcOallocatorlEpairlEintcORKcalcHitPointgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_reverse_iteratorlEvectorlEpairlEintcORKcalcHitPointgRcOallocatorlEpairlEintcORKcalcHitPointgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibTEDCsI),sizeof(TArtCalibTEDCsI),-1,263424,(char*)NULL,G__setup_memvarTArtCalibTEDCsI,G__setup_memfuncTArtCalibTEDCsI);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_vectorlETArtTEDCsIParamUcOallocatorlETArtTEDCsIParamUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtTEDCsIParamUcOallocatorlETArtTEDCsIParamUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtRIPS);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtRecoRIPS);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtRecoTOF);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtRecoBeam);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtRecoFragment),sizeof(TArtRecoFragment),-1,263424,(char*)NULL,G__setup_memvarTArtRecoFragment,G__setup_memfuncTArtRecoFragment);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtRecoSAMURAI),sizeof(TArtRecoSAMURAI),-1,263424,(char*)NULL,G__setup_memvarTArtRecoSAMURAI,G__setup_memfuncTArtRecoSAMURAI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalcGlobalTrack),sizeof(TArtCalcGlobalTrack),-1,298496,(char*)NULL,G__setup_memvarTArtCalcGlobalTrack,G__setup_memfuncTArtCalcGlobalTrack);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_vectorlETArtCalcGlobalTrackcLcLTrackHitmUcOallocatorlETArtCalcGlobalTrackcLcLTrackHitmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtCalcGlobalTrackcLcLTrackHitmUcOallocatorlETArtCalcGlobalTrackcLcLTrackHitmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibNeuLANDVETO),sizeof(TArtCalibNeuLANDVETO),-1,263424,(char*)NULL,G__setup_memvarTArtCalibNeuLANDVETO,G__setup_memfuncTArtCalibNeuLANDVETO);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtFragment),sizeof(TArtFragment),-1,292096,(char*)NULL,G__setup_memvarTArtFragment,G__setup_memfuncTArtFragment);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibSAMURAITZero),sizeof(TArtCalibSAMURAITZero),-1,263424,(char*)NULL,G__setup_memvarTArtCalibSAMURAITZero,G__setup_memfuncTArtCalibSAMURAITZero);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibHIMEMult),sizeof(TArtCalibHIMEMult),-1,292096,(char*)NULL,G__setup_memvarTArtCalibHIMEMult,G__setup_memfuncTArtCalibHIMEMult);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_vectorlETArtHODPlaParamUcOallocatorlETArtHODPlaParamUgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_reverse_iteratorlEvectorlETArtHODPlaParamUcOallocatorlETArtHODPlaParamUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibRPDCHit),sizeof(TArtCalibRPDCHit),-1,296192,(char*)NULL,G__setup_memvarTArtCalibRPDCHit,G__setup_memfuncTArtCalibRPDCHit);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtPlastic);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_maplEunsignedsPintcOdoublecOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibIC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibICF),sizeof(TArtCalibICF),-1,263424,(char*)NULL,G__setup_memvarTArtCalibICF,G__setup_memfuncTArtCalibICF);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__anasamurai_dictLN_TArtCalibS1DC2Hit),sizeof(TArtCalibS1DC2Hit),-1,296192,(char*)NULL,G__setup_memvarTArtCalibS1DC2Hit,G__setup_memfuncTArtCalibS1DC2Hit);
}
extern "C" void G__cpp_setupanasamurai_dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupanasamurai_dict()");
  G__set_cpp_environmentanasamurai_dict();
  G__cpp_setup_tagtableanasamurai_dict();

  G__cpp_setup_inheritanceanasamurai_dict();

  G__cpp_setup_typetableanasamurai_dict();

  G__cpp_setup_memvaranasamurai_dict();

  G__cpp_setup_memfuncanasamurai_dict();
  G__cpp_setup_globalanasamurai_dict();
  G__cpp_setup_funcanasamurai_dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncanasamurai_dict();
  return;
}
class G__cpp_setup_initanasamurai_dict {
  public:
    G__cpp_setup_initanasamurai_dict() { G__add_setup_func("anasamurai_dict",(G__incsetup)(&G__cpp_setupanasamurai_dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initanasamurai_dict() { G__remove_setup_func("anasamurai_dict"); }
};
G__cpp_setup_initanasamurai_dict G__cpp_setup_initializeranasamurai_dict;

