// -*- mode: c++ -*-
// 
// File TArtMDF_Acceptance_PbMDF.cxx generated by TMultiDimFit::MakeRealCode
// on Mon Jan 22 21:01:25 2018
// ROOT version 5.34/30
//
// This file contains the function 
//
//    double  TArtMDF_Acceptance_Pb::MDF(double *x); 
//
// For evaluating the parameterization obtained
// from TMultiDimFit and the point x
// 
// See TMultiDimFit class documentation for more information 
// 
#include "TArtMDF_Acceptance_Pb.hh"
//
// Static data variables
//
int    TArtMDF_Acceptance_Pb::gNVariables    = 2;
int    TArtMDF_Acceptance_Pb::gNCoefficients = 19;
double TArtMDF_Acceptance_Pb::gDMean         = 0.131143;
// Assignment to mean vector.
double TArtMDF_Acceptance_Pb::gXMean[] = {
  -6.66134e-16, 1.22125e-15 };

// Assignment to minimum vector.
double TArtMDF_Acceptance_Pb::gXMin[] = {
  -0.1, -0.1 };

// Assignment to maximum vector.
double TArtMDF_Acceptance_Pb::gXMax[] = {
  9.7, 6.9 };

// Assignment to coefficients vector.
double TArtMDF_Acceptance_Pb::gCoefficient[] = {
  -0.0892739,
  -0.0947378,
  0.042556,
  -0.0954821,
  0.0947378,
  -0.0534409,
  0.0115719,
  0.0954802,
  2.45343e-05,
  0.00070445,
  0.0108851,
  2.36723e-06,
  6.74002e-06,
  -0.0534363,
  -0.000746873,
  -2.66874e-05,
  5.08333e-06,
  -0.000710136,
  0.000742503
 };

// Assignment to error coefficients vector.
double TArtMDF_Acceptance_Pb::gCoefficientRMS[] = {
  4.60459e-09,
  3.74443e-09,
  5.40437e-09,
  6.97867e-09,
  3.74732e-09,
  1.74431e-09,
  6.17721e-09,
  6.98075e-09,
  2.09318e-10,
  9.76101e-09,
  4.61536e-09,
  5.82276e-11,
  1.15453e-10,
  1.7558e-09,
  1.0714e-08,
  2.55356e-10,
  1.15033e-10,
  9.74999e-09,
  1.07234e-08
 };

// Assignment to powers vector.
// The powers are stored row-wise, that is
//  p_ij = TArtMDF_Acceptance_Pb::gPower[i * NVariables + j];
int    TArtMDF_Acceptance_Pb::gPower[] = {
  1,  1,
  1,  2,
  2,  1,
  2,  2,
  1,  4,
  1,  5,
  1,  3,
  2,  4,
  6,  1,
  3,  1,
  2,  3,
  4,  2,
  5,  1,
  2,  5,
  3,  2,
  4,  3,
  5,  2,
  3,  3,
  3,  4
};

// 
// The method   double TArtMDF_Acceptance_Pb::MDF(double *x)
// 
double TArtMDF_Acceptance_Pb::MDF(double *x) {
  double returnValue = TArtMDF_Acceptance_Pb::gDMean;
  int    i = 0, j = 0, k = 0;
  for (i = 0; i < TArtMDF_Acceptance_Pb::gNCoefficients ; i++) {
    // Evaluate the ith term in the expansion
    double term = TArtMDF_Acceptance_Pb::gCoefficient[i];
    for (j = 0; j < TArtMDF_Acceptance_Pb::gNVariables; j++) {
      // Evaluate the polynomial in the jth variable.
      int power = TArtMDF_Acceptance_Pb::gPower[TArtMDF_Acceptance_Pb::gNVariables * i + j]; 
      double p1 = 1, p2 = 0, p3 = 0, r = 0;
      double v =  1 + 2. / (TArtMDF_Acceptance_Pb::gXMax[j] - TArtMDF_Acceptance_Pb::gXMin[j]) * (x[j] - TArtMDF_Acceptance_Pb::gXMax[j]);
      // what is the power to use!
      switch(power) {
      case 1: r = 1; break; 
      case 2: r = v; break; 
      default: 
        p2 = v; 
        for (k = 3; k <= power; k++) { 
          p3 = p2 * v;
          p1 = p2; p2 = p3; 
        }
        r = p3;
      }
      // multiply this term by the poly in the jth var
      term *= r; 
    }
    // Add this term to the final result
    returnValue += term;
  }
  return returnValue;
}

// EOF for TArtMDF_Acceptance_PbMDF.cxx
