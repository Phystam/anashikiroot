// -*- mode: c++ -*-
// 
// File TArtMDF_s027_TofMDF.cxx generated by TMultiDimFit::MakeRealCode
// on Fri Mar  3 11:44:06 2017
// ROOT version 5.34/30
//
// This file contains the function 
//
//    double  TArtMDF_s027_Tof::MDF(double *x); 
//
// For evaluating the parameterization obtained
// from TMultiDimFit and the point x
// 
// See TMultiDimFit class documentation for more information 
// 
#include "TArtMDF_s027_TofMDF.hh"
//
// Static data variables
//
int    TArtMDF_s027_TofMDF::gNVariables    = 6;
int    TArtMDF_s027_TofMDF::gNCoefficients = 46;
double TArtMDF_s027_TofMDF::gDMean         = 53.3134;
// Assignment to mean vector.
double TArtMDF_s027_TofMDF::gXMean[] = {
  -0.00844737, -0.00668431, -0.00176135, -0.00376485, 0.032329, 0.115702 };

// Assignment to minimum vector.
double TArtMDF_s027_TofMDF::gXMin[] = {
  -109.082, -0.0397993, -84.9463, -0.0399876, -728.227, -0.0312466 };

// Assignment to maximum vector.
double TArtMDF_s027_TofMDF::gXMax[] = {
  109.58, 0.0402378, 84.9944, 0.040023, 660.828, 0.333647 };

// Assignment to coefficients vector.
double TArtMDF_s027_TofMDF::gCoefficient[] = {
  0.601469,
  -6.84902,
  -2.38225,
  3.24538,
  0.493239,
  -0.332563,
  -1.09579,
  0.669402,
  0.229372,
  0.0224459,
  0.320701,
  -0.250919,
  -0.14087,
  -0.163013,
  -0.189525,
  -0.780527,
  0.0489213,
  -0.165635,
  -0.0372915,
  0.175967,
  0.110076,
  -0.0733392,
  0.139658,
  0.75454,
  0.0367109,
  0.165379,
  0.0826418,
  0.00607823,
  -0.0120608,
  0.0358474,
  0.000711216,
  -0.000518685,
  0.00322507,
  -0.00364392,
  0.00020747,
  9.0751e-05,
  -0.00507933,
  0.000540065,
  -0.00906566,
  0.00691505,
  -0.00109894,
  3.47779e-06,
  0.00282941,
  0.00110349,
  0.00476273,
  0.0021048
 };

// Assignment to error coefficients vector.
double TArtMDF_s027_TofMDF::gCoefficientRMS[] = {
  0.00899548,
  0.028525,
  0.176329,
  0.164328,
  0.0328148,
  0.0896773,
  0.0344443,
  0.0279733,
  0.0184699,
  0.166614,
  0.0596373,
  0.0424867,
  0.0580489,
  0.166157,
  0.0756324,
  0.409805,
  0.0769823,
  0.056225,
  0.0293076,
  0.0838787,
  0.12053,
  0.0811165,
  0.109835,
  0.390798,
  0.0580242,
  0.0961857,
  0.0458397,
  0.0817073,
  0.0890645,
  0.103038,
  0.0259158,
  0.0619622,
  0.0574122,
  0.0419313,
  0.0265089,
  0.0560333,
  0.0637645,
  0.0911966,
  0.116422,
  0.118825,
  0.0205905,
  0.0237771,
  0.0464119,
  0.118911,
  0.0612666,
  0.112914
 };

// Assignment to powers vector.
// The powers are stored row-wise, that is
//  p_ij = TArtMDF_s027_TofMDF::gPower[i * NVariables + j];
int    TArtMDF_s027_TofMDF::gPower[] = {
  1,  1,  1,  1,  1,  1,
  1,  1,  1,  1,  1,  2,
  1,  1,  1,  1,  1,  3,
  1,  1,  1,  1,  2,  2,
  3,  1,  1,  1,  1,  1,
  1,  1,  2,  2,  1,  1,
  2,  1,  1,  1,  1,  1,
  1,  2,  1,  1,  1,  1,
  1,  3,  1,  1,  1,  1,
  1,  1,  2,  2,  2,  1,
  2,  1,  1,  1,  1,  2,
  1,  1,  1,  3,  1,  1,
  1,  2,  1,  1,  1,  3,
  3,  1,  1,  1,  2,  1,
  2,  1,  1,  1,  1,  3,
  2,  2,  1,  1,  2,  1,
  1,  2,  2,  2,  1,  1,
  1,  1,  3,  1,  1,  1,
  1,  1,  1,  1,  4,  1,
  1,  1,  1,  3,  1,  2,
  2,  1,  2,  2,  1,  1,
  1,  3,  1,  1,  2,  1,
  1,  1,  3,  1,  1,  2,
  2,  2,  1,  1,  1,  2,
  1,  2,  1,  3,  1,  1,
  4,  1,  1,  1,  1,  1,
  1,  4,  1,  1,  1,  1,
  1,  2,  1,  2,  2,  1,
  1,  2,  2,  1,  2,  1,
  2,  1,  3,  1,  1,  1,
  1,  1,  1,  2,  1,  2,
  2,  1,  2,  1,  1,  1,
  2,  1,  1,  2,  1,  1,
  1,  2,  1,  2,  1,  1,
  1,  1,  2,  1,  2,  1,
  1,  1,  1,  2,  1,  3,
  1,  3,  2,  1,  1,  1,
  2,  2,  2,  1,  1,  1,
  2,  1,  1,  2,  1,  2,
  2,  1,  2,  1,  2,  1,
  1,  1,  1,  2,  1,  1,
  1,  1,  2,  1,  1,  1,
  1,  2,  2,  1,  1,  1,
  3,  1,  1,  2,  1,  1,
  1,  1,  2,  1,  1,  3,
  2,  2,  1,  2,  1,  1
};

// 
// The method   double TArtMDF_s027_TofMDF::MDF(double *x)
// 
double TArtMDF_s027_TofMDF::MDF(double *x) {
  double returnValue = TArtMDF_s027_TofMDF::gDMean;
  int    i = 0, j = 0, k = 0;
  for (i = 0; i < TArtMDF_s027_TofMDF::gNCoefficients ; i++) {
    // Evaluate the ith term in the expansion
    double term = TArtMDF_s027_TofMDF::gCoefficient[i];
    for (j = 0; j < TArtMDF_s027_TofMDF::gNVariables; j++) {
      // Evaluate the polynomial in the jth variable.
      int power = TArtMDF_s027_TofMDF::gPower[TArtMDF_s027_TofMDF::gNVariables * i + j]; 
      double p1 = 1, p2 = 0, p3 = 0, r = 0;
      double v =  1 + 2. / (TArtMDF_s027_TofMDF::gXMax[j] - TArtMDF_s027_TofMDF::gXMin[j]) * (x[j] - TArtMDF_s027_TofMDF::gXMax[j]);
      // what is the power to use!
      switch(power) {
      case 1: r = 1; break; 
      case 2: r = v; break; 
      default: 
        p2 = v; 
        for (k = 3; k <= power; k++) { 
          p3 = p2 * v;
          p1 = p2; p2 = p3; 
        }
        r = p3;
      }
      // multiply this term by the poly in the jth var
      term *= r; 
    }
    // Add this term to the final result
    returnValue += term;
  }
  return returnValue;
}

// EOF for TArtMDF_s027_TofMDF.cxx
