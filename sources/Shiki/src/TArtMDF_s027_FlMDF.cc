// -*- mode: c++ -*-
// 
// File TArtMDF_s027_FlMDF.cxx generated by TMultiDimFit::MakeRealCode
// on Fri Mar  3 11:38:21 2017
// ROOT version 5.34/30
//
// This file contains the function 
//
//    double  TArtMDF_s027_Fl::MDF(double *x); 
//
// For evaluating the parameterization obtained
// from TMultiDimFit and the point x
// 
// See TMultiDimFit class documentation for more information 
// 
#include "TArtMDF_s027_FlMDF.hh"
//
// Static data variables
//
int    TArtMDF_s027_FlMDF::gNVariables    = 6;
int    TArtMDF_s027_FlMDF::gNCoefficients = 43;
double TArtMDF_s027_FlMDF::gDMean         = 9373.89;
// Assignment to mean vector.
double TArtMDF_s027_FlMDF::gXMean[] = {
  -0.00844737, -0.00668431, -0.00176135, -0.00376485, 0.032329, 0.115702 };

// Assignment to minimum vector.
double TArtMDF_s027_FlMDF::gXMin[] = {
  -109.082, -0.0397993, -84.9463, -0.0399876, -728.227, -0.0312466 };

// Assignment to maximum vector.
double TArtMDF_s027_FlMDF::gXMax[] = {
  109.58, 0.0402378, 84.9944, 0.040023, 660.828, 0.333647 };

// Assignment to coefficients vector.
double TArtMDF_s027_FlMDF::gCoefficient[] = {
  -46.1866,
  205.877,
  116.742,
  98.4551,
  65.503,
  3.85689,
  11.2771,
  4.66505,
  4.71904,
  -5.96365,
  -2.49849,
  -4.18707,
  3.10047,
  2.1045,
  -2.01661,
  1.58567,
  -1.59111,
  1.15017,
  0.719801,
  -0.25278,
  -0.833307,
  2.09653,
  -1.28857,
  0.00706604,
  0.16627,
  0.00110239,
  -0.133469,
  0.557006,
  -0.584966,
  0.14557,
  0.128111,
  0.104065,
  0.0738919,
  -0.17174,
  -0.00598921,
  -0.0386803,
  0.0143237,
  -0.108715,
  0.239621,
  -0.179234,
  -0.222177,
  0.0671368,
  -0.0101823
 };

// Assignment to error coefficients vector.
double TArtMDF_s027_FlMDF::gCoefficientRMS[] = {
  0.00883537,
  0.0281465,
  0.0353676,
  0.0244607,
  0.227347,
  0.0895577,
  0.0415727,
  0.0147756,
  0.211944,
  0.0930554,
  0.0305012,
  0.058874,
  0.0570953,
  0.0218913,
  0.0368327,
  0.0810531,
  0.0299397,
  0.0547633,
  0.0778156,
  0.0547021,
  0.0673919,
  0.0902088,
  0.0701354,
  0.0205767,
  0.054627,
  0.0237721,
  0.0492204,
  0.313901,
  0.363723,
  0.0655956,
  0.0621209,
  0.041907,
  0.0465475,
  0.091213,
  0.0764967,
  0.0991699,
  0.0259275,
  0.0560917,
  0.118875,
  0.111427,
  0.186797,
  0.0668851,
  0.0558477
 };

// Assignment to powers vector.
// The powers are stored row-wise, that is
//  p_ij = TArtMDF_s027_FlMDF::gPower[i * NVariables + j];
int    TArtMDF_s027_FlMDF::gPower[] = {
  1,  1,  1,  1,  1,  1,
  1,  1,  1,  1,  1,  2,
  2,  1,  1,  1,  1,  1,
  1,  2,  1,  1,  1,  1,
  1,  1,  1,  1,  1,  3,
  1,  1,  2,  2,  1,  1,
  1,  1,  1,  3,  1,  1,
  1,  3,  1,  1,  1,  1,
  1,  1,  1,  1,  2,  2,
  1,  2,  2,  2,  1,  1,
  1,  1,  1,  3,  1,  2,
  2,  1,  1,  3,  1,  1,
  1,  2,  1,  1,  1,  2,
  3,  1,  1,  1,  1,  1,
  1,  1,  1,  1,  1,  4,
  1,  2,  1,  1,  1,  3,
  1,  1,  3,  1,  2,  1,
  1,  1,  3,  1,  1,  1,
  2,  1,  1,  1,  1,  3,
  3,  1,  1,  1,  2,  1,
  1,  2,  1,  1,  3,  1,
  1,  2,  3,  1,  1,  1,
  2,  1,  3,  1,  1,  1,
  1,  1,  1,  2,  1,  1,
  4,  1,  1,  1,  1,  1,
  1,  1,  2,  1,  1,  1,
  1,  2,  2,  1,  1,  1,
  1,  1,  2,  1,  3,  1,
  1,  1,  2,  1,  1,  3,
  1,  3,  2,  1,  1,  1,
  2,  1,  2,  1,  1,  1,
  1,  2,  1,  2,  1,  1,
  2,  3,  1,  1,  1,  1,
  2,  2,  2,  1,  1,  1,
  1,  2,  1,  2,  2,  1,
  2,  1,  1,  2,  2,  1,
  1,  1,  1,  2,  1,  2,
  2,  1,  1,  2,  1,  1,
  3,  1,  1,  2,  1,  1,
  2,  2,  1,  2,  1,  1,
  1,  2,  2,  1,  1,  2,
  1,  1,  2,  1,  1,  2,
  1,  1,  1,  2,  1,  3
};

// 
// The method   double TArtMDF_s027_FlMDF::MDF(double *x)
// 
double TArtMDF_s027_FlMDF::MDF(double *x) {
  double returnValue = TArtMDF_s027_FlMDF::gDMean;
  int    i = 0, j = 0, k = 0;
  for (i = 0; i < TArtMDF_s027_FlMDF::gNCoefficients ; i++) {
    // Evaluate the ith term in the expansion
    double term = TArtMDF_s027_FlMDF::gCoefficient[i];
    for (j = 0; j < TArtMDF_s027_FlMDF::gNVariables; j++) {
      // Evaluate the polynomial in the jth variable.
      int power = TArtMDF_s027_FlMDF::gPower[TArtMDF_s027_FlMDF::gNVariables * i + j]; 
      double p1 = 1, p2 = 0, p3 = 0, r = 0;
      double v =  1 + 2. / (TArtMDF_s027_FlMDF::gXMax[j] - TArtMDF_s027_FlMDF::gXMin[j]) * (x[j] - TArtMDF_s027_FlMDF::gXMax[j]);
      // what is the power to use!
      switch(power) {
      case 1: r = 1; break; 
      case 2: r = v; break; 
      default: 
        p2 = v; 
        for (k = 3; k <= power; k++) { 
          p3 = p2 * v;
          p1 = p2; p2 = p3; 
        }
        r = p3;
      }
      // multiply this term by the poly in the jth var
      term *= r; 
    }
    // Add this term to the final result
    returnValue += term;
  }
  return returnValue;
}

// EOF for TArtMDF_s027_FlMDF.cxx
