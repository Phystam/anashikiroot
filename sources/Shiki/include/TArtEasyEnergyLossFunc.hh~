#ifndef _TARTEASYENERGYLOSSFUNC_HH_
#define _TARTEASYENERGYLOSSFUNC_HH_

#include <map>
#include <utility> //to use std::pair
#include <TObject.h>
#include <TString.h>

class TObject;
class TString;
class TArtEasyEnergyLossFunc : public TObject {
public:
  TArtEasyEnergyLossFunc();
  virtual ~TArtEasyEnergyLossFunc(){}
  Double_t GetEnergyLossFuncPara(Int_t A, Int_t Z,TString target,Int_t order){
    if(A>25&&A<34&&Z>9&&Z<12){
      return fMassExcess[std::make_pair(std::make_pair(A,Z),target)];
    }else{
      return 0;
    }
  }
private:
  std::map<std::pair< std::pair<Int_t,Int_t>,TString >,Double_t> fElossPara[4];
  ClassDef(TArtEasyMassExcess,1);
  
};
#endif
